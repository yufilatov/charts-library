(self["webpackChunkcharts_library"] = self["webpackChunkcharts_library"] || []).push([["main"],{

/***/ 94114:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppRoutingModule: () => (/* binding */ AppRoutingModule),
/* harmony export */   routes: () => (/* binding */ routes)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/router */ 95072);
/* harmony import */ var src_examples_example_chart_area_series_example_chart_area_series_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/examples/example-chart-area-series/example-chart-area-series.component */ 19810);
/* harmony import */ var src_examples_example_chart_bar_horizontal_series_example_chart_bar_horizontal_series_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/examples/example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component */ 46966);
/* harmony import */ var src_examples_example_chart_bar_vertical_series_example_chart_bar_vertical_series_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/examples/example-chart-bar-vertical-series/example-chart-bar-vertical-series.component */ 79430);
/* harmony import */ var src_examples_example_chart_bar_simple_series_examples_chart_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/examples/example-chart-bar-simple-series/examples-chart-bar-simple-series.component */ 13015);
/* harmony import */ var src_examples_example_chart_bar_progress_series_examples_chart_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/examples/example-chart-bar-progress-series/examples-chart-bar-progress-series.component */ 36309);
/* harmony import */ var src_examples_example_chart_chord_series_examples_chart_chord_series_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/examples/example-chart-chord-series/examples-chart-chord-series.component */ 75419);
/* harmony import */ var src_examples_example_chart_circular_package_series_examples_chart_circular_package_series_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/examples/example-chart-circular-package-series/examples-chart-circular-package-series.component */ 44879);
/* harmony import */ var src_examples_example_chart_donut_series_example_chart_donut_series_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/examples/example-chart-donut-series/example-chart-donut-series.component */ 34972);
/* harmony import */ var src_examples_example_chart_double_donut_series_example_chart_double_donut_series_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/examples/example-chart-double-donut-series/example-chart-double-donut-series.component */ 69358);
/* harmony import */ var src_examples_example_chart_half_donut_series_example_chart_half_donut_series_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/examples/example-chart-half-donut-series/example-chart-half-donut-series.component */ 5478);
/* harmony import */ var src_examples_example_chart_icicle_series_example_chart_icicle_series_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/examples/example-chart-icicle-series/example-chart-icicle-series.component */ 47414);
/* harmony import */ var src_examples_example_chart_line_series_example_chart_line_series_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/examples/example-chart-line-series/example-chart-line-series.component */ 98754);
/* harmony import */ var src_examples_example_chart_line_series_types_example_chart_line_series_types_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/examples/example-chart-line-series-types/example-chart-line-series-types.component */ 27682);
/* harmony import */ var src_examples_example_chart_matrix_series_example_chart_matrix_series_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/examples/example-chart-matrix-series/example-chart-matrix-series.component */ 33522);
/* harmony import */ var src_examples_example_chart_pie_series_example_chart_pie_series_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/examples/example-chart-pie-series/example-chart-pie-series.component */ 31276);
/* harmony import */ var src_examples_example_chart_radial_tree_series_example_chart_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/examples/example-chart-radial-tree-series/example-chart-radial-tree-series..component */ 33630);
/* harmony import */ var src_examples_example_chart_sunburst_series_example_chart_sunburst_series_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/examples/example-chart-sunburst-series/example-chart-sunburst-series.component */ 76718);
/* harmony import */ var src_examples_example_chart_word_cloud_series_examples_chart_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/examples/example-chart-word-cloud-series/examples-chart-word-cloud-series.component */ 12439);
/* harmony import */ var src_examples_example_chart_map_series_example_chart_map_series_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/examples/example-chart-map-series/example-chart-map-series.component */ 10668);
/* harmony import */ var src_examples_example_league_simulation_example_league_simulation_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/examples/example-league-simulation/example-league-simulation.component */ 54126);























const routes = [
// { path: '', redirectTo: 'pie', pathMatch: 'full'},
{
  path: 'area',
  component: src_examples_example_chart_area_series_example_chart_area_series_component__WEBPACK_IMPORTED_MODULE_0__.ExampleChartAreaSeriesComponent
}, {
  path: 'bar-horizontal',
  component: src_examples_example_chart_bar_horizontal_series_example_chart_bar_horizontal_series_component__WEBPACK_IMPORTED_MODULE_1__.ExampleChartBarHorizontalSeriesComponent
}, {
  path: 'bar-vertical',
  component: src_examples_example_chart_bar_vertical_series_example_chart_bar_vertical_series_component__WEBPACK_IMPORTED_MODULE_2__.ExampleChartBarVerticalSeriesComponent
}, {
  path: 'bar-simple',
  component: src_examples_example_chart_bar_simple_series_examples_chart_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_3__.ExampleChartBarSimpleSeriesComponent
}, {
  path: 'bar-progress',
  component: src_examples_example_chart_bar_progress_series_examples_chart_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_4__.ExampleChartBarProgressSeriesComponent
}, {
  path: 'chord',
  component: src_examples_example_chart_chord_series_examples_chart_chord_series_component__WEBPACK_IMPORTED_MODULE_5__.ExampleChartChordSeriesComponent
}, {
  path: 'circular-package',
  component: src_examples_example_chart_circular_package_series_examples_chart_circular_package_series_component__WEBPACK_IMPORTED_MODULE_6__.ExampleChartCircularPackageSeriesComponent
}, {
  path: 'donut',
  component: src_examples_example_chart_donut_series_example_chart_donut_series_component__WEBPACK_IMPORTED_MODULE_7__.ExampleChartDonutSeriesComponent
}, {
  path: 'double-donut',
  component: src_examples_example_chart_double_donut_series_example_chart_double_donut_series_component__WEBPACK_IMPORTED_MODULE_8__.ExampleChartDoubleDonutSeriesComponent
}, {
  path: 'half-donut',
  component: src_examples_example_chart_half_donut_series_example_chart_half_donut_series_component__WEBPACK_IMPORTED_MODULE_9__.ExampleChartHalfDonutSeriesComponent
}, {
  path: 'icicle',
  component: src_examples_example_chart_icicle_series_example_chart_icicle_series_component__WEBPACK_IMPORTED_MODULE_10__.ExampleChartIcicleSeriesComponent
}, {
  path: 'line',
  component: src_examples_example_chart_line_series_example_chart_line_series_component__WEBPACK_IMPORTED_MODULE_11__.ExampleChartLineSeriesComponent
}, {
  path: 'line-types',
  component: src_examples_example_chart_line_series_types_example_chart_line_series_types_component__WEBPACK_IMPORTED_MODULE_12__.ExampleChartLineSeriesTypesComponent
}, {
  path: 'map',
  component: src_examples_example_chart_map_series_example_chart_map_series_component__WEBPACK_IMPORTED_MODULE_18__.ExampleChartMapSeriesComponent
}, {
  path: 'matrix',
  component: src_examples_example_chart_matrix_series_example_chart_matrix_series_component__WEBPACK_IMPORTED_MODULE_13__.ExampleChartMatrixSeriesComponent
}, {
  path: 'pie',
  component: src_examples_example_chart_pie_series_example_chart_pie_series_component__WEBPACK_IMPORTED_MODULE_14__.ExampleChartPieSeriesComponent
}, {
  path: 'radial-tree',
  component: src_examples_example_chart_radial_tree_series_example_chart_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_15__.ExampleChartRadialTreeComponent
}, {
  path: 'sunburst',
  component: src_examples_example_chart_sunburst_series_example_chart_sunburst_series_component__WEBPACK_IMPORTED_MODULE_16__.ExampleChartSunburstSeriesComponent
}, {
  path: 'word-cloud',
  component: src_examples_example_chart_word_cloud_series_examples_chart_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_17__.ExampleChartWordCloudSeriesComponent
}, {
  path: 'league',
  component: src_examples_example_league_simulation_example_league_simulation_component__WEBPACK_IMPORTED_MODULE_19__.ExampleLeagueSimulationComponent
}];
let AppRoutingModule = class AppRoutingModule {};
AppRoutingModule = (0,tslib__WEBPACK_IMPORTED_MODULE_20__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_21__.NgModule)({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_22__.RouterModule.forRoot(routes)],
  exports: [_angular_router__WEBPACK_IMPORTED_MODULE_22__.RouterModule]
})], AppRoutingModule);


/***/ }),

/***/ 20092:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppComponent: () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _app_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.component.html?ngResource */ 61584);
/* harmony import */ var _app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.component.scss?ngResource */ 37282);
/* harmony import */ var _app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app-routing.module */ 94114);





let AppComponent = class AppComponent {
  constructor() {
    this.title = 'charts-library';
    this.types = [];
    this.activeChart = 0;
    this.pages = ['Home', 'Contacts', 'About'];
  }
  ngOnInit() {
    this.types = _app_routing_module__WEBPACK_IMPORTED_MODULE_2__.routes;
  }
  onClick(index) {
    this.activeChart = index;
  }
};
AppComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-root',
  template: _app_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AppComponent);


/***/ }),

/***/ 50635:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppModule: () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ 80436);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app-routing.module */ 94114);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.component */ 20092);
/* harmony import */ var src_pages_pages_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/pages/pages.module */ 47291);
/* harmony import */ var src_examples_example_charts_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/examples/example-charts.module */ 93738);







let AppModule = class AppModule {};
AppModule = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule)({
  declarations: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent],
  imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__.BrowserModule, _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule, src_examples_example_charts_module__WEBPACK_IMPORTED_MODULE_3__.ExampleChartsModule, src_pages_pages_module__WEBPACK_IMPORTED_MODULE_2__.PagesModule],
  providers: [],
  bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent]
})], AppModule);


/***/ }),

/***/ 89067:
/*!***********************************************************!*\
  !*** ./src/components/chart-plot/chart-plot.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPlotComponent: () => (/* binding */ ChartPlotComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chart/chart.component */ 45033);
/* harmony import */ var _common_chart_margin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/chart-margin */ 27600);





let ChartPlotComponent = class ChartPlotComponent {
  constructor(chart, disposable) {
    this.chart = chart;
    this.disposable = disposable;
    this.margin = _common_chart_margin__WEBPACK_IMPORTED_MODULE_2__.CHART_MARGIN_EMPTY;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges() {
    this.invalidate();
  }
  invalidate() {
    this.chart.margin = {
      ..._common_chart_margin__WEBPACK_IMPORTED_MODULE_2__.CHART_MARGIN_EMPTY,
      ...this.margin
    };
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    margin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input
    }]
  };
};
ChartPlotComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-chart-plot',
  template: '',
  providers: [_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectionStrategy.OnPush
})], ChartPlotComponent);


/***/ }),

/***/ 99021:
/*!*************************************************************!*\
  !*** ./src/components/chart-popup/chart-popup.component.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPopupComponent: () => (/* binding */ ChartPopupComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _chart_popup_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-popup.component.html?ngResource */ 9411);
/* harmony import */ var _chart_popup_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart-popup.component.scss?ngResource */ 94159);
/* harmony import */ var _chart_popup_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_chart_popup_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 46227);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _chart_portal_chart_portal_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chart-portal/chart-portal.service */ 15373);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chart/chart.service */ 92013);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../chart/chart.component */ 45033);
/* harmony import */ var _chart_portal_chart_portal_position_strategy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../chart-portal/chart-portal-position.strategy */ 69687);











let ChartPopupComponent = class ChartPopupComponent {
  constructor(chartService, zone, portalService, renderer, chart, disposable) {
    this.chartService = chartService;
    this.zone = zone;
    this.portalService = portalService;
    this.renderer = renderer;
    this.chart = chart;
    this.disposable = disposable;
    this.openDelay = 1000;
    this.panelClass = 'chart-popup';
  }
  ngAfterContentInit() {
    let attachment = null;
    let position;
    const show = () => {
      if (position) {
        const path = this.chartService.hitTest(position);
        const target = path.filter(x => x.hasAttribute(`chart-${this.for}-selector-hover`));
        if (target.length) {
          const datum = d3__WEBPACK_IMPORTED_MODULE_2__.select(target[0]).datum();
          const classList = ['chart-popup', this.panelClass];
          const strategy = new _chart_portal_chart_portal_position_strategy__WEBPACK_IMPORTED_MODULE_8__.ChartPortalPositionStrategy(classList, document, position);
          const link = {
            templateRef: this.templateRef,
            context: {
              $implicit: datum
            }
          };
          attachment = this.portalService.enter(link, strategy);
          attachment.attach();
        }
      }
    };
    const hide = () => {
      position = null;
      if (attachment) {
        attachment.detach();
        attachment = null;
      }
    };
    this.zone.runOutsideAngular(() => {
      const showWithDelay = lodash__WEBPACK_IMPORTED_MODULE_3__.debounce(show, this.openDelay);
      this.chartService.selectRoot().on('mousemove', event => {
        hide();
        position = [event.clientX, event.clientY];
        showWithDelay();
      }).on('mouseleave', hide);
    });
    this.zone.runOutsideAngular(() => {
      document.addEventListener('scroll', hide, true);
      this.disposable.add(() => document.removeEventListener('scroll', hide));
      const rectChange = this.chart.rectChange.subscribe(hide);
      this.disposable.add(() => rectChange.unsubscribe());
      this.disposable.add(this.renderer.listen(document, 'mousedown', hide));
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_6__.ChartService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.NgZone
  }, {
    type: _chart_portal_chart_portal_service__WEBPACK_IMPORTED_MODULE_4__.ChartPortalService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Renderer2
  }, {
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_7__.ChartComponent
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    templateRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ContentChild,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_9__.TemplateRef, {
        static: false
      }]
    }],
    for: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input
    }],
    openDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input
    }],
    panelClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input
    }]
  };
};
ChartPopupComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-chart-popup',
  template: _chart_popup_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable, _chart_portal_chart_portal_service__WEBPACK_IMPORTED_MODULE_4__.ChartPortalService],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ChangeDetectionStrategy.OnPush,
  // tslint:disable-next-line:use-view-encapsulation
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewEncapsulation.None,
  styles: [(_chart_popup_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ChartPopupComponent);


/***/ }),

/***/ 69687:
/*!***********************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal-position.strategy.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPortalPositionStrategy: () => (/* binding */ ChartPortalPositionStrategy)
/* harmony export */ });
class ChartPortalPositionStrategy {
  constructor(classList, document, position) {
    this.classList = classList;
    this.document = document;
    this.position = position;
  }
  attach(element, renderer) {
    this.document.body.appendChild(element);
    this.classList.forEach(x => renderer.addClass(element, x));
    return () => {
      const pos = this.getPosition(element);
      renderer.setStyle(element, 'left', `${pos[0]}px`);
      renderer.setStyle(element, 'top', `${pos[1]}px`);
    };
  }
  getPosition(element) {
    const size = {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
    const [left, top] = this.position;
    const {
      clientTop,
      clientLeft,
      clientWidth,
      clientHeight
    } = this.document.body;
    const viewport = {
      left: clientLeft,
      top: clientTop,
      right: clientLeft + clientWidth,
      bottom: clientTop + clientHeight,
      width: clientWidth,
      height: clientHeight
    };
    const target = {
      left,
      top,
      right: size.width + left,
      bottom: size.height + top,
      width: size.width,
      height: size.height
    };
    const fit = this.calculateFit(viewport, target);
    return [fit.left, fit.top];
  }
  calculateFit(viewport, target) {
    const fit = {
      ...target
    };
    const offsetX = target.left < viewport.left ? viewport.left - target.left : target.right > viewport.right ? viewport.right - target.right : 0;
    const offsetY = target.top < viewport.top ? viewport.top - target.top : target.bottom > viewport.bottom ? viewport.bottom - target.bottom : 0;
    fit.left = fit.left + offsetX;
    fit.right = fit.left + offsetX;
    fit.top = fit.top + offsetY;
    fit.bottom = fit.bottom + offsetY;
    return fit;
  }
}

/***/ }),

/***/ 69993:
/*!***************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPortalComponent: () => (/* binding */ ChartPortalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _chart_portal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-portal.component.html?ngResource */ 44167);
/* harmony import */ var _chart_portal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart-portal.component.scss?ngResource */ 76143);
/* harmony import */ var _chart_portal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_chart_portal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 37580);




let ChartPortalComponent = class ChartPortalComponent {
  constructor(cd, elementRef, renderer) {
    this.cd = cd;
    this.elementRef = elementRef;
    this.renderer = renderer;
    renderer.addClass(elementRef.nativeElement, 'chart-portal');
  }
  attach(positionStrategy) {
    const move = positionStrategy.attach(this.elementRef.nativeElement, this.renderer);
    this.cd.detectChanges();
    return move;
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectorRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Renderer2
  }];
};
ChartPortalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-chart-portal',
  template: _chart_portal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectionStrategy.OnPush,
  styles: [(_chart_portal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ChartPortalComponent);


/***/ }),

/***/ 87644:
/*!************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal.module.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPortalModule: () => (/* binding */ ChartPortalModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 60316);
/* harmony import */ var _chart_portal_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-portal.service */ 15373);
/* harmony import */ var _chart_portal_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart-portal.component */ 69993);





let ChartPortalModule = class ChartPortalModule {};
ChartPortalModule = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.NgModule)({
  declarations: [_chart_portal_component__WEBPACK_IMPORTED_MODULE_1__.ChartPortalComponent],
  providers: [_chart_portal_service__WEBPACK_IMPORTED_MODULE_0__.ChartPortalService],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule]
})], ChartPortalModule);


/***/ }),

/***/ 15373:
/*!*************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal.service.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartPortalService: () => (/* binding */ ChartPortalService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_portal_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-portal.component */ 69993);



let ChartPortalService = class ChartPortalService {
  constructor(appRef, injector, componentFactoryResolver) {
    this.appRef = appRef;
    this.injector = injector;
    this.componentFactoryResolver = componentFactoryResolver;
  }
  enter(link, positionStrategy) {
    const componentRef = this.componentFactoryResolver.resolveComponentFactory(_chart_portal_component__WEBPACK_IMPORTED_MODULE_0__.ChartPortalComponent).create(this.injector);
    componentRef.instance.link = link;
    const hostView = componentRef.hostView;
    const hostElement = hostView.rootNodes[0];
    this.appRef.attachView(hostView);
    const move = componentRef.instance.attach(positionStrategy);
    const resource = {
      attach: move,
      detach: () => {
        if (hostElement.parentNode) {
          hostElement.parentNode.removeChild(hostElement);
          this.appRef.detachView(hostView);
        }
      }
    };
    return resource;
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ApplicationRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver
  }];
};
ChartPortalService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)()], ChartPortalService);


/***/ }),

/***/ 49861:
/*!***********************************************************!*\
  !*** ./src/components/chart-style/chart-style.builder.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartStyleBuilder: () => (/* binding */ ChartStyleBuilder)
/* harmony export */ });
class ChartStyleBuilder {
  constructor() {
    this.styles = new Map();
  }
  for(style, make) {
    this.styles.set(style.key, make);
    return this;
  }
  compile(chartStyle, defaults) {
    const {
      key
    } = chartStyle;
    const context = {};
    const makeStyle = this.styles.get(key);
    const cache = [];
    if (makeStyle) {
      return (d, i) => {
        if (cache[i]) {
          return cache[i];
        }
        const style = makeStyle(d, i, context);
        const compStyle = {
          ...chartStyle,
          ...(defaults || {}),
          ...style
        };
        cache[i] = compStyle;
        compStyle.changeSet = new Set(Object.keys(style));
        return compStyle;
      };
    }
    return () => ({
      ...chartStyle,
      ...defaults,
      changeSet: new Set()
    });
  }
}

/***/ }),

/***/ 95580:
/*!***************************************************!*\
  !*** ./src/components/chart-style/chart-style.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartStyle: () => (/* binding */ ChartStyle)
/* harmony export */ });
class ChartStyle {
  static get animation() {
    return {
      key: 'animation',
      delay: 1000,
      duration: 1000,
      format: ',d'
    };
  }
  static get cell() {
    return {
      key: 'cell',
      fill: '#fff'
    };
  }
  static get circle() {
    return {
      key: 'circle',
      fill: '#000',
      radius: 5,
      stroke: '#000',
      strokeWidth: 1
    };
  }
  static get arc() {
    return {
      key: 'arc',
      fill: '#dfe1e6',
      innerRadius: 50,
      outerRadius: 100,
      stroke: '#fff',
      strokeWidth: 3,
      opacity: 1
    };
  }
  static get bar() {
    return {
      key: 'bar',
      background: 'transparent',
      fill: '#dfe1e6',
      size: 15,
      offsetLeft: 0,
      offsetRight: 0,
      paddingLeft: 5,
      paddgingRight: 5
    };
  }
  static get label() {
    return {
      key: 'label',
      color: '#000',
      colorHover: '#d62020',
      fontFamily: 'Calibri',
      fontSize: 10,
      fontWeight: '400',
      backgroundColor: 'transparent',
      text: ''
    };
  }
  static get line() {
    return {
      key: 'line',
      fill: 'steelblue',
      stroke: '#000',
      strokeWidth: 1,
      strokeDasharray: ''
    };
  }
  static get link() {
    return {
      key: 'link',
      startColor: '#fff',
      stopColor: '#000',
      stroke: '#555',
      strokeOpacity: 0.4,
      strokeWidth: 1.5
    };
  }
  static get matrix() {
    return {
      key: 'matrix',
      color: 'default',
      opacity: 'default'
    };
  }
  static get node() {
    return {
      key: 'node',
      fill: '#000',
      fillLast: 'red',
      padding: 1,
      radius: 25,
      radiusOnHover: 5,
      size: 300,
      startColor: '#6de9eb',
      stroke: 'black',
      strokeWidth: 1
    };
  }
  static get pie() {
    return {
      key: 'pie',
      innerRadius: 10,
      outerRadius: 100
    };
  }
  static get rect() {
    return {
      key: 'rect',
      fill: '#fff'
    };
  }
  static get zoom() {
    return {
      key: 'zoom',
      duration: 1500,
      enabled: true
    };
  }
}

/***/ }),

/***/ 66029:
/*!*************************************************************!*\
  !*** ./src/components/chart-ticks/chart-ticks.component.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartTicksComponent: () => (/* binding */ ChartTicksComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _chart_ticks_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-ticks.component.html?ngResource */ 94291);
/* harmony import */ var _chart_ticks_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart-ticks.component.scss?ngResource */ 30327);
/* harmony import */ var _chart_ticks_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_chart_ticks_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chart/chart.component */ 45033);






let ChartTicksComponent = class ChartTicksComponent {
  constructor(chart, cd, disposable) {
    this.chart = chart;
    this.cd = cd;
    this.disposable = disposable;
    this.hostClass = true;
    this.for = 'bar';
    this.scale = () => 0;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    const seriesListChange = chart.seriesListChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
    this.disposable.add(() => seriesListChange.unsubscribe());
  }
  invalidate() {
    const {
      seriesList
    } = this.chart;
    const series = seriesList.find(x => x.type === this.for);
    if (series) {
      this.scale = series.scaleY;
      this.cd.markForCheck();
      this.cd.detectChanges();
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectorRef
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    hostClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostBinding,
      args: ['class.chart-ticks']
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    for: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
ChartTicksComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-ticks',
  template: _chart_ticks_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush,
  styles: [(_chart_ticks_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ChartTicksComponent);


/***/ }),

/***/ 45033:
/*!*************************************************!*\
  !*** ./src/components/chart/chart.component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartComponent: () => (/* binding */ ChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _chart_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart.component.html?ngResource */ 28271);
/* harmony import */ var _chart_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart.component.scss?ngResource */ 10307);
/* harmony import */ var _chart_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_chart_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chart.service */ 92013);
/* harmony import */ var _common_chart_margin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/chart-margin */ 27600);
/* harmony import */ var _common_chart_rect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/chart-rect */ 2264);







let ChartComponent = class ChartComponent {
  constructor(elementRef) {
    this.elementRef = elementRef;
    this.hostClass = true;
    this.margin = _common_chart_margin__WEBPACK_IMPORTED_MODULE_3__.CHART_MARGIN_EMPTY;
    this.rectChange = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.seriesListChange = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.rect = _common_chart_rect__WEBPACK_IMPORTED_MODULE_4__.CHART_RECT_EMPTY;
    this.seriesList = [];
  }
  ngAfterViewInit() {
    this.invalidateSize();
  }
  invalidateSize() {
    const {
      nativeElement
    } = this.elementRef;
    const rect = nativeElement.getBoundingClientRect();
    const margin = this.margin;
    this.rect = {
      top: rect.top + margin.top,
      bottom: rect.bottom - margin.bottom,
      left: rect.left + margin.left,
      right: rect.right - margin.right,
      height: rect.height - margin.top - margin.bottom,
      width: rect.width - margin.left - margin.right
    };
    this.rectChange.emit(this.rect);
  }
  ngOnChanges(changes) {
    // tslint:disable-next-line:no-string-literal
    const marginChange = changes['margin'];
    if (marginChange) {
      this.margin = marginChange.currentValue;
      this.invalidateSize();
    }
    this.invalidateSize();
  }
  onWindowResize() {
    this.invalidateSize();
  }
  addSeries(series) {
    const index = this.seriesList.findIndex(x => x.id === series.id);
    if (index >= 0) {
      this.seriesList[index] = series;
    } else {
      this.seriesList.push(series);
    }
    this.seriesListChange.emit(this.seriesList);
  }
  removeSeries(series) {
    const index = this.seriesList.findIndex(x => x.id === series.id);
    if (index >= 0) {
      this.seriesList.splice(index, 1);
      this.seriesListChange.emit(this.seriesList);
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef
  }];
  static #_2 = this.propDecorators = {
    hostClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.HostBinding,
      args: ['class.app-chart']
    }],
    margin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    rectChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    seriesListChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onWindowResize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.HostListener,
      args: ['window:resize']
    }]
  };
};
ChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-chart',
  template: _chart_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ChangeDetectionStrategy.OnPush,
  styles: [(_chart_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ChartComponent);


/***/ }),

/***/ 92013:
/*!***********************************************!*\
  !*** ./src/components/chart/chart.service.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartService: () => (/* binding */ ChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ 46227);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kit */ 67371);





let ChartService = class ChartService {
  constructor(elementRef, renderer) {
    this.elementRef = elementRef;
    this.svg = null;
    this.defs = null;
    this.maxLevel = 0;
    const svg = renderer.createElement('svg', 'svg');
    const defs = renderer.createElement('defs', 'svg');
    renderer.appendChild(svg, defs);
    renderer.appendChild(elementRef.nativeElement, svg);
    this.svg = d3__WEBPACK_IMPORTED_MODULE_0__.select(svg);
    this.defs = d3__WEBPACK_IMPORTED_MODULE_0__.select(defs);
  }
  selectRoot() {
    return d3__WEBPACK_IMPORTED_MODULE_0__.select(this.elementRef.nativeElement);
  }
  selectDefs() {
    return this.defs;
  }
  select({
    id,
    level
  }) {
    this.maxLevel = Math.max(this.maxLevel, level);
    const layers = this.svg.selectAll('.chart-z-index').data(Array.from({
      length: this.maxLevel + 1
    }, (x, i) => i));
    const layer = layers.enter().append('g').attr('class', 'chart-z-index').merge(layers).filter(d => d === level);
    const selection = layer.selectAll(`#${id}`).data([id]);
    return selection.enter().append('g').attr('id', id).merge(selection);
  }
  remove({
    id,
    level
  }) {
    this.svg.selectAll(`.chart-z-index`).filter(d => d === level).select(`#${id}`).remove();
  }
  removeEvent(target) {
    this.svg.selection.on(target, null);
  }
  hitTest(point) {
    const svg = this.svg.node();
    const elements = (0,_kit__WEBPACK_IMPORTED_MODULE_2__.elementsFromPoint)(point[0], point[1]);
    const isNotRoot = x => x !== svg;
    const path = lodash__WEBPACK_IMPORTED_MODULE_1__.takeWhile(elements, isNotRoot);
    return elements.length !== path.length ? path : [];
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Renderer2
  }];
};
ChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)()], ChartService);


/***/ }),

/***/ 95068:
/*!***************************************************!*\
  !*** ./src/components/common/chart-disposable.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartDisposable: () => (/* binding */ ChartDisposable)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 37580);


let ChartDisposable = class ChartDisposable {
  constructor() {
    this.disposes = [];
  }
  add(dispose) {
    this.disposes.push(dispose);
  }
  finalize() {
    const disposes = Array.from(this.disposes);
    disposes.forEach(f => f());
    this.disposes = [];
  }
  ngOnDestroy() {
    this.finalize();
  }
};
ChartDisposable = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)()], ChartDisposable);


/***/ }),

/***/ 8328:
/*!*****************************************************!*\
  !*** ./src/components/common/chart-draw.factory.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartDrawFactory: () => (/* binding */ ChartDrawFactory)
/* harmony export */ });
const INITIAL_DRAW_SETTINGS = {
  create: x => x,
  update: x => x,
  delete: x => x
};
function ChartDrawFactory(root, datum) {
  return (selector, settings) => {
    const context = {
      ...INITIAL_DRAW_SETTINGS,
      ...settings
    };
    const selection = root.selectAll(selector).data(datum);
    const enter = context.create(selection.enter()).attr('class', selector.slice(1));
    const merge = enter.merge(selection);
    context.update(merge);
    context.delete(selection.exit()).remove();
  };
}

/***/ }),

/***/ 27600:
/*!***********************************************!*\
  !*** ./src/components/common/chart-margin.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CHART_MARGIN_EMPTY: () => (/* binding */ CHART_MARGIN_EMPTY)
/* harmony export */ });
const CHART_MARGIN_EMPTY = {
  top: 0,
  bottom: 0,
  left: 0,
  right: 0
};

/***/ }),

/***/ 2264:
/*!*********************************************!*\
  !*** ./src/components/common/chart-rect.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CHART_RECT_EMPTY: () => (/* binding */ CHART_RECT_EMPTY)
/* harmony export */ });
const CHART_RECT_EMPTY = {
  bottom: 0,
  height: 0,
  left: 0,
  right: 0,
  top: 0,
  width: 0
};

/***/ }),

/***/ 49007:
/*!***********************************************!*\
  !*** ./src/components/common/chart-series.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CHART_DEFAULT_SERIES_STATE: () => (/* binding */ CHART_DEFAULT_SERIES_STATE),
/* harmony export */   createScaleX: () => (/* binding */ createScaleX),
/* harmony export */   createScaleY: () => (/* binding */ createScaleY)
/* harmony export */ });
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chart-style/chart-style.builder */ 49861);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ 86164);


const CHART_DEFAULT_SERIES_STATE = {
  data: [],
  style: new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_0__.ChartStyleBuilder(),
  scaleX: d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear(),
  scaleY: d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear()
};
function createScaleX(type, series) {
  const {
    data,
    rect,
    margin
  } = series;
  switch (type) {
    case 'ordinal':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleOrdinal().domain(data).range([margin.left, rect.width + margin.left]);
      }
    case 'band':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleBand().domain(data.map((x, i) => i)).range([margin.left, rect.width + margin.left]);
      }
    case 'linear':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().range([margin.left, rect.width + margin.left]).domain(data);
      }
    case 'linear-vertical':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain(data).range([margin.top, rect.height + margin.top]);
      }
    default:
      throw Error(`Invalid type ${type}`);
  }
}
function createScaleY(type, series) {
  const {
    data,
    rect,
    margin
  } = series;
  switch (type) {
    case 'ordinal':
      return d3__WEBPACK_IMPORTED_MODULE_1__.scaleOrdinal().domain(data).range([margin.top, rect.height + margin.top]);
    case 'band':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleBand().domain(data.map((x, i) => i)).range([margin.top, rect.height + margin.top]);
      }
    case 'band-vertical':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleBand().domain(data.map((x, i) => i)).range([margin.left, rect.width + margin.left]);
      }
    case 'linear':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain(data).range([margin.top, rect.height + margin.top]);
      }
    case 'linear-vertical':
      {
        return d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain(data).range([margin.left, rect.width + margin.left]);
      }
    default:
      throw Error(`Invalid type ${type}`);
  }
}

/***/ }),

/***/ 83813:
/*!*********************************************!*\
  !*** ./src/components/components.module.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartModule: () => (/* binding */ ChartModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/common */ 60316);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_directives_stop_propagation_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/directives/stop-propagation.directive */ 31605);
/* harmony import */ var _chart_plot_chart_plot_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart-plot/chart-plot.component */ 89067);
/* harmony import */ var _chart_popup_chart_popup_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chart-popup/chart-popup.component */ 99021);
/* harmony import */ var _chart_portal_chart_portal_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chart-portal/chart-portal.module */ 87644);
/* harmony import */ var _chart_ticks_chart_ticks_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chart-ticks/chart-ticks.component */ 66029);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chart/chart.component */ 45033);
/* harmony import */ var _series_area_series_area_series_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./series/area-series/area-series.component */ 3015);
/* harmony import */ var _series_bar_progress_series_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./series/bar-progress-series/bar-progress-series.component */ 44119);
/* harmony import */ var _series_bar_series_bar_series_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./series/bar-series/bar-series.component */ 35751);
/* harmony import */ var _series_bar_simple_series_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./series/bar-simple-series/bar-simple-series.component */ 8527);
/* harmony import */ var _series_chord_series_chord_series_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./series/chord-series/chord-series.component */ 41765);
/* harmony import */ var _series_circular_package_series_circular_package_series_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./series/circular-package-series/circular-package-series.component */ 42791);
/* harmony import */ var _series_donut_series_donut_series_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./series/donut-series/donut-series.component */ 34989);
/* harmony import */ var _series_double_donut_series_double_donut_series_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./series/double-donut-series/double-donut-series.component */ 33687);
/* harmony import */ var _series_grid_series_grid_series_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./series/grid-series/grid-series.component */ 54023);
/* harmony import */ var _series_half_donut_series_half_donut_series_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./series/half-donut-series/half-donut-series.component */ 18675);
/* harmony import */ var _series_icicle_series_icicle_series_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./series/icicle-series/icicle-series.component */ 21975);
/* harmony import */ var _series_line_series_line_series_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./series/line-series/line-series.component */ 97375);
/* harmony import */ var _series_map_series_map_series_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./series/map-series/map-series.component */ 3733);
/* harmony import */ var _series_matrix_series_matrix_series_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./series/matrix-series/matrix-series.component */ 55887);
/* harmony import */ var _series_pie_series_pie_series_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./series/pie-series/pie-series.component */ 25885);
/* harmony import */ var _series_radial_tree_series_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./series/radial-tree-series/radial-tree-series.component */ 43485);
/* harmony import */ var _series_rect_series_rect_series_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./series/rect-series/rect-series.component */ 81667);
/* harmony import */ var _series_sunburst_series_sunburst_series_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./series/sunburst-series/sunburst-series.component */ 15699);
/* harmony import */ var _series_word_cloud_series_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./series/word-cloud-series/word-cloud-series.component */ 95767);
/* harmony import */ var _x_axis_x_axis_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./x-axis/x-axis.component */ 49223);
/* harmony import */ var _y_axis_y_axis_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./y-axis/y-axis.component */ 82813);






























let ChartModule = class ChartModule {};
ChartModule = (0,tslib__WEBPACK_IMPORTED_MODULE_27__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_28__.NgModule)({
  declarations: [_series_area_series_area_series_component__WEBPACK_IMPORTED_MODULE_6__.AreaSeriesChartComponent, _series_bar_series_bar_series_component__WEBPACK_IMPORTED_MODULE_8__.BarSeriesChartComponent, _series_bar_simple_series_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_9__.BarSimpleSeriesChartComponent, _series_bar_progress_series_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_7__.BarProgressSeriesChartComponent, _series_chord_series_chord_series_component__WEBPACK_IMPORTED_MODULE_10__.ChordSeriesChartComponent, _series_circular_package_series_circular_package_series_component__WEBPACK_IMPORTED_MODULE_11__.CircularPackageSeriesChartComponent, _series_donut_series_donut_series_component__WEBPACK_IMPORTED_MODULE_12__.DonutSeriesChartComponent, _series_double_donut_series_double_donut_series_component__WEBPACK_IMPORTED_MODULE_13__.DoubleDonutSeriesChartComponent, _series_grid_series_grid_series_component__WEBPACK_IMPORTED_MODULE_14__.GridSeriesChartComponent, _series_half_donut_series_half_donut_series_component__WEBPACK_IMPORTED_MODULE_15__.HalfDonutSeriesChartComponent, _series_icicle_series_icicle_series_component__WEBPACK_IMPORTED_MODULE_16__.IcicleSeriesChartComponent, _series_line_series_line_series_component__WEBPACK_IMPORTED_MODULE_17__.LineSeriesChartComponent, _series_map_series_map_series_component__WEBPACK_IMPORTED_MODULE_18__.MapSeriesChartComponent, _series_matrix_series_matrix_series_component__WEBPACK_IMPORTED_MODULE_19__.MatrixSeriesChartComponent, _series_pie_series_pie_series_component__WEBPACK_IMPORTED_MODULE_20__.PieSeriesChartComponent, _series_radial_tree_series_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_21__.RadialTreeSeriesChartComponent, _series_rect_series_rect_series_component__WEBPACK_IMPORTED_MODULE_22__.RectSeriesChartComponent, _series_sunburst_series_sunburst_series_component__WEBPACK_IMPORTED_MODULE_23__.SunburstSeriesChartComponent, _series_word_cloud_series_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_24__.WordCloudSeriesChartComponent, _x_axis_x_axis_component__WEBPACK_IMPORTED_MODULE_25__.XAxisChartComponent, _y_axis_y_axis_component__WEBPACK_IMPORTED_MODULE_26__.YAxisChartComponent, _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__.ChartComponent, _chart_plot_chart_plot_component__WEBPACK_IMPORTED_MODULE_1__.ChartPlotComponent, _chart_ticks_chart_ticks_component__WEBPACK_IMPORTED_MODULE_4__.ChartTicksComponent, _chart_popup_chart_popup_component__WEBPACK_IMPORTED_MODULE_2__.ChartPopupComponent, src_directives_stop_propagation_directive__WEBPACK_IMPORTED_MODULE_0__.StopPropagationDirective],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_29__.CommonModule, _chart_portal_chart_portal_module__WEBPACK_IMPORTED_MODULE_3__.ChartPortalModule],
  exports: [_series_area_series_area_series_component__WEBPACK_IMPORTED_MODULE_6__.AreaSeriesChartComponent, _series_bar_series_bar_series_component__WEBPACK_IMPORTED_MODULE_8__.BarSeriesChartComponent, _series_bar_simple_series_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_9__.BarSimpleSeriesChartComponent, _series_bar_progress_series_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_7__.BarProgressSeriesChartComponent, _series_chord_series_chord_series_component__WEBPACK_IMPORTED_MODULE_10__.ChordSeriesChartComponent, _series_circular_package_series_circular_package_series_component__WEBPACK_IMPORTED_MODULE_11__.CircularPackageSeriesChartComponent, _series_donut_series_donut_series_component__WEBPACK_IMPORTED_MODULE_12__.DonutSeriesChartComponent, _series_double_donut_series_double_donut_series_component__WEBPACK_IMPORTED_MODULE_13__.DoubleDonutSeriesChartComponent, _series_grid_series_grid_series_component__WEBPACK_IMPORTED_MODULE_14__.GridSeriesChartComponent, _series_half_donut_series_half_donut_series_component__WEBPACK_IMPORTED_MODULE_15__.HalfDonutSeriesChartComponent, _series_icicle_series_icicle_series_component__WEBPACK_IMPORTED_MODULE_16__.IcicleSeriesChartComponent, _series_line_series_line_series_component__WEBPACK_IMPORTED_MODULE_17__.LineSeriesChartComponent, _series_map_series_map_series_component__WEBPACK_IMPORTED_MODULE_18__.MapSeriesChartComponent, _series_matrix_series_matrix_series_component__WEBPACK_IMPORTED_MODULE_19__.MatrixSeriesChartComponent, _series_pie_series_pie_series_component__WEBPACK_IMPORTED_MODULE_20__.PieSeriesChartComponent, _series_radial_tree_series_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_21__.RadialTreeSeriesChartComponent, _series_rect_series_rect_series_component__WEBPACK_IMPORTED_MODULE_22__.RectSeriesChartComponent, _series_sunburst_series_sunburst_series_component__WEBPACK_IMPORTED_MODULE_23__.SunburstSeriesChartComponent, _series_word_cloud_series_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_24__.WordCloudSeriesChartComponent, _x_axis_x_axis_component__WEBPACK_IMPORTED_MODULE_25__.XAxisChartComponent, _y_axis_y_axis_component__WEBPACK_IMPORTED_MODULE_26__.YAxisChartComponent, _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__.ChartComponent, _chart_plot_chart_plot_component__WEBPACK_IMPORTED_MODULE_1__.ChartPlotComponent, _chart_popup_chart_popup_component__WEBPACK_IMPORTED_MODULE_2__.ChartPopupComponent, _chart_ticks_chart_ticks_component__WEBPACK_IMPORTED_MODULE_4__.ChartTicksComponent, src_directives_stop_propagation_directive__WEBPACK_IMPORTED_MODULE_0__.StopPropagationDirective]
})], ChartModule);


/***/ }),

/***/ 67371:
/*!*******************************!*\
  !*** ./src/components/kit.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartMath: () => (/* binding */ ChartMath),
/* harmony export */   convertUmlauts: () => (/* binding */ convertUmlauts),
/* harmony export */   elementsFromPoint: () => (/* binding */ elementsFromPoint),
/* harmony export */   findDescendants: () => (/* binding */ findDescendants),
/* harmony export */   getLineCurve: () => (/* binding */ getLineCurve),
/* harmony export */   getSumFromObjectValues: () => (/* binding */ getSumFromObjectValues),
/* harmony export */   hasParent: () => (/* binding */ hasParent),
/* harmony export */   nextId: () => (/* binding */ nextId),
/* harmony export */   sanitize: () => (/* binding */ sanitize)
/* harmony export */ });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);

let SEQUENCE_ID = 0;
function nextId() {
  return SEQUENCE_ID += 1;
}
function elementsFromPoint(x, y) {
  if (document.elementsFromPoint) {
    return document.elementsFromPoint(x, y);
  }
  if (document.msElementsFromPoint) {
    return document.msElementsFromPoint(x, y);
  }
  const parents = [];
  const pointerEvents = [];
  let parent = document.elementFromPoint(x, y);
  while (parent) {
    parents.push(parent);
    pointerEvents.push(parent.style.pointerEvents);
    parent.style.pointerEvents = 'none';
    const nextParent = document.elementFromPoint(x, y);
    parent = nextParent === parent ? null : nextParent;
  }
  for (let i = 0, length = parents.length; i < length; i = i + 1) {
    parents[i].style.pointerEvents = pointerEvents[i];
  }
  return parents;
}
const EPSILON = Number.EPSILON;
class ChartMath {
  static equals(x, y) {
    return Math.abs(x - y) < EPSILON;
  }
  static less(x, y) {
    return !this.equals(x, y) && x < y;
  }
  static greater(x, y) {
    return !this.equals(x, y) && x > y;
  }
}
function hasParent(parent, node) {
  let target = node;
  while (target.parent) {
    if (parent === target.parent) {
      return true;
    }
    target = target.parent;
  }
  return false;
}
function findDescendants(node) {
  const result = [];
  if (node) {
    if (node.children) {
      node.children.forEach(n => {
        result.push(n);
        result.push(...findDescendants(n));
      });
    }
    return result;
  }
}
function getLineCurve(type) {
  switch (type) {
    case 'curveMonotoneX':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveMonotoneX;
    case 'curveMonotoneY':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveMonotoneY;
    case 'curveLinear':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveLinear;
    case 'curveBasis':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveBasis;
    case 'curveBasisClosed':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveBasisClosed;
    case 'curveBundle(0)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveBundle.beta(0);
    case 'curveBundle (ß=0.5)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveBundle.beta(0.5);
    case 'curveBundle (ß=1)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveBundle.beta(1);
    case 'curveCardinal (tension=0)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveCardinal.tension(0);
    case 'curveCardinal (tension=1)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveCardinal.tension(1);
    case 'curveCatmullRom (α=0)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveCatmullRom.alpha(0);
    case 'curveCatmullRom (α=0.5)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveCatmullRom.alpha(0.5);
    case 'curveCatmullRom (α=1)':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveCatmullRom.alpha(1);
    case 'curveNatural':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveNatural;
    case 'curveStep':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveStep;
    case 'curveStepAfter':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveStepAfter;
    case 'curveStepBefore':
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveStepBefore;
    default:
      return d3__WEBPACK_IMPORTED_MODULE_0__.curveLinear;
  }
}
function getSumFromObjectValues(...rest) {
  let sum = 0;
  rest.forEach(obj => sum = sum + Object.values(obj).reduce((a, b) => a + b));
  return sum;
}
function sanitize(value) {
  return value.replace(/\s+/g, '-');
}
function convertUmlauts(value) {
  return value.replace(/ü/g, 'ue').replace(/ä/g, 'ae').replace(/ö/g, 'oe');
}

/***/ }),

/***/ 3015:
/*!********************************************************************!*\
  !*** ./src/components/series/area-series/area-series.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AreaSeriesChartComponent: () => (/* binding */ AreaSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var src_components_chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/chart/chart.component */ 45033);
/* harmony import */ var src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/common/chart-disposable */ 95068);
/* harmony import */ var _area_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./area-series.service */ 36511);






let AreaSeriesChartComponent = class AreaSeriesChartComponent {
  constructor(chart, disposable, seriesService) {
    this.chart = chart;
    this.disposable = disposable;
    this.seriesService = seriesService;
    this.curveType = 'curveMonotoneX';
    this.range = {
      x: [],
      y: []
    };
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_0__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges() {
    this.invalidate();
  }
  invalidate() {
    const state = this.seriesService.setState({
      data: this.data || [],
      style: this.style,
      range: this.range,
      curveType: this.curveType,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: src_components_chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }, {
    type: _area_series_service__WEBPACK_IMPORTED_MODULE_3__.AreaSeriesChartService
  }];
  static #_2 = this.propDecorators = {
    curveType: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
AreaSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="area"]',
  template: '',
  providers: [_area_series_service__WEBPACK_IMPORTED_MODULE_3__.AreaSeriesChartService, src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], AreaSeriesChartComponent);


/***/ }),

/***/ 36511:
/*!******************************************************************!*\
  !*** ./src/components/series/area-series/area-series.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AreaSeriesChartService: () => (/* binding */ AreaSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/chart/chart.service */ 92013);
/* harmony import */ var src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/common/chart-disposable */ 95068);
/* harmony import */ var src_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/common/chart-draw.factory */ 8328);
/* harmony import */ var src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/common/chart-series */ 49007);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/kit */ 67371);









const DEFAULT_STATE = {
  ...src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_5__.CHART_DEFAULT_SERIES_STATE
};
let AreaSeriesChartService = class AreaSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-area-${(0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      data,
      style,
      rect,
      curveType,
      range
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    const scaleX = (0,src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_5__.createScaleX)('linear', {
      ...state,
      data: [d3__WEBPACK_IMPORTED_MODULE_0__.min(range.x), d3__WEBPACK_IMPORTED_MODULE_0__.max(range.x)]
    });
    const scaleY = (0,src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_5__.createScaleY)('linear', {
      ...state,
      data: [d3__WEBPACK_IMPORTED_MODULE_0__.max(range.y), d3__WEBPACK_IMPORTED_MODULE_0__.min(range.y)]
    });
    this.state = {
      ...this.state,
      ...state,
      scaleX,
      scaleY
    };
    const line = d3__WEBPACK_IMPORTED_MODULE_0__.area().x(d => scaleX(d[0])).y(d => scaleY(0)).y1(d => scaleY(d[1])).curve((0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getLineCurve)(curveType));
    const lineStyle = style.compile(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__.ChartStyle.line);
    const circleStyle = style.compile(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__.ChartStyle.circle);
    this.root.selectAll('path').remove();
    this.root.selectAll('circle').remove();
    const drawArea = (0,src_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, [data]);
    const drawPoints = (0,src_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, data);
    drawArea('.chart-line-area', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', line).classed('line', true).attr('fill', (d, i) => lineStyle(d, i).fill).attr('stroke', (d, i) => lineStyle(d, i).stroke).attr('stroke-width', (d, i) => lineStyle(d, i).strokeWidth)
    });
    drawPoints('.chart-line-point', {
      create: selection => selection.append('circle'),
      update: selection => selection.attr('cx', (d, i) => scaleX(d[0])).attr('cy', d => scaleY(d[1])).attr('r', (d, i) => circleStyle(d, i).radius).attr('fill', (d, i) => circleStyle(d, i).fill).attr('stroke', (d, i) => circleStyle(d, i).stroke).attr('stroke-width', (d, i) => circleStyle(d, i).strokeWidth).on('mouseover', (d, i) => {
        this.root.selectAll('.circle').filter(n => n === d);
      })
    });
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: src_components_chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
AreaSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], AreaSeriesChartService);


/***/ }),

/***/ 44119:
/*!************************************************************************************!*\
  !*** ./src/components/series/bar-progress-series/bar-progress-series.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarProgressSeriesChartComponent: () => (/* binding */ BarProgressSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _bar_progress_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar-progress-series.component.html?ngResource */ 88433);
/* harmony import */ var _bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bar-progress-series.component.scss?ngResource */ 99615);
/* harmony import */ var _bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _bar_progress_series_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bar-progress-series.service */ 98351);








let BarProgressSeriesChartComponent = class BarProgressSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    this.label = 'none';
    this.labelEnd = false;
    this.labelSpaceX = 30;
    this.offsetLeft = 220;
    this.total = 100;
    this.animation = false;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
    this.recalculateMargins();
  }
  ngOnChanges(changes) {
    if (changes.offsetLeft || changes.labelSpaceX || changes.labelEnd) {
      this.recalculateMargins();
    }
    this.invalidate();
  }
  recalculateMargins() {
    const left = this.offsetLeft + (this.label === 'end' ? 0 : this.labelSpaceX);
    const right = this.label === 'end' ? this.labelSpaceX : 0;
    this.chart.margin = {
      left,
      right,
      top: 8,
      bottom: 0
    };
  }
  invalidate() {
    const state = this.seriesService.setState({
      data: this.data || [],
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin,
      label: this.label,
      total: this.total,
      animation: this.animation
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _bar_progress_series_service__WEBPACK_IMPORTED_MODULE_5__.BarProgressSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    labelEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    labelSpaceX: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    offsetLeft: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
BarProgressSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-chart-series[type="bar-progress"]',
  template: _bar_progress_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_bar_progress_series_service__WEBPACK_IMPORTED_MODULE_5__.BarProgressSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable],
  styles: [(_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], BarProgressSeriesChartComponent);


/***/ }),

/***/ 98351:
/*!**********************************************************************************!*\
  !*** ./src/components/series/bar-progress-series/bar-progress-series.service.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarProgressSeriesChartService: () => (/* binding */ BarProgressSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-series */ 49007);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_6__.CHART_DEFAULT_SERIES_STATE,
  type: 'bar',
  label: 'none',
  total: 100
};
let BarProgressSeriesChartService = class BarProgressSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-bar-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.root.classed('chart-series-bar', true);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_6__.createScaleX)('linear', {
      ...state,
      data: [0, state.total]
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_6__.createScaleY)('band', state);
    this.state = {
      ...this.state,
      ...state,
      scaleX,
      scaleY
    };
    const {
      rect,
      style,
      data,
      label,
      total,
      animation
    } = this.state;
    const barStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.bar);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.label);
    if (!rect.height || !rect.width) {
      return this.state;
    }
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, data);
    draw('.chart-bar', {
      create: selection => selection.append('rect'),
      update: selection => selection.attr('width', scaleX(total) - scaleX(0)).attr('height', (d, i) => barStyle(d, i).size).attr('vertical-align', 'middle').attr('x', scaleX(0)).attr('y', (d, i) => scaleY(i) - barStyle(d, i).size / 2).attr('fill', (d, i) => '#f8f8f8')
    });
    draw('.chart-bar-value', {
      create: selection => selection.append('rect'),
      update: selection => selection.classed('bar-animated', animation).attr('width', (d, i) => animation ? 0 : scaleX(d) - scaleX(0)).attr('height', (d, i) => barStyle(d, i).size).attr('x', () => scaleX(0)).attr('y', (d, i) => scaleY(i) - barStyle(d, i).size / 2).attr('fill', (d, i) => barStyle(d, i).fill)
    });
    const animationStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.animation);
    if (label !== 'none') {
      draw('.chart-label', {
        create: selection => selection.append('text'),
        update: selection => selection.attr('x', () => {
          if (label === 'start') {
            return scaleX(0) - 10;
          }
          return scaleX(total) + 10;
        }).attr('y', (d, i) => scaleY(i) + scaleY(0) / 2).style('text-anchor', () => {
          if (label === 'start') {
            return 'end';
          }
          return 'start';
        }).attr('vertical-align', 'middle').attr('font-size', (d, i) => labelStyle(d, i).fontSize).attr('fill', (d, i) => labelStyle(d, i).color).attr('font-weight', (d, i) => labelStyle(d, i).fontWeight).text((d, i) => animation ? d3__WEBPACK_IMPORTED_MODULE_0__.format(animationStyle(d, i).format)(0) : labelStyle(d, i).text)
      });
    }
    if (animation) {
      this.root.selectAll('.bar-animated').transition().duration((d, i) => {
        return animationStyle(d, i).duration;
      }).attr('width', d => scaleX(d) - scaleX(0)).delay((d, i) => animationStyle(d, i).delay);
      this.root.selectAll('text').transition().duration((d, i) => animationStyle(d, i).duration).delay((d, i) => animationStyle(d, i).delay).on('start', function repeat() {
        d3__WEBPACK_IMPORTED_MODULE_0__.active(this).tween('text', (d, i) => {
          const that = d3__WEBPACK_IMPORTED_MODULE_0__.select(this);
          const с = d3__WEBPACK_IMPORTED_MODULE_0__.interpolate('0', `${labelStyle(d, i).text}`);
          return t => {
            that.text(d3__WEBPACK_IMPORTED_MODULE_0__.format(animationStyle(d, i).format)(с(t)));
          };
        });
      });
    }
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
};
BarProgressSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], BarProgressSeriesChartService);


/***/ }),

/***/ 26502:
/*!***************************************************************************!*\
  !*** ./src/components/series/bar-series/bar-series-horizontal.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarHorizontalSeriesChartService: () => (/* binding */ BarHorizontalSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_0__.CHART_DEFAULT_SERIES_STATE,
  type: 'bar',
  total: 100
};
let BarHorizontalSeriesChartService = class BarHorizontalSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-bar-${(0,_kit__WEBPACK_IMPORTED_MODULE_3__.nextId)()}`
    };
    this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__.EventEmitter();
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.root.classed('chart-series-bar', true);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      data,
      style,
      animation,
      total,
      range
    } = this.state;
    const datum = data.map((x, i) => i);
    datum.push(data.length);
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_0__.createScaleX)('linear', {
      ...state,
      data: range.x
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_0__.createScaleY)('band', {
      ...state,
      data: datum
    });
    this.state = {
      ...this.state,
      ...state,
      scaleX,
      scaleY
    };
    this.root.selectAll('rect').remove();
    const barStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.bar);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.label);
    const animationStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.animation);
    let draw;
    const format = d3__WEBPACK_IMPORTED_MODULE_6__.format(animationStyle(null, 0).format);
    // draw('.chart-bar-vertical', {
    //   create: selection =>
    //     selection
    //       .append('rect'),
    //   update: selection =>
    //     selection
    //       .attr('width', scaleX(total) - scaleX(0))
    //       .attr('height', (d, i) => barStyle(d, i).height)
    //       .attr('vertical-align', 'middle')
    //       .attr('x', scaleX(0))
    //       .attr('y', (d, i) => scaleY(i))
    //       .attr('fill', (d, i) => barStyle(d, i).background),
    // });
    for (let i = 0; i < data.length; i++) {
      draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, data[i]);
      draw(`.chart-bar-value-${(0,_kit__WEBPACK_IMPORTED_MODULE_3__.nextId)()}`, {
        create: selection => selection.append('rect'),
        update: selection => selection.classed('animated-bar', true).attr('width', d => animation ? 0 : scaleX(d) - scaleX(0)).attr('height', (d, c) => barStyle(d, c).size).attr('x', scaleX(0)).attr('y', (d, c) => scaleY(i)).attr('transform', (d, c) => {
          let previous = 0;
          for (let j = 0; j < c; j++) {
            previous = previous + data[i][j];
          }
          return `translate(${c > 0 ? scaleX(previous) - scaleX(0) : 0} , ${scaleX(data.length) / data.length + barStyle(d, i).size / 2})`;
        }).attr('fill', (d, c) => barStyle(d, c).fill).on('mouseover', (d, c) => {
          console.log('Hovered Horizontal');
          this.selectionChange.emit();
        })
      });
    }
    // if (label !== 'none') {
    //   draw('.chart-label', {
    //     create: selection =>
    //       selection
    //         .append('text'),
    //     update: selection =>
    //       selection
    //         .attr('x', () => {
    //           if (label === 'start') {
    //             return scaleX(0) - 10;
    //           } return scaleX(total) + 10;
    //         })
    //         .attr('y', (d, i) => scaleY(i) + scaleY(0) / 2)
    //         .style('text-anchor', () => {
    //           if (label === 'start') {
    //             return 'end';
    //           } return 'start';
    //         })
    //         .attr('vertical-align', 'middle')
    //         .attr('font-size', (d, i) => labelStyle(d, i).fontSize)
    //         .attr('fill', (d, i) => labelStyle(d, i).color)
    //         .attr('font-weight', (d, i) => labelStyle(d, i).fontWeight)
    //         .attr('transform', (d, i) => {
    //           if (labelStyle(d, i).padding !== null) {
    //             return `translate(${-scaleX(total) - 10 + scaleX(d) + labelStyle(d, i).padding}, 0)`;
    //           }
    //         })
    //         .text((d, i) => animation ? format(0) : labelStyle(d, i).text),
    //   });
    // }
    if (animation) {
      this.root.selectAll('.animated-bar').transition().duration((d, i) => animationStyle(d, i).duration).attr('width', d => scaleX(d) - scaleX(0)).delay((d, i) => animationStyle(d, i).delay);
      this.root.selectAll('text').transition().duration((d, i) => animationStyle(d, i).duration).delay((d, i) => animationStyle(d, i).delay).on('start', function repeat() {
        d3__WEBPACK_IMPORTED_MODULE_6__.active(this).tween('text', (d, i) => {
          const that = d3__WEBPACK_IMPORTED_MODULE_6__.select(this);
          const j = d3__WEBPACK_IMPORTED_MODULE_6__.interpolate('0', `${labelStyle(d, i).text}`);
          return t => {
            that.text(format(j(t)));
          };
        });
      });
    }
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
};
BarHorizontalSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], BarHorizontalSeriesChartService);


/***/ }),

/***/ 31028:
/*!*************************************************************************!*\
  !*** ./src/components/series/bar-series/bar-series-vertical.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarVerticalSeriesChartService: () => (/* binding */ BarVerticalSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_0__.CHART_DEFAULT_SERIES_STATE,
  type: 'bar',
  total: 100
};
let BarVerticalSeriesChartService = class BarVerticalSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-bar-${(0,_kit__WEBPACK_IMPORTED_MODULE_3__.nextId)()}`
    };
    this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__.EventEmitter();
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.root.classed('chart-series-bar', true);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      data,
      style,
      animation,
      range,
      total,
      rect,
      margin
    } = this.state;
    // this.root.selectAll('rect').remove();
    if (!rect.width || !rect.height) {
      return this.state;
    }
    const datum = data.map((x, i) => i);
    datum.push(data.length);
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_0__.createScaleX)('band', {
      ...state,
      data: datum
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_0__.createScaleY)('linear', {
      ...state,
      data: range.y
    });
    this.state = {
      ...this.state,
      ...state
    };
    this.root.selectAll('rect').remove();
    const barStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.bar);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.label);
    const animationStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.animation);
    // const draw = ChartDrawFactory(this.root, data);
    let draw;
    const format = d3__WEBPACK_IMPORTED_MODULE_6__.format(animationStyle(null, 0).format);
    for (let i = 0; i < data.length; i++) {
      draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, data[i]);
      draw(`.chart-bar-value-${(0,_kit__WEBPACK_IMPORTED_MODULE_3__.nextId)()}`, {
        create: selection => selection.append('rect'),
        update: selection => selection.classed('animated-bar', true).attr('width', (d, c) => barStyle(d, c).size).attr('height', d => {
          return animation ? 0 : scaleY(d) - scaleY(0);
        }).attr('transform', (d, c) => {
          let previous = 0;
          for (let j = 0; j < c; j++) {
            previous = previous + data[i][j];
          }
          return `translate(${scaleX(data.length) / data.length - barStyle(d, i).size / 2}, ${c > 0 ? -scaleY(previous) + scaleY(0) : 0})`;
        }).attr('x', scaleX(i)).attr('y', (d, c) => scaleY(d3__WEBPACK_IMPORTED_MODULE_6__.max(range.y)) - scaleY(d) + scaleY(0)).attr('fill', (d, c) => barStyle(d, c).fill).on('mouseover', (d, c) => {
          console.log('Hovered Vertical');
          this.selectionChange.emit();
        })
      });
    }
    // if (label !== 'none') {
    //   draw('.chart-label', {
    //     create: selection =>
    //       selection
    //         .append('text'),
    //     update: selection =>
    //       selection
    //         .attr('x', () => {
    //           if (label === 'start') {
    //             return scaleX(0) - 10;
    //           } return scaleX(total) + 10;
    //         })
    //         .attr('y', (d, i) => scaleY(i) + scaleY(0) / 2)
    //         .style('text-anchor', () => {
    //           if (label === 'start') {
    //             return 'end';
    //           } return 'start';
    //         })
    //         .attr('vertical-align', 'middle')
    //         .attr('font-size', (d, i) => labelStyle(d, i).fontSize)
    //         .attr('fill', (d, i) => labelStyle(d, i).color)
    //         .attr('font-weight', (d, i) => labelStyle(d, i).fontWeight)
    //         .attr('transform', (d, i) => {
    //           if (labelStyle(d, i).padding !== null) {
    //             return `translate(${-scaleX(total) - 10 + scaleX(d) + labelStyle(d, i).padding}, 0)`;
    //           }
    //         })
    //         .text((d, i) => animation ? format(0) : labelStyle(d, i).text),
    //   });
    // }
    if (animation) {
      this.root.selectAll('.animated-bar').transition().duration((d, i) => animationStyle(d, i).duration).attr('width', d => scaleX(d) - scaleX(0)).delay((d, i) => animationStyle(d, i).delay);
      this.root.selectAll('text').transition().duration((d, i) => animationStyle(d, i).duration).delay((d, i) => animationStyle(d, i).delay).on('start', function repeat() {
        d3__WEBPACK_IMPORTED_MODULE_6__.active(this).tween('text', (d, i) => {
          const that = d3__WEBPACK_IMPORTED_MODULE_6__.select(this);
          const j = d3__WEBPACK_IMPORTED_MODULE_6__.interpolate('0', `${labelStyle(d, i).text}`);
          return t => {
            that.text(format(j(t)));
          };
        });
      });
    }
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
};
BarVerticalSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], BarVerticalSeriesChartService);


/***/ }),

/***/ 35751:
/*!******************************************************************!*\
  !*** ./src/components/series/bar-series/bar-series.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarSeriesChartComponent: () => (/* binding */ BarSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _bar_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar-series.component.html?ngResource */ 12769);
/* harmony import */ var _bar_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bar-series.component.scss?ngResource */ 55111);
/* harmony import */ var _bar_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bar_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _bar_series_vertical_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bar-series-vertical.service */ 31028);
/* harmony import */ var _bar_series_horizontal_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bar-series-horizontal.service */ 26502);









let BarSeriesChartComponent = class BarSeriesChartComponent {
  get selectionChange() {
    return this.orientation === 'vertical' ? this.seriesServiceVertical.selectionChange : this.seriesServiceHorizontal.selectionChange;
  }
  constructor(chart, seriesServiceVertical, seriesServiceHorizontal, disposable) {
    this.chart = chart;
    this.seriesServiceVertical = seriesServiceVertical;
    this.seriesServiceHorizontal = seriesServiceHorizontal;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    this.range = {
      x: [0, 100],
      y: [0, 100]
    };
    this.total = 100;
    this.animation = false;
    this.orientation = 'vertical';
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.margin || changes.data || changes.orientation) {
      this.invalidate();
    }
  }
  invalidate() {
    const service = this.orientation === 'vertical' ? this.seriesServiceVertical : this.seriesServiceHorizontal;
    const state = service.setState({
      data: this.data || [],
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin,
      range: this.range,
      total: this.total,
      animation: this.animation
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _bar_series_vertical_service__WEBPACK_IMPORTED_MODULE_5__.BarVerticalSeriesChartService
  }, {
    type: _bar_series_horizontal_service__WEBPACK_IMPORTED_MODULE_6__.BarHorizontalSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    orientation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input
    }],
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Output
    }]
  };
};
BarSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-chart-series[type="bar"]',
  template: _bar_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable, _bar_series_vertical_service__WEBPACK_IMPORTED_MODULE_5__.BarVerticalSeriesChartService, _bar_series_horizontal_service__WEBPACK_IMPORTED_MODULE_6__.BarHorizontalSeriesChartService],
  styles: [(_bar_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], BarSeriesChartComponent);


/***/ }),

/***/ 8527:
/*!********************************************************************************!*\
  !*** ./src/components/series/bar-simple-series/bar-simple-series.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarSimpleSeriesChartComponent: () => (/* binding */ BarSimpleSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _bar_simple_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar-simple-series.component.html?ngResource */ 39369);
/* harmony import */ var _bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bar-simple-series.component.scss?ngResource */ 67415);
/* harmony import */ var _bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _bar_simple_series_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bar-simple-series.service */ 16711);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);








let BarSimpleSeriesChartComponent = class BarSimpleSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    this.total = 100;
    this.animation = false;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    const marginChange = changes.margin;
    const dataChange = changes.data;
    if (marginChange || dataChange) {
      this.invalidate();
    }
  }
  invalidate() {
    const state = this.seriesService.setState({
      data: this.data || [],
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin,
      total: this.total,
      animation: this.animation
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _bar_simple_series_service__WEBPACK_IMPORTED_MODULE_4__.BarSimpleSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
BarSimpleSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-chart-series[type="bar-simple"]',
  template: _bar_simple_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable, _bar_simple_series_service__WEBPACK_IMPORTED_MODULE_4__.BarSimpleSeriesChartService],
  styles: [(_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], BarSimpleSeriesChartComponent);


/***/ }),

/***/ 16711:
/*!******************************************************************************!*\
  !*** ./src/components/series/bar-simple-series/bar-simple-series.service.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BarSimpleSeriesChartService: () => (/* binding */ BarSimpleSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-series */ 49007);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_6__.CHART_DEFAULT_SERIES_STATE,
  type: 'bar',
  total: 100
};
let BarSimpleSeriesChartService = class BarSimpleSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-bar-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.root.classed('chart-series-bar', true);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    let total = 0;
    const {
      data: values,
      style,
      animation
    } = state;
    values.forEach(value => total = total + value);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.label);
    const barStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.bar);
    const animationStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.animation);
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_6__.createScaleX)('linear', {
      ...state,
      data: [0, total]
    });
    this.state = {
      ...this.state,
      ...state,
      scaleX
    };
    const {
      rect,
      data
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, data);
    let positionX = 0;
    draw(`.chart-bar-value-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`, {
      create: selection => selection.append('rect'),
      update: selection => selection.classed('bar-animated', animation).attr('width', d => animation ? 0 : scaleX(d)).attr('height', (d, i) => barStyle(d, i).size).attr('fill', (d, i) => barStyle(d, i).fill).attr('x', (d, i) => {
        if (i === 0) {
          return scaleX(0);
        }
        positionX = positionX + scaleX(data[i - 1]);
        return positionX;
      }).attr('y', (d, i) => 0)
    });
    draw('.chart-label-left', {
      create: selection => selection.append('text'),
      update: selection => selection.attr('x', (d, i) => scaleX(0) - barStyle(d, i).paddingLeft).attr('y', (d, i) => barStyle(d, i).size).attr('vertical-align', 'middle').attr('text-anchor', 'end').attr('font-size', (d, i) => labelStyle(d, i).fontSize).attr('fill', (d, i) => labelStyle(d, i).color).attr('font-weight', (d, i) => labelStyle(d, i).fontWeight).text((d, i) => labelStyle(d, i).text)
    });
    if (animation) {
      this.root.selectAll('.bar-animated').transition().duration((d, i) => {
        return animationStyle(d, i).duration;
      }).attr('width', d => scaleX(d)).delay((d, i) => {
        return animationStyle(d, i).delay;
      });
      this.root.selectAll('text').transition().duration((d, i) => animationStyle(d, i).duration).delay((d, i) => animationStyle(d, i).delay).on('start', function repeat() {
        d3__WEBPACK_IMPORTED_MODULE_0__.active(this).tween('text', (d, i) => {
          const that = d3__WEBPACK_IMPORTED_MODULE_0__.select(this);
          const с = d3__WEBPACK_IMPORTED_MODULE_0__.interpolate('0', `${labelStyle(d, i).text}`);
          return t => {
            that.text(d3__WEBPACK_IMPORTED_MODULE_0__.format(animationStyle(d, i).format)(с(t)));
          };
        });
      });
    }
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
};
BarSimpleSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], BarSimpleSeriesChartService);


/***/ }),

/***/ 41765:
/*!**********************************************************************!*\
  !*** ./src/components/series/chord-series/chord-series.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChordSeriesChartComponent: () => (/* binding */ ChordSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chord_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chord-series.service */ 1129);






let ChordSeriesChartComponent = class ChordSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_1__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.data) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent
  }, {
    type: _chord_series_service__WEBPACK_IMPORTED_MODULE_3__.ChordSeriesChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
ChordSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="chord"]',
  template: '',
  providers: [_chord_series_service__WEBPACK_IMPORTED_MODULE_3__.ChordSeriesChartService, _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], ChordSeriesChartComponent);


/***/ }),

/***/ 1129:
/*!********************************************************************!*\
  !*** ./src/components/series/chord-series/chord-series.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChordSeriesChartService: () => (/* binding */ ChordSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _components_common_chart_series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../components/common/chart-series */ 49007);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/common/chart-draw.factory */ 8328);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);









const DEFAULT_STATE = {
  ..._components_common_chart_series__WEBPACK_IMPORTED_MODULE_0__.CHART_DEFAULT_SERIES_STATE
};
let ChordSeriesChartService = class ChordSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-chord-${(0,_kit__WEBPACK_IMPORTED_MODULE_5__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      data,
      style
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const datum = this.getData(data);
    const arcStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc);
    const innerRadius = arcStyle(null, 0).innerRadius;
    const outerRadius = arcStyle(null, 0).outerRadius;
    const chord = d3__WEBPACK_IMPORTED_MODULE_6__.chord().padAngle(.04).sortSubgroups(d3__WEBPACK_IMPORTED_MODULE_6__.descending).sortChords(d3__WEBPACK_IMPORTED_MODULE_6__.descending);
    const arc = d3__WEBPACK_IMPORTED_MODULE_6__.arc().innerRadius(innerRadius).outerRadius(outerRadius);
    const ribbon = d3__WEBPACK_IMPORTED_MODULE_6__.ribbon().radius(innerRadius);
    const chords = chord(datum.matrix);
    const draw = (0,_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, chords.groups);
    draw('.chart-chord-arc', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', d => arc(d)).attr('fill', (d, i) => arcStyle(d, i).fill).attr('stroke', (d, i) => arcStyle(d, i).stroke).on('mouseover', (d, i) => {
        this.root.selectAll('.chart-chord-chord').filter(e => e.source.index !== i && e.target.index !== i).transition().duration(500).style('opacity', 0);
      }).on('mouseleave', (d, i) => {
        this.root.selectAll('.chart-chord-chord').transition().duration(500).style('opacity', 1);
      })
    });
    draw('.chart-chord-label', {
      create: selection => selection.append('text'),
      update: selection => selection.each(d => d.angle = (d.startAngle + d.endAngle) / 2).attr('dy', '.35em').attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90})
                                             translate(${innerRadius + 26})${d.angle > Math.PI ? 'rotate(180)' : ''}`).attr('text-anchor', d => d.angle > Math.PI ? 'end' : null).text(d => datum.nameByIndex.get(d.index))
    });
    const drawChords = (0,_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, chords);
    drawChords('.chart-chord-chord', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('fill', d => arcStyle(d, d.source.index).fill).attr('stroke', d => arcStyle(d, d.source.index).stroke).attr('fill-opacity', (d, i) => arcStyle(d, i).opacity).attr('d', d => ribbon(d))
    });
    this.root.attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`);
  }
  getData(data) {
    const indexByName = new Map();
    const nameByIndex = new Map();
    const matrix = [];
    let n = 0;
    data.forEach(d => {
      if (!indexByName.has(d = this.getName(d.name))) {
        nameByIndex.set(n, d);
        indexByName.set(d, n++);
      }
    });
    data.forEach(d => {
      const source = indexByName.get(this.getName(d.name));
      let row = matrix[source];
      if (!row) {
        row = matrix[source] = Array.from({
          length: n
        }).fill(0);
      }
      d.imports.forEach(e => row[indexByName.get(this.getName(e))]++);
    });
    return {
      matrix,
      indexByName,
      nameByIndex
    };
  }
  getName(name) {
    return name.substring(0, name.lastIndexOf('.')).substring(6);
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
};
ChordSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], ChordSeriesChartService);


/***/ }),

/***/ 42791:
/*!********************************************************************************************!*\
  !*** ./src/components/series/circular-package-series/circular-package-series.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CircularPackageSeriesChartComponent: () => (/* binding */ CircularPackageSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _circular_package_series_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circular-package-series.service */ 26751);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);






let CircularPackageSeriesChartComponent = class CircularPackageSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    this.invalidate();
  }
  invalidate() {
    const state = this.seriesService.setState({
      data: this.data || [],
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _circular_package_series_service__WEBPACK_IMPORTED_MODULE_0__.CircularPackageSeriesService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
CircularPackageSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="circular-package"]',
  template: '',
  providers: [_circular_package_series_service__WEBPACK_IMPORTED_MODULE_0__.CircularPackageSeriesService, _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], CircularPackageSeriesChartComponent);


/***/ }),

/***/ 26751:
/*!******************************************************************************************!*\
  !*** ./src/components/series/circular-package-series/circular-package-series.service.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CircularPackageSeriesService: () => (/* binding */ CircularPackageSeriesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _components_common_chart_series__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/common/chart-series */ 49007);
/* harmony import */ var _components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/common/chart-draw.factory */ 8328);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3 */ 86164);








const DEFAULT_STATE = {
  ..._components_common_chart_series__WEBPACK_IMPORTED_MODULE_3__.CHART_DEFAULT_SERIES_STATE
};
let CircularPackageSeriesService = class CircularPackageSeriesService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-circular-package-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      style,
      rect,
      data
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    this.root.selectAll('circle').remove();
    const datum = data;
    const color = d3__WEBPACK_IMPORTED_MODULE_5__.scaleOrdinal().domain(['Asia', 'Europe', 'Africa', 'Oceania', 'Americas']).range(d3__WEBPACK_IMPORTED_MODULE_5__.schemeSet1);
    const size = d3__WEBPACK_IMPORTED_MODULE_5__.scaleLinear().domain([0, 1400000000]).range([10, 50]);
    const simulation = d3__WEBPACK_IMPORTED_MODULE_5__.forceSimulation().force('center', d3__WEBPACK_IMPORTED_MODULE_5__.forceCenter().x(rect.width / 2).y(rect.height / 2)).force('charge', d3__WEBPACK_IMPORTED_MODULE_5__.forceManyBody().strength(.1)).force('collide', d3__WEBPACK_IMPORTED_MODULE_5__.forceCollide().strength(.2).radius(d => size(d.value) + 2.5).iterations(2));
    const dragStarted = (event, d) => {
      if (!event.active) {
        simulation.alphaTarget(.03).restart();
      }
      d.fx = d.x;
      d.fy = d.y;
    };
    const dragged = (event, d) => {
      d.fx = event.x;
      d.fy = event.y;
    };
    const dragEnded = (event, d) => {
      if (!event.active) {
        simulation.alphaTarget(.03);
      }
      d.fx = null;
      d.fy = null;
    };
    const draw = (0,_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, datum);
    draw('.chart-circular-package-circle', {
      create: selection => selection.append('circle'),
      update: selection => selection.attr('class', 'node').attr('r', d => size(d.value)).attr('cx', rect.width / 2).attr('cy', rect.height / 2).style('fill', d => color(d.region)).style('fill-opacity', 0.8).attr('stroke', 'black').style('stroke-width', 1).call(d3__WEBPACK_IMPORTED_MODULE_5__.drag().on('start', dragStarted).on('drag', dragged).on('end', dragEnded))
    });
    simulation.nodes(datum).on('tick', () => {
      this.root.selectAll('.node').attr('cx', d => d.x).attr('cy', d => d.y);
    });
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__.ChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
};
CircularPackageSeriesService = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], CircularPackageSeriesService);


/***/ }),

/***/ 34989:
/*!**********************************************************************!*\
  !*** ./src/components/series/donut-series/donut-series.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DonutSeriesChartComponent: () => (/* binding */ DonutSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _donut_series_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./donut-series.service */ 21169);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);






let DonutSeriesChartComponent = class DonutSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_1__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent
  }, {
    type: _donut_series_service__WEBPACK_IMPORTED_MODULE_0__.DonutSeriesChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
DonutSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="donut"]',
  template: '',
  providers: [_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable, _donut_series_service__WEBPACK_IMPORTED_MODULE_0__.DonutSeriesChartService],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], DonutSeriesChartComponent);


/***/ }),

/***/ 21169:
/*!********************************************************************!*\
  !*** ./src/components/series/donut-series/donut-series.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DonutSeriesChartService: () => (/* binding */ DonutSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/chart/chart.service */ 92013);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/kit */ 67371);
/* harmony import */ var src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/common/chart-disposable */ 95068);
/* harmony import */ var src_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/common/chart-draw.factory */ 8328);
/* harmony import */ var src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/common/chart-series */ 49007);









const DEFAULT_STATE = {
  ...src_components_common_chart_series__WEBPACK_IMPORTED_MODULE_6__.CHART_DEFAULT_SERIES_STATE
};
let DonutSeriesChartService = class DonutSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-pie-${(0,src_components_kit__WEBPACK_IMPORTED_MODULE_3__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  checkSum(data, total) {
    let values = data;
    const sum = values.reduce((a, b) => a + b);
    if (sum < total) {
      values = values.concat(total - sum);
    }
    return values;
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      total
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const values = this.checkSum(data, total);
    const datum = d3__WEBPACK_IMPORTED_MODULE_0__.pie().sort(null)(values);
    const arcStyle = style.compile(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__.ChartStyle.arc);
    const pieStyle = style.compile(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_1__.ChartStyle.pie);
    const arc = d3__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(rect.height / 2 * pieStyle(null, 0).innerRadius / 100).outerRadius(rect.height / 2 * pieStyle(null, 0).outerRadius / 100);
    const draw = (0,src_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, datum);
    draw('.chart-donut-arc', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', d => arc(d)).attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`).style('stroke', (d, i) => arcStyle(d, i).stroke).style('stroke-width', (d, i) => arcStyle(d, i).strokeWidth).style('fill', (d, i) => arcStyle(d, i).fill)
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: src_components_chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
};
DonutSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], DonutSeriesChartService);


/***/ }),

/***/ 33687:
/*!************************************************************************************!*\
  !*** ./src/components/series/double-donut-series/double-donut-series.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DoubleDonutSeriesChartComponent: () => (/* binding */ DoubleDonutSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _double_donut_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double-donut-series.service */ 49039);






let DoubleDonutSeriesChartComponent = class DoubleDonutSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: _double_donut_series_service__WEBPACK_IMPORTED_MODULE_3__.DoubleDonutSeriesChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
DoubleDonutSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="double-donut"]',
  template: '',
  providers: [_double_donut_series_service__WEBPACK_IMPORTED_MODULE_3__.DoubleDonutSeriesChartService, _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], DoubleDonutSeriesChartComponent);


/***/ }),

/***/ 49039:
/*!**********************************************************************************!*\
  !*** ./src/components/series/double-donut-series/double-donut-series.service.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DoubleDonutSeriesChartService: () => (/* binding */ DoubleDonutSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _components_common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/common/chart-series */ 49007);
/* harmony import */ var _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../components/common/chart-draw.factory */ 8328);









const DEFAULT_STATE = {
  ..._components_common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let DoubleDonutSeriesChartService = class DoubleDonutSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-pie-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  checkSum(data, total) {
    let values = data;
    const sum = values.reduce((a, b) => a + b);
    if (sum < total) {
      values = values.concat(total - sum);
    }
    return values;
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      total
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const values1 = this.checkSum(data[0], total);
    const values2 = this.checkSum(data[1], total);
    const datum1 = d3__WEBPACK_IMPORTED_MODULE_0__.pie().sort(null)(values1);
    const datum2 = d3__WEBPACK_IMPORTED_MODULE_0__.pie().sort(null)(values2);
    const arcStyle1 = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.arc);
    const arcStyle2 = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.arc);
    const pieStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.pie);
    const arc1 = d3__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(rect.height / 2 * pieStyle(null, 0).innerRadius / 100).outerRadius(rect.height / 2 * pieStyle(null, 0).outerRadius / 100);
    const arc2 = d3__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(rect.height / 2 * pieStyle(null, 0).innerRadius / 100 / 2).outerRadius(rect.height / 2 * pieStyle(null, 0).innerRadius / 100);
    const draw1 = (0,_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, datum1);
    const draw2 = (0,_components_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, datum2);
    draw1('.chart-donut-arc-outer', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', d => arc1(d)).attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`).style('stroke', (d, i) => arcStyle1(d, i).stroke).style('stroke-width', (d, i) => arcStyle1(d, i).strokeWidth).style('fill', (d, i) => arcStyle1(d, i).fill)
    });
    draw2('.chart-donut-arc-inner', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', d => arc2(d)).attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`).style('stroke', (d, i) => arcStyle2(d, i).stroke).style('stroke-width', (d, i) => arcStyle2(d, i).strokeWidth).style('fill', (d, i) => arcStyle2(d, i).fill)
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
DoubleDonutSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], DoubleDonutSeriesChartService);


/***/ }),

/***/ 54023:
/*!********************************************************************!*\
  !*** ./src/components/series/grid-series/grid-series.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridSeriesChartComponent: () => (/* binding */ GridSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _grid_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grid-series.component.html?ngResource */ 34281);
/* harmony import */ var _grid_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grid-series.component.scss?ngResource */ 43143);
/* harmony import */ var _grid_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_grid_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _grid_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./grid-series.service */ 31263);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);








let GridSeriesChartComponent = class GridSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.step = {
      x: 5,
      y: 1
    };
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    // if (changes.step) {
    //     this.invalidate();
    // }
  }
  invalidate() {
    const state = this.seriesService.setState({
      step: this.step,
      style: this.style,
      range: this.range,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__.ChartComponent
  }, {
    type: _grid_series_service__WEBPACK_IMPORTED_MODULE_3__.GridSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    step: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
GridSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-chart-series[type="grid"]',
  template: _grid_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_grid_series_service__WEBPACK_IMPORTED_MODULE_3__.GridSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_grid_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], GridSeriesChartComponent);


/***/ }),

/***/ 31263:
/*!******************************************************************!*\
  !*** ./src/components/series/grid-series/grid-series.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridSeriesChartService: () => (/* binding */ GridSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);








const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_4__.CHART_DEFAULT_SERIES_STATE
};
let GridSeriesChartService = class GridSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-grid-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      style,
      rect,
      range,
      step
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_4__.createScaleX)('linear', {
      ...state,
      data: range.x
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_4__.createScaleY)('linear', {
      ...state,
      data: range.y
    });
    this.root.selectAll('path').remove();
    const line = d3__WEBPACK_IMPORTED_MODULE_0__.line().x(d => scaleX(d[0])).y(d => scaleY(d[1]));
    const lineStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.line);
    const maxX = d3__WEBPACK_IMPORTED_MODULE_0__.max(range.x);
    const maxY = d3__WEBPACK_IMPORTED_MODULE_0__.max(range.y);
    if (step.x !== 0) {
      for (let j = step.x; j < maxX; j += step.x) {
        this.root.append('path').datum([[j, d3__WEBPACK_IMPORTED_MODULE_0__.min(range.y)], [j, d3__WEBPACK_IMPORTED_MODULE_0__.max(range.y)]]).attr('d', line).attr('id', (0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()).classed('line', true).attr('fill', 'none').attr('stroke', (d, i) => lineStyle(d, i).stroke).attr('stroke-width', (d, i) => lineStyle(d, i).strokeWidth).attr('stroke-dasharray', (d, i) => lineStyle(d, i).strokeDasharray);
      }
    }
    if (step.y !== 0) {
      for (let j = step.y; j < maxY; j += step.y) {
        this.root.append('path').datum([[d3__WEBPACK_IMPORTED_MODULE_0__.min(range.x), j], [d3__WEBPACK_IMPORTED_MODULE_0__.max(range.x), j]]).attr('d', line).attr('id', (0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()).classed('line', true).attr('fill', 'none').attr('stroke', (d, i) => lineStyle(d, i).stroke).attr('stroke-width', (d, i) => lineStyle(d, i).strokeWidth).attr('stroke-dasharray', (d, i) => lineStyle(d, i).strokeDasharray);
      }
    }
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
GridSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], GridSeriesChartService);


/***/ }),

/***/ 18675:
/*!********************************************************************************!*\
  !*** ./src/components/series/half-donut-series/half-donut-series.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HalfDonutSeriesChartComponent: () => (/* binding */ HalfDonutSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./half-donut-series.component.scss?ngResource */ 2491);
/* harmony import */ var _half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _half_donut_series_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./half-donut-series.service */ 91275);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);







let HalfDonutSeriesChartComponent = class HalfDonutSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _half_donut_series_service__WEBPACK_IMPORTED_MODULE_1__.HalfDonutSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  };
};
HalfDonutSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-chart-series[type="half-donut"]',
  template: '',
  providers: [_half_donut_series_service__WEBPACK_IMPORTED_MODULE_1__.HalfDonutSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ChangeDetectionStrategy.OnPush,
  // tslint:disable-next-line:use-view-encapsulation
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
  styles: [(_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default())]
})], HalfDonutSeriesChartComponent);


/***/ }),

/***/ 91275:
/*!******************************************************************************!*\
  !*** ./src/components/series/half-donut-series/half-donut-series.service.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HalfDonutSeriesChartService: () => (/* binding */ HalfDonutSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-series */ 49007);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_6__.CHART_DEFAULT_SERIES_STATE
};
let HalfDonutSeriesChartService = class HalfDonutSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-pie-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  checkSum(data, total) {
    let values = data;
    const sum = values.reduce((a, b) => a + b);
    if (sum < total) {
      values = values.concat(total - sum);
    }
    return values;
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      total
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const values = this.checkSum(data, total);
    const anglesRange = 0.5 * Math.PI;
    const datum = d3__WEBPACK_IMPORTED_MODULE_0__.pie().sort(null).startAngle(anglesRange * -1).endAngle(anglesRange)(values);
    const arcStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc);
    const pieStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.pie);
    const arc = d3__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(rect.width / 2 * pieStyle(null, 0).innerRadius / 100).outerRadius(rect.width / 2 * pieStyle(null, 0).outerRadius / 100);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, datum);
    draw('.chart-donut-arc', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', d => arc(d)).attr('transform', `translate(${rect.width / 2}, ${rect.height})`).style('stroke', (d, i) => arcStyle(d, i).stroke).style('stroke-width', (d, i) => arcStyle(d, i).strokeWidth).style('fill', (d, i) => arcStyle(d, i).fill)
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_2__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_4__.ChartDisposable
  }];
};
HalfDonutSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], HalfDonutSeriesChartService);


/***/ }),

/***/ 21975:
/*!************************************************************************!*\
  !*** ./src/components/series/icicle-series/icicle-series.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IcicleSeriesChartComponent: () => (/* binding */ IcicleSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icicle-series.component.scss?ngResource */ 68055);
/* harmony import */ var _icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _icicle_series_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icicle-series.service */ 52047);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);







let IcicleSeriesChartComponent = class IcicleSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.data || changes.style) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _icicle_series_service__WEBPACK_IMPORTED_MODULE_1__.IcicleSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  };
};
IcicleSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-chart-series[type="icicle"]',
  template: '',
  providers: [_icicle_series_service__WEBPACK_IMPORTED_MODULE_1__.IcicleSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ChangeDetectionStrategy.OnPush,
  // tslint:disable-next-line:use-view-encapsulation
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
  styles: [(_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default())]
})], IcicleSeriesChartComponent);


/***/ }),

/***/ 52047:
/*!**********************************************************************!*\
  !*** ./src/components/series/icicle-series/icicle-series.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IcicleSeriesChartService: () => (/* binding */ IcicleSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let IcicleSeriesChartService = class IcicleSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    const selector = {
      id: `chart-series-pie-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      total
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const values = d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data[0]).sum(d => d.value).sort((a, b) => b.height - a.height || b.value - a.value);
    let datum = d3__WEBPACK_IMPORTED_MODULE_0__.partition().size([rect.height, (values.height + 1) * rect.width / 3])(values);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, datum.descendants());
    const cellStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.cell);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.label);
    draw('.chart-icicle-cell', {
      create: selection => selection.append('rect'),
      update: selection => selection.attr('width', d => d.y1 - d.y0 - 1).attr('height', d => d.x1 - d.x0 - Math.min(1, (d.x1 - d.x0) / 2)).attr('transform', d => `translate(${d.y0},${d.x0})`).attr('fill-opacity', 0.6).attr('fill', (d, i) => cellStyle(d, i).fill).attr('cursor', 'pointer').on('click', d => {
        datum = datum === d ? d.parent ? d = d.parent : d : d;
        this.animation(d, state);
      })
    });
    draw('.chart-icicle-cell-text', {
      create: selection => selection.append('text'),
      update: selection => selection.style('user-select', 'none').attr('pointer-events', 'none').attr('x', d => d.y0 + 7).attr('y', d => d.x0 + 12).attr('font-size', '9px').attr('font-weight', 600).attr('opacity', d => +this.labelVisible(d, state)).style('text-transform', 'capitalize').text((d, i) => labelStyle(d, i).text)
    });
  }
  invalidateSelection(d) {}
  animation(d, state) {
    const {
      rect
    } = state;
    this.root.selectAll('.chart-icicle-cell').each(a => a.target = {
      x0: (a.x0 - d.x0) / (d.x1 - d.x0) * rect.height,
      x1: (a.x1 - d.x0) / (d.x1 - d.x0) * rect.height,
      y0: a.y0 - d.y0,
      y1: a.y1 - d.y0
    });
    this.root.selectAll('.chart-icicle-cell').transition().duration(750).attr('transform', c => `translate(${c.target.y0},${c.target.x0})`).attr('height', c => c.target.x1 - c.target.x0 - Math.min(1, (c.target.x1 - c.target.x0) / 2));
    this.root.selectAll('.chart-icicle-cell-text').transition().duration(750).attr('x', a => a.y0 - d.y0 + 7).attr('y', a => (a.x0 - d.x0) / (d.x1 - d.x0) * rect.height + 12).attr('opacity', a => +this.labelVisible(a.target, state));
  }
  labelVisible(d, state) {
    const {
      rect
    } = state;
    return d.y1 <= rect.width + 0.001 && d.y0 >= 0 && d.x1 - d.x0 > 16;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
IcicleSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], IcicleSeriesChartService);


/***/ }),

/***/ 97375:
/*!********************************************************************!*\
  !*** ./src/components/series/line-series/line-series.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LineSeriesChartComponent: () => (/* binding */ LineSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./line-series.component.scss?ngResource */ 27047);
/* harmony import */ var _line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _line_series_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line-series.service */ 5335);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);







let LineSeriesChartComponent = class LineSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.range = {
      x: [],
      y: []
    };
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder();
    this.curveType = 'curveLinear';
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    this.invalidate();
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      range: this.range,
      style: this.style,
      curveType: this.curveType,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_3__.ChartComponent
  }, {
    type: _line_series_service__WEBPACK_IMPORTED_MODULE_1__.LineSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    curveType: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  };
};
LineSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-chart-series[type="line"]',
  template: '',
  providers: [_line_series_service__WEBPACK_IMPORTED_MODULE_1__.LineSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ChangeDetectionStrategy.OnPush,
  // tslint:disable-next-line:use-view-encapsulation
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
  styles: [(_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default())]
})], LineSeriesChartComponent);


/***/ }),

/***/ 5335:
/*!******************************************************************!*\
  !*** ./src/components/series/line-series/line-series.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LineSeriesChartService: () => (/* binding */ LineSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_1__.CHART_DEFAULT_SERIES_STATE
};
let LineSeriesChartService = class LineSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-line-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      curveType,
      range
    } = state;
    this.root.selectAll('path').remove();
    this.root.selectAll('circle').remove();
    if (!rect.height || !rect.width || !data || !data.length) {
      return;
    }
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_1__.createScaleX)('linear', {
      ...state,
      data: !range.x.length ? [0, data.length - 1] : range.x
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_1__.createScaleY)('linear', {
      ...state,
      data: !range.y.length ? [d3__WEBPACK_IMPORTED_MODULE_6__.max(data), d3__WEBPACK_IMPORTED_MODULE_6__.min(data)] : [d3__WEBPACK_IMPORTED_MODULE_6__.max(range.y), d3__WEBPACK_IMPORTED_MODULE_6__.min(range.y)]
    });
    const line = d3__WEBPACK_IMPORTED_MODULE_6__.line().x(d => scaleX(d[0])).y(d => scaleY(d[1])).curve((0,_kit__WEBPACK_IMPORTED_MODULE_0__.getLineCurve)(curveType));
    const lineStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.line);
    const circleStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.circle);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, data);
    this.root.append('path').datum(data).attr('d', line).classed('line', true).attr('fill', 'none').attr('stroke', (d, i) => lineStyle(d, i).stroke).attr('stroke-width', (d, i) => lineStyle(d, i).strokeWidth);
    draw('.chart-line-point', {
      create: selection => selection.append('circle'),
      update: selection => selection.attr('cx', (d, i) => scaleX(d[0])).attr('cy', d => scaleY(d[1])).attr('r', (d, i) => circleStyle(d, i).radius).attr('fill', (d, i) => circleStyle(d, i).fill).attr('stroke', (d, i) => circleStyle(d, i).stroke).on('mouseover', (d, i) => {
        this.root.selectAll('.circle').filter(n => n === d);
      })
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
};
LineSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], LineSeriesChartService);


/***/ }),

/***/ 42443:
/*!*****************************************************!*\
  !*** ./src/components/series/map-series/germany.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = {
  type: 'FeatureCollection',
  features: [{
    type: 'Feature',
    properties: {
      name: 'Baden-Württemberg',
      type: 'Land',
      area: '35,751.46 km²',
      bundesratVotes: '6 (out of 69)',
      density: '310/km²',
      timeZone: 'UTC+1 (CET)',
      population: 11069533,
      capital: 'Stutgart',
      government: 'Landtag of Baden-Württemberg',
      head: 'Winfried Kretschmann (Greens)'
    },
    geometry: {
      type: 'MultiPolygon',
      coordinates: [[[[8.708401, 47.715584], [8.7137165, 47.701733], [8.722388, 47.69656], [8.711338, 47.69432], [8.695812, 47.699356], [8.691337, 47.699078], [8.6762295, 47.690403], [8.664061, 47.690823], [8.662522, 47.69698], [8.671194, 47.69824], [8.67595, 47.702293], [8.67609, 47.707188], [8.666578, 47.713345], [8.666578, 47.716423], [8.680846, 47.71754], [8.68756, 47.713623], [8.693015, 47.71768], [8.704345, 47.71978], [8.708401, 47.715584]]], [[[10.12812, 47.81559], [10.11721, 47.81559], [10.11721, 47.80426], [10.100705, 47.804123], [10.089655, 47.80776], [10.089655, 47.800346], [10.073151, 47.792652], [10.073151, 47.78524], [10.078745, 47.78524], [10.0842, 47.777824], [10.078745, 47.774048], [10.111755, 47.763138], [10.117351, 47.755585], [10.111755, 47.744255], [10.111755, 47.736843], [10.117351, 47.736843], [10.117351, 47.72929], [10.111755, 47.725513], [10.111755, 47.721737], [10.122806, 47.71432], [10.128401, 47.70691], [10.13945, 47.70705], [10.133995, 47.699497], [10.122806, 47.691803], [10.128401, 47.688168], [10.12854, 47.676975], [10.117351, 47.67306], [10.111896, 47.669285], [10.09511, 47.668865], [10.078465, 47.657394], [10.078465, 47.64984], [10.07287, 47.64229], [10.07301, 47.63851], [10.067555, 47.64229], [10.067555, 47.6497], [10.07301, 47.66117], [10.0621, 47.664806], [10.0621, 47.676136], [10.056785, 47.68369], [10.045735, 47.679913], [10.04042, 47.676136], [10.02951, 47.676136], [10.024055, 47.679913], [10.02951, 47.68369], [10.024055, 47.691105], [10.002374, 47.68369], [9.996919, 47.68369], [9.986149, 47.676277], [9.980694, 47.668724], [9.975239, 47.668724], [9.975378, 47.657536], [9.964468, 47.657536], [9.964468, 47.65376], [9.942648, 47.657536], [9.937193, 47.66117], [9.931738, 47.657394], [9.926283, 47.657394], [9.915373, 47.66103], [9.915373, 47.664806], [9.893413, 47.66467], [9.882503, 47.668304], [9.876907, 47.67558], [9.860402, 47.679214], [9.844037, 47.679073], [9.827672, 47.67516], [9.833127, 47.67152], [9.827811, 47.66033], [9.822356, 47.66033], [9.817041, 47.65278], [9.800676, 47.652637], [9.800816, 47.645226], [9.795361, 47.637672], [9.784591, 47.633896], [9.76291, 47.61879], [9.752, 47.615013], [9.757595, 47.611378], [9.741229, 47.60746], [9.74109, 47.614735], [9.746545, 47.61865], [9.73018, 47.61096], [9.71927, 47.610817], [9.708499, 47.603123], [9.697449, 47.606762], [9.691994, 47.60662], [9.6918545, 47.614033], [9.681084, 47.60648], [9.675629, 47.606342], [9.670033, 47.613613], [9.659123, 47.613476], [9.653809, 47.60592], [9.637303, 47.6055], [9.643038, 47.59431], [9.626533, 47.594032], [9.621218, 47.586197], [9.615763, 47.582283], [9.604433, 47.588715], [9.581913, 47.58592], [9.569184, 47.586338], [9.556736, 47.589695], [9.542049, 47.600327], [9.536314, 47.60732], [9.534916, 47.616833], [9.528901, 47.61893], [9.524005, 47.6276], [9.523306, 47.635994], [9.505822, 47.64928], [9.498689, 47.65278], [9.469035, 47.65194], [9.457565, 47.658234], [9.441759, 47.659912], [9.425954, 47.668446], [9.410288, 47.670403], [9.390706, 47.667606], [9.3753195, 47.667187], [9.368746, 47.66411], [9.3548975, 47.66425], [9.34147, 47.668724], [9.33014, 47.67418], [9.315174, 47.676975], [9.297549, 47.68481], [9.285101, 47.6925], [9.268176, 47.698936], [9.252371, 47.708447], [9.235306, 47.723415], [9.230411, 47.730408], [9.231389, 47.74146], [9.227893, 47.746075], [9.215444, 47.75167], [9.1974, 47.755726], [9.190546, 47.759644], [9.160053, 47.77237], [9.14173, 47.776287], [9.134037, 47.780903], [9.122008, 47.79167], [9.105923, 47.800205], [9.089277, 47.80468], [9.07487, 47.812233], [9.067178, 47.819927], [9.04158, 47.823143], [9.033188, 47.81671], [9.031929, 47.812653], [9.049553, 47.801044], [9.066478, 47.787056], [9.090956, 47.77307], [9.120889, 47.76426], [9.133617, 47.755585], [9.1411705, 47.753067], [9.151941, 47.75321], [9.16341, 47.744118], [9.176978, 47.737823], [9.184951, 47.719498], [9.184392, 47.70915], [9.195861, 47.699917], [9.210688, 47.69208], [9.215444, 47.685368], [9.215164, 47.677258], [9.221178, 47.668163], [9.212087, 47.664806], [9.199358, 47.669003], [9.188308, 47.669422], [9.185091, 47.665928], [9.18579, 47.657673], [9.17446, 47.658092], [9.166628, 47.66187], [9.16411, 47.653618], [9.15292, 47.66061], [9.148584, 47.665928], [9.129561, 47.669003], [9.129981, 47.67516], [9.122288, 47.68383], [9.115434, 47.688026], [9.106062, 47.703274], [9.091656, 47.711105], [9.08578, 47.711666], [9.048994, 47.726494], [9.026195, 47.732788], [9.005493, 47.74202], [8.998779, 47.747192], [8.986051, 47.746353], [8.988149, 47.74118], [9.000038, 47.73796], [9.001017, 47.730408], [8.974301, 47.74062], [8.958635, 47.74202], [8.946606, 47.739502], [8.941851, 47.735725], [8.941851, 47.73097], [8.965209, 47.7202], [8.979756, 47.714462], [8.996681, 47.710266], [9.0084305, 47.700893], [9.006892, 47.69558], [8.995422, 47.686348], [8.981295, 47.68075], [8.972483, 47.67432], [8.9536, 47.669285], [8.941431, 47.66187], [8.926185, 47.66159], [8.917373, 47.658375], [8.902126, 47.655437], [8.891775, 47.655155], [8.878907, 47.658653], [8.877508, 47.671383], [8.871914, 47.677956], [8.863241, 47.68383], [8.853869, 47.68383], [8.858766, 47.692783], [8.855828, 47.699917], [8.859185, 47.702015], [8.867578, 47.699776], [8.868977, 47.69656], [8.87569, 47.6974], [8.878068, 47.701035], [8.874151, 47.707607], [8.8559675, 47.70831], [8.848695, 47.70593], [8.846876, 47.7153], [8.835266, 47.71782], [8.822958, 47.716003], [8.823936, 47.721737], [8.808131, 47.72971], [8.812467, 47.733486], [8.807571, 47.74188], [8.800298, 47.739082], [8.800298, 47.731388], [8.792046, 47.733067], [8.785471, 47.73027], [8.780855, 47.725094], [8.771344, 47.720478], [8.771624, 47.712505], [8.774981, 47.710686], [8.79736, 47.708027], [8.801976, 47.69614], [8.79736, 47.690403], [8.795682, 47.68369], [8.782953, 47.68201], [8.766869, 47.690964], [8.756937, 47.69432], [8.739733, 47.696697], [8.727843, 47.69684], [8.730082, 47.70775], [8.737494, 47.721176], [8.735537, 47.723274], [8.719311, 47.72705], [8.713436, 47.735023], [8.715255, 47.742718], [8.726725, 47.75083], [8.740152, 47.75125], [8.740572, 47.758102], [8.73176, 47.76286], [8.7272835, 47.768314], [8.713157, 47.77069], [8.705463, 47.768314], [8.69791, 47.76216], [8.690217, 47.76286], [8.685462, 47.775448], [8.688399, 47.779366], [8.683643, 47.78608], [8.683084, 47.791534], [8.6721735, 47.79293], [8.661404, 47.797688], [8.661823, 47.801605], [8.656228, 47.8058], [8.649934, 47.80426], [8.646157, 47.79657], [8.649794, 47.789017], [8.648675, 47.77111], [8.6421, 47.770973], [8.629792, 47.765938], [8.621959, 47.77307], [8.623637, 47.780903], [8.617203, 47.788734], [8.62126, 47.796707], [8.619861, 47.80398], [8.6109085, 47.809017], [8.599579, 47.808876], [8.593984, 47.80608], [8.586291, 47.80874], [8.578738, 47.806778], [8.573842, 47.812096], [8.566849, 47.81391], [8.562512, 47.810417], [8.562372, 47.799927], [8.573842, 47.79517], [8.5762205, 47.789017], [8.567409, 47.78594], [8.552301, 47.791115], [8.524747, 47.78412], [8.52111, 47.778244], [8.511318, 47.78286], [8.497751, 47.778946], [8.486841, 47.779366], [8.470615, 47.768036], [8.466419, 47.760483], [8.459006, 47.757545], [8.452432, 47.745514], [8.452572, 47.74006], [8.457188, 47.735306], [8.45425, 47.72971], [8.444599, 47.72803], [8.423617, 47.717262], [8.417323, 47.71656], [8.405714, 47.70635], [8.419702, 47.689426], [8.408511, 47.685368], [8.404735, 47.678795], [8.412988, 47.67208], [8.4218, 47.67152], [8.433689, 47.666626], [8.445578, 47.65935], [8.459985, 47.658653], [8.467118, 47.66117], [8.465859, 47.65334], [8.467818, 47.645786], [8.477749, 47.643826], [8.474532, 47.65418], [8.480546, 47.654457], [8.484183, 47.649563], [8.4938345, 47.647465], [8.497471, 47.65194], [8.531321, 47.650402], [8.535936, 47.654457], [8.528803, 47.66467], [8.534398, 47.666767], [8.5408325, 47.663967], [8.54335, 47.670124], [8.551602, 47.67334], [8.564051, 47.67502], [8.567409, 47.67026], [8.5802765, 47.667606], [8.601538, 47.676975], [8.607132, 47.676], [8.609091, 47.670403], [8.628953, 47.656834], [8.629512, 47.65236], [8.624617, 47.645504], [8.617203, 47.64187], [8.605594, 47.64201], [8.604614, 47.644806], [8.614265, 47.647743], [8.613986, 47.653477], [8.608951, 47.656696], [8.596362, 47.645504], [8.5986, 47.631657], [8.6061535, 47.620888], [8.605594, 47.616272], [8.588389, 47.604942], [8.584752, 47.600327], [8.576779, 47.599907], [8.561394, 47.603683], [8.568527, 47.613754], [8.572444, 47.615154], [8.557897, 47.6283], [8.541391, 47.631237], [8.536077, 47.635994], [8.518872, 47.636555], [8.5135565, 47.62872], [8.505024, 47.621166], [8.494814, 47.61893], [8.484463, 47.61879], [8.469497, 47.6083], [8.460125, 47.60704], [8.458587, 47.602142], [8.461384, 47.59459], [8.468377, 47.588436], [8.480966, 47.589134], [8.488939, 47.593052], [8.495653, 47.58522], [8.48852, 47.581444], [8.475091, 47.580605], [8.465301, 47.576126], [8.457887, 47.576546], [8.437466, 47.571373], [8.423478, 47.570812], [8.4218, 47.57277], [8.400679, 47.579903], [8.390188, 47.578087], [8.386271, 47.572212], [8.378439, 47.570393], [8.357457, 47.57431], [8.331441, 47.57473], [8.325147, 47.576126], [8.311998, 47.58606], [8.301648, 47.590256], [8.294654, 47.59655], [8.295913, 47.60956], [8.290178, 47.614174], [8.281366, 47.616272], [8.261364, 47.615154], [8.261364, 47.61921], [8.256049, 47.620327], [8.235767, 47.61697], [8.229612, 47.611515], [8.223039, 47.611797], [8.220661, 47.62047], [8.214227, 47.625084], [8.202897, 47.6262], [8.1929655, 47.621307], [8.182895, 47.609837], [8.1766, 47.60886], [8.167229, 47.601025], [8.1575775, 47.599766], [8.147227, 47.600883], [8.139534, 47.59697], [8.136737, 47.590534], [8.127504, 47.588715], [8.111979, 47.589134], [8.106804, 47.587177], [8.1017685, 47.580883], [8.098551, 47.565918], [8.087781, 47.56284], [8.081766, 47.563538], [8.071695, 47.569695], [8.057987, 47.568855], [8.045399, 47.56032], [8.020641, 47.556404], [8.007214, 47.558502], [7.9979815, 47.56256], [7.978539, 47.56102], [7.9582577, 47.56424], [7.9523826, 47.56102], [7.948886, 47.55137], [7.94413, 47.54969], [7.9308424, 47.55319], [7.9209113, 47.55319], [7.9104204, 47.557663], [7.906784, 47.565357], [7.9104204, 47.57305], [7.9093018, 47.578365], [7.9027276, 47.586338], [7.887481, 47.59473], [7.8628635, 47.59501], [7.84468, 47.588997], [7.835588, 47.589134], [7.8323708, 47.592773], [7.819922, 47.59459], [7.812229, 47.5855], [7.808033, 47.57501], [7.797962, 47.568993], [7.7937655, 47.5641], [7.7836947, 47.5606], [7.7704067, 47.559063], [7.7571187, 47.555706], [7.7530627, 47.55193], [7.7200522, 47.549133], [7.6901193, 47.536263], [7.6695576, 47.5371], [7.6610255, 47.54074], [7.6522136, 47.548992], [7.642702, 47.55193], [7.6323514, 47.56242], [7.643961, 47.563118], [7.6543117, 47.567314], [7.666061, 47.567734], [7.6745934, 47.57263], [7.6765513, 47.577106], [7.671656, 47.585358], [7.664522, 47.587036], [7.670537, 47.593193], [7.6387854, 47.59697], [7.618364, 47.58074], [7.6077337, 47.581024], [7.607174, 47.588295], [7.596544, 47.596268], [7.591368, 47.59613], [7.5930467, 47.600883], [7.5743036, 47.615852], [7.56731, 47.631798], [7.5246487, 47.66019], [7.5200324, 47.666206], [7.519753, 47.68341], [7.5120597, 47.69614], [7.513738, 47.702854], [7.5349994, 47.71474], [7.543951, 47.722576], [7.548567, 47.735443], [7.5333204, 47.766075], [7.5302434, 47.78342], [7.5459094, 47.812653], [7.5624146, 47.84105], [7.5633936, 47.85112], [7.5557003, 47.870564], [7.5577984, 47.880913], [7.5776606, 47.8921], [7.5825562, 47.89826], [7.5810175, 47.920776], [7.582696, 47.929867], [7.6033974, 47.948612], [7.6221404, 47.973648], [7.608573, 48.000366], [7.5785, 48.02484], [7.5685687, 48.036312], [7.5733247, 48.059673], [7.569268, 48.080654], [7.575982, 48.09394], [7.5797586, 48.106808], [7.5778008, 48.121357], [7.5989213, 48.135483], [7.599481, 48.155624], [7.613748, 48.169613], [7.629274, 48.18318], [7.641863, 48.20402], [7.6662006, 48.221085], [7.6807475, 48.257313], [7.693896, 48.302074], [7.7050858, 48.309628], [7.7341795, 48.3183], [7.741593, 48.323193], [7.7452297, 48.32977], [7.7435513, 48.340397], [7.736138, 48.362637], [7.7309623, 48.38222], [7.73348, 48.398727], [7.7534823, 48.434673], [7.7662106, 48.463905], [7.76691, 48.486847], [7.771526, 48.492443], [7.7939057, 48.501675], [7.8050957, 48.51356], [7.8055153, 48.55888], [7.8002, 48.583218], [7.8049555, 48.59315], [7.830413, 48.620007], [7.835868, 48.633713], [7.8450994, 48.645462], [7.8810472, 48.658333], [7.896293, 48.667145], [7.9245477, 48.690502], [7.9617543, 48.720295], [7.9677687, 48.72981], [7.9702864, 48.756245], [7.983015, 48.76114], [8.003437, 48.758762], [8.017424, 48.762817], [8.031831, 48.788136], [8.041622, 48.79079], [8.062464, 48.789253], [8.087081, 48.801983], [8.1010685, 48.81583], [8.107363, 48.82842], [8.1214905, 48.864925], [8.141632, 48.89612], [8.168488, 48.92451], [8.197442, 48.957104], [8.226396, 48.964935], [8.229893, 48.968433], [8.241363, 48.968853], [8.268497, 48.984657], [8.295354, 49.0041], [8.3052845, 49.02312], [8.304585, 49.034313], [8.314516, 49.056973], [8.319831, 49.06089], [8.340813, 49.08397], [8.362213, 49.099632], [8.362073, 49.10341], [8.3713045, 49.133484], [8.370465, 49.14845], [8.375502, 49.156002], [8.375361, 49.15978], [8.369487, 49.163277], [8.369067, 49.17069], [8.379278, 49.185936], [8.384733, 49.189854], [8.384033, 49.2009], [8.394943, 49.205097], [8.405294, 49.220345], [8.404875, 49.227757], [8.393684, 49.227337], [8.3876705, 49.23447], [8.392845, 49.242023], [8.403616, 49.24986], [8.436766, 49.262306], [8.447676, 49.27014], [8.452711, 49.28133], [8.458306, 49.285248], [8.469357, 49.289444], [8.480546, 49.289864], [8.486002, 49.293777], [8.491317, 49.30133], [8.485442, 49.308464], [8.473832, 49.31532], [8.456768, 49.318398], [8.450893, 49.32189], [8.450474, 49.3328], [8.461384, 49.340637], [8.472573, 49.344692], [8.494534, 49.360218], [8.499849, 49.37141], [8.499569, 49.378822], [8.504885, 49.386375], [8.49901, 49.393368], [8.48782, 49.389313], [8.47691, 49.377983], [8.46558, 49.377563], [8.464881, 49.39225], [8.492855, 49.404278], [8.49859, 49.40442], [8.498171, 49.41547], [8.5088005, 49.43421], [8.508521, 49.441486], [8.496912, 49.448338], [8.451452, 49.4468], [8.445578, 49.4503], [8.445158, 49.46121], [8.450893, 49.461487], [8.467538, 49.4731], [8.455648, 49.487366], [8.443899, 49.494217], [8.44362, 49.501633], [8.425016, 49.541355], [8.418862, 49.552124], [8.418303, 49.56681], [8.423758, 49.574364], [8.429492, 49.574646], [8.429072, 49.585556], [8.446278, 49.586254], [8.446137, 49.589893], [8.469077, 49.59059], [8.486561, 49.580242], [8.486701, 49.576466], [8.49831, 49.573246], [8.527684, 49.552124], [8.533838, 49.53772], [8.557198, 49.523872], [8.591466, 49.52499], [8.597061, 49.528767], [8.602656, 49.53632], [8.608391, 49.53282], [8.613846, 49.544014], [8.619581, 49.54415], [8.619162, 49.558838], [8.613287, 49.56597], [8.612867, 49.58066], [8.606573, 49.595066], [8.595103, 49.598423], [8.594824, 49.605698], [8.600418, 49.61325], [8.646157, 49.622063], [8.657627, 49.62234], [8.668957, 49.6264], [8.686161, 49.630596], [8.69777, 49.62724], [8.692176, 49.619686], [8.692455, 49.61241], [8.69819, 49.612553], [8.704205, 49.60178], [8.698609, 49.594227], [8.68714, 49.59395], [8.68756, 49.57926], [8.693435, 49.57213], [8.693714, 49.56122], [8.705604, 49.54695], [8.711478, 49.539818], [8.728962, 49.529327], [8.729102, 49.522053], [8.740572, 49.52597], [8.746167, 49.529747], [8.752042, 49.52625], [8.757776, 49.52275], [8.763512, 49.523033], [8.769386, 49.519535], [8.774981, 49.52331], [8.7982, 49.516598], [8.803655, 49.52765], [8.8151245, 49.531563], [8.820999, 49.52807], [8.82128, 49.509743], [8.833029, 49.499115], [8.838763, 49.499252], [8.838623, 49.506527], [8.861703, 49.506947], [8.867437, 49.510723], [8.890516, 49.511143], [8.896392, 49.507645], [8.902126, 49.511284], [8.902546, 49.489464], [8.890936, 49.485687], [8.891076, 49.482048], [8.879606, 49.474495], [8.868137, 49.47072], [8.862402, 49.474216], [8.867997, 49.477993], [8.862123, 49.48876], [8.827713, 49.477154], [8.827993, 49.466244], [8.833728, 49.462746], [8.834147, 49.444424], [8.839882, 49.440926], [8.834288, 49.43715], [8.834427, 49.429874], [8.817083, 49.429596], [8.805753, 49.42568], [8.811627, 49.418545], [8.806033, 49.41477], [8.806033, 49.411133], [8.817642, 49.40414], [8.823378, 49.404278], [8.829112, 49.407917], [8.828972, 49.415188], [8.840442, 49.41547], [8.840582, 49.408195], [8.846316, 49.404697], [8.857786, 49.40498], [8.874851, 49.419804], [8.88632, 49.42358], [8.89779, 49.430996], [8.903245, 49.449318], [8.903106, 49.452953], [8.90912, 49.44582], [8.926464, 49.44596], [8.926325, 49.453236], [8.932059, 49.457012], [8.943668, 49.45715], [8.949404, 49.46079], [8.943389, 49.4717], [8.937514, 49.4717], [8.937374, 49.478973], [8.937374, 49.48261], [8.948704, 49.49366], [8.954579, 49.49016], [8.954439, 49.497437], [8.960174, 49.50485], [8.954299, 49.508347], [8.9832535, 49.508766], [8.983113, 49.516037], [8.988848, 49.516037], [8.994722, 49.508766], [9.017941, 49.509045], [9.017941, 49.50527], [9.046896, 49.505547], [9.046756, 49.51282], [9.058226, 49.516598], [9.058085, 49.52765], [9.063821, 49.52765], [9.0751505, 49.53506], [9.07529, 49.531425], [9.0869, 49.527786], [9.092634, 49.531425], [9.104244, 49.531425], [9.110119, 49.520374], [9.110398, 49.5131], [9.133338, 49.520374], [9.133198, 49.52415], [9.1214485, 49.531425], [9.121308, 49.538837], [9.115574, 49.538837], [9.109699, 49.542473], [9.092355, 49.546112], [9.092215, 49.553524], [9.103684, 49.553524], [9.103684, 49.55716], [9.10928, 49.564575], [9.108999, 49.58304], [9.114735, 49.58304], [9.126344, 49.575623], [9.155158, 49.58304], [9.166628, 49.58304], [9.1725025, 49.579403], [9.189847, 49.579403], [9.201456, 49.575623], [9.212786, 49.57926], [9.235866, 49.57912], [9.2416, 49.58276], [9.258804, 49.586395], [9.258525, 49.593807], [9.270134, 49.593807], [9.275589, 49.608635], [9.292654, 49.61591], [9.286779, 49.619686], [9.286639, 49.62332], [9.280905, 49.627098], [9.2865, 49.630733], [9.280625, 49.63451], [9.28636, 49.63815], [9.292094, 49.63815], [9.297689, 49.64556], [9.309159, 49.64542], [9.3147545, 49.649197], [9.314614, 49.656612], [9.326223, 49.64906], [9.355038, 49.64542], [9.371963, 49.65647], [9.395322, 49.641506], [9.400916, 49.645283], [9.418121, 49.645283], [9.417981, 49.64892], [9.429171, 49.65633], [9.417562, 49.663746], [9.4059515, 49.667522], [9.4059515, 49.671158], [9.417282, 49.674934], [9.417142, 49.67857], [9.422737, 49.682346], [9.433786, 49.693398], [9.428052, 49.697174], [9.427632, 49.712], [9.416023, 49.719414], [9.410288, 49.719414], [9.410148, 49.72683], [9.398539, 49.730465], [9.393084, 49.723053], [9.393643, 49.70459], [9.376578, 49.700813], [9.364969, 49.70459], [9.364689, 49.715637], [9.358954, 49.719414], [9.376019, 49.723053], [9.381614, 49.72683], [9.375739, 49.730465], [9.358674, 49.730465], [9.352799, 49.73424], [9.34147, 49.73424], [9.34147, 49.730465], [9.33014, 49.730606], [9.3242655, 49.73424], [9.307061, 49.738018], [9.312656, 49.741653], [9.324125, 49.737877], [9.335595, 49.741653], [9.335316, 49.74907], [9.323706, 49.75648], [9.323566, 49.767532], [9.36343, 49.767532], [9.380215, 49.77858], [9.397559, 49.767532], [9.403295, 49.767532], [9.431129, 49.786133], [9.448194, 49.786133], [9.454349, 49.77131], [9.471413, 49.76767], [9.487918, 49.78264], [9.487778, 49.786274], [9.510298, 49.786415], [9.521768, 49.779], [9.516452, 49.771587], [9.516732, 49.764175], [9.528202, 49.75676], [9.544847, 49.764313], [9.550442, 49.764313], [9.562051, 49.7569], [9.562611, 49.742073], [9.5738, 49.742073], [9.579255, 49.74585], [9.567646, 49.7569], [9.566807, 49.775642], [9.572262, 49.77928], [9.583452, 49.77942], [9.583591, 49.775784], [9.600376, 49.775925], [9.616881, 49.7797], [9.627932, 49.77984], [9.633387, 49.783615], [9.655626, 49.787533], [9.656186, 49.776344], [9.650452, 49.776344], [9.6510105, 49.765152], [9.656885, 49.761517], [9.640381, 49.750187], [9.65199, 49.742775], [9.646535, 49.739], [9.646955, 49.731583], [9.64164, 49.72403], [9.641919, 49.716618], [9.636464, 49.71284], [9.631568, 49.697876], [9.637163, 49.697876], [9.637444, 49.69046], [9.648773, 49.69046], [9.660522, 49.68305], [9.671852, 49.683186], [9.683042, 49.690742], [9.681923, 49.71312], [9.704863, 49.71326], [9.704722, 49.716896], [9.715773, 49.72445], [9.715912, 49.720673], [9.721787, 49.717037], [9.7224865, 49.702072], [9.734236, 49.694798], [9.734655, 49.683605], [9.74039, 49.683605], [9.757175, 49.691162], [9.756616, 49.706127], [9.78473, 49.717457], [9.790465, 49.717457], [9.79592, 49.721233], [9.801655, 49.721375], [9.802074, 49.71382], [9.813404, 49.71396], [9.813544, 49.710182], [9.825153, 49.706547], [9.836904, 49.699272], [9.843058, 49.688084], [9.843477, 49.677032], [9.837743, 49.67689], [9.832427, 49.665703], [9.832987, 49.65465], [9.838582, 49.65465], [9.839281, 49.639828], [9.856346, 49.639965], [9.862221, 49.63633], [9.8625, 49.628918], [9.874109, 49.621502], [9.868515, 49.617725], [9.880544, 49.60304], [9.869354, 49.599262], [9.858164, 49.59171], [9.846834, 49.59171], [9.847254, 49.58052], [9.852849, 49.58052], [9.853269, 49.56947], [9.836623, 49.55814], [9.825294, 49.55814], [9.825574, 49.550728], [9.837043, 49.54709], [9.848513, 49.54723], [9.848653, 49.543453], [9.865857, 49.539955], [9.871033, 49.551147], [9.876627, 49.554783], [9.870613, 49.562195], [9.881803, 49.569748], [9.881663, 49.573387], [9.898587, 49.577305], [9.904182, 49.58108], [9.9212475, 49.58122], [9.905022, 49.558838], [9.905162, 49.55506], [9.922226, 49.555202], [9.927821, 49.55898], [9.933556, 49.555344], [9.933975, 49.544292], [9.928381, 49.540516], [9.934395, 49.53324], [9.92922, 49.518276], [9.930059, 49.496178], [9.924604, 49.48876], [9.942088, 49.47785], [9.959153, 49.474216], [9.964748, 49.477993], [9.993282, 49.47827], [9.998737, 49.482048], [10.010346, 49.478413], [10.021677, 49.478554], [10.027271, 49.48233], [10.032587, 49.493378], [10.054967, 49.504707], [10.060701, 49.504707], [10.066016, 49.5159], [10.048812, 49.519394], [10.0485325, 49.52681], [10.065457, 49.530586], [10.071052, 49.534363], [10.070772, 49.541775], [10.093712, 49.538277], [10.099866, 49.52723], [10.082941, 49.519676], [10.083221, 49.51226], [10.089096, 49.50499], [10.09469, 49.508766], [10.111755, 49.508904], [10.1291, 49.50527], [10.123645, 49.497856], [10.117909, 49.497856], [10.10672, 49.49044], [10.106999, 49.48303], [10.118469, 49.479393], [10.124623, 49.464703], [10.130499, 49.461067], [10.124904, 49.45743], [10.107839, 49.453514], [10.102524, 49.442463], [10.113994, 49.438828], [10.125463, 49.43897], [10.131198, 49.43533], [10.142668, 49.43547], [10.148822, 49.420784], [10.160571, 49.406097], [10.1608515, 49.398823], [10.172461, 49.391552], [10.155676, 49.38036], [10.1499405, 49.384], [10.127142, 49.383717], [10.115952, 49.376305], [10.127701, 49.365395], [10.122106, 49.357983], [10.133716, 49.354343], [10.133856, 49.34707], [10.116651, 49.350567], [10.111336, 49.33574], [10.12868, 49.32483], [10.12882, 49.321194], [10.140289, 49.321335], [10.14015, 49.32497], [10.15148, 49.32511], [10.157495, 49.3142], [10.140709, 49.30301], [10.140989, 49.29196], [10.152598, 49.284687], [10.158194, 49.284687], [10.162669, 49.279232], [10.158473, 49.273777], [10.152878, 49.273636], [10.153018, 49.266365], [10.141829, 49.258812], [10.136093, 49.258812], [10.130079, 49.269722], [10.119029, 49.254894], [10.141968, 49.251537], [10.136233, 49.24776], [10.136932, 49.218388], [10.148402, 49.21489], [10.148542, 49.207478], [10.137213, 49.207336], [10.131618, 49.199924], [10.137352, 49.196426], [10.160292, 49.19293], [10.166166, 49.189293], [10.1663065, 49.18202], [10.177775, 49.178383], [10.189245, 49.178524], [10.189385, 49.17125], [10.200715, 49.17139], [10.20673, 49.156704], [10.2126045, 49.153065], [10.223794, 49.160618], [10.240999, 49.16076], [10.241138, 49.153347], [10.264218, 49.142574], [10.270232, 49.12803], [10.253168, 49.12411], [10.241838, 49.1167], [10.241978, 49.109425], [10.224773, 49.112923], [10.224914, 49.105507], [10.219318, 49.09446], [10.230788, 49.098236], [10.242397, 49.09096], [10.259602, 49.09124], [10.259882, 49.072918], [10.271352, 49.069283], [10.271491, 49.062008], [10.265757, 49.062008], [10.265897, 49.054596], [10.260161, 49.050957], [10.260441, 49.03991], [10.277506, 49.043686], [10.29485, 49.036552], [10.30632, 49.044106], [10.312055, 49.040466], [10.312195, 49.033054], [10.317929, 49.033195], [10.335274, 49.02606], [10.346603, 49.033474], [10.346744, 49.02984], [10.363948, 49.029976], [10.364088, 49.0227], [10.358493, 49.018925], [10.370102, 49.01179], [10.364508, 49.00438], [10.387446, 49.00452], [10.393321, 49.001022], [10.393461, 48.98997], [10.410806, 48.990112], [10.41668, 48.986614], [10.41668, 48.96815], [10.433605, 48.97179], [10.433465, 48.96074], [10.444655, 48.956963], [10.444655, 48.94955], [10.455845, 48.94941], [10.455845, 48.945774], [10.467035, 48.93836], [10.46144, 48.93458], [10.466895, 48.92717], [10.466895, 48.91612], [10.461161, 48.912483], [10.438781, 48.908985], [10.438641, 48.901573], [10.455565, 48.901432], [10.455565, 48.897797], [10.466755, 48.89402], [10.466616, 48.886604], [10.46102, 48.879192], [10.466616, 48.875557], [10.46088, 48.864506], [10.466616, 48.864365], [10.4664755, 48.857094], [10.46088, 48.853455], [10.438361, 48.84996], [10.438361, 48.838768], [10.455146, 48.83863], [10.460741, 48.834854], [10.460741, 48.823803], [10.455146, 48.820168], [10.455006, 48.809116], [10.443816, 48.805477], [10.443676, 48.79079], [10.438081, 48.79079], [10.438081, 48.78338], [10.421156, 48.776245], [10.426751, 48.765057], [10.437942, 48.76128], [10.437942, 48.757504], [10.426611, 48.75764], [10.426611, 48.75023], [10.432206, 48.75023], [10.443397, 48.742676], [10.449131, 48.742676], [10.454586, 48.731487], [10.465916, 48.735123], [10.477106, 48.723934], [10.477106, 48.71652], [10.488296, 48.71638], [10.488296, 48.70533], [10.493891, 48.690502], [10.482561, 48.679592], [10.471231, 48.67218], [10.460041, 48.672318], [10.460041, 48.668682], [10.426191, 48.66896], [10.420597, 48.665325], [10.415002, 48.672737], [10.431927, 48.6726], [10.431927, 48.683647], [10.4263315, 48.687424], [10.431927, 48.69484], [10.443256, 48.69092], [10.448852, 48.698334], [10.443256, 48.702114], [10.431927, 48.698475], [10.4263315, 48.70225], [10.415142, 48.702393], [10.415142, 48.698616], [10.403812, 48.69134], [10.398217, 48.691483], [10.398077, 48.67302], [10.392482, 48.66938], [10.375558, 48.66952], [10.375558, 48.66211], [10.3698225, 48.65847], [10.358633, 48.65861], [10.358633, 48.67344], [10.347443, 48.69568], [10.330518, 48.69568], [10.324783, 48.688404], [10.307718, 48.695816], [10.290654, 48.706867], [10.279184, 48.710365], [10.27345, 48.70309], [10.279184, 48.699455], [10.279184, 48.69204], [10.26198, 48.684628], [10.27345, 48.677353], [10.26198, 48.673576], [10.2677145, 48.662666], [10.279184, 48.65903], [10.284919, 48.64798], [10.301984, 48.636932], [10.307579, 48.629517], [10.330238, 48.61455], [10.324504, 48.610916], [10.301844, 48.611195], [10.301844, 48.596367], [10.307439, 48.588955], [10.3187685, 48.58518], [10.318629, 48.56294], [10.313034, 48.555664], [10.307299, 48.555664], [10.307299, 48.5372], [10.318489, 48.529648], [10.301564, 48.522514], [10.27331, 48.522793], [10.267575, 48.52657], [10.256245, 48.52671], [10.25065, 48.523075], [10.256245, 48.5193], [10.25051, 48.51566], [10.244915, 48.519436], [10.233585, 48.519436], [10.233585, 48.512024], [10.239321, 48.50839], [10.244915, 48.500835], [10.239321, 48.497196], [10.222535, 48.496918], [10.189106, 48.48139], [10.189106, 48.473976], [10.183511, 48.47384], [10.178056, 48.466286], [10.138751, 48.46167], [10.127562, 48.465164], [10.121826, 48.47244], [10.121686, 48.47985], [10.1104965, 48.48335], [10.099307, 48.475796], [10.093851, 48.468243], [10.065877, 48.463905], [10.037762, 48.46335], [10.037902, 48.455933], [10.043497, 48.452297], [10.032447, 48.444744], [10.032447, 48.440968], [10.0437765, 48.43761], [10.021537, 48.422226], [10.021677, 48.411175], [9.999436, 48.399567], [9.993842, 48.399426], [9.988386, 48.392014], [9.9716015, 48.38418], [9.971882, 48.37313], [9.9832115, 48.365856], [9.988667, 48.37341], [9.999856, 48.36991], [10.000276, 48.351307], [10.011466, 48.347813], [10.011605, 48.340397], [10.022936, 48.329487], [10.02853, 48.329487], [10.02867, 48.322075], [10.04, 48.311165], [10.045735, 48.300114], [10.057065, 48.29662], [10.068395, 48.28557], [10.062799, 48.278015], [10.068534, 48.266964], [10.063079, 48.263187], [10.068674, 48.259552], [10.068814, 48.252], [10.063219, 48.248222], [10.0689535, 48.240807], [10.069094, 48.229618], [10.080284, 48.229897], [10.080423, 48.218708], [10.086019, 48.21493], [10.086298, 48.18514], [10.091893, 48.18528], [10.092033, 48.177727], [10.097628, 48.17031], [10.097768, 48.1629], [10.1090975, 48.136883], [10.120288, 48.129467], [10.120427, 48.122055], [10.137073, 48.11842], [10.137213, 48.107227], [10.142807, 48.103592], [10.142807, 48.092403], [10.137352, 48.092262], [10.137352, 48.081074], [10.142947, 48.08121], [10.143227, 48.05128], [10.126722, 48.03617], [10.137912, 48.02876], [10.137912, 48.021347], [10.121407, 48.010017], [10.121547, 47.998688], [10.115952, 47.991272], [10.116092, 47.979942], [10.1050415, 47.979942], [10.088536, 47.97225], [10.083081, 47.957283], [10.088676, 47.94987], [10.094271, 47.94987], [10.110916, 47.93882], [10.105461, 47.92763], [10.111056, 47.923855], [10.111056, 47.912663], [10.100006, 47.908886], [10.100146, 47.901333], [10.105741, 47.89392], [10.105741, 47.882732], [10.100286, 47.87518], [10.089235, 47.871403], [10.078186, 47.87126], [10.08378, 47.860073], [10.105881, 47.867764], [10.105881, 47.86035], [10.0893755, 47.849022], [10.094971, 47.845245], [10.105881, 47.856575], [10.111476, 47.849163], [10.106021, 47.84161], [10.11707, 47.83056], [10.133716, 47.823143], [10.12812, 47.81559]]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Bayern',
      type: 'Land',
      area: '70,550.19 km²',
      bundesratVotes: '9 (out of 69)',
      density: '185/km²',
      timeZone: 'UTC+1 (CET)',
      population: 13076721,
      capital: 'Munich',
      government: 'Body Landtag of Bavaria',
      head: 'Markus Söder (CSU – Christian Social Union of Bavaria)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[11.927737, 50.426895], [11.933332, 50.42312], [11.939207, 50.426895], [11.955992, 50.41193], [11.955712, 50.408154], [11.9496975, 50.40088], [11.955293, 50.397102], [11.955572, 50.40088], [11.972917, 50.40088], [11.972497, 50.397102], [11.983827, 50.393467], [11.983268, 50.38228], [11.988723, 50.3785], [11.982429, 50.371086], [11.982148, 50.363674], [11.975854, 50.35612], [11.981309, 50.352486], [11.992919, 50.35612], [11.998514, 50.352486], [12.015299, 50.348846], [12.020614, 50.34507], [12.031943, 50.34521], [12.031244, 50.33416], [12.042714, 50.337936], [12.042435, 50.33416], [12.053904, 50.33416], [12.054044, 50.337795], [12.065233, 50.337936], [12.070689, 50.33416], [12.087474, 50.3343], [12.0871935, 50.33066], [12.1035595, 50.319473], [12.109294, 50.31975], [12.119644, 50.31276], [12.12496, 50.31318], [12.129576, 50.286324], [12.137129, 50.282127], [12.125659, 50.274433], [12.108734, 50.274296], [12.0974045, 50.266743], [12.097265, 50.25919], [12.101741, 50.24338], [12.115728, 50.244503], [12.117267, 50.23555], [12.131114, 50.23653], [12.131953, 50.23205], [12.145801, 50.233173], [12.14664, 50.228695], [12.160488, 50.229675], [12.162586, 50.217926], [12.170698, 50.218063], [12.176434, 50.21051], [12.182029, 50.21065], [12.187623, 50.2045], [12.187623, 50.19932], [12.193358, 50.195545], [12.198953, 50.195686], [12.198953, 50.184216], [12.204548, 50.18044], [12.204688, 50.172745], [12.210283, 50.172886], [12.210283, 50.16519], [12.198953, 50.1575], [12.198953, 50.14995], [12.193358, 50.14603], [12.193358, 50.127007], [12.199093, 50.12323], [12.199093, 50.11176], [12.2104225, 50.104206], [12.221752, 50.108124], [12.22427, 50.102947], [12.231264, 50.103508], [12.232383, 50.096653], [12.238817, 50.10057], [12.244412, 50.10057], [12.244412, 50.095394], [12.253504, 50.096096], [12.254343, 50.091618], [12.261197, 50.09218], [12.262735, 50.083225], [12.26973, 50.083645], [12.272667, 50.078053], [12.261617, 50.07008], [12.2560215, 50.062244], [12.274485, 50.061405], [12.278821, 50.05861], [12.288053, 50.05791], [12.315748, 50.059868], [12.316587, 50.055393], [12.323441, 50.05595], [12.325679, 50.042522], [12.332672, 50.042942], [12.333372, 50.038467], [12.339806, 50.041965], [12.347219, 50.039585], [12.347219, 50.031895], [12.358689, 50.027977], [12.364424, 50.0242], [12.364424, 50.020424], [12.375894, 50.020283], [12.375894, 50.016506], [12.400231, 50.016228], [12.400931, 50.01175], [12.407784, 50.01217], [12.408484, 50.008533], [12.422471, 50.008812], [12.423171, 50.004337], [12.437018, 50.005318], [12.438557, 49.996365], [12.431563, 49.995804], [12.432262, 49.99133], [12.444431, 49.99217], [12.450866, 49.996223], [12.46835, 49.995945], [12.46821, 49.989372], [12.474504, 49.98993], [12.475344, 49.985455], [12.489191, 49.986435], [12.497304, 49.976223], [12.491989, 49.96923], [12.492828, 49.964054], [12.485834, 49.963493], [12.486534, 49.95902], [12.472826, 49.95804], [12.475623, 49.940136], [12.482617, 49.940556], [12.483316, 49.9365], [12.49115, 49.938877], [12.499962, 49.932724], [12.511711, 49.933563], [12.51241, 49.929085], [12.533252, 49.930626], [12.533951, 49.92629], [12.547798, 49.927128], [12.551295, 49.904747], [12.544441, 49.904186], [12.54584, 49.895237], [12.531993, 49.894257], [12.532832, 49.889782], [12.525838, 49.889362], [12.526538, 49.884884], [12.519684, 49.884327], [12.521922, 49.8709], [12.516327, 49.861385], [12.502619, 49.86041], [12.5015, 49.838867], [12.489891, 49.839146], [12.484296, 49.842922], [12.472547, 49.83579], [12.478281, 49.832012], [12.478141, 49.817326], [12.46821, 49.81369], [12.472127, 49.79033], [12.465133, 49.789772], [12.465972, 49.785294], [12.452125, 49.784317], [12.452825, 49.77984], [12.447369, 49.77942], [12.408764, 49.766132], [12.407505, 49.75844], [12.402889, 49.755222], [12.408624, 49.751446], [12.410442, 49.740395], [12.419814, 49.736618], [12.419814, 49.732983], [12.431284, 49.73284], [12.43548, 49.71508], [12.442333, 49.715637], [12.443732, 49.706966], [12.450726, 49.707108], [12.451285, 49.70319], [12.465133, 49.70361], [12.487233, 49.696198], [12.487932, 49.69186], [12.494926, 49.69214], [12.499262, 49.688084], [12.516606, 49.6892], [12.522342, 49.69158], [12.527797, 49.687805], [12.527516, 49.676754], [12.532971, 49.672977], [12.532692, 49.66556], [12.527516, 49.662346], [12.528915, 49.653812], [12.522061, 49.653393], [12.520383, 49.64724], [12.531713, 49.643463], [12.531433, 49.639687], [12.525418, 49.632412], [12.536609, 49.628498], [12.5364685, 49.62486], [12.564863, 49.62444], [12.558848, 49.61717], [12.569899, 49.609615], [12.569339, 49.598564], [12.580389, 49.59101], [12.574794, 49.58402], [12.576053, 49.575623], [12.573955, 49.572685], [12.57941, 49.56891], [12.57913, 49.561497], [12.584585, 49.55772], [12.588082, 49.544014], [12.595495, 49.540794], [12.596195, 49.53632], [12.628925, 49.531284], [12.63466, 49.53492], [12.64585, 49.531006], [12.645011, 49.508904], [12.642353, 49.507366], [12.64585, 49.485405], [12.638996, 49.484985], [12.638157, 49.479393], [12.647948, 49.471977], [12.649347, 49.463024], [12.654102, 49.463444], [12.659838, 49.453236], [12.659418, 49.442745], [12.661097, 49.432114], [12.66795, 49.432674], [12.66865, 49.428196], [12.682357, 49.429176], [12.683057, 49.4247], [12.710332, 49.42666], [12.711731, 49.41757], [12.718584, 49.418125], [12.719284, 49.41365], [12.726138, 49.41407], [12.726837, 49.409595], [12.740544, 49.410572], [12.741244, 49.406097], [12.748097, 49.40666], [12.759707, 49.400364], [12.759008, 49.38176], [12.769918, 49.37057], [12.775653, 49.37057], [12.782367, 49.363716], [12.784045, 49.351967], [12.803208, 49.347908], [12.848248, 49.34749], [12.876362, 49.33588], [12.882656, 49.339516], [12.881397, 49.34749], [12.876781, 49.354485], [12.906015, 49.353504], [12.91175, 49.349586], [12.929375, 49.34903], [12.935109, 49.34511], [12.940984, 49.34497], [12.941124, 49.34861], [12.952873, 49.348328], [12.958468, 49.340775], [12.970218, 49.340355], [12.975952, 49.33644], [12.975813, 49.3328], [12.981547, 49.328888], [12.993156, 49.32847], [12.992877, 49.321053], [12.998752, 49.320915], [12.998611, 49.31714], [13.010362, 49.316856], [13.010081, 49.309444], [13.033581, 49.308605], [13.032601, 49.28273], [13.037916, 49.26776], [13.061416, 49.266922], [13.060996, 49.255875], [13.0667305, 49.251957], [13.072605, 49.251816], [13.072465, 49.24804], [13.09009, 49.24748], [13.095824, 49.243565], [13.095405, 49.232513], [13.091628, 49.232655], [13.092467, 49.22636], [13.099321, 49.22678], [13.10002, 49.2223], [13.106734, 49.22272], [13.107433, 49.218246], [13.114287, 49.218666], [13.117505, 49.196285], [13.131212, 49.197266], [13.131772, 49.19279], [13.138626, 49.19321], [13.139325, 49.188732], [13.146039, 49.18915], [13.147438, 49.180202], [13.154152, 49.180622], [13.154851, 49.176144], [13.161705, 49.176563], [13.162264, 49.17209], [13.175972, 49.17307], [13.186043, 49.166775], [13.186183, 49.155445], [13.180448, 49.151806], [13.180168, 49.144394], [13.191638, 49.1367], [13.208842, 49.128727], [13.214297, 49.121174], [13.219752, 49.121033], [13.24409, 49.11404], [13.259756, 49.115158], [13.263113, 49.120613], [13.286332, 49.121452], [13.295844, 49.120193], [13.317524, 49.10495], [13.323119, 49.10495], [13.33389, 49.097256], [13.339345, 49.097256], [13.355431, 49.085926], [13.35529, 49.08215], [13.36606, 49.074596], [13.37697, 49.07068], [13.382006, 49.05963], [13.398372, 49.055573], [13.403687, 49.051796], [13.4029875, 49.03711], [13.408302, 49.033333], [13.407184, 49.011093], [13.412779, 49.011093], [13.406764, 48.996548], [13.406064, 48.985355], [13.409001, 48.9799], [13.422569, 48.98074], [13.423828, 48.97179], [13.437396, 48.97263], [13.438096, 48.96815], [13.44481, 48.96857], [13.445369, 48.964096], [13.458937, 48.964935], [13.459636, 48.96046], [13.466351, 48.96088], [13.467609, 48.951927], [13.481176, 48.952766], [13.481736, 48.94829], [13.48859, 48.94871], [13.489149, 48.944233], [13.496003, 48.944653], [13.496563, 48.940178], [13.503417, 48.940598], [13.503417, 48.945072], [13.509571, 48.94549], [13.510131, 48.96815], [13.540343, 48.97011], [13.541042, 48.965633], [13.58846, 48.96857], [13.589159, 48.964096], [13.595873, 48.964516], [13.598111, 48.94773], [13.604266, 48.94689], [13.614616, 48.950947], [13.631262, 48.950527], [13.624967, 48.93976], [13.630142, 48.932205], [13.634619, 48.930668], [13.635458, 48.92451], [13.6432905, 48.91668], [13.645948, 48.908844], [13.652942, 48.8957], [13.66651, 48.896538], [13.667489, 48.888844], [13.671266, 48.88311], [13.693505, 48.88255], [13.702177, 48.885067], [13.704695, 48.88213], [13.723019, 48.88185], [13.722459, 48.886326], [13.732949, 48.888844], [13.73239, 48.88143], [13.737145, 48.878212], [13.7439995, 48.87863], [13.745539, 48.874157], [13.751273, 48.874577], [13.75421, 48.85206], [13.761065, 48.852478], [13.762743, 48.83905], [13.769597, 48.83947], [13.770156, 48.834854], [13.77687, 48.835274], [13.77757, 48.830795], [13.790018, 48.831635], [13.789458, 48.824364], [13.794774, 48.820587], [13.788899, 48.816948], [13.81002, 48.801563], [13.81044, 48.787575], [13.803586, 48.787155], [13.804146, 48.78268], [13.810999, 48.7831], [13.811978, 48.775684], [13.8358965, 48.774986], [13.833798, 48.767292], [13.823588, 48.76072], [13.817993, 48.76002], [13.817433, 48.753586], [13.81044, 48.7354], [13.787081, 48.721554], [13.786801, 48.71792], [13.802887, 48.709946], [13.802607, 48.70631], [13.814496, 48.702812], [13.815755, 48.69484], [13.812398, 48.68197], [13.816315, 48.67078], [13.816315, 48.66029], [13.81016, 48.653854], [13.819531, 48.6484], [13.825686, 48.641266], [13.825826, 48.633854], [13.820091, 48.630775], [13.818832, 48.61763], [13.811139, 48.60322], [13.801348, 48.596786], [13.80988, 48.59091], [13.802187, 48.576923], [13.789878, 48.575947], [13.780507, 48.57175], [13.763302, 48.55678], [13.757847, 48.567135], [13.750854, 48.5621], [13.749035, 48.557064], [13.751833, 48.55161], [13.742461, 48.54895], [13.742321, 48.543217], [13.746098, 48.535522], [13.740084, 48.52895], [13.731971, 48.529926], [13.728614, 48.522793], [13.721061, 48.51678], [13.700918, 48.522655], [13.690988, 48.52713], [13.661614, 48.53804], [13.652522, 48.55105], [13.631541, 48.5607], [13.62161, 48.56084], [13.611679, 48.566994], [13.601888, 48.57063], [13.594475, 48.576084], [13.583565, 48.576366], [13.57741, 48.565456], [13.567199, 48.565594], [13.556009, 48.57119], [13.5561495, 48.573288], [13.545519, 48.577206], [13.519503, 48.59623], [13.503137, 48.596508], [13.502018, 48.578045], [13.496563, 48.578182], [13.484953, 48.567413], [13.474323, 48.57133], [13.473904, 48.563915], [13.468168, 48.56028], [13.457258, 48.56056], [13.447047, 48.571888], [13.441173, 48.564617], [13.435718, 48.564617], [13.435019, 48.553566], [13.450685, 48.542236], [13.445089, 48.5386], [13.44439, 48.52755], [13.449845, 48.52741], [13.454741, 48.519997], [13.435997, 48.488804], [13.425227, 48.463627], [13.423689, 48.457752], [13.4336195, 48.447403], [13.437676, 48.43635], [13.436697, 48.42936], [13.427185, 48.41719], [13.4186535, 48.39537], [13.420192, 48.391594], [13.416695, 48.38418], [13.410681, 48.377747], [13.368578, 48.355785], [13.359906, 48.34963], [13.348017, 48.33816], [13.322559, 48.322636], [13.297942, 48.309906], [13.272764, 48.300953], [13.247168, 48.2962], [13.235139, 48.29746], [13.197792, 48.298996], [13.184784, 48.298576], [13.141283, 48.28557], [13.129534, 48.28375], [13.102678, 48.28431], [13.031902, 48.264168], [13.020852, 48.26039], [12.986303, 48.233955], [12.979869, 48.2306], [12.974414, 48.224022], [12.963223, 48.21689], [12.9463, 48.217308], [12.9190235, 48.212975], [12.90098, 48.207237], [12.882517, 48.20752], [12.86825, 48.2036], [12.8679695, 48.19535], [12.85622, 48.1843], [12.855941, 48.176746], [12.838876, 48.169334], [12.838596, 48.16192], [12.824189, 48.156605], [12.816776, 48.155907], [12.803488, 48.15157], [12.797053, 48.146812], [12.797473, 48.1415], [12.787123, 48.12849], [12.7760725, 48.135902], [12.764883, 48.135902], [12.764463, 48.124714], [12.752994, 48.1173], [12.758169, 48.10611], [12.757609, 48.087646], [12.768379, 48.080093], [12.773695, 48.07268], [12.811741, 48.0503], [12.838596, 48.035473], [12.848947, 48.024284], [12.859717, 48.020508], [12.864333, 48.00554], [12.864054, 47.99827], [12.873984, 47.979523], [12.873565, 47.97211], [12.87902, 47.97197], [12.881258, 47.96106], [12.91147, 47.95896], [12.918884, 47.954628], [12.918324, 47.944138], [12.922101, 47.93994], [12.935669, 47.945396], [12.94546, 47.925114], [12.950635, 47.919518], [12.959727, 47.914204], [12.955531, 47.910564], [12.966721, 47.896297], [12.977072, 47.88077], [12.991058, 47.86273], [13.00113, 47.852238], [12.98994, 47.842308], [12.977351, 47.82664], [12.981967, 47.821884], [12.965741, 47.80258], [12.957629, 47.798107], [12.947418, 47.78692], [12.937627, 47.78552], [12.949376, 47.77503], [12.946439, 47.769993], [12.931192, 47.753067], [12.9237795, 47.75335], [12.920982, 47.746216], [12.91133, 47.731247], [12.920702, 47.727192], [12.930773, 47.71894], [12.941124, 47.71838], [12.951474, 47.721596], [12.95651, 47.713764], [12.985324, 47.712223], [13.003927, 47.71978], [13.009662, 47.72985], [13.015257, 47.72971], [13.032182, 47.72146], [13.043511, 47.72104], [13.043511, 47.71712], [13.049246, 47.71698], [13.054702, 47.706768], [13.062954, 47.699356], [13.081557, 47.691383], [13.07806, 47.67166], [13.091628, 47.655994], [13.093166, 47.649563], [13.105616, 47.63921], [13.096663, 47.62844], [13.087992, 47.62942], [13.071206, 47.614735], [13.066031, 47.60746], [13.066871, 47.601864], [13.076522, 47.59501], [13.076382, 47.587456], [13.059318, 47.588158], [13.047848, 47.5848], [13.047848, 47.577248], [13.053303, 47.565636], [13.064773, 47.565216], [13.059037, 47.557945], [13.047428, 47.55081], [13.047428, 47.547035], [13.036378, 47.536545], [13.048687, 47.52661], [13.048547, 47.51696], [13.053303, 47.51696], [13.053722, 47.49486], [13.035958, 47.48381], [13.024069, 47.480175], [13.024209, 47.47276], [13.013438, 47.465767], [13.0102215, 47.469963], [13.004626, 47.468704], [12.995814, 47.480873], [12.984625, 47.48479], [12.979309, 47.476955], [12.969798, 47.477097], [12.960846, 47.480175], [12.937207, 47.490944], [12.918604, 47.49668], [12.913009, 47.49668], [12.89049, 47.51654], [12.890349, 47.52046], [12.884754, 47.524376], [12.86825, 47.52843], [12.8572, 47.52829], [12.851604, 47.53235], [12.851604, 47.548573], [12.84587, 47.55235], [12.832861, 47.54941], [12.813279, 47.553047], [12.799851, 47.56144], [12.792158, 47.57235], [12.781248, 47.58158], [12.797053, 47.598927], [12.794676, 47.601864], [12.798872, 47.606762], [12.811741, 47.612354], [12.823071, 47.612217], [12.826707, 47.616272], [12.803488, 47.626904], [12.794816, 47.632637], [12.7895, 47.63879], [12.781808, 47.637394], [12.771037, 47.645084], [12.764603, 47.657673], [12.77915, 47.66215], [12.786004, 47.67278], [12.782786, 47.675858], [12.770058, 47.667187], [12.760966, 47.665367], [12.752294, 47.67432], [12.736629, 47.68215], [12.725718, 47.68285], [12.702219, 47.681454], [12.6943865, 47.68467], [12.6739645, 47.68481], [12.657879, 47.678097], [12.652984, 47.67418], [12.636758, 47.676556], [12.627666, 47.68299], [12.617736, 47.676697], [12.605287, 47.679214], [12.592978, 47.66145], [12.5773115, 47.634457], [12.532413, 47.63893], [12.520663, 47.631798], [12.506116, 47.62886], [12.497724, 47.632496], [12.486254, 47.646484], [12.466672, 47.65418], [12.462336, 47.663548], [12.453664, 47.67292], [12.440235, 47.681313], [12.440096, 47.696697], [12.4359, 47.700756], [12.419534, 47.698795], [12.396035, 47.69292], [12.365542, 47.686348], [12.356591, 47.69208], [12.345681, 47.688168], [12.340506, 47.69558], [12.329735, 47.69544], [12.28064, 47.68383], [12.275185, 47.676277], [12.258819, 47.676277], [12.258819, 47.679913], [12.248049, 47.687466], [12.253783, 47.709988], [12.259378, 47.713764], [12.270569, 47.72873], [12.265253, 47.736282], [12.254343, 47.74006], [12.243154, 47.72873], [12.231963, 47.713764], [12.209864, 47.70257], [12.198813, 47.70649], [12.193358, 47.698936], [12.174475, 47.699078], [12.175594, 47.687607], [12.179231, 47.68117], [12.192658, 47.67264], [12.205247, 47.65418], [12.208605, 47.641308], [12.216578, 47.624523], [12.220913, 47.609978], [12.209444, 47.6048], [12.209304, 47.601166], [12.187484, 47.601303], [12.187484, 47.60872], [12.170979, 47.60886], [12.165524, 47.60522], [12.154473, 47.605362], [12.149018, 47.601723], [12.137968, 47.601864], [12.126918, 47.60564], [12.088313, 47.60606], [12.071808, 47.613754], [12.055303, 47.610256], [12.038797, 47.614033], [12.038797, 47.60662], [12.027747, 47.606762], [12.016837, 47.61809], [11.994738, 47.61823], [11.983687, 47.61096], [11.972777, 47.614735], [11.961727, 47.611237], [11.939627, 47.60774], [11.923121, 47.611656], [11.912072, 47.60438], [11.901022, 47.60438], [11.8734665, 47.59739], [11.862416, 47.597527], [11.856822, 47.579063], [11.834862, 47.579346], [11.834862, 47.58298], [11.8183565, 47.579483], [11.8183565, 47.583122], [11.796256, 47.5834], [11.790801, 47.587177], [11.779192, 47.587177], [11.7775135, 47.59487], [11.743104, 47.591232], [11.719746, 47.592213], [11.696527, 47.588436], [11.667712, 47.586338], [11.647011, 47.59823], [11.63638, 47.59823], [11.632604, 47.594032], [11.62533, 47.577805], [11.614281, 47.577946], [11.608826, 47.57067], [11.608826, 47.56326], [11.60323, 47.56326], [11.5930195, 47.55291], [11.593859, 47.532906], [11.597635, 47.522697], [11.580991, 47.515564], [11.580991, 47.511787], [11.559031, 47.512066], [11.553435, 47.50843], [11.52588, 47.50871], [11.51483, 47.501434], [11.509375, 47.50521], [11.487275, 47.50913], [11.4650345, 47.50563], [11.453985, 47.50577], [11.44853, 47.516823], [11.43734, 47.513325], [11.42629, 47.505913], [11.420695, 47.49864], [11.404749, 47.48647], [11.396077, 47.483532], [11.387964, 47.47192], [11.398455, 47.46549], [11.413841, 47.46549], [11.420975, 47.454716], [11.424052, 47.445625], [11.383628, 47.45178], [11.375795, 47.44926], [11.341666, 47.45178], [11.335093, 47.44367], [11.324462, 47.436115], [11.31453, 47.432617], [11.293829, 47.43024], [11.296766, 47.41094], [11.290752, 47.402824], [11.290612, 47.39877], [11.285017, 47.39485], [11.273967, 47.391075], [11.257322, 47.394993], [11.240677, 47.391216], [11.224173, 47.391216], [11.224173, 47.39527], [11.2356415, 47.403244], [11.235782, 47.40716], [11.241516, 47.415134], [11.2574625, 47.42618], [11.245993, 47.434715], [11.217598, 47.432198], [11.201093, 47.432896], [11.187245, 47.4294], [11.176895, 47.42828], [11.151158, 47.423527], [11.123743, 47.410797], [11.118708, 47.399746], [11.097306, 47.39569], [11.074926, 47.39723], [11.043455, 47.394993], [11.023173, 47.39625], [11.014641, 47.400726], [11.004011, 47.39639], [10.987366, 47.394993], [10.977574, 47.39611], [10.968622, 47.399326], [10.964846, 47.40604], [10.9661045, 47.409958], [10.973099, 47.409958], [10.978694, 47.414013], [10.978554, 47.422127], [10.949739, 47.44199], [10.9496, 47.446045], [10.92722, 47.46213], [10.921905, 47.46213], [10.921485, 47.470104], [10.926661, 47.47402], [10.92652, 47.478077], [10.910435, 47.478214], [10.9102955, 47.482132], [10.899805, 47.482132], [10.889454, 47.478077], [10.878963, 47.478077], [10.878963, 47.47416], [10.868333, 47.47416], [10.863018, 47.478077], [10.862878, 47.48563], [10.870431, 47.501995], [10.888755, 47.50563], [10.903301, 47.511646], [10.918548, 47.51612], [10.909037, 47.521297], [10.900644, 47.5185], [10.897707, 47.52018], [10.88316, 47.538082], [10.872529, 47.53878], [10.845254, 47.535843], [10.837561, 47.52969], [10.826371, 47.531788], [10.813223, 47.528572], [10.805949, 47.522556], [10.791542, 47.52186], [10.77196, 47.51612], [10.759511, 47.522697], [10.76035, 47.532906], [10.746363, 47.53934], [10.736432, 47.54032], [10.712934, 47.54018], [10.707618, 47.545216], [10.691393, 47.545776], [10.691532, 47.553047], [10.686217, 47.56018], [10.675447, 47.56102], [10.626911, 47.56172], [10.621595, 47.569412], [10.5999155, 47.56983], [10.579634, 47.555984], [10.575297, 47.54158], [10.569003, 47.535843], [10.56145, 47.535984], [10.56145, 47.53976], [10.523544, 47.54046], [10.491094, 47.544937], [10.475147, 47.556824], [10.464237, 47.557106], [10.453467, 47.56102], [10.468433, 47.57277], [10.467035, 47.579903], [10.4773855, 47.58396], [10.477665, 47.588577], [10.458363, 47.5855], [10.432206, 47.5855], [10.433465, 47.57207], [10.440459, 47.568714], [10.451789, 47.557526], [10.439759, 47.536682], [10.436402, 47.526894], [10.439759, 47.51696], [10.4310875, 47.506752], [10.433186, 47.497658], [10.4385, 47.488148], [10.451928, 47.48731], [10.458503, 47.48423], [10.467875, 47.47164], [10.464237, 47.46241], [10.467035, 47.446465], [10.471511, 47.433037], [10.456405, 47.42898], [10.453048, 47.420727], [10.445774, 47.41611], [10.435843, 47.415413], [10.422975, 47.390514], [10.42815, 47.382683], [10.417379, 47.38282], [10.40633, 47.375267], [10.389964, 47.37541], [10.38437, 47.367714], [10.386328, 47.359604], [10.378634, 47.35233], [10.374299, 47.35233], [10.362129, 47.34086], [10.35108, 47.333305], [10.35094, 47.32939], [10.344086, 47.323795], [10.344365, 47.31834], [10.323245, 47.302536], [10.306879, 47.302814], [10.295969, 47.29526], [10.285059, 47.295403], [10.285199, 47.291763], [10.274709, 47.284492], [10.263239, 47.288128], [10.2527485, 47.280853], [10.236383, 47.277218], [10.236803, 47.27358], [10.226032, 47.269802], [10.214423, 47.27358], [10.203373, 47.27358], [10.197498, 47.277355], [10.1812725, 47.269943], [10.170222, 47.269943], [10.170642, 47.292465], [10.181553, 47.292603], [10.192463, 47.29652], [10.203512, 47.304073], [10.209107, 47.311768], [10.203932, 47.323097], [10.198477, 47.323097], [10.198057, 47.330788], [10.226172, 47.368694], [10.231767, 47.37247], [10.231767, 47.3838], [10.2268715, 47.392895], [10.209807, 47.379604], [10.193441, 47.386597], [10.193302, 47.390377], [10.178475, 47.39345], [10.167425, 47.3859], [10.166026, 47.37107], [10.160711, 47.367294], [10.133575, 47.366737], [10.117351, 47.37387], [10.095949, 47.354847], [10.09623, 47.358482], [10.080704, 47.391636], [10.08434, 47.39597], [10.080843, 47.404503], [10.068814, 47.411636], [10.07301, 47.414574], [10.089516, 47.414715], [10.0948305, 47.41849], [10.094971, 47.423386], [10.100845, 47.431637], [10.093292, 47.441288], [10.088536, 47.45066], [10.090775, 47.456535], [10.082941, 47.459473], [10.077626, 47.455696], [10.066576, 47.455696], [10.066576, 47.459473], [10.055387, 47.466885], [10.049932, 47.466885], [10.049651, 47.478077], [10.043917, 47.489265], [10.033706, 47.491783], [10.011186, 47.48689], [9.997338, 47.486187], [9.990066, 47.499336], [9.992164, 47.50689], [9.9723015, 47.515564], [9.961251, 47.522976], [9.966566, 47.526752], [9.960971, 47.534306], [9.944746, 47.53892], [9.935934, 47.537804], [9.9205475, 47.53193], [9.912715, 47.534866], [9.90614, 47.54186], [9.906001, 47.545635], [9.880963, 47.548573], [9.876627, 47.542], [9.87369, 47.53067], [9.85159, 47.538223], [9.848932, 47.54326], [9.836623, 47.544655], [9.813125, 47.55081], [9.8238945, 47.563118], [9.8183, 47.57165], [9.823195, 47.578087], [9.822636, 47.58522], [9.801516, 47.597107], [9.77424, 47.59683], [9.76347, 47.589275], [9.747244, 47.57417], [9.747384, 47.559063], [9.732278, 47.545357], [9.723605, 47.55025], [9.714653, 47.55179], [9.703883, 47.55025], [9.695071, 47.543957], [9.687238, 47.558083], [9.668635, 47.557384], [9.656885, 47.55976], [9.648633, 47.567314], [9.639401, 47.568016], [9.634366, 47.571793], [9.622756, 47.570953], [9.6163225, 47.57459], [9.611986, 47.581303], [9.621218, 47.586197], [9.626533, 47.594032], [9.643038, 47.59431], [9.637303, 47.6055], [9.653809, 47.60592], [9.659123, 47.613476], [9.670033, 47.613613], [9.675629, 47.606342], [9.681084, 47.60648], [9.6918545, 47.614033], [9.691994, 47.60662], [9.697449, 47.606762], [9.708499, 47.603123], [9.71927, 47.610817], [9.73018, 47.61096], [9.746545, 47.61865], [9.74109, 47.614735], [9.741229, 47.60746], [9.757595, 47.611378], [9.752, 47.615013], [9.76291, 47.61879], [9.784591, 47.633896], [9.795361, 47.637672], [9.800816, 47.645226], [9.800676, 47.652637], [9.817041, 47.65278], [9.822356, 47.66033], [9.827811, 47.66033], [9.833127, 47.67152], [9.827672, 47.67516], [9.844037, 47.679073], [9.860402, 47.679214], [9.876907, 47.67558], [9.882503, 47.668304], [9.893413, 47.66467], [9.915373, 47.664806], [9.915373, 47.66103], [9.926283, 47.657394], [9.931738, 47.657394], [9.937193, 47.66117], [9.942648, 47.657536], [9.964468, 47.65376], [9.964468, 47.657536], [9.975378, 47.657536], [9.975239, 47.668724], [9.980694, 47.668724], [9.986149, 47.676277], [9.996919, 47.68369], [10.002374, 47.68369], [10.024055, 47.691105], [10.02951, 47.68369], [10.024055, 47.679913], [10.02951, 47.676136], [10.04042, 47.676136], [10.045735, 47.679913], [10.056785, 47.68369], [10.0621, 47.676136], [10.0621, 47.664806], [10.07301, 47.66117], [10.067555, 47.6497], [10.067555, 47.64229], [10.07301, 47.63851], [10.07287, 47.64229], [10.078465, 47.64984], [10.078465, 47.657394], [10.09511, 47.668865], [10.111896, 47.669285], [10.117351, 47.67306], [10.12854, 47.676975], [10.128401, 47.688168], [10.122806, 47.691803], [10.133995, 47.699497], [10.13945, 47.70705], [10.128401, 47.70691], [10.122806, 47.71432], [10.111755, 47.721737], [10.111755, 47.725513], [10.117351, 47.72929], [10.117351, 47.736843], [10.111755, 47.736843], [10.111755, 47.744255], [10.117351, 47.755585], [10.111755, 47.763138], [10.078745, 47.774048], [10.0842, 47.777824], [10.078745, 47.78524], [10.073151, 47.78524], [10.073151, 47.792652], [10.089655, 47.800346], [10.089655, 47.80776], [10.100705, 47.804123], [10.11721, 47.80426], [10.11721, 47.81559], [10.12812, 47.81559], [10.133716, 47.823143], [10.11707, 47.83056], [10.106021, 47.84161], [10.111476, 47.849163], [10.105881, 47.856575], [10.094971, 47.845245], [10.0893755, 47.849022], [10.105881, 47.86035], [10.105881, 47.867764], [10.08378, 47.860073], [10.078186, 47.87126], [10.089235, 47.871403], [10.100286, 47.87518], [10.105741, 47.882732], [10.105741, 47.89392], [10.100146, 47.901333], [10.100006, 47.908886], [10.111056, 47.912663], [10.111056, 47.923855], [10.105461, 47.92763], [10.110916, 47.93882], [10.094271, 47.94987], [10.088676, 47.94987], [10.083081, 47.957283], [10.088536, 47.97225], [10.1050415, 47.979942], [10.116092, 47.979942], [10.115952, 47.991272], [10.121547, 47.998688], [10.121407, 48.010017], [10.137912, 48.021347], [10.137912, 48.02876], [10.126722, 48.03617], [10.143227, 48.05128], [10.142947, 48.08121], [10.137352, 48.081074], [10.137352, 48.092262], [10.142807, 48.092403], [10.142807, 48.103592], [10.137213, 48.107227], [10.137073, 48.11842], [10.120427, 48.122055], [10.120288, 48.129467], [10.1090975, 48.136883], [10.097768, 48.1629], [10.097628, 48.17031], [10.092033, 48.177727], [10.091893, 48.18528], [10.086298, 48.18514], [10.086019, 48.21493], [10.080423, 48.218708], [10.080284, 48.229897], [10.069094, 48.229618], [10.0689535, 48.240807], [10.063219, 48.248222], [10.068814, 48.252], [10.068674, 48.259552], [10.063079, 48.263187], [10.068534, 48.266964], [10.062799, 48.278015], [10.068395, 48.28557], [10.057065, 48.29662], [10.045735, 48.300114], [10.04, 48.311165], [10.02867, 48.322075], [10.02853, 48.329487], [10.022936, 48.329487], [10.011605, 48.340397], [10.011466, 48.347813], [10.000276, 48.351307], [9.999856, 48.36991], [9.988667, 48.37341], [9.9832115, 48.365856], [9.971882, 48.37313], [9.9716015, 48.38418], [9.988386, 48.392014], [9.993842, 48.399426], [9.999436, 48.399567], [10.021677, 48.411175], [10.021537, 48.422226], [10.0437765, 48.43761], [10.032447, 48.440968], [10.032447, 48.444744], [10.043497, 48.452297], [10.037902, 48.455933], [10.037762, 48.46335], [10.065877, 48.463905], [10.093851, 48.468243], [10.099307, 48.475796], [10.1104965, 48.48335], [10.121686, 48.47985], [10.121826, 48.47244], [10.127562, 48.465164], [10.138751, 48.46167], [10.178056, 48.466286], [10.183511, 48.47384], [10.189106, 48.473976], [10.189106, 48.48139], [10.222535, 48.496918], [10.239321, 48.497196], [10.244915, 48.500835], [10.239321, 48.50839], [10.233585, 48.512024], [10.233585, 48.519436], [10.244915, 48.519436], [10.25051, 48.51566], [10.256245, 48.5193], [10.25065, 48.523075], [10.256245, 48.52671], [10.267575, 48.52657], [10.27331, 48.522793], [10.301564, 48.522514], [10.318489, 48.529648], [10.307299, 48.5372], [10.307299, 48.555664], [10.313034, 48.555664], [10.318629, 48.56294], [10.3187685, 48.58518], [10.307439, 48.588955], [10.301844, 48.596367], [10.301844, 48.611195], [10.324504, 48.610916], [10.330238, 48.61455], [10.307579, 48.629517], [10.301984, 48.636932], [10.284919, 48.64798], [10.279184, 48.65903], [10.2677145, 48.662666], [10.26198, 48.673576], [10.27345, 48.677353], [10.26198, 48.684628], [10.279184, 48.69204], [10.279184, 48.699455], [10.27345, 48.70309], [10.279184, 48.710365], [10.290654, 48.706867], [10.307718, 48.695816], [10.324783, 48.688404], [10.330518, 48.69568], [10.347443, 48.69568], [10.358633, 48.67344], [10.358633, 48.65861], [10.3698225, 48.65847], [10.375558, 48.66211], [10.375558, 48.66952], [10.392482, 48.66938], [10.398077, 48.67302], [10.398217, 48.691483], [10.403812, 48.69134], [10.415142, 48.698616], [10.415142, 48.702393], [10.4263315, 48.70225], [10.431927, 48.698475], [10.443256, 48.702114], [10.448852, 48.698334], [10.443256, 48.69092], [10.431927, 48.69484], [10.4263315, 48.687424], [10.431927, 48.683647], [10.431927, 48.6726], [10.415002, 48.672737], [10.420597, 48.665325], [10.426191, 48.66896], [10.460041, 48.668682], [10.460041, 48.672318], [10.471231, 48.67218], [10.482561, 48.679592], [10.493891, 48.690502], [10.488296, 48.70533], [10.488296, 48.71638], [10.477106, 48.71652], [10.477106, 48.723934], [10.465916, 48.735123], [10.454586, 48.731487], [10.449131, 48.742676], [10.443397, 48.742676], [10.432206, 48.75023], [10.426611, 48.75023], [10.426611, 48.75764], [10.437942, 48.757504], [10.437942, 48.76128], [10.426751, 48.765057], [10.421156, 48.776245], [10.438081, 48.78338], [10.438081, 48.79079], [10.443676, 48.79079], [10.443816, 48.805477], [10.455006, 48.809116], [10.455146, 48.820168], [10.460741, 48.823803], [10.460741, 48.834854], [10.455146, 48.83863], [10.438361, 48.838768], [10.438361, 48.84996], [10.46088, 48.853455], [10.4664755, 48.857094], [10.466616, 48.864365], [10.46088, 48.864506], [10.466616, 48.875557], [10.46102, 48.879192], [10.466616, 48.886604], [10.466755, 48.89402], [10.455565, 48.897797], [10.455565, 48.901432], [10.438641, 48.901573], [10.438781, 48.908985], [10.461161, 48.912483], [10.466895, 48.91612], [10.466895, 48.92717], [10.46144, 48.93458], [10.467035, 48.93836], [10.455845, 48.945774], [10.455845, 48.94941], [10.444655, 48.94955], [10.444655, 48.956963], [10.433465, 48.96074], [10.433605, 48.97179], [10.41668, 48.96815], [10.41668, 48.986614], [10.410806, 48.990112], [10.393461, 48.98997], [10.393321, 49.001022], [10.387446, 49.00452], [10.364508, 49.00438], [10.370102, 49.01179], [10.358493, 49.018925], [10.364088, 49.0227], [10.363948, 49.029976], [10.346744, 49.02984], [10.346603, 49.033474], [10.335274, 49.02606], [10.317929, 49.033195], [10.312195, 49.033054], [10.312055, 49.040466], [10.30632, 49.044106], [10.29485, 49.036552], [10.277506, 49.043686], [10.260441, 49.03991], [10.260161, 49.050957], [10.265897, 49.054596], [10.265757, 49.062008], [10.271491, 49.062008], [10.271352, 49.069283], [10.259882, 49.072918], [10.259602, 49.09124], [10.242397, 49.09096], [10.230788, 49.098236], [10.219318, 49.09446], [10.224914, 49.105507], [10.224773, 49.112923], [10.241978, 49.109425], [10.241838, 49.1167], [10.253168, 49.12411], [10.270232, 49.12803], [10.264218, 49.142574], [10.241138, 49.153347], [10.240999, 49.16076], [10.223794, 49.160618], [10.2126045, 49.153065], [10.20673, 49.156704], [10.200715, 49.17139], [10.189385, 49.17125], [10.189245, 49.178524], [10.177775, 49.178383], [10.1663065, 49.18202], [10.166166, 49.189293], [10.160292, 49.19293], [10.137352, 49.196426], [10.131618, 49.199924], [10.137213, 49.207336], [10.148542, 49.207478], [10.148402, 49.21489], [10.136932, 49.218388], [10.136233, 49.24776], [10.141968, 49.251537], [10.119029, 49.254894], [10.130079, 49.269722], [10.136093, 49.258812], [10.141829, 49.258812], [10.153018, 49.266365], [10.152878, 49.273636], [10.158473, 49.273777], [10.162669, 49.279232], [10.158194, 49.284687], [10.152598, 49.284687], [10.140989, 49.29196], [10.140709, 49.30301], [10.157495, 49.3142], [10.15148, 49.32511], [10.14015, 49.32497], [10.140289, 49.321335], [10.12882, 49.321194], [10.12868, 49.32483], [10.111336, 49.33574], [10.116651, 49.350567], [10.133856, 49.34707], [10.133716, 49.354343], [10.122106, 49.357983], [10.127701, 49.365395], [10.115952, 49.376305], [10.127142, 49.383717], [10.1499405, 49.384], [10.155676, 49.38036], [10.172461, 49.391552], [10.1608515, 49.398823], [10.160571, 49.406097], [10.148822, 49.420784], [10.142668, 49.43547], [10.131198, 49.43533], [10.125463, 49.43897], [10.113994, 49.438828], [10.102524, 49.442463], [10.107839, 49.453514], [10.124904, 49.45743], [10.130499, 49.461067], [10.124623, 49.464703], [10.118469, 49.479393], [10.106999, 49.48303], [10.10672, 49.49044], [10.117909, 49.497856], [10.123645, 49.497856], [10.1291, 49.50527], [10.111755, 49.508904], [10.09469, 49.508766], [10.089096, 49.50499], [10.083221, 49.51226], [10.082941, 49.519676], [10.099866, 49.52723], [10.093712, 49.538277], [10.070772, 49.541775], [10.071052, 49.534363], [10.065457, 49.530586], [10.0485325, 49.52681], [10.048812, 49.519394], [10.066016, 49.5159], [10.060701, 49.504707], [10.054967, 49.504707], [10.032587, 49.493378], [10.027271, 49.48233], [10.021677, 49.478554], [10.010346, 49.478413], [9.998737, 49.482048], [9.993282, 49.47827], [9.964748, 49.477993], [9.959153, 49.474216], [9.942088, 49.47785], [9.924604, 49.48876], [9.930059, 49.496178], [9.92922, 49.518276], [9.934395, 49.53324], [9.928381, 49.540516], [9.933975, 49.544292], [9.933556, 49.555344], [9.927821, 49.55898], [9.922226, 49.555202], [9.905162, 49.55506], [9.905022, 49.558838], [9.9212475, 49.58122], [9.904182, 49.58108], [9.898587, 49.577305], [9.881663, 49.573387], [9.881803, 49.569748], [9.870613, 49.562195], [9.876627, 49.554783], [9.871033, 49.551147], [9.865857, 49.539955], [9.848653, 49.543453], [9.848513, 49.54723], [9.837043, 49.54709], [9.825574, 49.550728], [9.825294, 49.55814], [9.836623, 49.55814], [9.853269, 49.56947], [9.852849, 49.58052], [9.847254, 49.58052], [9.846834, 49.59171], [9.858164, 49.59171], [9.869354, 49.599262], [9.880544, 49.60304], [9.868515, 49.617725], [9.874109, 49.621502], [9.8625, 49.628918], [9.862221, 49.63633], [9.856346, 49.639965], [9.839281, 49.639828], [9.838582, 49.65465], [9.832987, 49.65465], [9.832427, 49.665703], [9.837743, 49.67689], [9.843477, 49.677032], [9.843058, 49.688084], [9.836904, 49.699272], [9.825153, 49.706547], [9.813544, 49.710182], [9.813404, 49.71396], [9.802074, 49.71382], [9.801655, 49.721375], [9.79592, 49.721233], [9.790465, 49.717457], [9.78473, 49.717457], [9.756616, 49.706127], [9.757175, 49.691162], [9.74039, 49.683605], [9.734655, 49.683605], [9.734236, 49.694798], [9.7224865, 49.702072], [9.721787, 49.717037], [9.715912, 49.720673], [9.715773, 49.72445], [9.704722, 49.716896], [9.704863, 49.71326], [9.681923, 49.71312], [9.683042, 49.690742], [9.671852, 49.683186], [9.660522, 49.68305], [9.648773, 49.69046], [9.637444, 49.69046], [9.637163, 49.697876], [9.631568, 49.697876], [9.636464, 49.71284], [9.641919, 49.716618], [9.64164, 49.72403], [9.646955, 49.731583], [9.646535, 49.739], [9.65199, 49.742775], [9.640381, 49.750187], [9.656885, 49.761517], [9.6510105, 49.765152], [9.650452, 49.776344], [9.656186, 49.776344], [9.655626, 49.787533], [9.633387, 49.783615], [9.627932, 49.77984], [9.616881, 49.7797], [9.600376, 49.775925], [9.583591, 49.775784], [9.583452, 49.77942], [9.572262, 49.77928], [9.566807, 49.775642], [9.567646, 49.7569], [9.579255, 49.74585], [9.5738, 49.742073], [9.562611, 49.742073], [9.562051, 49.7569], [9.550442, 49.764313], [9.544847, 49.764313], [9.528202, 49.75676], [9.516732, 49.764175], [9.516452, 49.771587], [9.521768, 49.779], [9.510298, 49.786415], [9.487778, 49.786274], [9.487918, 49.78264], [9.471413, 49.76767], [9.454349, 49.77131], [9.448194, 49.786133], [9.431129, 49.786133], [9.403295, 49.767532], [9.397559, 49.767532], [9.380215, 49.77858], [9.36343, 49.767532], [9.323566, 49.767532], [9.323706, 49.75648], [9.335316, 49.74907], [9.335595, 49.741653], [9.324125, 49.737877], [9.312656, 49.741653], [9.307061, 49.738018], [9.3242655, 49.73424], [9.33014, 49.730606], [9.34147, 49.730465], [9.34147, 49.73424], [9.352799, 49.73424], [9.358674, 49.730465], [9.375739, 49.730465], [9.381614, 49.72683], [9.376019, 49.723053], [9.358954, 49.719414], [9.364689, 49.715637], [9.364969, 49.70459], [9.376578, 49.700813], [9.393643, 49.70459], [9.393084, 49.723053], [9.398539, 49.730465], [9.410148, 49.72683], [9.410288, 49.719414], [9.416023, 49.719414], [9.427632, 49.712], [9.428052, 49.697174], [9.433786, 49.693398], [9.422737, 49.682346], [9.417142, 49.67857], [9.417282, 49.674934], [9.4059515, 49.671158], [9.4059515, 49.667522], [9.417562, 49.663746], [9.429171, 49.65633], [9.417981, 49.64892], [9.418121, 49.645283], [9.400916, 49.645283], [9.395322, 49.641506], [9.371963, 49.65647], [9.355038, 49.64542], [9.326223, 49.64906], [9.314614, 49.656612], [9.3147545, 49.649197], [9.309159, 49.64542], [9.297689, 49.64556], [9.292094, 49.63815], [9.28636, 49.63815], [9.280625, 49.63451], [9.2865, 49.630733], [9.280905, 49.627098], [9.286639, 49.62332], [9.286779, 49.619686], [9.292654, 49.61591], [9.275589, 49.608635], [9.270134, 49.593807], [9.258525, 49.593807], [9.258804, 49.586395], [9.2416, 49.58276], [9.235866, 49.57912], [9.212786, 49.57926], [9.201456, 49.575623], [9.189847, 49.579403], [9.1725025, 49.579403], [9.166628, 49.58304], [9.155158, 49.58304], [9.126344, 49.575623], [9.114735, 49.58304], [9.108999, 49.58304], [9.097111, 49.59395], [9.096971, 49.60136], [9.091236, 49.605], [9.073892, 49.60486], [9.073472, 49.62318], [9.090676, 49.634373], [9.090536, 49.63801], [9.102146, 49.63815], [9.113476, 49.64556], [9.107601, 49.649197], [9.107461, 49.656612], [9.113195, 49.660248], [9.095712, 49.671158], [9.0955715, 49.67857], [9.101307, 49.67857], [9.101167, 49.685986], [9.095432, 49.685986], [9.095292, 49.69326], [9.101027, 49.697037], [9.112496, 49.697174], [9.118232, 49.700813], [9.135575, 49.70095], [9.135436, 49.708366], [9.129421, 49.715637], [9.14103, 49.71578], [9.146766, 49.719414], [9.1466255, 49.72683], [9.152221, 49.730606], [9.152081, 49.737877], [9.16355, 49.74543], [9.140191, 49.75634], [9.122848, 49.75984], [9.117112, 49.759697], [9.122707, 49.774525], [9.145507, 49.782078], [9.139632, 49.78949], [9.139492, 49.796764], [9.128022, 49.800404], [9.122148, 49.800262], [9.105083, 49.79271], [9.104943, 49.796486], [9.099069, 49.799984], [9.099069, 49.807396], [9.093054, 49.818306], [9.087179, 49.82194], [9.098649, 49.829494], [9.092774, 49.833134], [9.092634, 49.840405], [9.09837, 49.84418], [9.09837, 49.847958], [9.07543, 49.83285], [9.069695, 49.832714], [9.069415, 49.847538], [9.063681, 49.84376], [9.052211, 49.839848], [9.052071, 49.84726], [9.057806, 49.851036], [9.057666, 49.85831], [9.046057, 49.861805], [9.045917, 49.86558], [9.051791, 49.86558], [9.057386, 49.869358], [9.051512, 49.876633], [9.051231, 49.895096], [9.0452175, 49.90237], [9.045077, 49.909782], [9.039343, 49.909645], [9.044937, 49.920834], [9.044658, 49.93552], [9.038783, 49.93902], [9.038223, 49.96853], [9.032209, 49.975803], [9.032209, 49.97944], [9.037944, 49.97958], [9.037804, 49.98699], [9.031929, 49.99049], [9.037664, 49.994267], [9.037524, 49.998043], [9.049414, 49.99091], [9.061023, 49.98741], [9.066758, 49.991188], [9.066758, 49.994827], [9.0608835, 49.998463], [9.055008, 49.99832], [9.055008, 50.00196], [9.048994, 50.005596], [9.0547285, 50.009373], [9.0547285, 50.01301], [9.048714, 50.020283], [9.048015, 50.042385], [9.04228, 50.042244], [9.030391, 50.045742], [9.018781, 50.0456], [9.007172, 50.041683], [9.001297, 50.041546], [8.995282, 50.04504], [8.995142, 50.052456], [9.000877, 50.056232], [9.006473, 50.063786], [9.006332, 50.06742], [9.012207, 50.067562], [9.017941, 50.07134], [9.017102, 50.093437], [9.022838, 50.097214], [9.028293, 50.104626], [9.034027, 50.108402], [9.033888, 50.11204], [9.057246, 50.1126], [9.062841, 50.116375], [9.08634, 50.116795], [9.091935, 50.12057], [9.09795, 50.117077], [9.109699, 50.117214], [9.115294, 50.12099], [9.115154, 50.12477], [9.138373, 50.12519], [9.156417, 50.114418], [9.167747, 50.114697], [9.173202, 50.118473], [9.173902, 50.107426], [9.16341, 50.096096], [9.16397, 50.08868], [9.169565, 50.08882], [9.174601, 50.096233], [9.190406, 50.11134], [9.190126, 50.115116], [9.206212, 50.12281], [9.205792, 50.130226], [9.199918, 50.137497], [9.210968, 50.137638], [9.210688, 50.141415], [9.227333, 50.141693], [9.227054, 50.145332], [9.237964, 50.149246], [9.254748, 50.142113], [9.265658, 50.142254], [9.265938, 50.138477], [9.282443, 50.13862], [9.282304, 50.142395], [9.298948, 50.142532], [9.316153, 50.131622], [9.332378, 50.139175], [9.337974, 50.139317], [9.3494425, 50.131905], [9.360912, 50.128265], [9.377277, 50.132183], [9.401336, 50.102528], [9.401755, 50.095116], [9.40763, 50.087704], [9.413225, 50.087704], [9.41924, 50.080288], [9.43015, 50.084206], [9.4413395, 50.084206], [9.446795, 50.087982], [9.469174, 50.08826], [9.47449, 50.092037], [9.5026045, 50.09232], [9.502325, 50.096096], [9.519389, 50.092457], [9.51911, 50.10001], [9.524425, 50.103786], [9.524145, 50.111202], [9.511697, 50.133583], [9.510997, 50.14855], [9.522187, 50.14855], [9.532957, 50.159878], [9.532537, 50.16743], [9.510018, 50.167152], [9.503863, 50.174564], [9.502885, 50.193306], [9.519809, 50.193447], [9.51967, 50.197224], [9.50792, 50.2045], [9.507501, 50.21205], [9.495331, 50.226875], [9.500787, 50.23065], [9.500087, 50.241844], [9.505682, 50.241985], [9.511836, 50.23457], [9.523446, 50.230934], [9.528901, 50.23471], [9.540371, 50.23107], [9.540791, 50.22352], [9.55198, 50.227436], [9.56331, 50.227436], [9.5745, 50.231354], [9.580654, 50.223938], [9.580794, 50.22016], [9.58639, 50.223938], [9.597999, 50.220303], [9.609189, 50.22408], [9.620658, 50.22422], [9.6203785, 50.227997], [9.631708, 50.231773], [9.660382, 50.23205], [9.665837, 50.239468], [9.654088, 50.243103], [9.648213, 50.24688], [9.636744, 50.24674], [9.636464, 50.250515], [9.642059, 50.25429], [9.641919, 50.258068], [9.647654, 50.258068], [9.652829, 50.26926], [9.664439, 50.269398], [9.664159, 50.273174], [9.670033, 50.273174], [9.681363, 50.27695], [9.692973, 50.277092], [9.709898, 50.28842], [9.709758, 50.292057], [9.727242, 50.2922], [9.738711, 50.29975], [9.744027, 50.31108], [9.742768, 50.34465], [9.736613, 50.34829], [9.730739, 50.34829], [9.730459, 50.3557], [9.741929, 50.363396], [9.741789, 50.37095], [9.7531185, 50.386192], [9.752279, 50.41263], [9.746405, 50.41263], [9.746265, 50.416405], [9.75214, 50.416546], [9.7578745, 50.4241], [9.769624, 50.42424], [9.775779, 50.420464], [9.775918, 50.416687], [9.781653, 50.420464], [9.781513, 50.42424], [9.799277, 50.424377], [9.811306, 50.416824], [9.811446, 50.413048], [9.823475, 50.405636], [9.835225, 50.405777], [9.847254, 50.398224], [9.859143, 50.39836], [9.864878, 50.402138], [9.870613, 50.40969], [9.876767, 50.40228], [9.876767, 50.398502], [9.882642, 50.398502], [9.888516, 50.40242], [9.900266, 50.40242], [9.91775, 50.41011], [9.923485, 50.417664], [9.935235, 50.42144], [9.94111, 50.42144], [9.946844, 50.425217], [9.952859, 50.42158], [9.958734, 50.42158], [9.964608, 50.425358], [9.964468, 50.43291], [9.976078, 50.440464], [9.987687, 50.44424], [9.999297, 50.459347], [10.010906, 50.4669], [10.016781, 50.4669], [10.0226555, 50.470676], [10.0226555, 50.474453], [10.028391, 50.482006], [10.0342655, 50.482006], [10.034125, 50.48956], [10.04, 50.493336], [10.039721, 50.515858], [10.05161, 50.519634], [10.069094, 50.530964], [10.069094, 50.53474], [10.074968, 50.542294], [10.080843, 50.542294], [10.098467, 50.549847], [10.098467, 50.553623], [10.104342, 50.5574], [10.104342, 50.561176], [10.110217, 50.564953], [10.127841, 50.564953], [10.127841, 50.561317], [10.122106, 50.557537], [10.133856, 50.549984], [10.13987, 50.542572], [10.151619, 50.542572], [10.15148, 50.549984], [10.163229, 50.550125], [10.175118, 50.542572], [10.174978, 50.550125], [10.180853, 50.550125], [10.180853, 50.55376], [10.204351, 50.55376], [10.204351, 50.542572], [10.210366, 50.538795], [10.2221155, 50.538795], [10.22799, 50.53516], [10.22799, 50.531384], [10.233865, 50.531384], [10.233865, 50.527607], [10.22813, 50.516415], [10.234005, 50.512638], [10.2575035, 50.51278], [10.269254, 50.505226], [10.281003, 50.505226], [10.281142, 50.50145], [10.292892, 50.494038], [10.310516, 50.494038], [10.322266, 50.49026], [10.32814, 50.49026], [10.32814, 50.494038], [10.334015, 50.494038], [10.334015, 50.48662], [10.33989, 50.482845], [10.345764, 50.482845], [10.34003, 50.471657], [10.34003, 50.464245], [10.346045, 50.46047], [10.351919, 50.46047], [10.357794, 50.453053], [10.357794, 50.449276], [10.369682, 50.441864], [10.369682, 50.438087], [10.375558, 50.43445], [10.375558, 50.43067], [10.381433, 50.43067], [10.381433, 50.426895], [10.399056, 50.426895], [10.399196, 50.42326], [10.405071, 50.42326], [10.405071, 50.415707], [10.399196, 50.415707], [10.399196, 50.41207], [10.393461, 50.408295], [10.387587, 50.408295], [10.387587, 50.40074], [10.393461, 50.393326], [10.399336, 50.397102], [10.41696, 50.393326], [10.42871, 50.393467], [10.428849, 50.38969], [10.440459, 50.393467], [10.440459, 50.40088], [10.458083, 50.40088], [10.458083, 50.38969], [10.464098, 50.3785], [10.475847, 50.371086], [10.493471, 50.371086], [10.493611, 50.36745], [10.499486, 50.363674], [10.493611, 50.359898], [10.493611, 50.352486], [10.505361, 50.352486], [10.51711, 50.356262], [10.51725, 50.34871], [10.523125, 50.348846], [10.5229845, 50.352486], [10.528999, 50.352486], [10.528859, 50.36004], [10.534734, 50.363674], [10.558232, 50.356262], [10.5583725, 50.352486], [10.552498, 50.348846], [10.552498, 50.341293], [10.564387, 50.33388], [10.582011, 50.33388], [10.582011, 50.330242], [10.60551, 50.330242], [10.599635, 50.319054], [10.599775, 50.315277], [10.5937605, 50.315277], [10.593901, 50.30409], [10.599775, 50.30409], [10.611665, 50.28912], [10.60579, 50.285343], [10.5999155, 50.285343], [10.600055, 50.27038], [10.594041, 50.27038], [10.59418, 50.2666], [10.605929, 50.266743], [10.605929, 50.25919], [10.611804, 50.255413], [10.611944, 50.247997], [10.617819, 50.247997], [10.617819, 50.24422], [10.60607, 50.240444], [10.60607, 50.23681], [10.611944, 50.229256], [10.612084, 50.225616], [10.617959, 50.22184], [10.641458, 50.218204], [10.664817, 50.229393], [10.664817, 50.218204], [10.688175, 50.218346], [10.693911, 50.21457], [10.699785, 50.207153], [10.717269, 50.207294], [10.717269, 50.203518], [10.723004, 50.19974], [10.728879, 50.199883], [10.728739, 50.203518], [10.734613, 50.207294], [10.734613, 50.248417], [10.746083, 50.248417], [10.751818, 50.24478], [10.751818, 50.241005], [10.757553, 50.23723], [10.774898, 50.23737], [10.786367, 50.244923], [10.786367, 50.2487], [10.803572, 50.2487], [10.809446, 50.241283], [10.809446, 50.237648], [10.820916, 50.237648], [10.826651, 50.234013], [10.84959, 50.241566], [10.855325, 50.248978], [10.855325, 50.260166], [10.84959, 50.263805], [10.84959, 50.271217], [10.83812, 50.271217], [10.832246, 50.274853], [10.809306, 50.274853], [10.809306, 50.278492], [10.803572, 50.278492], [10.803572, 50.28227], [10.809306, 50.286045], [10.809306, 50.28968], [10.797836, 50.28968], [10.786227, 50.293316], [10.780492, 50.28954], [10.774757, 50.28954], [10.769023, 50.293316], [10.763288, 50.30073], [10.746083, 50.31178], [10.740349, 50.31178], [10.734474, 50.315556], [10.728739, 50.315556], [10.723004, 50.32297], [10.734334, 50.337795], [10.734194, 50.34521], [10.722585, 50.34521], [10.716849, 50.34157], [10.71671, 50.352623], [10.722445, 50.352623], [10.722304, 50.36004], [10.745384, 50.360176], [10.745523, 50.3564], [10.756993, 50.3564], [10.768463, 50.363815], [10.768323, 50.36759], [10.779933, 50.36759], [10.779793, 50.37137], [10.785388, 50.37878], [10.791122, 50.382416], [10.791263, 50.37878], [10.802732, 50.375004], [10.808467, 50.375145], [10.819937, 50.382557], [10.825671, 50.382557], [10.831407, 50.386192], [10.831266, 50.38997], [10.842876, 50.386333], [10.871551, 50.386333], [10.871551, 50.39011], [10.877285, 50.393745], [10.888755, 50.39011], [10.8946295, 50.37906], [10.900364, 50.37906], [10.900364, 50.382698], [10.911834, 50.382698], [10.934773, 50.39025], [10.940508, 50.39025], [10.946242, 50.382835], [10.963587, 50.371788], [10.963727, 50.364372], [10.986806, 50.349686], [10.992541, 50.353325], [10.992401, 50.360737], [10.998136, 50.364513], [11.009605, 50.360878], [11.015341, 50.360878], [11.021075, 50.3571], [11.032685, 50.353462], [11.03856, 50.342415], [11.044294, 50.342415], [11.055624, 50.34619], [11.084438, 50.349968], [11.084298, 50.35738], [11.090173, 50.361156], [11.090173, 50.36479], [11.113253, 50.364933], [11.118987, 50.361156], [11.118987, 50.34633], [11.124722, 50.34633], [11.124722, 50.353745], [11.142206, 50.350105], [11.136332, 50.34647], [11.142066, 50.339054], [11.147941, 50.339054], [11.15941, 50.328007], [11.15941, 50.320454], [11.153676, 50.320454], [11.142066, 50.316814], [11.130736, 50.30926], [11.130736, 50.298214], [11.136471, 50.298214], [11.142346, 50.2908], [11.142346, 50.287163], [11.148221, 50.283386], [11.15969, 50.283527], [11.18263, 50.27989], [11.18263, 50.27611], [11.1713, 50.2687], [11.188504, 50.2687], [11.188364, 50.27989], [11.194099, 50.27989], [11.194099, 50.287304], [11.199695, 50.29094], [11.211304, 50.283527], [11.217038, 50.283665], [11.222914, 50.276253], [11.234383, 50.272476], [11.245993, 50.2652], [11.251588, 50.26884], [11.257322, 50.26884], [11.257602, 50.28744], [11.251867, 50.29108], [11.2520075, 50.298492], [11.257742, 50.298634], [11.269491, 50.306046], [11.263757, 50.30968], [11.263896, 50.317234], [11.258021, 50.320873], [11.264036, 50.33206], [11.264036, 50.335697], [11.275785, 50.33584], [11.264316, 50.350666], [11.27019, 50.3543], [11.2818, 50.354443], [11.28194, 50.365494], [11.276345, 50.380318], [11.270471, 50.384094], [11.264735, 50.384094], [11.264735, 50.39151], [11.259001, 50.398922], [11.259141, 50.402557], [11.265016, 50.41011], [11.265016, 50.41375], [11.27089, 50.417526], [11.265155, 50.42116], [11.265155, 50.428574], [11.271029, 50.428715], [11.271029, 50.43235], [11.265295, 50.439766], [11.25942, 50.443542], [11.24781, 50.447178], [11.253686, 50.454594], [11.253825, 50.462006], [11.247951, 50.465782], [11.248091, 50.476833], [11.253965, 50.48061], [11.271589, 50.480747], [11.289074, 50.484524], [11.289074, 50.480747], [11.294949, 50.47711], [11.300823, 50.480747], [11.300823, 50.4883], [11.324322, 50.4883], [11.324462, 50.51068], [11.330337, 50.506905], [11.342086, 50.51068], [11.34796, 50.51068], [11.34796, 50.514458], [11.342226, 50.518093], [11.348101, 50.52187], [11.35971, 50.518234], [11.365584, 50.52201], [11.371459, 50.52201], [11.383208, 50.518234], [11.383208, 50.5146], [11.430066, 50.514736], [11.430066, 50.51096], [11.441676, 50.499912], [11.435661, 50.49236], [11.423912, 50.49236], [11.418037, 50.496136], [11.418037, 50.49236], [11.423772, 50.484943], [11.423633, 50.473755], [11.417758, 50.466343], [11.423492, 50.462566], [11.423492, 50.458927], [11.417618, 50.45515], [11.417478, 50.451515], [11.423213, 50.443962], [11.429088, 50.440323], [11.434962, 50.440323], [11.452446, 50.429276], [11.452307, 50.4255], [11.464195, 50.429276], [11.464195, 50.43291], [11.48182, 50.433052], [11.48168, 50.425636], [11.487414, 50.418083], [11.487275, 50.41067], [11.4814005, 50.407036], [11.48126, 50.399483], [11.487135, 50.395844], [11.49301, 50.395844], [11.498884, 50.39962], [11.504759, 50.39962], [11.504759, 50.395844], [11.516508, 50.395844], [11.5222435, 50.38843], [11.522103, 50.373604], [11.527978, 50.377243], [11.533853, 50.377243], [11.533853, 50.38102], [11.551617, 50.384796], [11.557491, 50.384796], [11.569241, 50.388573], [11.569381, 50.395985], [11.575255, 50.39976], [11.587005, 50.39976], [11.5930195, 50.403538], [11.598754, 50.39976], [11.610504, 50.39976], [11.610364, 50.396126], [11.621973, 50.38871], [11.633723, 50.38871], [11.639737, 50.392487], [11.663096, 50.392487], [11.669111, 50.396263], [11.698484, 50.396263], [11.698484, 50.40004], [11.704499, 50.403816], [11.7162485, 50.403816], [11.716108, 50.40004], [11.727858, 50.40018], [11.727858, 50.403816], [11.733872, 50.407593], [11.739747, 50.407593], [11.745622, 50.41137], [11.751496, 50.41137], [11.757371, 50.407593], [11.768981, 50.407734], [11.757511, 50.415146], [11.757651, 50.418785], [11.76926, 50.415146], [11.775135, 50.415146], [11.775135, 50.418922], [11.78101, 50.418922], [11.78115, 50.42256], [11.7870245, 50.4227], [11.798635, 50.418922], [11.815699, 50.4041], [11.827448, 50.4041], [11.827588, 50.407875], [11.833323, 50.4041], [11.821433, 50.396683], [11.821294, 50.392906], [11.827168, 50.392906], [11.833043, 50.396683], [11.838918, 50.396683], [11.856682, 50.404236], [11.868291, 50.404236], [11.886335, 50.41543], [11.886475, 50.419205], [11.903959, 50.419205], [11.915849, 50.426758], [11.927737, 50.426895]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Berlin',
      type: 'Land',
      area: '891.1 km²',
      bundesratVotes: '4 (out of 69)',
      density: '4088/km²',
      timeZone: 'UTC+1 (CET)',
      population: 3644826,
      capital: 'Berlin',
      government: 'Abgeordnetenhaus of Berlin',
      head: 'Michael Müller (SPD)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[13.180168, 52.5941], [13.192198, 52.590324], [13.198072, 52.586548], [13.2042265, 52.58641], [13.216255, 52.582493], [13.216395, 52.58627], [13.22241, 52.58613], [13.22255, 52.589905], [13.216675, 52.59368], [13.21094, 52.601097], [13.211081, 52.604874], [13.217094, 52.604733], [13.230243, 52.62683], [13.242272, 52.622917], [13.248567, 52.626553], [13.272764, 52.622498], [13.273045, 52.62991], [13.26717, 52.633686], [13.267309, 52.637463], [13.285493, 52.637184], [13.286332, 52.655647], [13.310671, 52.65537], [13.304516, 52.65173], [13.310251, 52.644176], [13.309971, 52.636765], [13.3158455, 52.632988], [13.315566, 52.625572], [13.33361, 52.62166], [13.370256, 52.621098], [13.382706, 52.62823], [13.382846, 52.632008], [13.389, 52.631866], [13.395154, 52.635506], [13.401588, 52.64278], [13.401729, 52.646557], [13.413618, 52.639], [13.419912, 52.64264], [13.419772, 52.638863], [13.431662, 52.634945], [13.437816, 52.634945], [13.438096, 52.64236], [13.450685, 52.649494], [13.456698, 52.649494], [13.456559, 52.645718], [13.462713, 52.645576], [13.468868, 52.64921], [13.475022, 52.64921], [13.481176, 52.65271], [13.457258, 52.66054], [13.463693, 52.667816], [13.4697075, 52.667816], [13.482296, 52.67509], [13.481876, 52.667538], [13.494045, 52.667397], [13.493905, 52.66376], [13.487471, 52.656345], [13.511529, 52.648655], [13.517404, 52.64488], [13.523559, 52.644737], [13.529433, 52.64096], [13.529293, 52.637184], [13.52286, 52.62991], [13.51027, 52.622635], [13.510131, 52.619], [13.503696, 52.611725], [13.503417, 52.604313], [13.514886, 52.589207], [13.527195, 52.592842], [13.5452385, 52.588787], [13.557268, 52.58487], [13.574892, 52.57354], [13.574613, 52.566128], [13.5867815, 52.565987], [13.592377, 52.558434], [13.591957, 52.547386], [13.616015, 52.543327], [13.62189, 52.539413], [13.6276245, 52.531998], [13.627484, 52.52822], [13.633499, 52.52822], [13.645808, 52.53172], [13.651683, 52.527943], [13.663852, 52.52766], [13.663572, 52.524025], [13.645109, 52.51689], [13.63224, 52.502205], [13.631821, 52.491154], [13.625247, 52.480106], [13.618953, 52.476467], [13.618672, 52.469055], [13.630702, 52.468914], [13.630842, 52.472553], [13.636996, 52.472553], [13.649445, 52.479687], [13.661334, 52.47591], [13.667349, 52.47577], [13.667209, 52.471992], [13.6732235, 52.471992], [13.673503, 52.475628], [13.691128, 52.4643], [13.703156, 52.46402], [13.702877, 52.456608], [13.7147665, 52.45283], [13.715046, 52.460243], [13.72134, 52.46374], [13.73267, 52.448772], [13.762882, 52.448353], [13.762603, 52.44094], [13.750434, 52.441082], [13.749735, 52.426254], [13.74372, 52.426395], [13.737565, 52.422756], [13.737145, 52.415344], [13.748896, 52.40779], [13.742601, 52.404152], [13.742461, 52.400375], [13.724418, 52.400795], [13.69952, 52.38625], [13.69938, 52.382614], [13.705395, 52.382473], [13.705114, 52.378838], [13.711269, 52.378696], [13.704975, 52.37506], [13.698541, 52.367786], [13.692806, 52.371563], [13.680357, 52.36443], [13.674203, 52.36443], [13.673923, 52.357018], [13.661195, 52.34247], [13.660914, 52.33869], [13.648886, 52.338974], [13.64315, 52.346386], [13.64371, 52.357574], [13.656158, 52.364708], [13.656299, 52.368484], [13.650284, 52.368484], [13.650564, 52.3759], [13.644549, 52.376038], [13.638675, 52.379814], [13.614197, 52.37282], [13.614476, 52.380234], [13.608602, 52.38401], [13.602588, 52.38401], [13.603007, 52.395203], [13.572515, 52.388206], [13.542162, 52.388767], [13.542721, 52.39982], [13.536427, 52.39618], [13.530552, 52.399956], [13.524538, 52.400097], [13.512229, 52.3966], [13.494045, 52.39688], [13.488171, 52.400658], [13.476841, 52.4194], [13.464671, 52.41954], [13.458517, 52.4159], [13.440194, 52.412544], [13.427885, 52.40891], [13.427605, 52.405273], [13.438795, 52.382893], [13.43278, 52.382893], [13.432361, 52.37548], [13.426346, 52.375618], [13.395993, 52.376038], [13.396553, 52.38723], [13.378369, 52.38751], [13.3785095, 52.391144], [13.360605, 52.398838], [13.348716, 52.40639], [13.348856, 52.410168], [13.317944, 52.39576], [13.306475, 52.41073], [13.306614, 52.414364], [13.281716, 52.399956], [13.275562, 52.400097], [13.269688, 52.403873], [13.257519, 52.404015], [13.257798, 52.411427], [13.252064, 52.41898], [13.227725, 52.41926], [13.215277, 52.411987], [13.203108, 52.412266], [13.166041, 52.397858], [13.165901, 52.394222], [13.17807, 52.39408], [13.17793, 52.390305], [13.165761, 52.390446], [13.153732, 52.394363], [13.141283, 52.38709], [13.147717, 52.3945], [13.135549, 52.39464], [13.117505, 52.402336], [13.11163, 52.406113], [13.099461, 52.40625], [13.099601, 52.40989], [13.093866, 52.417442], [13.112189, 52.420937], [13.118484, 52.424576], [13.118624, 52.42821], [13.131072, 52.435486], [13.125197, 52.442898], [13.119323, 52.446674], [13.120023, 52.46528], [13.126317, 52.468914], [13.126456, 52.472553], [13.132611, 52.47619], [13.138765, 52.47619], [13.163943, 52.49801], [13.176532, 52.505283], [13.170517, 52.50906], [13.152473, 52.512974], [13.152613, 52.51675], [13.140305, 52.513115], [13.128135, 52.513393], [13.12226, 52.52081], [13.135129, 52.53913], [13.135828, 52.55396], [13.141703, 52.550182], [13.153872, 52.55004], [13.154431, 52.561092], [13.160585, 52.564728], [13.160866, 52.572144], [13.15513, 52.579697], [13.148836, 52.576057], [13.136667, 52.5762], [13.136948, 52.58361], [13.143102, 52.58361], [13.155411, 52.58711], [13.161844, 52.594383], [13.180168, 52.5941]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Brandenburg',
      type: 'Land',
      area: '29,478.63 km²',
      bundesratVotes: '4 (out of 69)',
      density: '83/km²',
      timeZone: 'UTC+1 (CET)',
      population: 2511917,
      capital: 'Potsdam',
      government: 'andtag of Brandenburg',
      head: 'Dietmar Woidke (SPD)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[13.873103, 53.499084], [13.8719845, 53.484398], [13.884573, 53.48412], [13.877719, 53.476845], [13.8774395, 53.47321], [13.889468, 53.465515], [13.907652, 53.457825], [13.913807, 53.457684], [13.913667, 53.453907], [13.919541, 53.45013], [13.907093, 53.442577], [13.912268, 53.435444], [13.905694, 53.43181], [13.899679, 53.431946], [13.905554, 53.42831], [13.905274, 53.424534], [13.917303, 53.42048], [13.936746, 53.427612], [13.942901, 53.42747], [13.94332, 53.431248], [13.968357, 53.430687], [13.981086, 53.434044], [13.999969, 53.433765], [14.005983, 53.429848], [14.043889, 53.42901], [14.049624, 53.421455], [14.049065, 53.414043], [14.055079, 53.410267], [14.068088, 53.413624], [14.080676, 53.413345], [14.093964, 53.42048], [14.097741, 53.42048], [14.106553, 53.420338], [14.107112, 53.427612], [14.121099, 53.442017], [14.127114, 53.43824], [14.133268, 53.438103], [14.140122, 53.44174], [14.146137, 53.43796], [14.170475, 53.426353], [14.182924, 53.422295], [14.208101, 53.421875], [14.214955, 53.42705], [14.215095, 53.42901], [14.228383, 53.436142], [14.2341175, 53.42859], [14.240412, 53.42845], [14.246147, 53.4209], [14.239153, 53.413765], [14.244888, 53.406208], [14.24321, 53.38411], [14.235936, 53.3732], [14.235796, 53.37236], [14.222089, 53.358654], [14.207822, 53.34047], [14.201247, 53.33697], [14.188239, 53.333477], [14.174811, 53.322704], [14.174392, 53.318928], [14.15453, 53.3083], [14.141661, 53.304802], [14.114805, 53.287037], [14.100958, 53.27249], [14.100119, 53.26144], [14.125436, 53.26088], [14.145018, 53.267876], [14.154949, 53.267593], [14.170335, 53.267315], [14.17635, 53.26354], [14.177469, 53.26354], [14.188659, 53.25962], [14.189078, 53.26326], [14.201667, 53.262978], [14.2136965, 53.255424], [14.22013, 53.255287], [14.226705, 53.25878], [14.258316, 53.258224], [14.271045, 53.26242], [14.266289, 53.276688], [14.288389, 53.2834], [14.29888, 53.287178], [14.305174, 53.287178], [14.305733, 53.29445], [14.319161, 53.301723], [14.31986, 53.312634], [14.351472, 53.312214], [14.357067, 53.315853], [14.36462, 53.31725], [14.371055, 53.319347], [14.3770685, 53.315712], [14.383363, 53.315434], [14.384202, 53.324524], [14.391895, 53.326763], [14.403505, 53.33012], [14.403925, 53.333614], [14.413016, 53.331516], [14.414695, 53.33054], [14.415813, 53.329838], [14.42029, 53.32564], [14.414135, 53.311237], [14.419451, 53.303684], [14.424346, 53.288715], [14.423227, 53.277946], [14.436655, 53.278645], [14.444068, 53.276546], [14.445887, 53.265495], [14.449103, 53.265636], [14.447145, 53.256546], [14.439733, 53.256126], [14.440291, 53.251648], [14.432738, 53.25137], [14.433997, 53.242416], [14.426444, 53.241997], [14.427144, 53.237522], [14.413996, 53.223255], [14.406443, 53.222836], [14.4077015, 53.214024], [14.400288, 53.213604], [14.400847, 53.20913], [14.386021, 53.208427], [14.378887, 53.204094], [14.377488, 53.189266], [14.373712, 53.187305], [14.374691, 53.180733], [14.367138, 53.180313], [14.370215, 53.157932], [14.377628, 53.15835], [14.38644, 53.14912], [14.388119, 53.136253], [14.380706, 53.135834], [14.382524, 53.114853], [14.376929, 53.1087], [14.369376, 53.10828], [14.370495, 53.099327], [14.374551, 53.09653], [14.371754, 53.090237], [14.36434, 53.089954], [14.3661585, 53.076527], [14.358746, 53.076107], [14.359864, 53.067017], [14.346296, 53.06002], [14.345737, 53.052887], [14.339442, 53.05261], [14.340142, 53.048134], [14.326434, 53.045753], [14.326155, 53.04184], [14.31986, 53.042118], [14.318881, 53.03792], [14.311607, 53.037643], [14.312027, 53.033028], [14.304754, 53.03135], [14.305174, 53.02827], [14.29776, 53.02785], [14.29832, 53.023514], [14.283493, 53.022675], [14.284053, 53.0182], [14.276779, 53.01778], [14.277339, 53.013306], [14.269925, 53.012886], [14.270485, 53.008408], [14.255798, 53.00659], [14.256218, 53.003235], [14.235097, 52.99596], [14.235237, 52.993164], [14.222228, 52.992325], [14.215934, 52.988968], [14.203626, 52.989246], [14.177889, 52.978756], [14.164741, 52.97148], [14.16446, 52.967846], [14.158306, 52.968124], [14.149914, 52.96155], [14.1425, 52.961132], [14.151452, 52.89805], [14.156907, 52.890636], [14.155929, 52.879585], [14.1425, 52.868954], [14.136066, 52.86546], [14.135647, 52.86182], [14.122639, 52.854965], [14.12124, 52.84028], [14.129632, 52.8386], [14.130891, 52.82951], [14.138304, 52.82993], [14.138864, 52.825455], [14.161103, 52.826714], [14.161663, 52.822235], [14.183903, 52.823357], [14.184463, 52.81888], [14.214116, 52.82042], [14.222089, 52.81636], [14.222648, 52.811886], [14.230062, 52.812164], [14.23132, 52.803635], [14.238733, 52.803635], [14.240972, 52.799297], [14.246706, 52.799576], [14.247266, 52.7951], [14.254679, 52.79538], [14.255938, 52.78643], [14.263351, 52.78685], [14.266429, 52.782513], [14.271324, 52.78279], [14.272723, 52.778316], [14.279297, 52.778595], [14.281535, 52.77426], [14.28727, 52.77454], [14.293425, 52.770344], [14.302656, 52.770763], [14.303076, 52.768246], [14.318042, 52.767128], [14.318602, 52.76265], [14.3260145, 52.76293], [14.326574, 52.758453], [14.341401, 52.759293], [14.341821, 52.755657], [14.358186, 52.744747], [14.365879, 52.742508], [14.366578, 52.738033], [14.3716135, 52.73817], [14.37581, 52.72908], [14.381545, 52.725163], [14.39847, 52.721527], [14.399589, 52.712574], [14.404764, 52.709637], [14.410219, 52.702084], [14.421828, 52.694393], [14.421129, 52.686977], [14.426864, 52.683064], [14.445188, 52.682503], [14.455957, 52.679287], [14.457636, 52.66586], [14.46505, 52.66628], [14.466168, 52.657326], [14.480995, 52.658024], [14.481275, 52.655087], [14.49722, 52.647675], [14.503375, 52.647533], [14.5050535, 52.643757], [14.5152645, 52.64348], [14.528273, 52.635643], [14.543379, 52.633965], [14.551911, 52.625435], [14.566598, 52.626133], [14.567158, 52.62166], [14.574571, 52.622078], [14.57513, 52.617462], [14.582403, 52.61788], [14.590377, 52.613823], [14.590936, 52.609207], [14.59835, 52.609627], [14.598908, 52.605152], [14.606182, 52.60557], [14.60842, 52.588787], [14.615833, 52.587948], [14.616393, 52.583473], [14.624086, 52.581375], [14.639052, 52.579975], [14.639612, 52.5755], [14.632339, 52.57522], [14.633457, 52.56627], [14.626044, 52.56585], [14.626604, 52.56137], [14.61919, 52.56095], [14.61989, 52.556477], [14.612476, 52.5562], [14.613595, 52.547245], [14.606322, 52.546825], [14.608001, 52.533398], [14.600587, 52.532978], [14.601147, 52.5285], [14.60856, 52.52892], [14.610798, 52.511017], [14.618072, 52.511295], [14.618631, 52.50682], [14.626044, 52.50724], [14.627723, 52.49367], [14.620449, 52.493393], [14.621569, 52.48444], [14.605483, 52.481785], [14.604644, 52.46668], [14.598629, 52.46668], [14.598489, 52.462902], [14.592475, 52.46304], [14.592055, 52.455486], [14.5860405, 52.455627], [14.5798855, 52.45185], [14.573452, 52.44444], [14.561563, 52.444717], [14.555408, 52.44094], [14.549394, 52.441082], [14.543239, 52.437443], [14.5417, 52.411148], [14.535266, 52.403732], [14.529112, 52.400238], [14.528972, 52.39646], [14.546037, 52.380795], [14.5499525, 52.35002], [14.558206, 52.34387], [14.5601635, 52.328342], [14.567437, 52.328342], [14.578068, 52.312115], [14.584362, 52.310997], [14.585481, 52.302044], [14.578207, 52.301205], [14.571354, 52.29715], [14.570934, 52.289597], [14.580445, 52.283722], [14.587719, 52.28414], [14.588279, 52.279667], [14.5955515, 52.279945], [14.596111, 52.27547], [14.603805, 52.273373], [14.6166725, 52.27393], [14.625904, 52.272533], [14.626464, 52.268055], [14.633738, 52.268337], [14.64185, 52.2633], [14.66339, 52.2633], [14.668566, 52.259663], [14.684792, 52.259663], [14.689267, 52.248474], [14.699618, 52.241062], [14.698219, 52.222458], [14.692484, 52.21868], [14.692064, 52.21127], [14.67528, 52.203716], [14.674721, 52.19616], [14.694722, 52.17392], [14.682833, 52.158955], [14.671503, 52.1514], [14.670105, 52.132797], [14.67528, 52.12902], [14.669405, 52.12161], [14.673882, 52.11042], [14.689267, 52.099228], [14.705353, 52.09937], [14.715983, 52.095592], [14.731369, 52.08454], [14.735846, 52.073353], [14.74102, 52.069714], [14.729691, 52.06216], [14.728851, 52.050972], [14.734027, 52.047195], [14.728292, 52.04356], [14.727733, 52.036007], [14.722417, 52.036007], [14.721578, 52.024815], [14.716123, 52.024815], [14.710248, 52.01726], [14.709689, 52.00985], [14.703954, 52.006073], [14.702695, 51.98747], [14.691645, 51.98355], [14.690526, 51.968727], [14.695841, 51.968727], [14.705913, 51.957535], [14.704793, 51.94271], [14.6881485, 51.935158], [14.6929035, 51.927605], [14.687309, 51.923965], [14.686749, 51.916412], [14.681154, 51.912636], [14.680595, 51.905224], [14.669266, 51.89767], [14.66395, 51.89753], [14.66339, 51.89068], [14.658495, 51.890396], [14.659055, 51.88592], [14.651781, 51.8855], [14.6529, 51.87655], [14.645766, 51.87613], [14.646326, 51.871655], [14.639052, 51.871372], [14.624785, 51.861584], [14.618491, 51.8613], [14.618911, 51.856827], [14.604504, 51.85613], [14.605622, 51.847176], [14.59835, 51.846756], [14.598908, 51.84228], [14.591775, 51.84186], [14.592195, 51.837383], [14.585061, 51.837105], [14.585621, 51.83263], [14.592754, 51.83291], [14.593314, 51.828434], [14.58618, 51.82815], [14.58674, 51.823536], [14.593873, 51.823956], [14.596111, 51.806053], [14.610658, 51.80675], [14.6112175, 51.802277], [14.632898, 51.803257], [14.633318, 51.79878], [14.640591, 51.7992], [14.64115, 51.794724], [14.648424, 51.795002], [14.654998, 51.74115], [14.662131, 51.74157], [14.662691, 51.737095], [14.655558, 51.736675], [14.656117, 51.7322], [14.663251, 51.73262], [14.66381, 51.72814], [14.671083, 51.728424], [14.671503, 51.723946], [14.678777, 51.724365], [14.680455, 51.7108], [14.687589, 51.71122], [14.688707, 51.70674], [14.708011, 51.692757], [14.7187805, 51.692894], [14.718501, 51.689117], [14.728712, 51.681705], [14.728292, 51.674294], [14.7337475, 51.674294], [14.733188, 51.666878], [14.7385025, 51.6631], [14.732348, 51.65569], [14.737384, 51.648273], [14.736265, 51.63331], [14.74116, 51.62212], [14.746756, 51.62212], [14.746056, 51.61107], [14.734167, 51.603516], [14.722278, 51.592186], [14.710808, 51.584633], [14.705493, 51.584633], [14.700877, 51.59582], [14.685071, 51.59946], [14.689267, 51.58449], [14.688707, 51.57708], [14.683393, 51.57708], [14.676679, 51.55834], [14.665349, 51.550785], [14.654998, 51.55442], [14.629261, 51.55344], [14.628982, 51.549664], [14.606042, 51.54603], [14.601846, 51.55302], [14.602685, 51.564213], [14.59793, 51.56757], [14.58674, 51.56799], [14.58702, 51.571625], [14.570095, 51.572464], [14.563661, 51.56533], [14.552331, 51.56575], [14.551211, 51.55484], [14.527992, 51.552044], [14.527713, 51.548405], [14.516523, 51.5526], [14.499179, 51.553303], [14.493164, 51.549805], [14.458336, 51.551342], [14.456937, 51.536655], [14.451482, 51.540573], [14.445327, 51.537075], [14.439452, 51.537354], [14.4274235, 51.534138], [14.421688, 51.534416], [14.415394, 51.53106], [14.404345, 51.538895], [14.398609, 51.539173], [14.392315, 51.535816], [14.39791, 51.53176], [14.391616, 51.528404], [14.385741, 51.528683], [14.373432, 51.52169], [14.3614025, 51.518612], [14.349653, 51.519173], [14.349234, 51.515396], [14.354829, 51.51148], [14.354409, 51.5077], [14.348535, 51.50798], [14.341961, 51.500847], [14.3362255, 51.50113], [14.337205, 51.512318], [14.33175, 51.516235], [14.3260145, 51.516514], [14.3205595, 51.52057], [14.303076, 51.521408], [14.297621, 51.525467], [14.28643, 51.5298], [14.269086, 51.53078], [14.268666, 51.527004], [14.257057, 51.527702], [14.251602, 51.53176], [14.240132, 51.53246], [14.234677, 51.536514], [14.228803, 51.536797], [14.223348, 51.54085], [14.217612, 51.54127], [14.211458, 51.537773], [14.16502, 51.540573], [14.159425, 51.54463], [14.15369, 51.545048], [14.153411, 51.54127], [14.147535, 51.54169], [14.146696, 51.530502], [14.152152, 51.526443], [14.151872, 51.522667], [14.122918, 51.524487], [14.116624, 51.517353], [14.115365, 51.502388], [14.10963, 51.502808], [14.10921, 51.49903], [14.097041, 51.492317], [14.101518, 51.480705], [14.089348, 51.473854], [14.084033, 51.47805], [14.061653, 51.483505], [14.055919, 51.483784], [14.070885, 51.463783], [14.070045, 51.45609], [14.080397, 51.447697], [14.062633, 51.441124], [14.060394, 51.42196], [14.042211, 51.41147], [14.036476, 51.411747], [14.030461, 51.408253], [14.030042, 51.404335], [14.041232, 51.403774], [14.0408125, 51.39986], [14.018292, 51.40112], [14.017873, 51.397343], [14.023048, 51.393147], [14.022629, 51.38937], [14.011298, 51.389927], [14.010879, 51.386013], [14.016054, 51.381954], [14.015215, 51.374264], [13.998151, 51.375103], [13.987241, 51.379436], [13.989199, 51.39846], [13.971575, 51.39888], [13.96542, 51.395245], [13.959545, 51.395382], [13.953251, 51.391747], [13.941082, 51.38825], [13.929333, 51.38853], [13.928773, 51.380978], [13.905134, 51.381535], [13.89884, 51.3779], [13.881216, 51.37832], [13.881776, 51.38587], [13.869606, 51.382374], [13.857857, 51.382656], [13.852122, 51.386433], [13.8515625, 51.379017], [13.839253, 51.371746], [13.827365, 51.372025], [13.827644, 51.3758], [13.82177, 51.3758], [13.815615, 51.372303], [13.797852, 51.372585], [13.797292, 51.36517], [13.779248, 51.361813], [13.780087, 51.373005], [13.768198, 51.373283], [13.767778, 51.36573], [13.761764, 51.36587], [13.761484, 51.362095], [13.749735, 51.362373], [13.7439995, 51.36629], [13.726235, 51.36657], [13.714626, 51.370625], [13.709031, 51.3744], [13.703016, 51.374542], [13.702877, 51.370766], [13.691267, 51.37482], [13.685533, 51.378597], [13.679378, 51.37496], [13.679098, 51.371326], [13.619792, 51.372444], [13.619512, 51.36881], [13.613777, 51.372585], [13.614057, 51.37636], [13.608602, 51.383915], [13.608742, 51.38755], [13.590978, 51.38797], [13.584824, 51.384335], [13.572654, 51.380836], [13.566779, 51.380978], [13.560205, 51.369926], [13.55461, 51.37748], [13.554891, 51.381115], [13.543001, 51.381397], [13.54314, 51.385033], [13.537685, 51.392586], [13.538245, 51.403774], [13.514466, 51.404194], [13.508732, 51.40797], [13.490968, 51.41203], [13.4792185, 51.415943], [13.485653, 51.423218], [13.479918, 51.426994], [13.479638, 51.42336], [13.467749, 51.423496], [13.468168, 51.430912], [13.462153, 51.43105], [13.455999, 51.427414], [13.450265, 51.43119], [13.44425, 51.43133], [13.438655, 51.438885], [13.42131, 51.450214], [13.421451, 51.45399], [13.415576, 51.45399], [13.409142, 51.446716], [13.396693, 51.435806], [13.4022875, 51.428394], [13.396133, 51.424755], [13.390399, 51.42853], [13.372774, 51.436226], [13.36676, 51.436367], [13.35459, 51.43287], [13.348716, 51.43287], [13.348996, 51.440285], [13.337107, 51.440563], [13.342702, 51.43301], [13.348577, 51.429234], [13.330393, 51.425877], [13.330253, 51.4221], [13.324099, 51.41846], [13.29976, 51.41147], [13.305216, 51.40028], [13.275422, 51.400837], [13.275143, 51.39706], [13.2811575, 51.396923], [13.281017, 51.393284], [13.287032, 51.393147], [13.2866125, 51.38573], [13.280738, 51.38587], [13.280877, 51.38965], [13.269128, 51.393425], [13.257099, 51.393703], [13.251364, 51.39748], [13.23332, 51.397762], [13.227586, 51.40154], [13.227725, 51.405174], [13.22227, 51.416363], [13.216395, 51.42014], [13.22269, 51.427555], [13.22283, 51.43119], [13.211081, 51.43511], [13.205066, 51.43511], [13.204646, 51.424057], [13.198631, 51.4242], [13.192757, 51.427975], [13.192897, 51.43161], [13.199191, 51.438885], [13.21122, 51.438744], [13.2115, 51.44616], [13.217654, 51.449795], [13.218214, 51.460846], [13.212339, 51.464622], [13.206325, 51.46476], [13.200729, 51.472176], [13.201429, 51.49064], [13.207304, 51.486862], [13.219613, 51.494133], [13.220033, 51.505184], [13.226047, 51.505043], [13.226466, 51.51246], [13.220592, 51.516235], [13.220872, 51.523647], [13.214996, 51.527424], [13.215277, 51.53106], [13.203527, 51.538612], [13.204367, 51.55708], [13.1742935, 51.557636], [13.174573, 51.56491], [13.162404, 51.561413], [13.1626835, 51.56519], [13.156809, 51.568966], [13.156949, 51.572605], [13.169398, 51.583515], [13.169538, 51.58715], [13.175693, 51.590786], [13.169957, 51.59834], [13.157928, 51.59848], [13.146318, 51.606033], [13.140584, 51.613445], [13.134709, 51.617363], [13.128695, 51.617363], [13.128415, 51.60995], [13.116385, 51.61023], [13.116246, 51.606453], [13.110231, 51.606594], [13.110091, 51.602818], [13.098202, 51.60673], [13.098482, 51.614147], [13.0926075, 51.617924], [13.063793, 51.647854], [13.16758, 51.68702], [13.174014, 51.694435], [13.174153, 51.69807], [13.168419, 51.705624], [13.168559, 51.70926], [13.174713, 51.7129], [13.186462, 51.705345], [13.186742, 51.712616], [13.198912, 51.716255], [13.199191, 51.723667], [13.193457, 51.73108], [13.187442, 51.73122], [13.181567, 51.734997], [13.181847, 51.738632], [13.175693, 51.738773], [13.169957, 51.74255], [13.170238, 51.74996], [13.176251, 51.749825], [13.176392, 51.75346], [13.170657, 51.761013], [13.164783, 51.76479], [13.164922, 51.76843], [13.170937, 51.76843], [13.171077, 51.772064], [13.177231, 51.7757], [13.171636, 51.786892], [13.17793, 51.790527], [13.172055, 51.794304], [13.17821, 51.79794], [13.1783495, 51.80158], [13.1666, 51.80913], [13.15513, 51.824097], [13.155271, 51.827873], [13.149396, 51.83165], [13.149536, 51.835285], [13.137926, 51.846615], [13.138346, 51.857666], [13.14422, 51.85389], [13.150375, 51.857525], [13.162544, 51.857246], [13.163103, 51.872074], [13.157089, 51.87221], [13.1452, 51.87977], [13.13317, 51.879906], [13.133031, 51.87627], [13.126876, 51.87263], [13.096663, 51.87305], [13.096384, 51.86564], [13.072326, 51.865917], [13.066311, 51.869694], [13.048267, 51.869976], [13.048547, 51.877388], [13.054702, 51.881027], [13.048966, 51.88844], [13.060996, 51.888298], [13.055401, 51.89949], [13.037357, 51.89977], [13.031202, 51.896133], [13.0251875, 51.89991], [12.982946, 51.900467], [12.98938, 51.91152], [12.98966, 51.91893], [12.965602, 51.919212], [12.971756, 51.922848], [12.972176, 51.934036], [12.960007, 51.934177], [12.935948, 51.938232], [12.929934, 51.938232], [12.929514, 51.927185], [12.91133, 51.923687], [12.899302, 51.927605], [12.899442, 51.93124], [12.8632145, 51.9318], [12.863914, 51.9539], [12.858039, 51.957676], [12.858318, 51.965088], [12.84629, 51.96523], [12.833981, 51.96173], [12.827826, 51.958096], [12.797613, 51.958515], [12.791598, 51.96229], [12.785584, 51.962433], [12.786143, 51.977257], [12.76796, 51.977398], [12.76824, 51.984814], [12.744041, 51.985092], [12.726138, 51.992786], [12.719983, 51.992924], [12.720123, 51.996563], [12.714249, 52.00034], [12.69005, 52.000618], [12.69019, 52.004395], [12.6841755, 52.00817], [12.665992, 52.008312], [12.659838, 52.004673], [12.653263, 51.989986], [12.6290655, 51.99027], [12.6229105, 51.98677], [12.628785, 51.982994], [12.628646, 51.979218], [12.549896, 51.980194], [12.550316, 51.991386], [12.544302, 51.99502], [12.544441, 51.9988], [12.514229, 52.002857], [12.508354, 52.006634], [12.502339, 52.00677], [12.496325, 52.010548], [12.496465, 52.014187], [12.49073, 52.025375], [12.4908695, 52.02901], [12.478841, 52.03293], [12.472686, 52.03293], [12.466532, 52.025654], [12.4602375, 52.02202], [12.460097, 52.014606], [12.43576, 52.014885], [12.4359, 52.01866], [12.430025, 52.022438], [12.417995, 52.026215], [12.406106, 52.033768], [12.400231, 52.04118], [12.369879, 52.0416], [12.363864, 52.045376], [12.3581295, 52.05657], [12.346101, 52.060345], [12.340086, 52.06412], [12.334211, 52.071533], [12.328337, 52.07531], [12.328616, 52.08636], [12.322601, 52.090137], [12.310432, 52.090275], [12.310573, 52.094055], [12.304558, 52.094055], [12.298543, 52.09783], [12.292529, 52.09797], [12.292529, 52.10161], [12.280499, 52.101746], [12.28064, 52.10916], [12.274765, 52.116573], [12.274904, 52.123985], [12.250986, 52.13909], [12.245111, 52.146507], [12.245252, 52.150284], [12.239237, 52.150284], [12.239377, 52.157696], [12.227347, 52.161472], [12.227488, 52.168884], [12.233922, 52.183712], [12.245951, 52.17616], [12.252105, 52.179794], [12.252385, 52.190845], [12.258539, 52.19448], [12.258819, 52.201897], [12.252665, 52.202034], [12.252805, 52.205673], [12.258819, 52.205673], [12.271268, 52.212948], [12.289452, 52.212666], [12.3019, 52.21994], [12.3019, 52.223717], [12.295886, 52.223717], [12.296025, 52.227352], [12.290011, 52.23113], [12.283856, 52.23127], [12.277982, 52.235046], [12.277982, 52.23868], [12.272107, 52.24246], [12.259938, 52.246376], [12.253923, 52.246376], [12.253923, 52.25001], [12.260218, 52.257427], [12.260637, 52.27225], [12.267072, 52.283302], [12.267072, 52.286938], [12.273366, 52.290577], [12.27966, 52.301624], [12.2798, 52.3054], [12.292389, 52.316315], [12.298543, 52.31995], [12.311272, 52.338272], [12.311412, 52.345688], [12.305257, 52.345825], [12.305397, 52.349464], [12.293368, 52.357018], [12.293648, 52.36443], [12.305957, 52.368065], [12.311971, 52.367928], [12.312251, 52.37534], [12.300082, 52.37548], [12.300221, 52.382893], [12.306516, 52.390167], [12.312671, 52.390167], [12.31295, 52.401215], [12.306935, 52.40499], [12.300781, 52.401356], [12.300781, 52.405132], [12.294766, 52.405132], [12.282598, 52.40905], [12.282738, 52.412685], [12.301201, 52.41996], [12.295186, 52.423737], [12.295326, 52.427372], [12.307495, 52.427235], [12.307775, 52.434647], [12.31393, 52.438282], [12.314209, 52.445698], [12.326378, 52.445557], [12.326658, 52.45297], [12.332812, 52.456608], [12.333232, 52.47143], [12.321063, 52.471573], [12.315048, 52.47535], [12.315328, 52.486538], [12.309314, 52.490314], [12.303159, 52.490314], [12.30302, 52.48668], [12.290851, 52.48682], [12.284696, 52.483044], [12.278542, 52.48318], [12.278681, 52.490597], [12.272667, 52.490597], [12.272667, 52.494373], [12.266652, 52.49815], [12.267072, 52.512974], [12.260918, 52.512974], [12.242873, 52.520668], [12.236579, 52.517033], [12.23644, 52.509617], [12.230285, 52.509617], [12.2301445, 52.50598], [12.2362995, 52.502205], [12.236159, 52.49843], [12.229865, 52.494793], [12.22385, 52.49493], [12.22385, 52.49857], [12.217836, 52.49857], [12.217696, 52.49493], [12.211542, 52.491295], [12.205387, 52.491295], [12.205527, 52.49507], [12.199372, 52.49507], [12.193078, 52.491436], [12.187203, 52.49899], [12.18119, 52.502766], [12.1750345, 52.502766], [12.175314, 52.510178], [12.193917, 52.521088], [12.194057, 52.5285], [12.188043, 52.52864], [12.182029, 52.532417], [12.175874, 52.532417], [12.163565, 52.52878], [12.163425, 52.525143], [12.151116, 52.521507], [12.151396, 52.5327], [12.157551, 52.536335], [12.1641245, 52.55102], [12.170419, 52.558434], [12.189022, 52.569344], [12.183007, 52.57312], [12.183707, 52.602776], [12.177692, 52.602913], [12.178112, 52.621376], [12.196296, 52.613823], [12.208605, 52.613686], [12.214759, 52.61732], [12.214899, 52.620956], [12.233222, 52.62082], [12.239516, 52.624454], [12.239797, 52.635643], [12.245951, 52.635506], [12.246091, 52.642918], [12.240076, 52.646694], [12.240216, 52.65411], [12.24665, 52.661522], [12.24665, 52.665157], [12.240636, 52.668934], [12.240915, 52.67635], [12.234761, 52.676487], [12.2349, 52.680126], [12.240915, 52.680126], [12.2410555, 52.68376], [12.228746, 52.683903], [12.222872, 52.691456], [12.223011, 52.69509], [12.229166, 52.69509], [12.229166, 52.698727], [12.223151, 52.702503], [12.216997, 52.702644], [12.210982, 52.70642], [12.2111225, 52.710056], [12.217277, 52.710056], [12.217277, 52.713696], [12.211262, 52.713833], [12.2049675, 52.710197], [12.205108, 52.71761], [12.211262, 52.717472], [12.211542, 52.724884], [12.217556, 52.724884], [12.217696, 52.72852], [12.2301445, 52.735935], [12.224131, 52.73971], [12.22441, 52.747124], [12.218256, 52.747124], [12.212241, 52.754677], [12.212381, 52.758316], [12.218676, 52.76195], [12.218815, 52.769363], [12.231124, 52.769226], [12.231544, 52.78405], [12.243712, 52.78405], [12.249867, 52.780273], [12.2560215, 52.783913], [12.256162, 52.787548], [12.262316, 52.791183], [12.262735, 52.80601], [12.256721, 52.806152], [12.250707, 52.813564], [12.245111, 52.832306], [12.245252, 52.83972], [12.239237, 52.8435], [12.239516, 52.854546], [12.227347, 52.858463], [12.227488, 52.862103], [12.221333, 52.86224], [12.221053, 52.854828], [12.215038, 52.858604], [12.2151785, 52.86224], [12.209024, 52.86238], [12.209024, 52.866016], [12.203149, 52.87357], [12.196995, 52.87357], [12.184266, 52.858883], [12.178112, 52.858883], [12.165803, 52.855385], [12.159649, 52.855385], [12.141046, 52.85189], [12.134751, 52.84825], [12.135031, 52.855667], [12.141185, 52.859303], [12.135171, 52.86308], [12.129156, 52.870632], [12.129576, 52.88546], [12.116847, 52.870632], [12.110693, 52.870773], [12.104678, 52.87455], [12.092369, 52.870914], [12.086215, 52.87105], [12.086354, 52.882103], [12.074046, 52.878605], [12.074046, 52.882244], [12.037119, 52.882664], [12.031104, 52.88644], [12.02481, 52.8828], [12.012501, 52.8828], [12.012362, 52.87539], [12.000052, 52.87553], [11.993898, 52.87189], [11.981589, 52.872032], [11.96928, 52.87581], [11.963265, 52.879585], [11.938787, 52.88728], [11.908015, 52.887558], [11.901861, 52.891335], [11.889692, 52.89511], [11.8836775, 52.902664], [11.871368, 52.90644], [11.846611, 52.902943], [11.828427, 52.914272], [11.8285675, 52.921688], [11.841016, 52.9291], [11.853465, 52.9326], [11.8537445, 52.947563], [11.8475895, 52.947563], [11.835281, 52.95148], [11.835421, 52.955116], [11.7922, 52.955536], [11.7922, 52.95917], [11.786185, 52.962948], [11.78017, 52.97428], [11.767861, 52.978058], [11.7618475, 52.981834], [11.755553, 52.981834], [11.749538, 52.98561], [11.743384, 52.98575], [11.724641, 52.978477], [11.712192, 52.97484], [11.693728, 52.97498], [11.693728, 52.978756], [11.687574, 52.982533], [11.687994, 53.004772], [11.675685, 53.004913], [11.657082, 53.001274], [11.644633, 53.001415], [11.632324, 53.00897], [11.632464, 53.01638], [11.645053, 53.02743], [11.651347, 53.031208], [11.639038, 53.03862], [11.626589, 53.03876], [11.601831, 53.031487], [11.595537, 53.031628], [11.570919, 53.03918], [11.558611, 53.05051], [11.546302, 53.05065], [11.533713, 53.043236], [11.521404, 53.043377], [11.508955, 53.047153], [11.45972, 53.077366], [11.447271, 53.077507], [11.434822, 53.073868], [11.428528, 53.07009], [11.40377, 53.070374], [11.40363, 53.066597], [11.385027, 53.059322], [11.353835, 53.052048], [11.347681, 53.05219], [11.335232, 53.059742], [11.329078, 53.059742], [11.322923, 53.067295], [11.322923, 53.07093], [11.30432, 53.082264], [11.292011, 53.086178], [11.279562, 53.09737], [11.273408, 53.101147], [11.273547, 53.119747], [11.285996, 53.119747], [11.2983055, 53.115833], [11.317048, 53.112057], [11.317048, 53.115692], [11.335651, 53.11555], [11.341946, 53.111774], [11.366843, 53.115273], [11.372998, 53.111496], [11.385447, 53.10772], [11.397896, 53.10758], [11.40405, 53.111355], [11.397896, 53.11877], [11.398175, 53.13737], [11.410484, 53.13737], [11.410484, 53.133595], [11.422933, 53.133457], [11.422933, 53.137234], [11.441676, 53.137093], [11.441676, 53.133316], [11.44783, 53.133316], [11.44783, 53.13695], [11.472728, 53.136814], [11.478883, 53.133038], [11.478883, 53.12562], [11.50364, 53.125484], [11.50364, 53.121708], [11.509794, 53.11793], [11.5160885, 53.121567], [11.540986, 53.121426], [11.540986, 53.125065], [11.553435, 53.1287], [11.5535755, 53.132477], [11.55973, 53.136112], [11.553715, 53.147305], [11.566164, 53.154716], [11.5725975, 53.16213], [11.5725975, 53.169544], [11.560289, 53.177097], [11.566584, 53.18451], [11.566584, 53.188286], [11.560429, 53.192062], [11.566723, 53.199337], [11.560569, 53.203114], [11.566863, 53.210526], [11.591761, 53.21039], [11.598055, 53.214024], [11.604349, 53.221436], [11.616938, 53.225075], [11.623232, 53.22871], [11.629526, 53.236122], [11.635821, 53.23976], [11.648129, 53.235985], [11.660579, 53.235844], [11.666873, 53.23948], [11.704219, 53.2392], [11.710374, 53.235424], [11.716528, 53.235424], [11.716528, 53.231647], [11.722683, 53.22787], [11.735131, 53.22773], [11.734852, 53.212906], [11.7473, 53.212765], [11.759889, 53.22004], [11.766044, 53.22004], [11.778492, 53.223675], [11.834442, 53.223114], [11.840736, 53.226753], [11.840736, 53.23053], [11.822272, 53.24186], [11.809964, 53.241997], [11.803809, 53.24955], [11.853465, 53.248993], [11.859619, 53.245216], [11.872067, 53.245075], [11.872208, 53.25263], [11.884796, 53.259903], [11.897245, 53.26354], [11.897525, 53.274727], [11.903679, 53.27459], [11.915988, 53.270813], [11.953335, 53.270393], [11.953195, 53.266754], [11.965783, 53.27403], [11.965783, 53.277805], [11.972218, 53.28144], [11.978512, 53.288857], [11.978652, 53.292492], [11.997255, 53.29235], [12.003269, 53.288574], [12.003409, 53.29235], [12.009704, 53.29599], [12.022153, 53.29585], [12.028447, 53.299488], [12.028867, 53.31809], [12.022852, 53.32564], [12.022852, 53.32942], [12.029146, 53.333057], [12.048029, 53.34033], [12.054323, 53.343967], [12.060478, 53.343967], [12.054743, 53.366344], [12.085795, 53.366066], [12.085376, 53.343685], [12.116287, 53.33963], [12.116427, 53.347042], [12.141185, 53.34313], [12.141325, 53.35054], [12.147619, 53.3504], [12.147619, 53.354176], [12.160208, 53.357815], [12.159928, 53.3504], [12.166082, 53.346485], [12.171957, 53.335293], [12.190701, 53.33879], [12.190841, 53.346203], [12.197135, 53.34998], [12.215878, 53.3497], [12.222172, 53.353336], [12.234481, 53.3532], [12.234342, 53.34956], [12.2403555, 53.33823], [12.2465105, 53.33823], [12.24637, 53.334454], [12.252524, 53.330677], [12.264833, 53.326763], [12.264554, 53.319347], [12.283157, 53.31921], [12.283297, 53.322845], [12.314209, 53.322567], [12.320364, 53.31879], [12.326518, 53.31865], [12.332672, 53.314873], [12.338827, 53.31473], [12.344842, 53.310955], [12.35715, 53.30718], [12.363305, 53.303265], [12.381908, 53.303123], [12.381768, 53.299347], [12.400231, 53.299206], [12.400231, 53.29543], [12.406246, 53.291653], [12.406106, 53.287876], [12.399812, 53.28424], [12.3996725, 53.276825], [12.418136, 53.276546], [12.42429, 53.27277], [12.430445, 53.27277], [12.436459, 53.268993], [12.436179, 53.257805], [12.448208, 53.246475], [12.454363, 53.246334], [12.460657, 53.24997], [12.4915695, 53.24969], [12.491709, 53.253326], [12.497724, 53.24955], [12.503878, 53.249413], [12.504158, 53.256966], [12.53521, 53.260323], [12.547379, 53.256405], [12.553673, 53.256264], [12.59046, 53.248432], [12.602629, 53.244514], [12.608644, 53.240738], [12.614938, 53.2406], [12.633681, 53.24787], [12.633821, 53.25151], [12.670887, 53.25109], [12.670748, 53.247314], [12.676763, 53.243538], [12.670328, 53.236122], [12.670048, 53.22871], [12.676063, 53.224934], [12.688372, 53.221016], [12.725438, 53.220596], [12.725298, 53.21682], [12.750056, 53.220318], [12.762365, 53.22004], [12.762225, 53.2164], [12.755511, 53.201576], [12.749077, 53.19416], [12.761386, 53.190384], [12.76754, 53.190247], [12.767261, 53.18283], [12.785724, 53.182552], [12.8169155, 53.19332], [12.816776, 53.189545], [12.82293, 53.189545], [12.829225, 53.193184], [12.841674, 53.1929], [12.847968, 53.19654], [12.854122, 53.19654], [12.859997, 53.188988], [12.859857, 53.185207], [12.865871, 53.18143], [12.872026, 53.18143], [12.884055, 53.17374], [12.884195, 53.177517], [12.890349, 53.177376], [12.89063, 53.184788], [12.902938, 53.18465], [12.915667, 53.191925], [12.93413, 53.191643], [12.93385, 53.18423], [12.940004, 53.18409], [12.939865, 53.180454], [12.946019, 53.180313], [12.9463, 53.187725], [12.952733, 53.19514], [12.977351, 53.19472], [12.977211, 53.191086], [12.983226, 53.18717], [12.976932, 53.18367], [12.964482, 53.180035], [12.964343, 53.176395], [12.958049, 53.17276], [12.957909, 53.168983], [12.964203, 53.17262], [12.970357, 53.17248], [12.9700775, 53.165066], [12.982107, 53.157513], [12.994696, 53.164787], [13.007005, 53.16451], [13.019593, 53.17178], [13.025747, 53.17178], [13.0258875, 53.17542], [13.032461, 53.18283], [13.038755, 53.186466], [13.038896, 53.190105], [13.04505, 53.190105], [13.04519, 53.19374], [13.057639, 53.19724], [13.076102, 53.19696], [13.088831, 53.20423], [13.08911, 53.211647], [13.095264, 53.211647], [13.101279, 53.20773], [13.1075735, 53.211365], [13.108553, 53.233746], [13.121001, 53.237244], [13.13317, 53.233326], [13.139745, 53.2406], [13.145899, 53.2406], [13.152193, 53.244236], [13.164502, 53.243958], [13.170796, 53.247593], [13.176951, 53.24745], [13.176811, 53.243816], [13.182965, 53.243675], [13.183246, 53.24745], [13.18926, 53.243538], [13.194995, 53.236122], [13.194855, 53.232346], [13.206465, 53.21738], [13.218913, 53.217102], [13.231082, 53.213184], [13.231222, 53.21696], [13.237657, 53.224236], [13.243951, 53.22787], [13.24423, 53.231647], [13.250805, 53.242558], [13.2512245, 53.253887], [13.257658, 53.257523], [13.276542, 53.26088], [13.276542, 53.26452], [13.289269, 53.27179], [13.301859, 53.275288], [13.314028, 53.275146], [13.332491, 53.27109], [13.3448, 53.270813], [13.351094, 53.27445], [13.363543, 53.274307], [13.369278, 53.266754], [13.374872, 53.255424], [13.380747, 53.248013], [13.386902, 53.24787], [13.386482, 53.24046], [13.405225, 53.243958], [13.405505, 53.25123], [13.41194, 53.254868], [13.412359, 53.26228], [13.425087, 53.269413], [13.431521, 53.276966], [13.431662, 53.280464], [13.44411, 53.280323], [13.44425, 53.2841], [13.438096, 53.2841], [13.43222, 53.288017], [13.438375, 53.29151], [13.438655, 53.295288], [13.457118, 53.29487], [13.456698, 53.287598], [13.481457, 53.287178], [13.50048, 53.297947], [13.494744, 53.301865], [13.507473, 53.312634], [13.501739, 53.320328], [13.501878, 53.323826], [13.507893, 53.32005], [13.507613, 53.31641], [13.5262165, 53.31599], [13.526496, 53.31991], [13.520901, 53.331097], [13.52132, 53.338512], [13.527475, 53.33837], [13.528034, 53.349422], [13.515725, 53.3497], [13.5223, 53.356834], [13.522719, 53.364388], [13.528734, 53.364246], [13.534748, 53.36047], [13.540903, 53.360332], [13.554191, 53.37502], [13.55517, 53.389843], [13.548876, 53.389843], [13.549295, 53.39726], [13.5554495, 53.39726], [13.568178, 53.400753], [13.574472, 53.40425], [13.580627, 53.40425], [13.586922, 53.40775], [13.592936, 53.403973], [13.593216, 53.40775], [13.605525, 53.40747], [13.605945, 53.411385], [13.618253, 53.410828], [13.617973, 53.40733], [13.624127, 53.40733], [13.624268, 53.410828], [13.637556, 53.421875], [13.625667, 53.42943], [13.6378355, 53.42901], [13.638675, 53.444115], [13.650844, 53.44006], [13.657278, 53.443695], [13.651543, 53.44747], [13.670706, 53.458244], [13.67686, 53.458103], [13.67714, 53.46188], [13.689869, 53.465237], [13.709311, 53.476006], [13.709451, 53.479782], [13.734348, 53.479362], [13.740783, 53.483], [13.746937, 53.48286], [13.746798, 53.479225], [13.752672, 53.47545], [13.77757, 53.474888], [13.777709, 53.474888], [13.783864, 53.474888], [13.802747, 53.478245], [13.80932, 53.481743], [13.828343, 53.49587], [13.816594, 53.49643], [13.810579, 53.500343], [13.804146, 53.496708], [13.798271, 53.500484], [13.792536, 53.50818], [13.786521, 53.511955], [13.780227, 53.512093], [13.780507, 53.51685], [13.774772, 53.523285], [13.775052, 53.52692], [13.778688, 53.534336], [13.782465, 53.544266], [13.783724, 53.55], [13.789598, 53.556293], [13.802187, 53.556156], [13.801068, 53.541187], [13.807083, 53.53741], [13.824707, 53.522305], [13.824567, 53.51867], [13.818132, 53.51503], [13.849325, 53.514473], [13.861494, 53.510555], [13.879678, 53.502724], [13.879538, 53.501045], [13.873103, 53.499084]], [[13.4697075, 52.667816], [13.463693, 52.667816], [13.457258, 52.66054], [13.481176, 52.65271], [13.475022, 52.64921], [13.468868, 52.64921], [13.462713, 52.645576], [13.456559, 52.645718], [13.456698, 52.649494], [13.450685, 52.649494], [13.438096, 52.64236], [13.437816, 52.634945], [13.431662, 52.634945], [13.419772, 52.638863], [13.419912, 52.64264], [13.413618, 52.639], [13.401729, 52.646557], [13.401588, 52.64278], [13.395154, 52.635506], [13.389, 52.631866], [13.382846, 52.632008], [13.382706, 52.62823], [13.370256, 52.621098], [13.33361, 52.62166], [13.315566, 52.625572], [13.3158455, 52.632988], [13.309971, 52.636765], [13.310251, 52.644176], [13.304516, 52.65173], [13.310671, 52.65537], [13.286332, 52.655647], [13.285493, 52.637184], [13.267309, 52.637463], [13.26717, 52.633686], [13.273045, 52.62991], [13.272764, 52.622498], [13.248567, 52.626553], [13.242272, 52.622917], [13.230243, 52.62683], [13.217094, 52.604733], [13.211081, 52.604874], [13.21094, 52.601097], [13.216675, 52.59368], [13.22255, 52.589905], [13.22241, 52.58613], [13.216395, 52.58627], [13.216255, 52.582493], [13.2042265, 52.58641], [13.198072, 52.586548], [13.192198, 52.590324], [13.180168, 52.5941], [13.161844, 52.594383], [13.155411, 52.58711], [13.143102, 52.58361], [13.136948, 52.58361], [13.136667, 52.5762], [13.148836, 52.576057], [13.15513, 52.579697], [13.160866, 52.572144], [13.160585, 52.564728], [13.154431, 52.561092], [13.153872, 52.55004], [13.141703, 52.550182], [13.135828, 52.55396], [13.135129, 52.53913], [13.12226, 52.52081], [13.128135, 52.513393], [13.140305, 52.513115], [13.152613, 52.51675], [13.152473, 52.512974], [13.170517, 52.50906], [13.176532, 52.505283], [13.163943, 52.49801], [13.138765, 52.47619], [13.132611, 52.47619], [13.126456, 52.472553], [13.126317, 52.468914], [13.120023, 52.46528], [13.119323, 52.446674], [13.125197, 52.442898], [13.131072, 52.435486], [13.118624, 52.42821], [13.118484, 52.424576], [13.112189, 52.420937], [13.093866, 52.417442], [13.099601, 52.40989], [13.099461, 52.40625], [13.11163, 52.406113], [13.117505, 52.402336], [13.135549, 52.39464], [13.147717, 52.3945], [13.141283, 52.38709], [13.153732, 52.394363], [13.165761, 52.390446], [13.17793, 52.390305], [13.17807, 52.39408], [13.165901, 52.394222], [13.166041, 52.397858], [13.203108, 52.412266], [13.215277, 52.411987], [13.227725, 52.41926], [13.252064, 52.41898], [13.257798, 52.411427], [13.257519, 52.404015], [13.269688, 52.403873], [13.275562, 52.400097], [13.281716, 52.399956], [13.306614, 52.414364], [13.306475, 52.41073], [13.317944, 52.39576], [13.348856, 52.410168], [13.348716, 52.40639], [13.360605, 52.398838], [13.3785095, 52.391144], [13.378369, 52.38751], [13.396553, 52.38723], [13.395993, 52.376038], [13.426346, 52.375618], [13.432361, 52.37548], [13.43278, 52.382893], [13.438795, 52.382893], [13.427605, 52.405273], [13.427885, 52.40891], [13.440194, 52.412544], [13.458517, 52.4159], [13.464671, 52.41954], [13.476841, 52.4194], [13.488171, 52.400658], [13.494045, 52.39688], [13.512229, 52.3966], [13.524538, 52.400097], [13.530552, 52.399956], [13.536427, 52.39618], [13.542721, 52.39982], [13.542162, 52.388767], [13.572515, 52.388206], [13.603007, 52.395203], [13.602588, 52.38401], [13.608602, 52.38401], [13.614476, 52.380234], [13.614197, 52.37282], [13.638675, 52.379814], [13.644549, 52.376038], [13.650564, 52.3759], [13.650284, 52.368484], [13.656299, 52.368484], [13.656158, 52.364708], [13.64371, 52.357574], [13.64315, 52.346386], [13.648886, 52.338974], [13.660914, 52.33869], [13.661195, 52.34247], [13.673923, 52.357018], [13.674203, 52.36443], [13.680357, 52.36443], [13.692806, 52.371563], [13.698541, 52.367786], [13.704975, 52.37506], [13.711269, 52.378696], [13.705114, 52.378838], [13.705395, 52.382473], [13.69938, 52.382614], [13.69952, 52.38625], [13.724418, 52.400795], [13.742461, 52.400375], [13.742601, 52.404152], [13.748896, 52.40779], [13.737145, 52.415344], [13.737565, 52.422756], [13.74372, 52.426395], [13.749735, 52.426254], [13.750434, 52.441082], [13.762603, 52.44094], [13.762882, 52.448353], [13.73267, 52.448772], [13.72134, 52.46374], [13.715046, 52.460243], [13.7147665, 52.45283], [13.702877, 52.456608], [13.703156, 52.46402], [13.691128, 52.4643], [13.673503, 52.475628], [13.6732235, 52.471992], [13.667209, 52.471992], [13.667349, 52.47577], [13.661334, 52.47591], [13.649445, 52.479687], [13.636996, 52.472553], [13.630842, 52.472553], [13.630702, 52.468914], [13.618672, 52.469055], [13.618953, 52.476467], [13.625247, 52.480106], [13.631821, 52.491154], [13.63224, 52.502205], [13.645109, 52.51689], [13.663572, 52.524025], [13.663852, 52.52766], [13.651683, 52.527943], [13.645808, 52.53172], [13.633499, 52.52822], [13.627484, 52.52822], [13.6276245, 52.531998], [13.62189, 52.539413], [13.616015, 52.543327], [13.591957, 52.547386], [13.592377, 52.558434], [13.5867815, 52.565987], [13.574613, 52.566128], [13.574892, 52.57354], [13.557268, 52.58487], [13.5452385, 52.588787], [13.527195, 52.592842], [13.514886, 52.589207], [13.503417, 52.604313], [13.503696, 52.611725], [13.510131, 52.619], [13.51027, 52.622635], [13.52286, 52.62991], [13.529293, 52.637184], [13.529433, 52.64096], [13.523559, 52.644737], [13.517404, 52.64488], [13.511529, 52.648655], [13.487471, 52.656345], [13.493905, 52.66376], [13.494045, 52.667397], [13.481876, 52.667538], [13.482296, 52.67509], [13.4697075, 52.667816]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Bremen',
      type: 'Land',
      area: '326.73 km²',
      bundesratVotes: '3 (out of 69)',
      density: '1700/km²',
      timeZone: 'UTC+1 (CET)',
      population: 682986,
      capital: 'Bremen',
      government: 'Bürgerschaft of Bremen',
      head: 'Andreas Bovenschulte (SPD)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[8.985491, 53.12828], [8.973182, 53.128002], [8.967168, 53.124084], [8.948704, 53.123806], [8.949123, 53.11639], [8.955278, 53.11639], [8.961713, 53.10912], [8.968146, 53.10548], [8.98675, 53.102123], [8.974721, 53.094433], [8.968566, 53.09429], [8.962691, 53.090515], [8.96409, 53.06058], [8.970244, 53.060722], [8.976679, 53.053307], [8.982973, 53.04967], [8.976819, 53.04967], [8.971084, 53.042118], [8.952761, 53.03792], [8.946886, 53.034145], [8.9471655, 53.026733], [8.940871, 53.030228], [8.935416, 53.015263], [8.922968, 53.01876], [8.917092, 53.014843], [8.892335, 53.0182], [8.885761, 53.025475], [8.866878, 53.036243], [8.866458, 53.043797], [8.860444, 53.03988], [8.867158, 53.02883], [8.867297, 53.025055], [8.855128, 53.024914], [8.849114, 53.020996], [8.848695, 53.02841], [8.836805, 53.020718], [8.830511, 53.024353], [8.818202, 53.024075], [8.818062, 53.02785], [8.811488, 53.035126], [8.805333, 53.034985], [8.792885, 53.038483], [8.792605, 53.04226], [8.780296, 53.041977], [8.773862, 53.04925], [8.773442, 53.056805], [8.767288, 53.056664], [8.761273, 53.05275], [8.761553, 53.04911], [8.755538, 53.045197], [8.755678, 53.04142], [8.749524, 53.04128], [8.74323, 53.044914], [8.737494, 53.03736], [8.73134, 53.037224], [8.712317, 53.047993], [8.705744, 53.055267], [8.711618, 53.05918], [8.710639, 53.077785], [8.704205, 53.08506], [8.6980505, 53.08492], [8.691616, 53.08856], [8.673153, 53.08814], [8.666578, 53.09541], [8.666019, 53.1066], [8.653431, 53.110096], [8.652731, 53.124924], [8.633569, 53.135693], [8.633149, 53.14311], [8.626855, 53.146744], [8.625875, 53.165348], [8.613147, 53.17248], [8.600558, 53.17584], [8.588249, 53.175556], [8.563352, 53.18227], [8.544469, 53.189266], [8.538314, 53.189125], [8.519431, 53.19598], [8.513137, 53.199615], [8.500269, 53.21039], [8.4938345, 53.213882], [8.493415, 53.221436], [8.487121, 53.224934], [8.486841, 53.22871], [8.492995, 53.22885], [8.505024, 53.232906], [8.517473, 53.22955], [8.523627, 53.22969], [8.530202, 53.222416], [8.530481, 53.21878], [8.54279, 53.21906], [8.555519, 53.211926], [8.567548, 53.21598], [8.573982, 53.212486], [8.579717, 53.22004], [8.585872, 53.220177], [8.59832, 53.21682], [8.5986, 53.213043], [8.586571, 53.205353], [8.581116, 53.194023], [8.593564, 53.190525], [8.593844, 53.186886], [8.599998, 53.187027], [8.605873, 53.190945], [8.612028, 53.191086], [8.611748, 53.198498], [8.624057, 53.198776], [8.629931, 53.202694], [8.64266, 53.19556], [8.64294, 53.191784], [8.655529, 53.188427], [8.661823, 53.184788], [8.662103, 53.181152], [8.674412, 53.18143], [8.674551, 53.177654], [8.680706, 53.177795], [8.680566, 53.181572], [8.686721, 53.181713], [8.69889, 53.185627], [8.705324, 53.182133], [8.711478, 53.18227], [8.717353, 53.186188], [8.729941, 53.18269], [8.730082, 53.178913], [8.736516, 53.17542], [8.74267, 53.175556], [8.74309, 53.168003], [8.761553, 53.168423], [8.7742815, 53.16129], [8.780436, 53.16143], [8.780296, 53.165207], [8.786311, 53.168983], [8.78645, 53.165207], [8.829532, 53.166187], [8.84212, 53.16269], [8.84268, 53.1515], [8.861703, 53.140728], [8.861842, 53.13695], [8.898769, 53.13779], [8.904784, 53.141567], [8.904923, 53.13793], [8.911078, 53.13793], [8.923107, 53.145763], [8.922828, 53.149403], [8.941011, 53.157234], [8.9471655, 53.157375], [8.9536, 53.1501], [8.960034, 53.146465], [8.966468, 53.13905], [8.972623, 53.13919], [8.978917, 53.135555], [8.985491, 53.12828]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Hamburg',
      type: 'Land',
      area: '755.22 km²',
      bundesratVotes: '3 (out of 69)',
      density: '2500/km²',
      timeZone: 'UTC+1 (CET)',
      population: 1841179,
      capital: 'Hamburg',
      government: 'Bürgerschaft of Hamburg',
      head: 'Peter Tschentscher (SPD)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[10.192183, 53.740788], [10.198617, 53.740788], [10.198896, 53.729736], [10.186588, 53.71869], [10.180293, 53.718548], [10.180154, 53.722324], [10.17386, 53.718548], [10.161271, 53.714912], [10.16141, 53.711136], [10.167845, 53.711136], [10.16183, 53.700085], [10.155676, 53.692673], [10.149382, 53.689034], [10.149521, 53.685257], [10.16239, 53.6854], [10.168963, 53.677986], [10.181832, 53.677986], [10.182112, 53.67057], [10.188406, 53.67071], [10.201414, 53.6633], [10.208128, 53.656025], [10.19568, 53.64847], [10.208548, 53.644836], [10.214843, 53.644974], [10.221416, 53.641197], [10.221557, 53.63756], [10.227851, 53.63756], [10.22799, 53.633926], [10.202953, 53.626373], [10.196659, 53.622734], [10.196798, 53.6191], [10.203233, 53.6191], [10.203652, 53.608047], [10.197498, 53.60427], [10.203932, 53.600636], [10.210647, 53.59322], [10.17232, 53.593082], [10.166026, 53.589443], [10.159593, 53.589443], [10.160012, 53.578396], [10.153717, 53.578255], [10.153857, 53.57462], [10.166726, 53.57098], [10.167006, 53.56357], [10.154557, 53.556156], [10.161271, 53.545105], [10.167565, 53.54888], [10.173999, 53.54888], [10.174279, 53.54147], [10.167985, 53.53783], [10.168124, 53.534054], [10.174699, 53.53042], [10.187707, 53.526783], [10.194281, 53.523144], [10.207009, 53.523144], [10.219598, 53.53056], [10.226172, 53.52692], [10.226452, 53.51951], [10.233026, 53.51587], [10.233166, 53.512234], [10.226731, 53.512234], [10.2268715, 53.508457], [10.233445, 53.50482], [10.23974, 53.50482], [10.246035, 53.5086], [10.246734, 53.49377], [10.259602, 53.490135], [10.266176, 53.486496], [10.278905, 53.486637], [10.279464, 53.47545], [10.292612, 53.468174], [10.298906, 53.468174], [10.311914, 53.4609], [10.30576, 53.457123], [10.312334, 53.453487], [10.324783, 53.45363], [10.324364, 53.4609], [10.336812, 53.46104], [10.331078, 53.449852], [10.331218, 53.446213], [10.319049, 53.446213], [10.319188, 53.442436], [10.299886, 53.434883], [10.287017, 53.431107], [10.280583, 53.431107], [10.274009, 53.42733], [10.267575, 53.427193], [10.267575, 53.423553], [10.254566, 53.408447], [10.248133, 53.40467], [10.228829, 53.40453], [10.215961, 53.40817], [10.177217, 53.40789], [10.157774, 53.418938], [10.157774, 53.422714], [10.144766, 53.43013], [10.144766, 53.433765], [10.118889, 53.433624], [10.105881, 53.44104], [10.105741, 53.448452], [10.099167, 53.452087], [10.092592, 53.459503], [10.086159, 53.46328], [10.073151, 53.466915], [10.053708, 53.47419], [10.047274, 53.466637], [10.047414, 53.462997], [10.053847, 53.45922], [10.047553, 53.455585], [10.0281105, 53.455444], [10.021677, 53.451668], [10.034685, 53.444256], [10.021816, 53.44048], [10.015382, 53.44048], [10.002514, 53.43656], [9.99594, 53.43656], [9.996079, 53.42915], [9.983071, 53.425232], [9.976637, 53.425232], [9.976637, 53.432648], [9.957194, 53.436283], [9.944326, 53.43992], [9.944326, 53.432507], [9.9314575, 53.432365], [9.925163, 53.42859], [9.912295, 53.424812], [9.905861, 53.424675], [9.905861, 53.42845], [9.91859, 53.436005], [9.912155, 53.43964], [9.924884, 53.447334], [9.91831, 53.45838], [9.898868, 53.469433], [9.867116, 53.45055], [9.860822, 53.446774], [9.854387, 53.446774], [9.834945, 53.46146], [9.809208, 53.47251], [9.802914, 53.47237], [9.802634, 53.479923], [9.79634, 53.479782], [9.79578, 53.498528], [9.801935, 53.502304], [9.801935, 53.50608], [9.7892065, 53.50594], [9.782912, 53.502163], [9.776478, 53.5058], [9.782632, 53.509716], [9.769903, 53.513214], [9.76347, 53.51699], [9.76291, 53.531956], [9.775639, 53.532097], [9.775639, 53.535873], [9.76263, 53.543148], [9.76249, 53.5507], [9.76235, 53.554337], [9.768925, 53.554337], [9.768644, 53.565525], [9.762211, 53.565525], [9.723605, 53.569023], [9.72976, 53.576435], [9.72976, 53.580074], [9.735914, 53.587486], [9.735914, 53.59112], [9.729341, 53.59476], [9.741929, 53.602173], [9.741649, 53.613224], [9.754518, 53.61336], [9.754238, 53.620636], [9.747804, 53.62427], [9.754098, 53.62805], [9.753958, 53.635323], [9.760252, 53.6391], [9.766546, 53.63924], [9.766827, 53.62819], [9.786269, 53.620914], [9.792563, 53.621056], [9.799137, 53.61742], [9.786269, 53.61728], [9.786408, 53.613644], [9.793122, 53.606228], [9.805991, 53.602592], [9.8191395, 53.595318], [9.825574, 53.595318], [9.831868, 53.599094], [9.838022, 53.60651], [9.85089, 53.60651], [9.857185, 53.610287], [9.857045, 53.613922], [9.869634, 53.621334], [9.869634, 53.62511], [9.882222, 53.632526], [9.888657, 53.632526], [9.888516, 53.636303], [9.894811, 53.63994], [9.894671, 53.643715], [9.900966, 53.647354], [9.9008255, 53.65113], [9.90726, 53.65113], [9.90684, 53.662178], [9.919569, 53.665955], [9.945445, 53.66232], [9.9518795, 53.66246], [9.964748, 53.658684], [9.990485, 53.65882], [9.990205, 53.666237], [9.996639, 53.666237], [9.996499, 53.670013], [9.989785, 53.677284], [10.002094, 53.692112], [10.046994, 53.692253], [10.053428, 53.688614], [10.072731, 53.688755], [10.072171, 53.70344], [10.078325, 53.710854], [10.071752, 53.714493], [10.078046, 53.71827], [10.071611, 53.71827], [10.071471, 53.721905], [10.077906, 53.721905], [10.084061, 53.729317], [10.096788, 53.729458], [10.103363, 53.72568], [10.122665, 53.722046], [10.12896, 53.725822], [10.12882, 53.729458], [10.166726, 53.74065], [10.166446, 53.748062], [10.179174, 53.748062], [10.179315, 53.744427], [10.185749, 53.744427], [10.192183, 53.740788]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Hessen',
      type: 'Land',
      area: '21,100 km²',
      bundesratVotes: '5 (out of 69)',
      density: '300/km²',
      timeZone: 'UTC+1 (CET)',
      population: 6265809,
      capital: 'Frankfurt',
      government: 'Landtag of Hesse',
      head: 'Volker Bouffier (CDU)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[9.937193, 51.379158], [9.931038, 51.379158], [9.931038, 51.375523], [9.924884, 51.371883], [9.931178, 51.360695], [9.931178, 51.353283], [9.937193, 51.34573], [9.931178, 51.34209], [9.937193, 51.338314], [9.943208, 51.338314], [9.949222, 51.334538], [9.949222, 51.31971], [9.943347, 51.312298], [9.943347, 51.308662], [9.949362, 51.304886], [9.967405, 51.304745], [9.97342, 51.30097], [9.97342, 51.297333], [9.979435, 51.293556], [9.979435, 51.289917], [9.97356, 51.28614], [10.003493, 51.286003], [10.009368, 51.28964], [10.015522, 51.282227], [10.027411, 51.282085], [10.027411, 51.27845], [10.057344, 51.27831], [10.063359, 51.274532], [10.063359, 51.270756], [10.05161, 51.26348], [10.05161, 51.25607], [10.057624, 51.255928], [10.0696535, 51.25215], [10.075668, 51.248516], [10.075808, 51.237328], [10.069793, 51.23369], [10.069933, 51.22991], [10.075948, 51.226135], [10.081822, 51.226135], [10.087837, 51.229774], [10.093712, 51.229774], [10.093851, 51.22236], [10.111755, 51.22222], [10.11777, 51.218445], [10.12966, 51.218445], [10.135534, 51.22208], [10.141548, 51.218304], [10.141548, 51.22208], [10.147563, 51.218304], [10.147563, 51.214664], [10.153578, 51.210888], [10.153578, 51.20711], [10.165467, 51.20711], [10.171342, 51.21075], [10.19526, 51.203197], [10.201275, 51.19578], [10.201275, 51.192005], [10.213164, 51.192005], [10.213304, 51.18823], [10.219178, 51.18823], [10.225193, 51.184452], [10.236942, 51.18809], [10.2370825, 51.180676], [10.231208, 51.173405], [10.213584, 51.162354], [10.213723, 51.15494], [10.207849, 51.151165], [10.207849, 51.147526], [10.213863, 51.14375], [10.207989, 51.136337], [10.214143, 51.125286], [10.214143, 51.117874], [10.202394, 51.11424], [10.196379, 51.11424], [10.18435, 51.129063], [10.18435, 51.13284], [10.190225, 51.13284], [10.190084, 51.140255], [10.178195, 51.140255], [10.178195, 51.147667], [10.172181, 51.151443], [10.166166, 51.151443], [10.160292, 51.147808], [10.154417, 51.147808], [10.154417, 51.14417], [10.130638, 51.147945], [10.130638, 51.140533], [10.1247635, 51.140533], [10.1247635, 51.136898], [10.136653, 51.136757], [10.136653, 51.13312], [10.142668, 51.129345], [10.142807, 51.12557], [10.148682, 51.12557], [10.160711, 51.118153], [10.178615, 51.118015], [10.178755, 51.106823], [10.166865, 51.106964], [10.166865, 51.09955], [10.160991, 51.095913], [10.161131, 51.092136], [10.149241, 51.0885], [10.149241, 51.084724], [10.155256, 51.084724], [10.155396, 51.07731], [10.16141, 51.069897], [10.149521, 51.069897], [10.149661, 51.05507], [10.167565, 51.05507], [10.17344, 51.051292], [10.179454, 51.051292], [10.185469, 51.047516], [10.191343, 51.051155], [10.1914835, 51.04374], [10.203233, 51.04374], [10.203373, 51.039963], [10.209388, 51.036327], [10.209388, 51.03255], [10.221276, 51.02514], [10.215402, 51.021362], [10.215542, 51.017723], [10.209527, 51.017723], [10.197638, 51.0215], [10.197778, 51.017723], [10.209667, 51.013947], [10.209667, 51.01031], [10.203793, 51.0029], [10.197918, 50.99926], [10.180154, 50.99926], [10.174139, 51.003036], [10.168264, 50.9994], [10.156515, 50.99576], [10.1505, 50.99576], [10.138611, 50.999542], [10.138472, 51.00332], [10.132457, 51.01073], [10.1145525, 51.01087], [10.108678, 51.007095], [10.108818, 51.003456], [10.096788, 51.01087], [10.078745, 51.014786], [10.066855, 51.01115], [10.060842, 51.014786], [10.042937, 51.014927], [10.031048, 51.007515], [10.031188, 51.0001], [10.025313, 50.996464], [10.025454, 50.989048], [10.019579, 50.981636], [10.025593, 50.978], [10.037622, 50.974224], [10.043636, 50.970448], [10.031748, 50.96303], [10.0437765, 50.959255], [10.043917, 50.948208], [10.055945, 50.948067], [10.06182, 50.951843], [10.067835, 50.948067], [10.056086, 50.940655], [10.032167, 50.940792], [10.026153, 50.94457], [10.014263, 50.937157], [10.002234, 50.94457], [10.002234, 50.940933], [9.990205, 50.94471], [9.98433, 50.940933], [9.978315, 50.94471], [9.960412, 50.94471], [9.954537, 50.940933], [9.954677, 50.929882], [9.948663, 50.929882], [9.948802, 50.926105], [9.960691, 50.926105], [9.966566, 50.93352], [9.972441, 50.93352], [9.98433, 50.937298], [9.990345, 50.937298], [9.978596, 50.92247], [9.966846, 50.91506], [9.978875, 50.907642], [9.98475, 50.91128], [9.98475, 50.91506], [9.996639, 50.918694], [10.002514, 50.92233], [10.014543, 50.92233], [10.014543, 50.918552], [10.026572, 50.914917], [10.032587, 50.91114], [10.038601, 50.91114], [10.038601, 50.907364], [10.044756, 50.903587], [10.050631, 50.903587], [10.050771, 50.899952], [10.044896, 50.896175], [10.05091, 50.892536], [10.062799, 50.8924], [10.06294, 50.884983], [10.057065, 50.881348], [10.039161, 50.87771], [10.039161, 50.874073], [10.033286, 50.870296], [10.027271, 50.870296], [10.021397, 50.86666], [10.021677, 50.851833], [10.027691, 50.851833], [10.03958, 50.85547], [10.033706, 50.84442], [10.021956, 50.83337], [10.009788, 50.840782], [10.003913, 50.837147], [10.003913, 50.83337], [9.998038, 50.829735], [9.992023, 50.83351], [9.979994, 50.83351], [9.97398, 50.837147], [9.950201, 50.82246], [9.950341, 50.818684], [9.956216, 50.818684], [9.956355, 50.81127], [9.944467, 50.803856], [9.944606, 50.796444], [9.956635, 50.78917], [9.938731, 50.77798], [9.9267025, 50.781616], [9.926842, 50.770565], [9.920967, 50.763153], [9.926842, 50.759518], [9.932857, 50.763294], [9.938871, 50.759518], [9.939012, 50.737415], [9.932997, 50.730003], [9.932997, 50.726368], [9.926982, 50.726368], [9.909218, 50.715317], [9.903203, 50.707905], [9.909079, 50.704266], [9.915092, 50.704266], [9.915092, 50.696995], [9.897189, 50.685802], [9.8913145, 50.68944], [9.8853, 50.682167], [9.879425, 50.67839], [9.879425, 50.674755], [9.87355, 50.674614], [9.87355, 50.67098], [9.879285, 50.66748], [9.879145, 50.652794], [9.87327, 50.649155], [9.873131, 50.641884], [9.88474, 50.638386], [9.896909, 50.641884], [9.896909, 50.64566], [9.902924, 50.64552], [9.903064, 50.641884], [9.909079, 50.641743], [9.921527, 50.63419], [9.933696, 50.63405], [9.946145, 50.630135], [9.95202, 50.63377], [9.958174, 50.63377], [9.958034, 50.641182], [9.964048, 50.64482], [9.945445, 50.659927], [9.945445, 50.66734], [9.95146, 50.67098], [9.975938, 50.670696], [9.975798, 50.674335], [9.987967, 50.67797], [10.048952, 50.677273], [10.055106, 50.673496], [10.055246, 50.669716], [10.061261, 50.669716], [10.061261, 50.66608], [10.067555, 50.658527], [10.07343, 50.658527], [10.0737095, 50.64734], [10.086019, 50.63237], [10.086298, 50.62118], [10.068254, 50.621323], [10.068114, 50.6251], [10.06196, 50.628876], [10.049791, 50.625237], [10.049932, 50.62146], [10.038181, 50.613907], [10.044616, 50.606216], [10.050771, 50.60244], [10.05091, 50.583557], [10.045176, 50.572365], [10.05119, 50.56481], [10.063079, 50.55726], [10.057204, 50.553482], [10.05133, 50.54607], [10.05133, 50.542294], [10.045455, 50.53474], [10.03958, 50.53474], [10.039721, 50.515858], [10.04, 50.493336], [10.034125, 50.48956], [10.0342655, 50.482006], [10.028391, 50.482006], [10.0226555, 50.474453], [10.0226555, 50.470676], [10.016781, 50.4669], [10.010906, 50.4669], [9.999297, 50.459347], [9.987687, 50.44424], [9.976078, 50.440464], [9.964468, 50.43291], [9.964608, 50.425358], [9.958734, 50.42158], [9.952859, 50.42158], [9.946844, 50.425217], [9.94111, 50.42144], [9.935235, 50.42144], [9.923485, 50.417664], [9.91775, 50.41011], [9.900266, 50.40242], [9.888516, 50.40242], [9.882642, 50.398502], [9.876767, 50.398502], [9.876767, 50.40228], [9.870613, 50.40969], [9.864878, 50.402138], [9.859143, 50.39836], [9.847254, 50.398224], [9.835225, 50.405777], [9.823475, 50.405636], [9.811446, 50.413048], [9.811306, 50.416824], [9.799277, 50.424377], [9.781513, 50.42424], [9.781653, 50.420464], [9.775918, 50.416687], [9.775779, 50.420464], [9.769624, 50.42424], [9.7578745, 50.4241], [9.75214, 50.416546], [9.746265, 50.416405], [9.746405, 50.41263], [9.752279, 50.41263], [9.7531185, 50.386192], [9.741789, 50.37095], [9.741929, 50.363396], [9.730459, 50.3557], [9.730739, 50.34829], [9.736613, 50.34829], [9.742768, 50.34465], [9.744027, 50.31108], [9.738711, 50.29975], [9.727242, 50.2922], [9.709758, 50.292057], [9.709898, 50.28842], [9.692973, 50.277092], [9.681363, 50.27695], [9.670033, 50.273174], [9.664159, 50.273174], [9.664439, 50.269398], [9.652829, 50.26926], [9.647654, 50.258068], [9.641919, 50.258068], [9.642059, 50.25429], [9.636464, 50.250515], [9.636744, 50.24674], [9.648213, 50.24688], [9.654088, 50.243103], [9.665837, 50.239468], [9.660382, 50.23205], [9.631708, 50.231773], [9.6203785, 50.227997], [9.620658, 50.22422], [9.609189, 50.22408], [9.597999, 50.220303], [9.58639, 50.223938], [9.580794, 50.22016], [9.580654, 50.223938], [9.5745, 50.231354], [9.56331, 50.227436], [9.55198, 50.227436], [9.540791, 50.22352], [9.540371, 50.23107], [9.528901, 50.23471], [9.523446, 50.230934], [9.511836, 50.23457], [9.505682, 50.241985], [9.500087, 50.241844], [9.500787, 50.23065], [9.495331, 50.226875], [9.507501, 50.21205], [9.50792, 50.2045], [9.51967, 50.197224], [9.519809, 50.193447], [9.502885, 50.193306], [9.503863, 50.174564], [9.510018, 50.167152], [9.532537, 50.16743], [9.532957, 50.159878], [9.522187, 50.14855], [9.510997, 50.14855], [9.511697, 50.133583], [9.524145, 50.111202], [9.524425, 50.103786], [9.51911, 50.10001], [9.519389, 50.092457], [9.502325, 50.096096], [9.5026045, 50.09232], [9.47449, 50.092037], [9.469174, 50.08826], [9.446795, 50.087982], [9.4413395, 50.084206], [9.43015, 50.084206], [9.41924, 50.080288], [9.413225, 50.087704], [9.40763, 50.087704], [9.401755, 50.095116], [9.401336, 50.102528], [9.377277, 50.132183], [9.360912, 50.128265], [9.3494425, 50.131905], [9.337974, 50.139317], [9.332378, 50.139175], [9.316153, 50.131622], [9.298948, 50.142532], [9.282304, 50.142395], [9.282443, 50.13862], [9.265938, 50.138477], [9.265658, 50.142254], [9.254748, 50.142113], [9.237964, 50.149246], [9.227054, 50.145332], [9.227333, 50.141693], [9.210688, 50.141415], [9.210968, 50.137638], [9.199918, 50.137497], [9.205792, 50.130226], [9.206212, 50.12281], [9.190126, 50.115116], [9.190406, 50.11134], [9.174601, 50.096233], [9.169565, 50.08882], [9.16397, 50.08868], [9.16341, 50.096096], [9.173902, 50.107426], [9.173202, 50.118473], [9.167747, 50.114697], [9.156417, 50.114418], [9.138373, 50.12519], [9.115154, 50.12477], [9.115294, 50.12099], [9.109699, 50.117214], [9.09795, 50.117077], [9.091935, 50.12057], [9.08634, 50.116795], [9.062841, 50.116375], [9.057246, 50.1126], [9.033888, 50.11204], [9.034027, 50.108402], [9.028293, 50.104626], [9.022838, 50.097214], [9.017102, 50.093437], [9.017941, 50.07134], [9.012207, 50.067562], [9.006332, 50.06742], [9.006473, 50.063786], [9.000877, 50.056232], [8.995142, 50.052456], [8.995282, 50.04504], [9.001297, 50.041546], [9.007172, 50.041683], [9.018781, 50.0456], [9.030391, 50.045742], [9.04228, 50.042244], [9.048015, 50.042385], [9.048714, 50.020283], [9.0547285, 50.01301], [9.0547285, 50.009373], [9.048994, 50.005596], [9.055008, 50.00196], [9.055008, 49.99832], [9.0608835, 49.998463], [9.066758, 49.994827], [9.066758, 49.991188], [9.061023, 49.98741], [9.049414, 49.99091], [9.037524, 49.998043], [9.037664, 49.994267], [9.031929, 49.99049], [9.037804, 49.98699], [9.037944, 49.97958], [9.032209, 49.97944], [9.032209, 49.975803], [9.038223, 49.96853], [9.038783, 49.93902], [9.044658, 49.93552], [9.044937, 49.920834], [9.039343, 49.909645], [9.045077, 49.909782], [9.0452175, 49.90237], [9.051231, 49.895096], [9.051512, 49.876633], [9.057386, 49.869358], [9.051791, 49.86558], [9.045917, 49.86558], [9.046057, 49.861805], [9.057666, 49.85831], [9.057806, 49.851036], [9.052071, 49.84726], [9.052211, 49.839848], [9.063681, 49.84376], [9.069415, 49.847538], [9.069695, 49.832714], [9.07543, 49.83285], [9.09837, 49.847958], [9.09837, 49.84418], [9.092634, 49.840405], [9.092774, 49.833134], [9.098649, 49.829494], [9.087179, 49.82194], [9.093054, 49.818306], [9.099069, 49.807396], [9.099069, 49.799984], [9.104943, 49.796486], [9.105083, 49.79271], [9.122148, 49.800262], [9.128022, 49.800404], [9.139492, 49.796764], [9.139632, 49.78949], [9.145507, 49.782078], [9.122707, 49.774525], [9.117112, 49.759697], [9.122848, 49.75984], [9.140191, 49.75634], [9.16355, 49.74543], [9.152081, 49.737877], [9.152221, 49.730606], [9.1466255, 49.72683], [9.146766, 49.719414], [9.14103, 49.71578], [9.129421, 49.715637], [9.135436, 49.708366], [9.135575, 49.70095], [9.118232, 49.700813], [9.112496, 49.697174], [9.101027, 49.697037], [9.095292, 49.69326], [9.095432, 49.685986], [9.101167, 49.685986], [9.101307, 49.67857], [9.0955715, 49.67857], [9.095712, 49.671158], [9.113195, 49.660248], [9.107461, 49.656612], [9.107601, 49.649197], [9.113476, 49.64556], [9.102146, 49.63815], [9.090536, 49.63801], [9.090676, 49.634373], [9.073472, 49.62318], [9.073892, 49.60486], [9.091236, 49.605], [9.096971, 49.60136], [9.097111, 49.59395], [9.108999, 49.58304], [9.10928, 49.564575], [9.103684, 49.55716], [9.103684, 49.553524], [9.092215, 49.553524], [9.092355, 49.546112], [9.109699, 49.542473], [9.115574, 49.538837], [9.121308, 49.538837], [9.1214485, 49.531425], [9.133198, 49.52415], [9.133338, 49.520374], [9.110398, 49.5131], [9.110119, 49.520374], [9.104244, 49.531425], [9.092634, 49.531425], [9.0869, 49.527786], [9.07529, 49.531425], [9.0751505, 49.53506], [9.063821, 49.52765], [9.058085, 49.52765], [9.058226, 49.516598], [9.046756, 49.51282], [9.046896, 49.505547], [9.017941, 49.50527], [9.017941, 49.509045], [8.994722, 49.508766], [8.988848, 49.516037], [8.983113, 49.516037], [8.9832535, 49.508766], [8.954299, 49.508347], [8.960174, 49.50485], [8.954439, 49.497437], [8.954579, 49.49016], [8.948704, 49.49366], [8.937374, 49.48261], [8.937374, 49.478973], [8.937514, 49.4717], [8.943389, 49.4717], [8.949404, 49.46079], [8.943668, 49.45715], [8.932059, 49.457012], [8.926325, 49.453236], [8.926464, 49.44596], [8.90912, 49.44582], [8.903106, 49.452953], [8.903245, 49.449318], [8.89779, 49.430996], [8.88632, 49.42358], [8.874851, 49.419804], [8.857786, 49.40498], [8.846316, 49.404697], [8.840582, 49.408195], [8.840442, 49.41547], [8.828972, 49.415188], [8.829112, 49.407917], [8.823378, 49.404278], [8.817642, 49.40414], [8.806033, 49.411133], [8.806033, 49.41477], [8.811627, 49.418545], [8.805753, 49.42568], [8.817083, 49.429596], [8.834427, 49.429874], [8.834288, 49.43715], [8.839882, 49.440926], [8.834147, 49.444424], [8.833728, 49.462746], [8.827993, 49.466244], [8.827713, 49.477154], [8.862123, 49.48876], [8.867997, 49.477993], [8.862402, 49.474216], [8.868137, 49.47072], [8.879606, 49.474495], [8.891076, 49.482048], [8.890936, 49.485687], [8.902546, 49.489464], [8.902126, 49.511284], [8.896392, 49.507645], [8.890516, 49.511143], [8.867437, 49.510723], [8.861703, 49.506947], [8.838623, 49.506527], [8.838763, 49.499252], [8.833029, 49.499115], [8.82128, 49.509743], [8.820999, 49.52807], [8.8151245, 49.531563], [8.803655, 49.52765], [8.7982, 49.516598], [8.774981, 49.52331], [8.769386, 49.519535], [8.763512, 49.523033], [8.757776, 49.52275], [8.752042, 49.52625], [8.746167, 49.529747], [8.740572, 49.52597], [8.729102, 49.522053], [8.728962, 49.529327], [8.711478, 49.539818], [8.705604, 49.54695], [8.693714, 49.56122], [8.693435, 49.57213], [8.68756, 49.57926], [8.68714, 49.59395], [8.698609, 49.594227], [8.704205, 49.60178], [8.69819, 49.612553], [8.692455, 49.61241], [8.692176, 49.619686], [8.69777, 49.62724], [8.686161, 49.630596], [8.668957, 49.6264], [8.657627, 49.62234], [8.646157, 49.622063], [8.600418, 49.61325], [8.594824, 49.605698], [8.595103, 49.598423], [8.606573, 49.595066], [8.612867, 49.58066], [8.613287, 49.56597], [8.619162, 49.558838], [8.619581, 49.54415], [8.613846, 49.544014], [8.608391, 49.53282], [8.602656, 49.53632], [8.597061, 49.528767], [8.591466, 49.52499], [8.557198, 49.523872], [8.533838, 49.53772], [8.527684, 49.552124], [8.49831, 49.573246], [8.486701, 49.576466], [8.486561, 49.580242], [8.469077, 49.59059], [8.446137, 49.589893], [8.446278, 49.586254], [8.429072, 49.585556], [8.417184, 49.596325], [8.4169035, 49.6036], [8.41089, 49.610733], [8.393405, 49.617588], [8.381096, 49.639267], [8.374661, 49.65745], [8.368787, 49.660946], [8.362493, 49.675495], [8.361934, 49.69018], [8.367389, 49.697735], [8.378718, 49.70179], [8.384453, 49.705708], [8.401518, 49.709904], [8.424457, 49.71424], [8.430052, 49.718155], [8.447256, 49.72235], [8.452711, 49.729904], [8.452572, 49.733543], [8.463761, 49.74501], [8.486422, 49.75676], [8.486141, 49.76781], [8.428373, 49.76599], [8.4223585, 49.773125], [8.422079, 49.784176], [8.416064, 49.79145], [8.40991, 49.80236], [8.392006, 49.816486], [8.386131, 49.819984], [8.385712, 49.831036], [8.391167, 49.842365], [8.396762, 49.84614], [8.396762, 49.84992], [8.390747, 49.853413], [8.390608, 49.85705], [8.384733, 49.860546], [8.367249, 49.863766], [8.361514, 49.863625], [8.355499, 49.870758], [8.355359, 49.874535], [8.349345, 49.881668], [8.349205, 49.885445], [8.3658495, 49.908104], [8.36543, 49.919155], [8.359276, 49.930065], [8.353261, 49.93734], [8.352982, 49.948387], [8.346827, 49.959297], [8.334798, 49.973705], [8.29927, 49.994965], [8.281366, 50.00923], [8.275352, 50.016506], [8.257728, 50.027138], [8.246118, 50.02672], [8.234368, 50.030075], [8.217024, 50.029655], [8.205275, 50.033012], [8.18793, 50.03245], [8.17646, 50.028397], [8.170726, 50.028255], [8.164991, 50.02434], [8.147647, 50.02378], [8.142052, 50.020004], [8.124707, 50.01581], [8.107643, 50.007835], [8.101908, 50.003918], [8.067219, 50.002937], [8.05575, 49.998882], [8.0500145, 49.99874], [8.02134, 49.986855], [8.015466, 49.986713], [7.9982615, 49.97888], [7.9867916, 49.974964], [7.9693074, 49.974823], [7.9578376, 49.97091], [7.887761, 49.970627], [7.875732, 49.97818], [7.8755918, 49.981956], [7.8694377, 49.989372], [7.868738, 50.008255], [7.856709, 50.015667], [7.8448195, 50.019444], [7.8269157, 50.030636], [7.820761, 50.03819], [7.808872, 50.041965], [7.796983, 50.049377], [7.785094, 50.053154], [7.784534, 50.06812], [7.7962837, 50.06812], [7.7961435, 50.071896], [7.813208, 50.083225], [7.8130684, 50.087], [7.824958, 50.083366], [7.8483167, 50.083366], [7.847897, 50.094696], [7.853492, 50.10225], [7.8529325, 50.113438], [7.858807, 50.11358], [7.8583875, 50.12477], [7.869997, 50.128548], [7.8758717, 50.128548], [7.8761516, 50.12113], [7.887761, 50.12113], [7.8997903, 50.11372], [7.91112, 50.121273], [7.9169946, 50.121273], [7.9230094, 50.117496], [7.9291635, 50.109943], [7.9351783, 50.106304], [7.935458, 50.09875], [7.941053, 50.102528], [7.9350386, 50.11008], [7.9341993, 50.132603], [7.9396544, 50.140156], [7.9335, 50.14771], [7.9335, 50.151344], [7.927625, 50.151344], [7.927485, 50.15512], [7.9216104, 50.15512], [7.915596, 50.158897], [7.9037066, 50.162537], [7.897552, 50.16995], [7.903287, 50.173725], [7.8971324, 50.181], [7.914337, 50.18869], [7.9258065, 50.196384], [7.925387, 50.203796], [7.9369965, 50.207573], [7.9544806, 50.21149], [7.9604955, 50.207855], [7.9662304, 50.21163], [7.9659505, 50.219185], [7.97756, 50.219322], [8.000779, 50.227016], [8.006374, 50.230793], [8.018124, 50.230934], [8.018403, 50.22338], [8.0302925, 50.216106], [8.041902, 50.216248], [8.047916, 50.21247], [8.053652, 50.216385], [8.053512, 50.22016], [8.064841, 50.227856], [8.076311, 50.231773], [8.076171, 50.23555], [8.064422, 50.239048], [8.064281, 50.242825], [8.058268, 50.24646], [8.052253, 50.253872], [8.0405035, 50.253735], [8.040363, 50.25751], [8.046098, 50.261288], [8.051973, 50.261288], [8.051693, 50.26884], [8.063163, 50.272755], [8.080647, 50.273037], [8.086661, 50.269398], [8.092536, 50.26954], [8.098411, 50.265762], [8.098691, 50.25835], [8.110161, 50.262264], [8.116035, 50.262405], [8.122049, 50.25877], [8.127785, 50.258907], [8.127365, 50.2701], [8.138974, 50.274014], [8.138135, 50.296535], [8.131981, 50.303806], [8.126106, 50.307446], [8.120232, 50.307446], [8.125687, 50.318775], [8.125406, 50.326187], [8.107782, 50.329685], [8.096033, 50.329403], [8.090158, 50.333042], [8.095893, 50.336956], [8.095334, 50.351925], [8.089319, 50.35556], [8.0889, 50.366753], [8.083025, 50.366753], [8.082746, 50.374165], [8.070995, 50.374023], [8.064981, 50.377663], [8.064562, 50.385075], [8.058547, 50.385075], [8.058826, 50.381298], [8.052813, 50.381157], [8.040643, 50.384796], [8.039664, 50.39976], [8.009451, 50.3992], [8.0091715, 50.402977], [8.002598, 50.41025], [7.9968624, 50.406475], [7.9907084, 50.406334], [7.9904284, 50.409973], [7.9844136, 50.409832], [7.984134, 50.41361], [7.996303, 50.413887], [8.002038, 50.417664], [8.007214, 50.428993], [8.006654, 50.436546], [7.994485, 50.436268], [7.994205, 50.439903], [8.006374, 50.440186], [8.006094, 50.443962], [8.018124, 50.44424], [8.017843, 50.447876], [8.030013, 50.44816], [8.029034, 50.459347], [8.016584, 50.462845], [8.009871, 50.47012], [8.009591, 50.473896], [8.003576, 50.473755], [8.002598, 50.484943], [7.996583, 50.484806], [7.9956036, 50.495853], [8.001618, 50.495995], [8.007353, 50.499912], [8.000919, 50.503548], [8.00036, 50.51096], [8.011689, 50.518654], [8.01099, 50.526066], [8.016725, 50.529984], [8.028754, 50.530262], [8.028474, 50.53404], [8.034489, 50.53418], [8.034209, 50.537956], [8.045539, 50.54565], [8.045119, 50.549427], [8.050854, 50.55334], [8.063023, 50.553623], [8.062603, 50.5574], [8.08834, 50.546627], [8.089319, 50.539215], [8.108202, 50.539494], [8.115196, 50.535717], [8.140933, 50.53586], [8.134219, 50.539635], [8.133659, 50.54341], [8.140094, 50.54341], [8.139394, 50.547188], [8.145409, 50.547188], [8.155899, 50.554882], [8.15506, 50.562435], [8.160376, 50.56621], [8.170027, 50.58146], [8.169188, 50.58887], [8.174502, 50.59279], [8.173523, 50.6002], [8.167648, 50.6002], [8.167089, 50.603977], [8.161075, 50.603977], [8.154361, 50.607754], [8.147926, 50.607754], [8.140793, 50.61167], [8.1466675, 50.615448], [8.158836, 50.619083], [8.156178, 50.63419], [8.134639, 50.64594], [8.13324, 50.653633], [8.127085, 50.653492], [8.120511, 50.660767], [8.118692, 50.67573], [8.128484, 50.68021], [8.133939, 50.687763], [8.13296, 50.695316], [8.139255, 50.69881], [8.145968, 50.698673], [8.146527, 50.694897], [8.153102, 50.694756], [8.152542, 50.698532], [8.164152, 50.70972], [8.163033, 50.717136], [8.173943, 50.7321], [8.179957, 50.735737], [8.179398, 50.739513], [8.172125, 50.747066], [8.165411, 50.750984], [8.164572, 50.758396], [8.1582775, 50.758396], [8.157997, 50.762173], [8.145409, 50.76959], [8.145268, 50.773365], [8.138695, 50.780777], [8.131841, 50.79183], [8.14387, 50.79183], [8.155339, 50.79938], [8.161354, 50.79938], [8.172824, 50.806793], [8.178839, 50.806793], [8.184014, 50.817986], [8.189609, 50.825397], [8.206813, 50.836586], [8.2188425, 50.836586], [8.224298, 50.844], [8.230032, 50.84778], [8.236047, 50.84778], [8.241782, 50.851414], [8.241502, 50.85519], [8.252972, 50.862602], [8.258986, 50.862602], [8.258706, 50.86638], [8.2644415, 50.870018], [8.270596, 50.870018], [8.2698965, 50.87757], [8.275631, 50.881207], [8.2998295, 50.881207], [8.300249, 50.87743], [8.306684, 50.873795], [8.306963, 50.870018], [8.319971, 50.862465], [8.3202505, 50.858826], [8.33242, 50.858826], [8.350184, 50.862602], [8.368228, 50.862602], [8.368507, 50.858826], [8.380537, 50.858967], [8.379558, 50.870018], [8.385292, 50.873795], [8.3971815, 50.87393], [8.402917, 50.87757], [8.4019375, 50.88876], [8.407672, 50.892536], [8.419282, 50.896313], [8.419002, 50.899952], [8.436346, 50.907505], [8.442221, 50.907505], [8.442081, 50.91128], [8.447676, 50.914917], [8.453831, 50.91128], [8.471455, 50.91156], [8.471314, 50.915195], [8.464461, 50.929882], [8.463761, 50.940933], [8.475371, 50.94471], [8.4679575, 50.963314], [8.479987, 50.963314], [8.479707, 50.96695], [8.485722, 50.96695], [8.485442, 50.970726], [8.508521, 50.98611], [8.508381, 50.989887], [8.537055, 51.009193], [8.55468, 51.01325], [8.548386, 51.020523], [8.542231, 51.02416], [8.541811, 51.03157], [8.535517, 51.038986], [8.529502, 51.038845], [8.523767, 51.03507], [8.517473, 51.038704], [8.523068, 51.046257], [8.529082, 51.0464], [8.534818, 51.050175], [8.540413, 51.057728], [8.533978, 51.06514], [8.521669, 51.068638], [8.515375, 51.072273], [8.515096, 51.07605], [8.532579, 51.08752], [8.538175, 51.095074], [8.544189, 51.095215], [8.556498, 51.091717], [8.562093, 51.09927], [8.60993, 51.10025], [8.622099, 51.096752], [8.633988, 51.09703], [8.646017, 51.093536], [8.663921, 51.09018], [8.669935, 51.090317], [8.681685, 51.094234], [8.693154, 51.10193], [8.704905, 51.105843], [8.722808, 51.102486], [8.734557, 51.106544], [8.734278, 51.113956], [8.716514, 51.113537], [8.716234, 51.12109], [8.710079, 51.12473], [8.7098, 51.13214], [8.715395, 51.139694], [8.727004, 51.14739], [8.733019, 51.147526], [8.750363, 51.159138], [8.750223, 51.162773], [8.756238, 51.162914], [8.767847, 51.170605], [8.766728, 51.196762], [8.772603, 51.20068], [8.778618, 51.20068], [8.784352, 51.204594], [8.7783375, 51.208233], [8.766169, 51.211727], [8.760015, 51.215366], [8.75358, 51.226418], [8.75344, 51.230053], [8.747146, 51.237465], [8.746866, 51.24488], [8.740712, 51.248516], [8.746587, 51.252434], [8.746447, 51.25607], [8.740012, 51.26348], [8.739733, 51.270897], [8.721409, 51.274254], [8.715674, 51.270477], [8.70952, 51.270336], [8.70938, 51.274113], [8.697631, 51.26642], [8.679587, 51.266], [8.679727, 51.262363], [8.655529, 51.261803], [8.64364, 51.25789], [8.643779, 51.254112], [8.626295, 51.2425], [8.613846, 51.246], [8.601677, 51.245857], [8.6013975, 51.249496], [8.594543, 51.260544], [8.588249, 51.264183], [8.58797, 51.26796], [8.581815, 51.26782], [8.568947, 51.275093], [8.574402, 51.286423], [8.586711, 51.28656], [8.59846, 51.294395], [8.5979, 51.301807], [8.604055, 51.30195], [8.6156645, 51.313416], [8.615105, 51.32083], [8.620979, 51.324745], [8.633288, 51.324886], [8.632589, 51.33608], [8.650773, 51.340275], [8.656927, 51.340275], [8.669376, 51.336777], [8.668676, 51.348106], [8.674551, 51.351883], [8.686721, 51.35216], [8.686581, 51.355938], [8.698609, 51.359856], [8.69833, 51.363632], [8.692036, 51.36713], [8.691756, 51.370907], [8.703785, 51.37482], [8.715954, 51.375103], [8.728542, 51.371605], [8.759035, 51.372166], [8.76491, 51.37608], [8.777079, 51.37622], [8.788829, 51.383915], [8.807012, 51.384335], [8.825056, 51.38839], [8.84324, 51.38881], [8.843519, 51.385033], [8.855548, 51.38531], [8.855688, 51.381535], [8.867857, 51.37804], [8.874012, 51.3744], [8.886041, 51.37832], [8.903665, 51.389927], [8.933598, 51.390488], [8.951642, 51.38713], [8.957517, 51.38727], [8.963391, 51.394825], [8.962972, 51.40979], [8.973322, 51.412727], [8.968706, 51.42112], [8.968566, 51.42853], [8.938633, 51.427975], [8.938494, 51.435387], [8.944228, 51.44294], [8.931919, 51.450214], [8.937934, 51.45399], [8.937794, 51.457767], [8.925345, 51.465042], [8.913036, 51.468536], [8.912477, 51.47973], [8.924366, 51.48742], [8.936396, 51.491337], [8.948704, 51.491615], [8.954719, 51.49539], [8.990526, 51.507282], [8.990807, 51.503647], [9.0192, 51.51148], [9.041861, 51.51931], [9.04228, 51.511898], [9.060044, 51.50113], [9.077249, 51.501408], [9.077388, 51.49763], [9.088858, 51.49791], [9.088858, 51.50155], [9.094593, 51.501686], [9.106202, 51.49819], [9.112077, 51.494553], [9.112356, 51.48714], [9.106762, 51.483364], [9.095852, 51.464622], [9.095991, 51.460846], [9.101727, 51.460983], [9.102146, 51.449795], [9.113895, 51.44266], [9.13124, 51.44294], [9.148444, 51.447], [9.154039, 51.450775], [9.154179, 51.447136], [9.160053, 51.4435], [9.160193, 51.439724], [9.171523, 51.44378], [9.177398, 51.44378], [9.1772585, 51.447556], [9.182853, 51.451332], [9.1827135, 51.45511], [9.188169, 51.46266], [9.199638, 51.46658], [9.205513, 51.462944], [9.216982, 51.463223], [9.228732, 51.459724], [9.234047, 51.470917], [9.233627, 51.482105], [9.239082, 51.48966], [9.256007, 51.497353], [9.273352, 51.497772], [9.278947, 51.50155], [9.278807, 51.505325], [9.284262, 51.512737], [9.31881, 51.513435], [9.324125, 51.524765], [9.323706, 51.535816], [9.329161, 51.54337], [9.328602, 51.55442], [9.340211, 51.5547], [9.345806, 51.558475], [9.345527, 51.56589], [9.351261, 51.56589], [9.356856, 51.569805], [9.362171, 51.580997], [9.373501, 51.58491], [9.378956, 51.592327], [9.373081, 51.595963], [9.367347, 51.59582], [9.343568, 51.61009], [9.343429, 51.613728], [9.360633, 51.617783], [9.366228, 51.62156], [9.377837, 51.618202], [9.377558, 51.625477], [9.406371, 51.626034], [9.417702, 51.62995], [9.435045, 51.63037], [9.434906, 51.634007], [9.451691, 51.645336], [9.457425, 51.649113], [9.468755, 51.65303], [9.486099, 51.65709], [9.497709, 51.657227], [9.503724, 51.65373], [9.503863, 51.649952], [9.492674, 51.638763], [9.498689, 51.635265], [9.498828, 51.63149], [9.504703, 51.627995], [9.528062, 51.628414], [9.539671, 51.63219], [9.545266, 51.639744], [9.557015, 51.63988], [9.557296, 51.63247], [9.5693245, 51.625336], [9.586948, 51.625614], [9.592684, 51.62939], [9.6163225, 51.62981], [9.616182, 51.63345], [9.622197, 51.633587], [9.627932, 51.637363], [9.634087, 51.633728], [9.628211, 51.62995], [9.640241, 51.622818], [9.634645, 51.615406], [9.6408, 51.60813], [9.646675, 51.608273], [9.664859, 51.593723], [9.670873, 51.593864], [9.671013, 51.59023], [9.6768875, 51.59023], [9.689056, 51.583096], [9.689197, 51.57582], [9.683461, 51.56841], [9.671573, 51.568127], [9.671712, 51.56449], [9.659822, 51.56435], [9.659963, 51.560715], [9.648354, 51.55316], [9.648354, 51.549526], [9.636464, 51.55302], [9.624854, 51.549107], [9.6187, 51.556377], [9.612825, 51.55624], [9.624994, 51.54169], [9.625274, 51.534416], [9.619539, 51.527004], [9.613805, 51.523228], [9.5904455, 51.522808], [9.590725, 51.515396], [9.602614, 51.508263], [9.608629, 51.500988], [9.608909, 51.493713], [9.6149235, 51.490078], [9.620938, 51.482944], [9.626952, 51.47931], [9.638702, 51.47581], [9.644716, 51.472313], [9.644856, 51.468536], [9.633387, 51.460983], [9.627652, 51.45357], [9.627932, 51.44616], [9.633946, 51.438885], [9.634366, 51.427834], [9.6401005, 51.427975], [9.640241, 51.424335], [9.634645, 51.416782], [9.634926, 51.40951], [9.617441, 51.409092], [9.611846, 51.405174], [9.605971, 51.405033], [9.600376, 51.401257], [9.5945015, 51.40112], [9.588627, 51.404613], [9.582892, 51.400837], [9.577437, 51.393284], [9.571702, 51.393147], [9.571842, 51.389507], [9.566247, 51.381954], [9.566387, 51.378178], [9.572402, 51.374683], [9.578136, 51.37482], [9.578277, 51.371044], [9.572822, 51.36349], [9.555477, 51.36307], [9.555617, 51.359295], [9.561352, 51.359436], [9.561771, 51.348385], [9.573521, 51.34489], [9.5849905, 51.34517], [9.59688, 51.338036], [9.597019, 51.3344], [9.608909, 51.327263], [9.614644, 51.327404], [9.620238, 51.33132], [9.631988, 51.327824], [9.637863, 51.324326], [9.649612, 51.32083], [9.655487, 51.317333], [9.667096, 51.313976], [9.666817, 51.32139], [9.672691, 51.32153], [9.678566, 51.317894], [9.678706, 51.314255], [9.713534, 51.307823], [9.731158, 51.300827], [9.748223, 51.3088], [9.765568, 51.31286], [9.770883, 51.324326], [9.770742, 51.3316], [9.764868, 51.327824], [9.758993, 51.33132], [9.770742, 51.338875], [9.770742, 51.34251], [9.758854, 51.342373], [9.758993, 51.338734], [9.764729, 51.338875], [9.741929, 51.323486], [9.736194, 51.32335], [9.735914, 51.33076], [9.729899, 51.337894], [9.724025, 51.341534], [9.723886, 51.34517], [9.711996, 51.359577], [9.706121, 51.359436], [9.700107, 51.36671], [9.705841, 51.370487], [9.717451, 51.3744], [9.723326, 51.374542], [9.7292, 51.371044], [9.734935, 51.37482], [9.752699, 51.37874], [9.752699, 51.386013], [9.776618, 51.393566], [9.788926, 51.393566], [9.795081, 51.389927], [9.801235, 51.389927], [9.801096, 51.404613], [9.794941, 51.400837], [9.794941, 51.408253], [9.800956, 51.41189], [9.813265, 51.41189], [9.819419, 51.415665], [9.825574, 51.408253], [9.837882, 51.40839], [9.844176, 51.404755], [9.838162, 51.393703], [9.838302, 51.386433], [9.850751, 51.37538], [9.869214, 51.37538], [9.86306, 51.382793], [9.856766, 51.386433], [9.856485, 51.40112], [9.850331, 51.404755], [9.856206, 51.415806], [9.874529, 51.415806], [9.880963, 51.40853], [9.886978, 51.412308], [9.886838, 51.415943], [9.892853, 51.419582], [9.911177, 51.41972], [9.911596, 51.408672], [9.930479, 51.393986], [9.936633, 51.393986], [9.937193, 51.379158]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Mecklenburg-Vorpommern',
      type: 'Land',
      area: '23,174 km²',
      bundesratVotes: '3 (out of 69)',
      density: '69/km²',
      timeZone: 'UTC+1 (CET)',
      population: 1609675,
      capital: 'Schwerin',
      government: 'Landtag of Mecklenburg-Vorpommern',
      head: 'Manuela Schwesig (SPD)'
    },
    geometry: {
      type: 'MultiPolygon',
      coordinates: [[[[14.2647505, 53.710716], [14.269226, 53.70568], [14.250902, 53.70204], [14.248105, 53.7068], [14.251322, 53.709038], [14.2647505, 53.710716]]], [[[13.929193, 54.031307], [13.934788, 54.02795], [13.931431, 54.024033], [13.924717, 54.023193], [13.927514, 54.0162], [13.919122, 54.017597], [13.915765, 54.023754], [13.929193, 54.031307]]], [[[11.523643, 54.069633], [11.515809, 54.056202], [11.515249, 54.038998], [11.511333, 54.039837], [11.511333, 54.054806], [11.519726, 54.066833], [11.523643, 54.069633]]], [[[13.768618, 54.12656], [13.774213, 54.116768], [13.771975, 54.114532], [13.768618, 54.12656]]], [[[13.773093, 54.209087], [13.774772, 54.20461], [13.768618, 54.200695], [13.768058, 54.208527], [13.773093, 54.209087]]], [[[13.9230385, 54.251186], [13.926395, 54.247692], [13.916883, 54.245174], [13.918003, 54.251186], [13.9230385, 54.251186]]], [[[13.123659, 54.31343], [13.130233, 54.306858], [13.121981, 54.302383], [13.114707, 54.3049], [13.110791, 54.311752], [13.123659, 54.31343]]], [[[13.542441, 54.331474], [13.546358, 54.32686], [13.543001, 54.322945], [13.528594, 54.319305], [13.523559, 54.31259], [13.520901, 54.31539], [13.526356, 54.31791], [13.534748, 54.328537], [13.542441, 54.331474]]], [[[12.528076, 54.36155], [12.53521, 54.356792], [12.531433, 54.352596], [12.524719, 54.35875], [12.528076, 54.36155]]], [[[13.217514, 54.40267], [13.220312, 54.400154], [13.209122, 54.39652], [13.206325, 54.399315], [13.217514, 54.40267]]], [[[12.7352295, 54.413162], [12.737468, 54.408405], [12.731453, 54.40463], [12.717465, 54.40463], [12.724179, 54.412884], [12.7352295, 54.413162]]], [[[13.049665, 54.46016], [13.05582, 54.452885], [13.051344, 54.446033], [13.041413, 54.442394], [13.020852, 54.443516], [12.998053, 54.439598], [12.990219, 54.433723], [12.974134, 54.432045], [12.967, 54.43764], [12.969098, 54.440716], [12.982527, 54.442394], [12.984764, 54.43792], [12.990219, 54.43932], [12.993017, 54.445194], [13.00085, 54.447292], [13.017495, 54.44659], [13.024209, 54.44869], [13.03414, 54.44659], [13.045889, 54.454006], [13.049665, 54.46016]]], [[[14.415813, 53.329838], [14.414695, 53.33054], [14.413016, 53.331516], [14.403925, 53.333614], [14.403505, 53.33012], [14.391895, 53.326763], [14.384202, 53.324524], [14.383363, 53.315434], [14.3770685, 53.315712], [14.371055, 53.319347], [14.36462, 53.31725], [14.357067, 53.315853], [14.351472, 53.312214], [14.31986, 53.312634], [14.319161, 53.301723], [14.305733, 53.29445], [14.305174, 53.287178], [14.29888, 53.287178], [14.288389, 53.2834], [14.266289, 53.276688], [14.271045, 53.26242], [14.258316, 53.258224], [14.226705, 53.25878], [14.22013, 53.255287], [14.2136965, 53.255424], [14.201667, 53.262978], [14.189078, 53.26326], [14.188659, 53.25962], [14.177469, 53.26354], [14.17635, 53.26354], [14.170335, 53.267315], [14.154949, 53.267593], [14.145018, 53.267876], [14.125436, 53.26088], [14.100119, 53.26144], [14.100958, 53.27249], [14.114805, 53.287037], [14.141661, 53.304802], [14.15453, 53.3083], [14.174392, 53.318928], [14.174811, 53.322704], [14.188239, 53.333477], [14.201247, 53.33697], [14.207822, 53.34047], [14.222089, 53.358654], [14.235796, 53.37236], [14.235936, 53.3732], [14.24321, 53.38411], [14.244888, 53.406208], [14.239153, 53.413765], [14.246147, 53.4209], [14.240412, 53.42845], [14.2341175, 53.42859], [14.228383, 53.436142], [14.215095, 53.42901], [14.214955, 53.42705], [14.208101, 53.421875], [14.182924, 53.422295], [14.170475, 53.426353], [14.146137, 53.43796], [14.140122, 53.44174], [14.133268, 53.438103], [14.127114, 53.43824], [14.121099, 53.442017], [14.107112, 53.427612], [14.106553, 53.420338], [14.097741, 53.42048], [14.093964, 53.42048], [14.080676, 53.413345], [14.068088, 53.413624], [14.055079, 53.410267], [14.049065, 53.414043], [14.049624, 53.421455], [14.043889, 53.42901], [14.005983, 53.429848], [13.999969, 53.433765], [13.981086, 53.434044], [13.968357, 53.430687], [13.94332, 53.431248], [13.942901, 53.42747], [13.936746, 53.427612], [13.917303, 53.42048], [13.905274, 53.424534], [13.905554, 53.42831], [13.899679, 53.431946], [13.905694, 53.43181], [13.912268, 53.435444], [13.907093, 53.442577], [13.919541, 53.45013], [13.913667, 53.453907], [13.913807, 53.457684], [13.907652, 53.457825], [13.889468, 53.465515], [13.8774395, 53.47321], [13.877719, 53.476845], [13.884573, 53.48412], [13.8719845, 53.484398], [13.873103, 53.499084], [13.879538, 53.501045], [13.879678, 53.502724], [13.861494, 53.510555], [13.849325, 53.514473], [13.818132, 53.51503], [13.824567, 53.51867], [13.824707, 53.522305], [13.807083, 53.53741], [13.801068, 53.541187], [13.802187, 53.556156], [13.789598, 53.556293], [13.783724, 53.55], [13.782465, 53.544266], [13.778688, 53.534336], [13.775052, 53.52692], [13.774772, 53.523285], [13.780507, 53.51685], [13.780227, 53.512093], [13.786521, 53.511955], [13.792536, 53.50818], [13.798271, 53.500484], [13.804146, 53.496708], [13.810579, 53.500343], [13.816594, 53.49643], [13.828343, 53.49587], [13.80932, 53.481743], [13.802747, 53.478245], [13.783864, 53.474888], [13.777709, 53.474888], [13.77757, 53.474888], [13.752672, 53.47545], [13.746798, 53.479225], [13.746937, 53.48286], [13.740783, 53.483], [13.734348, 53.479362], [13.709451, 53.479782], [13.709311, 53.476006], [13.689869, 53.465237], [13.67714, 53.46188], [13.67686, 53.458103], [13.670706, 53.458244], [13.651543, 53.44747], [13.657278, 53.443695], [13.650844, 53.44006], [13.638675, 53.444115], [13.6378355, 53.42901], [13.625667, 53.42943], [13.637556, 53.421875], [13.624268, 53.410828], [13.624127, 53.40733], [13.617973, 53.40733], [13.618253, 53.410828], [13.605945, 53.411385], [13.605525, 53.40747], [13.593216, 53.40775], [13.592936, 53.403973], [13.586922, 53.40775], [13.580627, 53.40425], [13.574472, 53.40425], [13.568178, 53.400753], [13.5554495, 53.39726], [13.549295, 53.39726], [13.548876, 53.389843], [13.55517, 53.389843], [13.554191, 53.37502], [13.540903, 53.360332], [13.534748, 53.36047], [13.528734, 53.364246], [13.522719, 53.364388], [13.5223, 53.356834], [13.515725, 53.3497], [13.528034, 53.349422], [13.527475, 53.33837], [13.52132, 53.338512], [13.520901, 53.331097], [13.526496, 53.31991], [13.5262165, 53.31599], [13.507613, 53.31641], [13.507893, 53.32005], [13.501878, 53.323826], [13.501739, 53.320328], [13.507473, 53.312634], [13.494744, 53.301865], [13.50048, 53.297947], [13.481457, 53.287178], [13.456698, 53.287598], [13.457118, 53.29487], [13.438655, 53.295288], [13.438375, 53.29151], [13.43222, 53.288017], [13.438096, 53.2841], [13.44425, 53.2841], [13.44411, 53.280323], [13.431662, 53.280464], [13.431521, 53.276966], [13.425087, 53.269413], [13.412359, 53.26228], [13.41194, 53.254868], [13.405505, 53.25123], [13.405225, 53.243958], [13.386482, 53.24046], [13.386902, 53.24787], [13.380747, 53.248013], [13.374872, 53.255424], [13.369278, 53.266754], [13.363543, 53.274307], [13.351094, 53.27445], [13.3448, 53.270813], [13.332491, 53.27109], [13.314028, 53.275146], [13.301859, 53.275288], [13.289269, 53.27179], [13.276542, 53.26452], [13.276542, 53.26088], [13.257658, 53.257523], [13.2512245, 53.253887], [13.250805, 53.242558], [13.24423, 53.231647], [13.243951, 53.22787], [13.237657, 53.224236], [13.231222, 53.21696], [13.231082, 53.213184], [13.218913, 53.217102], [13.206465, 53.21738], [13.194855, 53.232346], [13.194995, 53.236122], [13.18926, 53.243538], [13.183246, 53.24745], [13.182965, 53.243675], [13.176811, 53.243816], [13.176951, 53.24745], [13.170796, 53.247593], [13.164502, 53.243958], [13.152193, 53.244236], [13.145899, 53.2406], [13.139745, 53.2406], [13.13317, 53.233326], [13.121001, 53.237244], [13.108553, 53.233746], [13.1075735, 53.211365], [13.101279, 53.20773], [13.095264, 53.211647], [13.08911, 53.211647], [13.088831, 53.20423], [13.076102, 53.19696], [13.057639, 53.19724], [13.04519, 53.19374], [13.04505, 53.190105], [13.038896, 53.190105], [13.038755, 53.186466], [13.032461, 53.18283], [13.0258875, 53.17542], [13.025747, 53.17178], [13.019593, 53.17178], [13.007005, 53.16451], [12.994696, 53.164787], [12.982107, 53.157513], [12.9700775, 53.165066], [12.970357, 53.17248], [12.964203, 53.17262], [12.957909, 53.168983], [12.958049, 53.17276], [12.964343, 53.176395], [12.964482, 53.180035], [12.976932, 53.18367], [12.983226, 53.18717], [12.977211, 53.191086], [12.977351, 53.19472], [12.952733, 53.19514], [12.9463, 53.187725], [12.946019, 53.180313], [12.939865, 53.180454], [12.940004, 53.18409], [12.93385, 53.18423], [12.93413, 53.191643], [12.915667, 53.191925], [12.902938, 53.18465], [12.89063, 53.184788], [12.890349, 53.177376], [12.884195, 53.177517], [12.884055, 53.17374], [12.872026, 53.18143], [12.865871, 53.18143], [12.859857, 53.185207], [12.859997, 53.188988], [12.854122, 53.19654], [12.847968, 53.19654], [12.841674, 53.1929], [12.829225, 53.193184], [12.82293, 53.189545], [12.816776, 53.189545], [12.8169155, 53.19332], [12.785724, 53.182552], [12.767261, 53.18283], [12.76754, 53.190247], [12.761386, 53.190384], [12.749077, 53.19416], [12.755511, 53.201576], [12.762225, 53.2164], [12.762365, 53.22004], [12.750056, 53.220318], [12.725298, 53.21682], [12.725438, 53.220596], [12.688372, 53.221016], [12.676063, 53.224934], [12.670048, 53.22871], [12.670328, 53.236122], [12.676763, 53.243538], [12.670748, 53.247314], [12.670887, 53.25109], [12.633821, 53.25151], [12.633681, 53.24787], [12.614938, 53.2406], [12.608644, 53.240738], [12.602629, 53.244514], [12.59046, 53.248432], [12.553673, 53.256264], [12.547379, 53.256405], [12.53521, 53.260323], [12.504158, 53.256966], [12.503878, 53.249413], [12.497724, 53.24955], [12.491709, 53.253326], [12.4915695, 53.24969], [12.460657, 53.24997], [12.454363, 53.246334], [12.448208, 53.246475], [12.436179, 53.257805], [12.436459, 53.268993], [12.430445, 53.27277], [12.42429, 53.27277], [12.418136, 53.276546], [12.3996725, 53.276825], [12.399812, 53.28424], [12.406106, 53.287876], [12.406246, 53.291653], [12.400231, 53.29543], [12.400231, 53.299206], [12.381768, 53.299347], [12.381908, 53.303123], [12.363305, 53.303265], [12.35715, 53.30718], [12.344842, 53.310955], [12.338827, 53.31473], [12.332672, 53.314873], [12.326518, 53.31865], [12.320364, 53.31879], [12.314209, 53.322567], [12.283297, 53.322845], [12.283157, 53.31921], [12.264554, 53.319347], [12.264833, 53.326763], [12.252524, 53.330677], [12.24637, 53.334454], [12.2465105, 53.33823], [12.2403555, 53.33823], [12.234342, 53.34956], [12.234481, 53.3532], [12.222172, 53.353336], [12.215878, 53.3497], [12.197135, 53.34998], [12.190841, 53.346203], [12.190701, 53.33879], [12.171957, 53.335293], [12.166082, 53.346485], [12.159928, 53.3504], [12.160208, 53.357815], [12.147619, 53.354176], [12.147619, 53.3504], [12.141325, 53.35054], [12.141185, 53.34313], [12.116427, 53.347042], [12.116287, 53.33963], [12.085376, 53.343685], [12.085795, 53.366066], [12.054743, 53.366344], [12.060478, 53.343967], [12.054323, 53.343967], [12.048029, 53.34033], [12.029146, 53.333057], [12.022852, 53.32942], [12.022852, 53.32564], [12.028867, 53.31809], [12.028447, 53.299488], [12.022153, 53.29585], [12.009704, 53.29599], [12.003409, 53.29235], [12.003269, 53.288574], [11.997255, 53.29235], [11.978652, 53.292492], [11.978512, 53.288857], [11.972218, 53.28144], [11.965783, 53.277805], [11.965783, 53.27403], [11.953195, 53.266754], [11.953335, 53.270393], [11.915988, 53.270813], [11.903679, 53.27459], [11.897525, 53.274727], [11.897245, 53.26354], [11.884796, 53.259903], [11.872208, 53.25263], [11.872067, 53.245075], [11.859619, 53.245216], [11.853465, 53.248993], [11.803809, 53.24955], [11.809964, 53.241997], [11.822272, 53.24186], [11.840736, 53.23053], [11.840736, 53.226753], [11.834442, 53.223114], [11.778492, 53.223675], [11.766044, 53.22004], [11.759889, 53.22004], [11.7473, 53.212765], [11.734852, 53.212906], [11.735131, 53.22773], [11.722683, 53.22787], [11.716528, 53.231647], [11.716528, 53.235424], [11.710374, 53.235424], [11.704219, 53.2392], [11.666873, 53.23948], [11.660579, 53.235844], [11.648129, 53.235985], [11.635821, 53.23976], [11.629526, 53.236122], [11.623232, 53.22871], [11.616938, 53.225075], [11.604349, 53.221436], [11.598055, 53.214024], [11.591761, 53.21039], [11.566863, 53.210526], [11.560569, 53.203114], [11.566723, 53.199337], [11.560429, 53.192062], [11.566584, 53.188286], [11.566584, 53.18451], [11.560289, 53.177097], [11.5725975, 53.169544], [11.5725975, 53.16213], [11.566164, 53.154716], [11.553715, 53.147305], [11.55973, 53.136112], [11.5535755, 53.132477], [11.553435, 53.1287], [11.540986, 53.125065], [11.540986, 53.121426], [11.5160885, 53.121567], [11.509794, 53.11793], [11.50364, 53.121708], [11.50364, 53.125484], [11.478883, 53.12562], [11.478883, 53.133038], [11.472728, 53.136814], [11.44783, 53.13695], [11.44783, 53.133316], [11.441676, 53.133316], [11.441676, 53.137093], [11.422933, 53.137234], [11.422933, 53.133457], [11.410484, 53.133595], [11.410484, 53.13737], [11.398175, 53.13737], [11.397896, 53.11877], [11.40405, 53.111355], [11.397896, 53.10758], [11.385447, 53.10772], [11.372998, 53.111496], [11.366843, 53.115273], [11.341946, 53.111774], [11.335651, 53.11555], [11.317048, 53.115692], [11.317048, 53.112057], [11.2983055, 53.115833], [11.285996, 53.119747], [11.273547, 53.119747], [11.273547, 53.123524], [11.267253, 53.1273], [11.248651, 53.134853], [11.236201, 53.142406], [11.211304, 53.14269], [11.198715, 53.135273], [11.186266, 53.135414], [11.186406, 53.15038], [11.173958, 53.157932], [11.186406, 53.157795], [11.1927, 53.165207], [11.1927, 53.168842], [11.198995, 53.17262], [11.198995, 53.180035], [11.174097, 53.187725], [11.174097, 53.18395], [11.167803, 53.18409], [11.155494, 53.191643], [11.143045, 53.191784], [11.143045, 53.202972], [11.118288, 53.203255], [11.105839, 53.210808], [11.09353, 53.21472], [11.087235, 53.2185], [11.081081, 53.22605], [11.074926, 53.229828], [11.068632, 53.229828], [11.068772, 53.23738], [11.062478, 53.241158], [11.062478, 53.244797], [11.056323, 53.25235], [11.050169, 53.256126], [11.050169, 53.259903], [11.043875, 53.26368], [11.043875, 53.267456], [11.037721, 53.271233], [11.031426, 53.278645], [11.025271, 53.28242], [11.012823, 53.282562], [11.012823, 53.304943], [11.006529, 53.304943], [11.006529, 53.312355], [11.000234, 53.31613], [11.000234, 53.323544], [10.99408, 53.32732], [10.99408, 53.334736], [10.962888, 53.338932], [10.9565935, 53.335434], [10.950439, 53.335434], [10.93799, 53.33949], [10.93799, 53.343266], [10.931696, 53.347183], [10.931696, 53.35082], [10.919247, 53.35124], [10.919247, 53.34746], [10.913093, 53.34019], [10.900644, 53.33697], [10.882041, 53.34131], [10.882041, 53.333755], [10.888195, 53.333614], [10.888335, 53.326202], [10.875886, 53.326622], [10.875886, 53.322845], [10.869732, 53.319347], [10.857283, 53.319767], [10.857283, 53.31599], [10.8449745, 53.312634], [10.83868, 53.312916], [10.83868, 53.30914], [10.832525, 53.313053], [10.832525, 53.31683], [10.813922, 53.31739], [10.807768, 53.32131], [10.795319, 53.321587], [10.770421, 53.337112], [10.764267, 53.337254], [10.758113, 53.341167], [10.764267, 53.344666], [10.764267, 53.348442], [10.745664, 53.34886], [10.745664, 53.35264], [10.739369, 53.36019], [10.708318, 53.379353], [10.6958685, 53.379635], [10.683559, 53.376137], [10.677405, 53.376278], [10.658802, 53.38019], [10.609567, 53.380894], [10.597398, 53.37362], [10.597398, 53.377254], [10.603412, 53.388306], [10.609567, 53.388165], [10.621736, 53.391804], [10.621456, 53.424812], [10.62747, 53.432087], [10.62747, 53.4395], [10.633345, 53.45041], [10.633345, 53.454185], [10.639359, 53.465096], [10.651669, 53.46496], [10.651669, 53.468594], [10.676287, 53.468315], [10.682441, 53.464676], [10.694889, 53.464397], [10.706919, 53.48636], [10.725522, 53.4823], [10.725522, 53.486076], [10.731676, 53.489716], [10.737831, 53.485798], [10.743985, 53.489433], [10.750139, 53.489296], [10.756294, 53.49293], [10.756434, 53.489155], [10.7625885, 53.49279], [10.762448, 53.49643], [10.768743, 53.49629], [10.781052, 53.499786], [10.781052, 53.50342], [10.787207, 53.510696], [10.787066, 53.51811], [10.811824, 53.521328], [10.824412, 53.51727], [10.824273, 53.524685], [10.817979, 53.524822], [10.817839, 53.53965], [10.823993, 53.53951], [10.836442, 53.546642], [10.830008, 53.554195], [10.830008, 53.557972], [10.823713, 53.56175], [10.829867, 53.565388], [10.829728, 53.5728], [10.823434, 53.576576], [10.823434, 53.58021], [10.848331, 53.579792], [10.848471, 53.57238], [10.854765, 53.568462], [10.867354, 53.568184], [10.867214, 53.57182], [10.885957, 53.5714], [10.892251, 53.574898], [10.910995, 53.57448], [10.923444, 53.585247], [10.923024, 53.607628], [10.929038, 53.625954], [10.929038, 53.62973], [10.941347, 53.64064], [10.947641, 53.644135], [10.953796, 53.65141], [10.953656, 53.65882], [10.947362, 53.658962], [10.947222, 53.66274], [10.940787, 53.666515], [10.940648, 53.67407], [10.946942, 53.677567], [10.940508, 53.68512], [10.92764, 53.69295], [10.92764, 53.696587], [10.9212055, 53.700504], [10.914911, 53.700645], [10.908477, 53.704422], [10.889594, 53.70862], [10.8833, 53.708755], [10.877145, 53.70512], [10.870851, 53.70526], [10.864416, 53.709038], [10.864556, 53.7054], [10.851968, 53.70568], [10.845533, 53.713234], [10.833085, 53.71337], [10.820356, 53.721066], [10.814202, 53.721066], [10.814062, 53.724842], [10.807768, 53.724842], [10.807348, 53.743446], [10.801054, 53.747223], [10.79476, 53.747364], [10.7884655, 53.75114], [10.7823105, 53.751278], [10.769862, 53.755054], [10.763847, 53.755196], [10.763847, 53.75156], [10.757693, 53.75156], [10.757413, 53.77016], [10.763428, 53.77366], [10.769443, 53.78107], [10.769302, 53.78471], [10.763288, 53.784847], [10.769162, 53.7959], [10.769023, 53.80331], [10.762868, 53.807087], [10.768883, 53.810726], [10.762729, 53.814503], [10.762448, 53.829327], [10.756294, 53.836742], [10.750279, 53.836742], [10.744265, 53.84052], [10.750139, 53.85157], [10.75, 53.858982], [10.756015, 53.862617], [10.756015, 53.866394], [10.767903, 53.877304], [10.767903, 53.88108], [10.773918, 53.88108], [10.779933, 53.877304], [10.797836, 53.880802], [10.803711, 53.888077], [10.821615, 53.898987], [10.833784, 53.898846], [10.839659, 53.90248], [10.8395195, 53.90612], [10.845533, 53.909756], [10.851548, 53.909615], [10.851408, 53.91339], [10.863577, 53.91689], [10.869592, 53.916748], [10.869312, 53.924164], [10.875327, 53.9278], [10.881481, 53.927658], [10.881621, 53.924023], [10.887916, 53.920105], [10.900364, 53.919968], [10.894489, 53.91255], [10.89477, 53.90514], [10.901064, 53.901222], [10.913512, 53.900944], [10.919666, 53.90458], [10.932256, 53.9043], [10.93841, 53.907936], [10.93855, 53.90416], [10.944844, 53.9078], [10.944704, 53.911434], [10.950998, 53.911293], [10.957433, 53.90738], [10.957433, 53.911156], [10.957293, 53.91479], [10.93827, 53.91535], [10.93813, 53.918987], [10.931836, 53.91913], [10.931696, 53.922905], [10.906239, 53.92724], [10.89379, 53.92752], [10.887775, 53.92388], [10.886796, 53.942486], [10.899105, 53.94976], [10.89477, 53.955914], [10.900225, 53.955635], [10.91589, 53.958992], [10.945264, 53.969624], [10.951978, 53.97424], [10.975337, 53.984867], [11.006389, 53.99424], [11.024153, 54.00207], [11.040238, 54.00655], [11.054225, 54.008785], [11.066954, 54.009068], [11.088075, 54.01396], [11.099125, 54.01396], [11.119127, 54.011024], [11.143605, 54.009624], [11.169202, 54.0148], [11.180811, 54.01536], [11.194099, 54.00739], [11.19368, 53.999836], [11.203052, 53.989902], [11.214661, 53.984867], [11.22641, 53.98235], [11.239139, 53.981792], [11.248651, 53.987106], [11.256903, 53.986267], [11.26026, 53.980953], [11.254664, 53.973537], [11.245293, 53.97158], [11.241377, 53.956753], [11.241377, 53.94906], [11.245293, 53.942345], [11.250329, 53.941788], [11.252566, 53.93703], [11.272569, 53.930176], [11.284738, 53.929897], [11.302502, 53.93815], [11.316349, 53.942627], [11.32698, 53.957035], [11.330896, 53.958714], [11.3391485, 53.956753], [11.346981, 53.944862], [11.364745, 53.935074], [11.374117, 53.935074], [11.386986, 53.938988], [11.405309, 53.935352], [11.401952, 53.922623], [11.414121, 53.91591], [11.4303465, 53.912693], [11.43692, 53.909615], [11.43692, 53.900665], [11.452446, 53.899826], [11.454684, 53.902344], [11.446432, 53.9043], [11.444194, 53.910454], [11.448111, 53.91437], [11.458041, 53.91647], [11.47021, 53.9271], [11.474687, 53.929058], [11.4814005, 53.942345], [11.4814005, 53.957874], [11.479162, 53.96123], [11.484198, 53.967663], [11.479162, 53.968784], [11.474687, 53.965145], [11.473567, 53.970463], [11.466993, 53.97074], [11.454684, 53.957314], [11.443634, 53.960392], [11.441956, 53.970463], [11.446432, 53.9741], [11.4453125, 53.995358], [11.428108, 53.986546], [11.429787, 53.984867], [11.42699, 53.967106], [11.428108, 53.96095], [11.417478, 53.96319], [11.409784, 53.969063], [11.401392, 53.968502], [11.394678, 53.974518], [11.390343, 53.97382], [11.386986, 53.967945], [11.410764, 53.967663], [11.404749, 53.964306], [11.393559, 53.964027], [11.386986, 53.965984], [11.377474, 53.975357], [11.375795, 53.99074], [11.379152, 53.997875], [11.402512, 54.008507], [11.414121, 54.010746], [11.434682, 54.01788], [11.457481, 54.023754], [11.475245, 54.02431], [11.489793, 54.023193], [11.4963665, 54.019836], [11.495808, 54.010746], [11.490771, 54.000114], [11.488673, 54.00291], [11.478602, 53.998714], [11.478602, 53.984028], [11.480281, 53.98151], [11.472448, 53.97983], [11.468672, 53.97158], [11.480841, 53.970463], [11.486995, 53.973537], [11.486995, 53.969063], [11.494128, 53.97102], [11.491331, 53.977596], [11.498605, 53.981792], [11.499165, 53.987385], [11.49245, 53.990185], [11.505319, 54.00739], [11.510774, 54.01298], [11.518047, 54.01592], [11.5324545, 54.01872], [11.531895, 54.02627], [11.517488, 54.02515], [11.517488, 54.030186], [11.521963, 54.033684], [11.529656, 54.034245], [11.5324545, 54.028507], [11.538049, 54.025433], [11.547001, 54.02515], [11.564765, 54.029068], [11.576934, 54.03564], [11.585326, 54.044594], [11.586446, 54.051586], [11.581969, 54.06376], [11.594698, 54.067673], [11.609665, 54.06935], [11.6147, 54.073967], [11.624211, 54.077045], [11.62589, 54.089634], [11.612462, 54.103203], [11.600852, 54.100964], [11.601972, 54.095367], [11.587005, 54.09285], [11.582529, 54.089912], [11.574696, 54.079285], [11.571339, 54.079563], [11.55917, 54.069633], [11.549659, 54.065437], [11.5419655, 54.05788], [11.53637, 54.056202], [11.533573, 54.065994], [11.534692, 54.07369], [11.531335, 54.076206], [11.541406, 54.08292], [11.553016, 54.09369], [11.567003, 54.098724], [11.588124, 54.099285], [11.607567, 54.106], [11.620854, 54.11341], [11.638618, 54.1274], [11.655823, 54.13705], [11.667433, 54.14572], [11.680301, 54.152576], [11.691911, 54.153694], [11.729676, 54.153137], [11.761428, 54.154533], [11.783108, 54.1488], [11.811362, 54.145164], [11.845772, 54.144604], [11.876964, 54.1488], [11.9040985, 54.154533], [11.922003, 54.16013], [11.942005, 54.164326], [11.9558525, 54.165165], [11.9708185, 54.16796], [11.983547, 54.171738], [12.010263, 54.178173], [12.025789, 54.176216], [12.042435, 54.176216], [12.056421, 54.178173], [12.07027, 54.178173], [12.088593, 54.18293], [12.096985, 54.16992], [12.093628, 54.151737], [12.10244, 54.155655], [12.120903, 54.155373], [12.121882, 54.158173], [12.13643, 54.157333], [12.140765, 54.173977], [12.132513, 54.173138], [12.109154, 54.175655], [12.108595, 54.17146], [12.099783, 54.16936], [12.096985, 54.180412], [12.109154, 54.177895], [12.123561, 54.18321], [12.138667, 54.192303], [12.149158, 54.200695], [12.160208, 54.212025], [12.168041, 54.222095], [12.184127, 54.23622], [12.190281, 54.239857], [12.223011, 54.254265], [12.251406, 54.26238], [12.264694, 54.267693], [12.310292, 54.28266], [12.336449, 54.295948], [12.360228, 54.321545], [12.365263, 54.325462], [12.373655, 54.33735], [12.37967, 54.343224], [12.386384, 54.355114], [12.396874, 54.362946], [12.406945, 54.376514], [12.416457, 54.382668], [12.429186, 54.387703], [12.4391165, 54.39344], [12.44583, 54.400715], [12.451984, 54.40407], [12.470868, 54.42575], [12.471987, 54.430367], [12.487513, 54.456524], [12.499681, 54.47373], [12.510312, 54.482677], [12.519684, 54.484356], [12.530314, 54.4824], [12.526398, 54.47093], [12.53479, 54.462677], [12.548079, 54.455963], [12.576892, 54.452045], [12.616337, 54.44925], [12.655222, 54.442677], [12.671447, 54.441555], [12.715787, 54.442394], [12.721382, 54.441837], [12.769218, 54.441837], [12.785864, 54.440437], [12.85636, 54.440437], [12.920282, 54.444912], [12.924759, 54.440998], [12.9292345, 54.442955], [12.950215, 54.442955], [12.961406, 54.441277], [12.962524, 54.43764], [12.950215, 54.439877], [12.938046, 54.438198], [12.922521, 54.423233], [12.910771, 54.420155], [12.9014, 54.420715], [12.8986025, 54.418476], [12.881397, 54.41652], [12.874125, 54.413162], [12.864753, 54.41876], [12.848107, 54.421833], [12.831323, 54.422672], [12.821392, 54.420994], [12.809223, 54.41512], [12.80139, 54.408127], [12.788661, 54.41708], [12.770338, 54.41708], [12.764183, 54.412884], [12.755791, 54.414562], [12.739146, 54.41512], [12.733551, 54.419037], [12.728656, 54.41512], [12.699142, 54.418476], [12.691449, 54.418198], [12.6841755, 54.41428], [12.66809, 54.414562], [12.66809, 54.409527], [12.661936, 54.408405], [12.652004, 54.410645], [12.64585, 54.41596], [12.635779, 54.41708], [12.633681, 54.421555], [12.618015, 54.418198], [12.618015, 54.41428], [12.612, 54.410084], [12.600811, 54.407986], [12.5875225, 54.407707], [12.576333, 54.40295], [12.57857, 54.39652], [12.589761, 54.392323], [12.586963, 54.38896], [12.551994, 54.389523], [12.539126, 54.384907], [12.53521, 54.38099], [12.527516, 54.38099], [12.521922, 54.377354], [12.523041, 54.37232], [12.517446, 54.371758], [12.509753, 54.377632], [12.495766, 54.38211], [12.451984, 54.38071], [12.450306, 54.379032], [12.43534, 54.37847], [12.434221, 54.375114], [12.421352, 54.371758], [12.416877, 54.364346], [12.416877, 54.35623], [12.421352, 54.353157], [12.421352, 54.33959], [12.415897, 54.33483], [12.406945, 54.33567], [12.400231, 54.342384], [12.389741, 54.342945], [12.385824, 54.34015], [12.396455, 54.333714], [12.396874, 54.3235], [12.381908, 54.309097], [12.365823, 54.310074], [12.360228, 54.306297], [12.358549, 54.299583], [12.365823, 54.29427], [12.365263, 54.290913], [12.376453, 54.28182], [12.383027, 54.2793], [12.377432, 54.27119], [12.3635845, 54.267414], [12.370298, 54.263218], [12.381349, 54.260418], [12.397994, 54.25147], [12.416457, 54.24713], [12.432543, 54.245453], [12.455342, 54.24713], [12.456321, 54.250347], [12.450306, 54.253986], [12.417995, 54.2579], [12.408624, 54.26881], [12.4091835, 54.27986], [12.419674, 54.29035], [12.431423, 54.29399], [12.43478, 54.297066], [12.454223, 54.299026], [12.474225, 54.30294], [12.47912, 54.308258], [12.477442, 54.31567], [12.471427, 54.321823], [12.473105, 54.329796], [12.494786, 54.330917], [12.499123, 54.333714], [12.513669, 54.335953], [12.526398, 54.334274], [12.535769, 54.33931], [12.538567, 54.351757], [12.550876, 54.355675], [12.552554, 54.35959], [12.53423, 54.362667], [12.53423, 54.365463], [12.554233, 54.37232], [12.5568905, 54.375114], [12.563045, 54.37232], [12.575213, 54.37148], [12.574655, 54.35791], [12.586404, 54.35623], [12.595216, 54.35875], [12.600251, 54.364346], [12.598573, 54.37092], [12.621372, 54.37288], [12.635779, 54.37931], [12.649207, 54.38155], [12.666411, 54.389244], [12.670887, 54.39428], [12.660257, 54.397915], [12.655781, 54.40603], [12.657459, 54.408127], [12.685854, 54.406868], [12.691449, 54.409527], [12.704737, 54.411762], [12.710332, 54.410923], [12.715227, 54.40435], [12.71299, 54.401833], [12.692568, 54.401554], [12.686973, 54.398197], [12.692987, 54.38155], [12.695785, 54.384907], [12.698583, 54.398197], [12.715227, 54.398754], [12.716906, 54.37987], [12.720822, 54.378193], [12.720263, 54.37288], [12.733551, 54.37148], [12.741384, 54.373997], [12.746979, 54.379593], [12.755232, 54.37092], [12.769218, 54.371758], [12.774673, 54.389244], [12.782507, 54.39176], [12.785304, 54.379593], [12.794676, 54.378193], [12.804187, 54.3712], [12.804747, 54.363785], [12.808104, 54.36239], [12.81188, 54.347702], [12.817475, 54.351196], [12.827546, 54.352318], [12.84587, 54.351196], [12.8530035, 54.353157], [12.86755, 54.363228], [12.876922, 54.364624], [12.8836355, 54.36924], [12.884754, 54.383507], [12.896924, 54.394558], [12.897483, 54.401833], [12.914687, 54.407707], [12.928116, 54.414562], [12.938606, 54.41428], [12.954692, 54.41792], [12.957489, 54.422955], [12.987002, 54.42519], [12.995814, 54.42785], [12.999171, 54.43624], [13.014697, 54.439598], [13.033581, 54.434284], [13.034699, 54.423794], [13.024768, 54.421833], [13.022531, 54.41736], [13.022531, 54.40463], [13.024768, 54.397076], [13.038616, 54.39036], [13.043652, 54.38295], [13.049665, 54.379593], [13.074143, 54.382668], [13.0864525, 54.376514], [13.093586, 54.366863], [13.093586, 54.363785], [13.084774, 54.35959], [13.084774, 54.356514], [13.075822, 54.34854], [13.07806, 54.33875], [13.087012, 54.32686], [13.087992, 54.320145], [13.098621, 54.31791], [13.103657, 54.310913], [13.11191, 54.30462], [13.11191, 54.298187], [13.104217, 54.289093], [13.105895, 54.28182], [13.121981, 54.272587], [13.132471, 54.269093], [13.153032, 54.26853], [13.165901, 54.277622], [13.17863, 54.27063], [13.17751, 54.266293], [13.161425, 54.267693], [13.150795, 54.261257], [13.150795, 54.256504], [13.162544, 54.25958], [13.162544, 54.264896], [13.169118, 54.266293], [13.171916, 54.263496], [13.183105, 54.266293], [13.1885605, 54.265453], [13.191359, 54.25846], [13.2042265, 54.25706], [13.210241, 54.251186], [13.216395, 54.24965], [13.21136, 54.244335], [13.217514, 54.240696], [13.250245, 54.24014], [13.256399, 54.241257], [13.285773, 54.235382], [13.297523, 54.225452], [13.29976, 54.2165], [13.303118, 54.21426], [13.305775, 54.20489], [13.319202, 54.19454], [13.3274555, 54.18377], [13.342002, 54.18265], [13.34522, 54.177895], [13.336408, 54.176495], [13.333051, 54.1688], [13.34522, 54.164886], [13.349695, 54.16796], [13.363123, 54.1702], [13.37697, 54.176777], [13.389699, 54.175377], [13.398091, 54.16992], [13.39977, 54.178734], [13.406903, 54.179573], [13.422569, 54.17104], [13.422989, 54.166843], [13.408023, 54.161808], [13.396973, 54.15985], [13.382006, 54.15146], [13.3825655, 54.142365], [13.402008, 54.1474], [13.404106, 54.153694], [13.408582, 54.155655], [13.41138, 54.14572], [13.428024, 54.13845], [13.436417, 54.12628], [13.440893, 54.122925], [13.438096, 54.111313], [13.448027, 54.10572], [13.453062, 54.099285], [13.454741, 54.09215], [13.467469, 54.087116], [13.4792185, 54.086838], [13.489149, 54.08348], [13.500899, 54.08516], [13.496983, 54.09243], [13.4846735, 54.102642], [13.482995, 54.111313], [13.478659, 54.112152], [13.476421, 54.11789], [13.490828, 54.12432], [13.509711, 54.12824], [13.524118, 54.1288], [13.528594, 54.130478], [13.550275, 54.12964], [13.575871, 54.131596], [13.600209, 54.135094], [13.628044, 54.14013], [13.647487, 54.150757], [13.666929, 54.15957], [13.674203, 54.16097], [13.696443, 54.171738], [13.705255, 54.171738], [13.718543, 54.163486], [13.711968, 54.15957], [13.698121, 54.15845], [13.696443, 54.14908], [13.716445, 54.145164], [13.735887, 54.13649], [13.749735, 54.13929], [13.751972, 54.132294], [13.757567, 54.12964], [13.757567, 54.119007], [13.767499, 54.118168], [13.77757, 54.108795], [13.783025, 54.107117], [13.797991, 54.107117], [13.806943, 54.103203], [13.809181, 54.099007], [13.805264, 54.09453], [13.795334, 54.089355], [13.795893, 54.077606], [13.7902975, 54.07215], [13.790857, 54.065437], [13.774772, 54.0604], [13.779668, 54.055923], [13.783584, 54.05928], [13.785262, 54.04935], [13.7807865, 54.045433], [13.770856, 54.042355], [13.760784, 54.0348], [13.74358, 54.031864], [13.750294, 54.02627], [13.757987, 54.02823], [13.7596655, 54.01508], [13.774213, 54.009907], [13.779668, 54.00431], [13.7902975, 54.000393], [13.7964525, 53.99508], [13.81086, 53.99592], [13.8202305, 53.988785], [13.834778, 53.98431], [13.845268, 53.97102], [13.85478, 53.964306], [13.855899, 53.960392], [13.851423, 53.953537], [13.856878, 53.950737], [13.868068, 53.950737], [13.871425, 53.952976], [13.879678, 53.951298], [13.883594, 53.944862], [13.894224, 53.943745], [13.897441, 53.93619], [13.912548, 53.925423], [13.913107, 53.91787], [13.901358, 53.909897], [13.886392, 53.909897], [13.875901, 53.90542], [13.853661, 53.89241], [13.8475065, 53.878143], [13.831421, 53.878704], [13.823588, 53.877304], [13.824707, 53.866257], [13.83254, 53.865974], [13.834778, 53.871292], [13.856318, 53.87101], [13.874222, 53.877865], [13.890867, 53.877304], [13.901917, 53.88206], [13.902476, 53.885418], [13.921919, 53.887936], [13.924717, 53.89465], [13.929752, 53.897026], [13.933109, 53.907658], [13.9380045, 53.91297], [13.932549, 53.918987], [13.931991, 53.93619], [13.925276, 53.940666], [13.9230385, 53.95046], [13.898001, 53.96207], [13.895343, 53.97018], [13.898561, 53.980953], [13.907513, 53.99074], [13.933109, 53.991302], [13.939683, 53.99424], [13.948075, 53.99452], [13.965281, 53.990185], [13.966399, 53.98347], [13.964161, 53.967106], [13.958567, 53.96207], [13.950314, 53.958992], [13.958007, 53.953255], [13.952552, 53.949898], [13.951432, 53.944023], [13.956328, 53.934513], [13.966399, 53.946823], [13.968078, 53.95186], [13.963042, 53.957314], [13.979687, 53.96067], [13.984163, 53.95983], [13.996332, 53.962627], [14.003046, 53.959553], [14.025286, 53.96207], [14.023607, 53.957314], [14.011438, 53.954235], [14.012558, 53.94934], [14.030321, 53.942066], [14.039693, 53.940666], [14.0408125, 53.947662], [14.035776, 53.94738], [14.035217, 53.952698], [14.04305, 53.96319], [14.046407, 53.97382], [14.046967, 53.99424], [14.042491, 53.999554], [14.0408125, 54.009068], [14.029762, 54.017597], [14.019132, 54.01732], [14.011438, 54.009907], [14.003606, 54.010746], [14.002486, 54.025433], [13.999129, 54.029907], [13.997451, 54.04012], [13.992556, 54.045994], [13.982485, 54.04907], [13.977449, 54.055363], [13.968078, 54.0604], [13.965281, 54.059002], [13.949195, 54.05872], [13.941921, 54.06152], [13.931991, 54.061237], [13.924717, 54.063198], [13.917443, 54.06096], [13.91087, 54.04935], [13.923597, 54.03928], [13.924157, 54.035362], [13.916883, 54.033405], [13.915345, 54.02879], [13.9080715, 54.02487], [13.9080715, 54.019276], [13.899119, 54.011864], [13.888629, 54.009624], [13.877999, 54.009624], [13.864711, 54.00571], [13.862473, 53.999275], [13.853102, 54.004032], [13.853102, 54.013683], [13.864151, 54.022633], [13.865271, 54.032703], [13.8719845, 54.03872], [13.870306, 54.043476], [13.857997, 54.04851], [13.845828, 54.045433], [13.845828, 54.042637], [13.835338, 54.038998], [13.82135, 54.03732], [13.809181, 54.030468], [13.801908, 54.01872], [13.780227, 54.017597], [13.770296, 54.018436], [13.763022, 54.02627], [13.763582, 54.031025], [13.770296, 54.0362], [13.772534, 54.041237], [13.783025, 54.03956], [13.783025, 54.045155], [13.790857, 54.04963], [13.7875, 54.056484], [13.797012, 54.06152], [13.797432, 54.069073], [13.803026, 54.076485], [13.801908, 54.08068], [13.808062, 54.08068], [13.808062, 54.091034], [13.812538, 54.099007], [13.805824, 54.109634], [13.793096, 54.110474], [13.785822, 54.114532], [13.781905, 54.120125], [13.7753315, 54.119007], [13.775891, 54.1288], [13.7658205, 54.135933], [13.757567, 54.134533], [13.755329, 54.145164], [13.751413, 54.1474], [13.749175, 54.15901], [13.765261, 54.1702], [13.785262, 54.173977], [13.805824, 54.17286], [13.803586, 54.178455], [13.812538, 54.177334], [13.813097, 54.168243], [13.8202305, 54.149918], [13.828064, 54.13733], [13.84303, 54.121246], [13.870865, 54.101524], [13.888629, 54.09243], [13.913667, 54.08208], [13.931991, 54.075367], [13.9436, 54.07271], [13.967518, 54.069633], [14.014096, 54.054245], [14.029202, 54.042637], [14.052562, 54.02711], [14.072004, 54.01704], [14.075781, 54.013683], [14.097461, 54.002632], [14.1108885, 53.99396], [14.124737, 53.987106], [14.14306, 53.975636], [14.150893, 53.968502], [14.1735525, 53.954517], [14.178588, 53.94906], [14.192435, 53.942345], [14.201946, 53.93619], [14.219851, 53.92962], [14.203626, 53.91829], [14.192156, 53.91913], [14.190197, 53.911434], [14.19775, 53.911854], [14.19845, 53.90738], [14.206003, 53.907658], [14.215375, 53.891712], [14.215514, 53.86975], [14.204744, 53.866814], [14.194674, 53.87157], [14.170335, 53.87269], [14.166978, 53.87157], [14.130891, 53.87073], [14.113546, 53.868492], [14.096902, 53.870453], [14.083054, 53.87381], [14.0769, 53.87101], [14.060814, 53.86933], [14.042491, 53.873528], [14.033119, 53.87269], [14.027524, 53.868492], [14.02137, 53.868774], [14.005843, 53.856186], [13.995772, 53.854366], [13.994654, 53.84989], [13.988639, 53.84793], [13.983044, 53.84989], [13.970316, 53.84877], [13.9591255, 53.845695], [13.936326, 53.843174], [13.919122, 53.846252], [13.914785, 53.843456], [13.898561, 53.83954], [13.860235, 53.843174], [13.857437, 53.846535], [13.846947, 53.85073], [13.8263855, 53.84961], [13.823588, 53.857304], [13.829183, 53.856743], [13.830861, 53.865135], [13.814217, 53.86318], [13.814217, 53.854927], [13.816874, 53.85185], [13.817993, 53.842056], [13.83254, 53.844574], [13.850304, 53.843456], [13.858557, 53.83814], [13.868068, 53.835903], [13.872543, 53.831287], [13.871425, 53.82597], [13.875341, 53.819256], [13.88751, 53.8152], [13.902476, 53.80205], [13.909191, 53.802612], [13.913667, 53.80653], [13.921919, 53.797577], [13.932549, 53.797855], [13.937446, 53.79156], [13.964161, 53.777294], [13.972553, 53.77212], [13.983044, 53.77184], [13.998011, 53.766804], [14.006963, 53.767086], [14.02081, 53.76121], [14.028643, 53.75981], [14.038574, 53.755196], [14.049205, 53.753517], [14.061374, 53.755196], [14.072004, 53.75156], [14.074102, 53.747643], [14.1013775, 53.74009], [14.1108885, 53.74065], [14.1224985, 53.73743], [14.133549, 53.73841], [14.144738, 53.74149], [14.166978, 53.742607], [14.174111, 53.735474], [14.184183, 53.736034], [14.213556, 53.75016], [14.22027, 53.757153], [14.229781, 53.76149], [14.248665, 53.758972], [14.264191, 53.752117], [14.266429, 53.743725], [14.272443, 53.73925], [14.265869, 53.730995], [14.259155, 53.728477], [14.256917, 53.723164], [14.229781, 53.710995], [14.218592, 53.708755], [14.215235, 53.70484], [14.217473, 53.700085], [14.2341175, 53.695747], [14.246986, 53.69379], [14.273143, 53.699245], [14.27594, 53.681202], [14.283493, 53.68148], [14.284752, 53.67253], [14.277199, 53.67211], [14.277759, 53.667633], [14.2702055, 53.667355], [14.270905, 53.66288], [14.278458, 53.66316], [14.278877, 53.6598], [14.291606, 53.659523], [14.289368, 53.633785], [14.313566, 53.618538], [14.324896, 53.61868], [14.319021, 53.611126], [14.318461, 53.593082], [14.310908, 53.592663], [14.315245, 53.56133], [14.307831, 53.56091], [14.30895, 53.55196], [14.301537, 53.55154], [14.302656, 53.542587], [14.310209, 53.543007], [14.310908, 53.538532], [14.318322, 53.53895], [14.325175, 53.53], [14.324896, 53.526363], [14.318182, 53.522724], [14.324197, 53.518948], [14.335666, 53.50412], [14.335386, 53.500343], [14.348115, 53.500206], [14.35413, 53.49643], [14.359724, 53.489014], [14.358885, 53.477966], [14.36462, 53.47055], [14.363641, 53.459503], [14.37567, 53.459503], [14.373572, 53.426212], [14.379307, 53.4188], [14.378608, 53.411385], [14.384342, 53.403973], [14.384063, 53.400196], [14.395672, 53.389004], [14.400988, 53.377956], [14.399729, 53.359493], [14.393014, 53.355854], [14.410778, 53.3483], [14.415534, 53.33697], [14.415813, 53.329838]]], [[[13.184224, 54.49429], [13.191917, 54.49345], [13.198631, 54.48981], [13.20031, 54.485756], [13.212479, 54.484917], [13.2253475, 54.486595], [13.226886, 54.468693], [13.22255, 54.464634], [13.212479, 54.464077], [13.2096815, 54.468693], [13.186322, 54.464634], [13.184784, 54.45708], [13.170238, 54.45708], [13.164223, 54.454563], [13.164783, 54.450367], [13.1436615, 54.446873], [13.130233, 54.442677], [13.120862, 54.442394], [13.120862, 54.44897], [13.131352, 54.45876], [13.1436615, 54.476803], [13.1491165, 54.48212], [13.163103, 54.49037], [13.172475, 54.493168], [13.184224, 54.49429]]], [[[13.123659, 54.549538], [13.125338, 54.543804], [13.116945, 54.539886], [13.115827, 54.545902], [13.123659, 54.549538]]], [[[13.136388, 54.60521], [13.146878, 54.60241], [13.147997, 54.59346], [13.15583, 54.58157], [13.151354, 54.58017], [13.1491165, 54.585907], [13.140863, 54.58241], [13.138066, 54.596817], [13.130793, 54.59206], [13.125338, 54.58465], [13.110791, 54.58381], [13.118064, 54.574577], [13.109113, 54.568142], [13.114148, 54.562687], [13.116945, 54.54982], [13.114148, 54.540726], [13.116945, 54.53765], [13.105895, 54.531776], [13.105335, 54.52926], [13.092467, 54.527298], [13.094706, 54.524082], [13.088551, 54.514572], [13.083655, 54.514572], [13.079739, 54.501003], [13.073585, 54.500164], [13.076382, 54.485756], [13.074143, 54.48212], [13.074143, 54.47037], [13.06701, 54.45764], [13.061975, 54.45904], [13.059737, 54.469532], [13.063094, 54.490932], [13.071906, 54.508137], [13.07862, 54.51541], [13.079179, 54.520164], [13.087012, 54.53933], [13.093027, 54.54492], [13.097503, 54.556534], [13.101419, 54.573177], [13.10086, 54.586185], [13.097503, 54.59038], [13.119184, 54.60353], [13.136388, 54.60521]]], [[[13.429144, 54.684517], [13.438096, 54.676823], [13.432501, 54.67123], [13.43306, 54.665073], [13.428584, 54.660458], [13.415297, 54.655144], [13.40033, 54.653744], [13.385783, 54.64871], [13.375852, 54.631504], [13.380887, 54.61346], [13.392497, 54.597095], [13.406903, 54.585346], [13.424667, 54.576256], [13.431941, 54.57374], [13.450265, 54.57038], [13.462434, 54.569542], [13.474743, 54.573456], [13.491387, 54.57234], [13.502997, 54.574856], [13.509151, 54.573456], [13.550834, 54.580452], [13.571395, 54.58157], [13.589159, 54.584087], [13.606364, 54.584927], [13.634758, 54.584927], [13.648605, 54.57849], [13.661894, 54.574856], [13.679658, 54.562687], [13.675881, 54.555973], [13.681336, 54.545204], [13.677, 54.52926], [13.6691675, 54.521286], [13.651962, 54.51345], [13.64357, 54.512894], [13.620212, 54.501564], [13.606364, 54.497086], [13.600769, 54.48981], [13.575871, 54.477924], [13.570276, 54.47009], [13.570276, 54.45848], [13.574193, 54.446033], [13.590279, 54.421833], [13.6024475, 54.410084], [13.613637, 54.40267], [13.623569, 54.398476], [13.633639, 54.399876], [13.64413, 54.398476], [13.658117, 54.398754], [13.664132, 54.402393], [13.673643, 54.400715], [13.6786785, 54.39484], [13.704136, 54.38015], [13.709171, 54.36896], [13.718543, 54.35987], [13.738544, 54.34742], [13.750854, 54.343784], [13.749175, 54.33707], [13.741343, 54.33623], [13.73253, 54.329517], [13.730851, 54.317627], [13.723019, 54.317627], [13.717004, 54.310074], [13.714207, 54.29315], [13.72078, 54.278183], [13.725257, 54.273426], [13.705814, 54.27063], [13.702457, 54.275944], [13.708052, 54.287136], [13.701898, 54.295387], [13.691407, 54.29259], [13.691407, 54.290073], [13.6691675, 54.29175], [13.662454, 54.287975], [13.656999, 54.287975], [13.646368, 54.29651], [13.656999, 54.30378], [13.684134, 54.309795], [13.68749, 54.31539], [13.700219, 54.31595], [13.704136, 54.3263], [13.680777, 54.32658], [13.678119, 54.33008], [13.65476, 54.32686], [13.650284, 54.323784], [13.636436, 54.319866], [13.62133, 54.319027], [13.616994, 54.31539], [13.61084, 54.31623], [13.6119585, 54.320145], [13.645248, 54.325462], [13.659656, 54.332314], [13.67756, 54.33735], [13.684134, 54.34574], [13.681336, 54.3498], [13.673643, 54.35064], [13.659656, 54.34714], [13.649165, 54.34854], [13.635878, 54.343784], [13.638115, 54.339027], [13.630842, 54.339027], [13.622449, 54.334553], [13.62133, 54.331196], [13.613637, 54.330635], [13.603007, 54.345184], [13.586922, 54.352036], [13.571395, 54.351757], [13.565241, 54.345463], [13.551953, 54.33931], [13.545798, 54.342106], [13.531391, 54.34015], [13.515865, 54.340706], [13.506354, 54.344063], [13.504116, 54.340427], [13.4846735, 54.33567], [13.4781, 54.330357], [13.466351, 54.32602], [13.466351, 54.321545], [13.459776, 54.31567], [13.445788, 54.31427], [13.4336195, 54.307697], [13.427465, 54.307137], [13.412498, 54.296787], [13.412498, 54.288815], [13.398091, 54.27371], [13.386902, 54.266575], [13.386342, 54.273148], [13.391377, 54.277065], [13.385783, 54.2793], [13.372495, 54.275665], [13.370256, 54.27091], [13.360886, 54.272587], [13.352492, 54.26797], [13.359766, 54.24937], [13.368578, 54.25147], [13.366341, 54.25762], [13.360326, 54.25622], [13.360326, 54.26238], [13.3668995, 54.264336], [13.378649, 54.253704], [13.391377, 54.2593], [13.391377, 54.264057], [13.403546, 54.264896], [13.418094, 54.254826], [13.422989, 54.246292], [13.423549, 54.23818], [13.416415, 54.232586], [13.405785, 54.230347], [13.393616, 54.220974], [13.386342, 54.22825], [13.365781, 54.231747], [13.358088, 54.234264], [13.338086, 54.2365], [13.329694, 54.239017], [13.322559, 54.23762], [13.318644, 54.244614], [13.323679, 54.24741], [13.326896, 54.254543], [13.323119, 54.26098], [13.323679, 54.266293], [13.334169, 54.26979], [13.337526, 54.275665], [13.335288, 54.278183], [13.328574, 54.27287], [13.31081, 54.266293], [13.3158455, 54.2593], [13.306894, 54.25846], [13.287452, 54.2593], [13.271366, 54.253704], [13.263673, 54.254543], [13.246328, 54.25986], [13.241433, 54.266575], [13.224788, 54.269093], [13.220872, 54.27203], [13.20031, 54.26979], [13.196394, 54.275944], [13.196394, 54.28518], [13.2042265, 54.288815], [13.20087, 54.294548], [13.191917, 54.296787], [13.18912, 54.29119], [13.180867, 54.287697], [13.165341, 54.289375], [13.141983, 54.2807], [13.138626, 54.28322], [13.139745, 54.29651], [13.150235, 54.299583], [13.154711, 54.30462], [13.163103, 54.3049], [13.165341, 54.30126], [13.181987, 54.296227], [13.184784, 54.300983], [13.169678, 54.309795], [13.160866, 54.310074], [13.142542, 54.31483], [13.135268, 54.32434], [13.114148, 54.332596], [13.115267, 54.343506], [13.121981, 54.351196], [13.123659, 54.36714], [13.129674, 54.37232], [13.1586275, 54.374836], [13.167439, 54.37148], [13.176392, 54.37204], [13.185763, 54.375114], [13.197513, 54.375675], [13.203108, 54.37064], [13.216395, 54.3712], [13.218074, 54.367702], [13.224229, 54.3698], [13.234719, 54.36924], [13.235838, 54.376514], [13.259197, 54.379593], [13.261994, 54.384346], [13.256399, 54.386307], [13.249126, 54.38379], [13.239755, 54.385746], [13.236398, 54.39204], [13.230243, 54.397076], [13.233041, 54.409245], [13.219752, 54.414], [13.212479, 54.42575], [13.206884, 54.430088], [13.20087, 54.42575], [13.179749, 54.42351], [13.170238, 54.42519], [13.1586275, 54.420994], [13.150235, 54.422955], [13.149675, 54.428967], [13.161984, 54.43568], [13.167439, 54.449528], [13.171356, 54.453445], [13.193037, 54.455124], [13.197513, 54.447292], [13.2042265, 54.452045], [13.205345, 54.46016], [13.218074, 54.45904], [13.224229, 54.464355], [13.237516, 54.4624], [13.236957, 54.46925], [13.241992, 54.47233], [13.253042, 54.47205], [13.265211, 54.476524], [13.263673, 54.47988], [13.257519, 54.478203], [13.25584, 54.486034], [13.245769, 54.487015], [13.234719, 54.48296], [13.226886, 54.486595], [13.230243, 54.510933], [13.209122, 54.508415], [13.20087, 54.50352], [13.193037, 54.505478], [13.171356, 54.507298], [13.163103, 54.50212], [13.15583, 54.50604], [13.157509, 54.512894], [13.163663, 54.51625], [13.163663, 54.523243], [13.156949, 54.53933], [13.163103, 54.545204], [13.174713, 54.54576], [13.184784, 54.54814], [13.21136, 54.5501], [13.229124, 54.553455], [13.240314, 54.554295], [13.2552805, 54.552055], [13.259756, 54.54842], [13.26689, 54.54758], [13.2764015, 54.543526], [13.286332, 54.543243], [13.290809, 54.538208], [13.290249, 54.52604], [13.288011, 54.521564], [13.297523, 54.519325], [13.303118, 54.51401], [13.310251, 54.51569], [13.31137, 54.52436], [13.302558, 54.52758], [13.306894, 54.535973], [13.303677, 54.546463], [13.296403, 54.550377], [13.3008795, 54.555412], [13.312489, 54.562126], [13.332491, 54.57094], [13.339765, 54.57094], [13.346338, 54.577934], [13.354731, 54.58073], [13.368578, 54.57933], [13.370816, 54.576534], [13.363123, 54.57094], [13.360326, 54.562965], [13.353052, 54.551216], [13.348017, 54.552895], [13.34522, 54.54758], [13.354171, 54.54674], [13.354171, 54.549538], [13.362004, 54.552338], [13.363123, 54.555973], [13.374733, 54.56017], [13.37753, 54.55905], [13.379209, 54.54814], [13.385223, 54.542965], [13.396973, 54.53765], [13.413618, 54.520447], [13.414737, 54.51653], [13.408582, 54.511772], [13.406903, 54.5052], [13.41194, 54.499325], [13.413058, 54.49373], [13.426906, 54.489532], [13.440333, 54.487854], [13.44411, 54.48464], [13.448027, 54.474285], [13.453062, 54.473446], [13.457538, 54.477364], [13.4792185, 54.48324], [13.490828, 54.482677], [13.495864, 54.479603], [13.506354, 54.481], [13.500899, 54.487854], [13.501319, 54.49373], [13.509711, 54.508415], [13.514187, 54.510094], [13.514747, 54.51569], [13.501878, 54.54842], [13.496423, 54.54842], [13.486352, 54.552895], [13.459776, 54.553455], [13.446908, 54.551216], [13.440893, 54.554295], [13.428024, 54.567024], [13.408582, 54.572617], [13.396973, 54.57234], [13.383545, 54.58129], [13.383545, 54.595695], [13.371935, 54.613182], [13.358088, 54.613182], [13.348577, 54.600452], [13.328015, 54.59374], [13.335288, 54.584927], [13.334169, 54.58241], [13.316965, 54.57989], [13.301998, 54.5715], [13.293046, 54.571777], [13.280877, 54.565205], [13.274163, 54.563526], [13.256959, 54.563248], [13.242552, 54.55961], [13.249685, 54.57122], [13.254721, 54.585625], [13.263113, 54.597374], [13.268568, 54.600452], [13.281997, 54.613743], [13.28857, 54.627308], [13.287452, 54.640457], [13.283115, 54.64619], [13.263673, 54.643814], [13.253602, 54.63934], [13.226327, 54.623814], [13.230803, 54.607586], [13.238076, 54.599613], [13.229124, 54.59514], [13.228005, 54.587585], [13.215277, 54.585907], [13.210241, 54.58101], [13.195834, 54.571777], [13.184224, 54.56982], [13.182546, 54.564087], [13.164783, 54.55793], [13.159746, 54.563248], [13.161984, 54.56842], [13.168559, 54.574017], [13.17863, 54.575695], [13.193037, 54.58073], [13.203108, 54.585907], [13.216395, 54.596256], [13.226886, 54.611504], [13.226327, 54.617657], [13.221431, 54.62437], [13.218634, 54.63682], [13.220872, 54.641575], [13.238635, 54.651226], [13.24479, 54.6571], [13.276961, 54.67011], [13.289689, 54.673187], [13.320881, 54.673748], [13.336408, 54.674866], [13.354171, 54.679623], [13.376411, 54.683258], [13.403546, 54.68158], [13.429144, 54.684517]]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Niedersachsen',
      type: 'Land',
      area: '47,614.07 km²',
      bundesratVotes: '6 (out of 69)',
      density: '170/km²',
      timeZone: 'UTC+1 (CET)',
      population: 7982448,
      capital: 'Hannover',
      government: 'Landtag of Lower Saxony',
      head: 'Stephan Weil (SPD)'
    },
    geometry: {
      type: 'MultiPolygon',
      coordinates: [[[[6.761916, 53.618816], [6.7774425, 53.61378], [6.7980037, 53.608746], [6.8097534, 53.60427], [6.803599, 53.597416], [6.7880726, 53.597137], [6.778561, 53.59546], [6.7508664, 53.59546], [6.7385573, 53.587345], [6.7263885, 53.58595], [6.726948, 53.58147], [6.745831, 53.5693], [6.7547827, 53.569584], [6.7596784, 53.56175], [6.7497473, 53.556854], [6.741355, 53.557133], [6.7419143, 53.56455], [6.7342215, 53.569584], [6.72471, 53.567905], [6.7196746, 53.56371], [6.6908603, 53.569023], [6.6619067, 53.578255], [6.651416, 53.598537], [6.642464, 53.600353], [6.633652, 53.599236], [6.6308546, 53.610985], [6.642464, 53.612103], [6.6542134, 53.607067], [6.6663823, 53.60651], [6.6714177, 53.603992], [6.679111, 53.60595], [6.699113, 53.60651], [6.748628, 53.617138], [6.761916, 53.618816]]], [[[6.823601, 53.64791], [6.8263984, 53.65043], [6.8436027, 53.64707], [6.841365, 53.64008], [6.834231, 53.63658], [6.8219223, 53.63952], [6.823601, 53.64791]]], [[[6.9013705, 53.653786], [6.9052873, 53.64232], [6.898573, 53.632385], [6.898573, 53.626793], [6.887523, 53.625954], [6.878571, 53.62735], [6.8714375, 53.63099], [6.8647237, 53.63896], [6.8647237, 53.644554], [6.8780117, 53.647354], [6.8940973, 53.64875], [6.8940973, 53.65183], [6.9013705, 53.653786]]], [[[6.823601, 53.64791], [6.8185654, 53.64008], [6.8136697, 53.640358], [6.8131104, 53.64791], [6.82472, 53.656303], [6.8291955, 53.654346], [6.823601, 53.64791]]], [[[7.058589, 53.68456], [7.09034, 53.684], [7.095236, 53.680363], [7.0675406, 53.679802], [7.0213823, 53.676308], [7.016347, 53.67407], [6.9925685, 53.67379], [6.975224, 53.669033], [6.975224, 53.67155], [6.9580193, 53.670433], [6.9269676, 53.666237], [6.8936777, 53.665398], [6.8892016, 53.66316], [6.860807, 53.66092], [6.8557715, 53.659523], [6.8563313, 53.666515], [6.8675213, 53.67183], [6.8813686, 53.671272], [6.9036083, 53.67211], [6.9213724, 53.674908], [6.9469695, 53.676865], [6.9880924, 53.680923], [7.0191445, 53.68288], [7.058589, 53.68456]]], [[[7.316376, 53.723442], [7.324209, 53.721764], [7.3419733, 53.721764], [7.335819, 53.71575], [7.3258877, 53.712395], [7.305886, 53.710995], [7.3002906, 53.708755], [7.2675605, 53.70344], [7.2180448, 53.70344], [7.2118907, 53.706238], [7.202519, 53.70512], [7.1963644, 53.698685], [7.1774817, 53.701485], [7.171327, 53.707638], [7.1664314, 53.70512], [7.1697884, 53.700645], [7.164753, 53.697426], [7.1507654, 53.697426], [7.138037, 53.70512], [7.138037, 53.7082], [7.150346, 53.713512], [7.154682, 53.71295], [7.1724463, 53.718967], [7.196924, 53.721764], [7.233571, 53.720085], [7.2496567, 53.717148], [7.2696586, 53.71953], [7.2842054, 53.71659], [7.294696, 53.721207], [7.311341, 53.720924], [7.316376, 53.723442]]], [[[8.161914, 53.7296], [8.170866, 53.72764], [8.173663, 53.723724], [8.164152, 53.721764], [8.158557, 53.714073], [8.151423, 53.711555], [8.134219, 53.71463], [8.133659, 53.723164], [8.150864, 53.7296], [8.161914, 53.7296]]], [[[7.394146, 53.734634], [7.4247785, 53.7296], [7.429674, 53.72512], [7.4247785, 53.721485], [7.387992, 53.720085], [7.364213, 53.724842], [7.361416, 53.72904], [7.371347, 53.730156], [7.388551, 53.734634], [7.394146, 53.734634]]], [[[7.573604, 53.757294], [7.591928, 53.754635], [7.5958443, 53.756035], [7.61193, 53.754917], [7.624658, 53.752117], [7.619763, 53.74708], [7.612489, 53.745964], [7.5797586, 53.748203], [7.557519, 53.746525], [7.539755, 53.742886], [7.5158362, 53.743725], [7.5102415, 53.74233], [7.501989, 53.734352], [7.503108, 53.730995], [7.493037, 53.722324], [7.487442, 53.72568], [7.4769516, 53.722324], [7.46744, 53.72708], [7.466881, 53.736034], [7.4691186, 53.744564], [7.47863, 53.752956], [7.4902396, 53.755756], [7.5447903, 53.755756], [7.573604, 53.757294]]], [[[8.273673, 53.765686], [8.275211, 53.76121], [8.262483, 53.758133], [8.263602, 53.764847], [8.273673, 53.765686]]], [[[7.7063446, 53.779533], [7.72243, 53.77408], [7.731382, 53.777016], [7.7364173, 53.773518], [7.7452297, 53.777855], [7.752503, 53.77548], [7.7597766, 53.777855], [7.763553, 53.77548], [7.7741833, 53.777294], [7.7925067, 53.777576], [7.804676, 53.776035], [7.8052354, 53.77408], [7.791388, 53.768204], [7.780338, 53.765965], [7.7408934, 53.76121], [7.698652, 53.76205], [7.6831255, 53.753796], [7.673614, 53.753517], [7.6669, 53.758694], [7.6719356, 53.767643], [7.686902, 53.777294], [7.7063446, 53.779533]]], [[[8.0091715, 53.785686], [8.019662, 53.778694], [8.015885, 53.77268], [8.024697, 53.766247], [8.030852, 53.757572], [8.0219, 53.754635], [8.020222, 53.744846], [8.013088, 53.747643], [8.007493, 53.753517], [8.006933, 53.76093], [7.9936457, 53.766804], [7.9880505, 53.771], [8.003576, 53.776318], [8.005255, 53.78513], [8.0091715, 53.785686]]], [[[7.8958735, 53.79408], [7.9369965, 53.787647], [7.948606, 53.78205], [7.9392347, 53.780094], [7.9114, 53.780373], [7.894195, 53.785408], [7.874193, 53.787926], [7.869717, 53.78373], [7.869158, 53.776596], [7.8463583, 53.787926], [7.8674793, 53.79352], [7.8958735, 53.79408]]], [[[8.3769, 53.835903], [8.370885, 53.833523], [8.369206, 53.828487], [8.356898, 53.82709], [8.3508835, 53.831287], [8.358017, 53.8352], [8.3769, 53.835903]]], [[[9.096411, 53.884018], [9.105642, 53.88416], [9.143409, 53.88122], [9.162151, 53.885277], [9.199778, 53.88598], [9.23125, 53.88304], [9.231389, 53.879265], [9.256567, 53.876186], [9.288178, 53.869473], [9.313775, 53.855206], [9.326783, 53.844433], [9.339512, 53.8373], [9.358814, 53.823032], [9.365389, 53.81576], [9.365528, 53.812122], [9.372103, 53.801212], [9.391825, 53.775898], [9.404973, 53.757713], [9.417841, 53.746944], [9.443439, 53.732674], [9.481483, 53.71505], [9.506941, 53.700783], [9.513934, 53.682602], [9.526803, 53.67183], [9.527363, 53.653366], [9.534216, 53.63882], [9.547224, 53.62427], [9.5598135, 53.620914], [9.58527, 53.606647], [9.610448, 53.599796], [9.629331, 53.5928], [9.673531, 53.575317], [9.723605, 53.569023], [9.762211, 53.565525], [9.768644, 53.565525], [9.768925, 53.554337], [9.76235, 53.554337], [9.76249, 53.5507], [9.76263, 53.543148], [9.775639, 53.535873], [9.775639, 53.532097], [9.76291, 53.531956], [9.76347, 53.51699], [9.769903, 53.513214], [9.782632, 53.509716], [9.776478, 53.5058], [9.782912, 53.502163], [9.7892065, 53.50594], [9.801935, 53.50608], [9.801935, 53.502304], [9.79578, 53.498528], [9.79634, 53.479782], [9.802634, 53.479923], [9.802914, 53.47237], [9.809208, 53.47251], [9.834945, 53.46146], [9.854387, 53.446774], [9.860822, 53.446774], [9.867116, 53.45055], [9.898868, 53.469433], [9.91831, 53.45838], [9.924884, 53.447334], [9.912155, 53.43964], [9.91859, 53.436005], [9.905861, 53.42845], [9.905861, 53.424675], [9.912295, 53.424812], [9.925163, 53.42859], [9.9314575, 53.432365], [9.944326, 53.432507], [9.944326, 53.43992], [9.957194, 53.436283], [9.976637, 53.432648], [9.976637, 53.425232], [9.983071, 53.425232], [9.996079, 53.42915], [9.99594, 53.43656], [10.002514, 53.43656], [10.015382, 53.44048], [10.021816, 53.44048], [10.034685, 53.444256], [10.021677, 53.451668], [10.0281105, 53.455444], [10.047553, 53.455585], [10.053847, 53.45922], [10.047414, 53.462997], [10.047274, 53.466637], [10.053708, 53.47419], [10.073151, 53.466915], [10.086159, 53.46328], [10.092592, 53.459503], [10.099167, 53.452087], [10.105741, 53.448452], [10.105881, 53.44104], [10.118889, 53.433624], [10.144766, 53.433765], [10.144766, 53.43013], [10.157774, 53.422714], [10.157774, 53.418938], [10.177217, 53.40789], [10.215961, 53.40817], [10.228829, 53.40453], [10.248133, 53.40467], [10.254566, 53.408447], [10.267575, 53.423553], [10.267575, 53.427193], [10.274009, 53.42733], [10.280583, 53.431107], [10.287017, 53.431107], [10.299886, 53.434883], [10.319188, 53.442436], [10.331218, 53.442577], [10.343387, 53.435165], [10.391783, 53.435444], [10.409966, 53.420757], [10.42815, 53.413345], [10.440179, 53.409706], [10.458363, 53.40243], [10.470531, 53.398796], [10.476546, 53.39516], [10.488576, 53.39152], [10.506759, 53.38425], [10.512914, 53.38425], [10.524942, 53.38061], [10.56117, 53.380894], [10.579353, 53.369843], [10.585368, 53.369843], [10.591383, 53.37362], [10.597398, 53.37362], [10.609567, 53.380894], [10.658802, 53.38019], [10.677405, 53.376278], [10.683559, 53.376137], [10.6958685, 53.379635], [10.708318, 53.379353], [10.739369, 53.36019], [10.745664, 53.35264], [10.745664, 53.34886], [10.764267, 53.348442], [10.764267, 53.344666], [10.758113, 53.341167], [10.764267, 53.337254], [10.770421, 53.337112], [10.795319, 53.321587], [10.807768, 53.32131], [10.813922, 53.31739], [10.832525, 53.31683], [10.832525, 53.313053], [10.83868, 53.30914], [10.83868, 53.312916], [10.8449745, 53.312634], [10.857283, 53.31599], [10.857283, 53.319767], [10.869732, 53.319347], [10.875886, 53.322845], [10.875886, 53.326622], [10.888335, 53.326202], [10.888195, 53.333614], [10.882041, 53.333755], [10.882041, 53.34131], [10.900644, 53.33697], [10.913093, 53.34019], [10.919247, 53.34746], [10.919247, 53.35124], [10.931696, 53.35082], [10.931696, 53.347183], [10.93799, 53.343266], [10.93799, 53.33949], [10.950439, 53.335434], [10.9565935, 53.335434], [10.962888, 53.338932], [10.99408, 53.334736], [10.99408, 53.32732], [11.000234, 53.323544], [11.000234, 53.31613], [11.006529, 53.312355], [11.006529, 53.304943], [11.012823, 53.304943], [11.012823, 53.282562], [11.025271, 53.28242], [11.031426, 53.278645], [11.037721, 53.271233], [11.043875, 53.267456], [11.043875, 53.26368], [11.050169, 53.259903], [11.050169, 53.256126], [11.056323, 53.25235], [11.062478, 53.244797], [11.062478, 53.241158], [11.068772, 53.23738], [11.068632, 53.229828], [11.074926, 53.229828], [11.081081, 53.22605], [11.087235, 53.2185], [11.09353, 53.21472], [11.105839, 53.210808], [11.118288, 53.203255], [11.143045, 53.202972], [11.143045, 53.191784], [11.155494, 53.191643], [11.167803, 53.18409], [11.174097, 53.18395], [11.174097, 53.187725], [11.198995, 53.180035], [11.198995, 53.17262], [11.1927, 53.168842], [11.1927, 53.165207], [11.186406, 53.157795], [11.173958, 53.157932], [11.186406, 53.15038], [11.186266, 53.135414], [11.198715, 53.135273], [11.211304, 53.14269], [11.236201, 53.142406], [11.248651, 53.134853], [11.267253, 53.1273], [11.273547, 53.123524], [11.273547, 53.119747], [11.273408, 53.101147], [11.279562, 53.09737], [11.292011, 53.086178], [11.30432, 53.082264], [11.322923, 53.07093], [11.322923, 53.067295], [11.329078, 53.059742], [11.335232, 53.059742], [11.347681, 53.05219], [11.353835, 53.052048], [11.385027, 53.059322], [11.40363, 53.066597], [11.40377, 53.070374], [11.428528, 53.07009], [11.434822, 53.073868], [11.447271, 53.077507], [11.45972, 53.077366], [11.508955, 53.047153], [11.521404, 53.043377], [11.533713, 53.043236], [11.546302, 53.05065], [11.558611, 53.05051], [11.570919, 53.03918], [11.595537, 53.031628], [11.601831, 53.031487], [11.601691, 53.02785], [11.576795, 53.013165], [11.570499, 53.013165], [11.570499, 53.00953], [11.564345, 53.00953], [11.564066, 52.9947], [11.551757, 52.9947], [11.545602, 52.998478], [11.539448, 52.99862], [11.533294, 53.00603], [11.520844, 53.002396], [11.51455, 52.998756], [11.51455, 52.991344], [11.508256, 52.98771], [11.508256, 52.980156], [11.501962, 52.97288], [11.495527, 52.954277], [11.507696, 52.939312], [11.495388, 52.93945], [11.489093, 52.935673], [11.476785, 52.935814], [11.458041, 52.92854], [11.439438, 52.917492], [11.433144, 52.917492], [11.42699, 52.913853], [11.420695, 52.90644], [11.41454, 52.902805], [11.414401, 52.89903], [11.389783, 52.899307], [11.377334, 52.89567], [11.358591, 52.88462], [11.340128, 52.88476], [11.321384, 52.87371], [11.302921, 52.87385], [11.296766, 52.87763], [11.296766, 52.88504], [11.284318, 52.88518], [11.278164, 52.881405], [11.278164, 52.877766], [11.240957, 52.878048], [11.240957, 52.88546], [11.234802, 52.889236], [11.222354, 52.889236], [11.222494, 52.89679], [11.191442, 52.89693], [11.16039, 52.90462], [11.16039, 52.900845], [11.154096, 52.900986], [11.141646, 52.89735], [11.122904, 52.89371], [11.116749, 52.89371], [11.098006, 52.89763], [11.098006, 52.912594], [11.079403, 52.912735], [11.073109, 52.9091], [11.054365, 52.909237], [11.048211, 52.913013], [11.041917, 52.913155], [11.041917, 52.909378], [10.998416, 52.90994], [10.998416, 52.9063], [10.992261, 52.9063], [10.992122, 52.8877], [10.985827, 52.88406], [10.979672, 52.876648], [10.967363, 52.876926], [10.961069, 52.869656], [10.961069, 52.86588], [10.948761, 52.85874], [10.942466, 52.85133], [10.930297, 52.855526], [10.899525, 52.856785], [10.893371, 52.84965], [10.881202, 52.850212], [10.875187, 52.85441], [10.875187, 52.858044], [10.863018, 52.858883], [10.863018, 52.855106], [10.844694, 52.856365], [10.83868, 52.85301], [10.814482, 52.854828], [10.802313, 52.859444], [10.802313, 52.855667], [10.796298, 52.852448], [10.77224, 52.85441], [10.766225, 52.85119], [10.77224, 52.847134], [10.77238, 52.836365], [10.766365, 52.836784], [10.76035, 52.833565], [10.760631, 52.819298], [10.7666445, 52.815243], [10.76077, 52.80867], [10.760631, 52.792862], [10.766505, 52.788807], [10.766505, 52.78489], [10.772519, 52.780693], [10.77238, 52.77678], [10.778394, 52.772583], [10.7782545, 52.76461], [10.790423, 52.764328], [10.790283, 52.760414], [10.796298, 52.756355], [10.790144, 52.75244], [10.790004, 52.74055], [10.796019, 52.736492], [10.795738, 52.720547], [10.807907, 52.72027], [10.807907, 52.724186], [10.832106, 52.723347], [10.831965, 52.71957], [10.83798, 52.715374], [10.83798, 52.711456], [10.831826, 52.70782], [10.831826, 52.703762], [10.837701, 52.699707], [10.843855, 52.699566], [10.843716, 52.695652], [10.84973, 52.68754], [10.855604, 52.683342], [10.861619, 52.67537], [10.867634, 52.67509], [10.867634, 52.671173], [10.873649, 52.670895], [10.873508, 52.666977], [10.8796625, 52.6667], [10.879383, 52.655087], [10.897427, 52.64264], [10.903301, 52.634525], [10.903162, 52.626694], [10.909176, 52.626553], [10.909176, 52.622635], [10.9150505, 52.614525], [10.921065, 52.610466], [10.921065, 52.60669], [10.92708, 52.60641], [10.933515, 52.610188], [10.939809, 52.61033], [10.946242, 52.61788], [10.965405, 52.621796], [10.977994, 52.621796], [10.977994, 52.603054], [10.9717, 52.599277], [10.965265, 52.599277], [10.958971, 52.5955], [10.958971, 52.591724], [10.952538, 52.587948], [10.939948, 52.587948], [10.9463825, 52.580536], [10.9463825, 52.576897], [10.940088, 52.576897], [10.940508, 52.55102], [10.946942, 52.54361], [10.953237, 52.53997], [10.959531, 52.53256], [10.959671, 52.52878], [10.978554, 52.514095], [11.010025, 52.495632], [11.010025, 52.491856], [11.003871, 52.491856], [10.997577, 52.495632], [10.978833, 52.495632], [10.978833, 52.499268], [10.972539, 52.499268], [10.960091, 52.495632], [10.953936, 52.491993], [10.947782, 52.491993], [10.941767, 52.488358], [10.947922, 52.484722], [10.941907, 52.481083], [10.942046, 52.47367], [10.935892, 52.473812], [10.936172, 52.458984], [10.948621, 52.451572], [10.948761, 52.447796], [10.961069, 52.44402], [10.9613495, 52.43297], [10.967504, 52.42919], [10.973658, 52.42919], [10.992401, 52.418], [10.992401, 52.410587], [10.998555, 52.410587], [11.023453, 52.39576], [11.023453, 52.392124], [11.035762, 52.384712], [11.054225, 52.38457], [11.054225, 52.380936], [11.06038, 52.37716], [11.066534, 52.37716], [11.066534, 52.369743], [11.072689, 52.37352], [11.078703, 52.373383], [11.078703, 52.369743], [11.072689, 52.369743], [11.072689, 52.355057], [11.06052, 52.347645], [11.04835, 52.347645], [11.036181, 52.34037], [11.030027, 52.34401], [11.011844, 52.344147], [10.999675, 52.34051], [10.987506, 52.340652], [10.987645, 52.337013], [10.99366, 52.333237], [11.005829, 52.3331], [11.011984, 52.325684], [11.018138, 52.325684], [11.024292, 52.31827], [11.036601, 52.30708], [11.042616, 52.30708], [11.042756, 52.299667], [11.036741, 52.296032], [11.024572, 52.29617], [11.018558, 52.2889], [11.024712, 52.281483], [11.024852, 52.277706], [11.031007, 52.270294], [11.04905, 52.270153], [11.055204, 52.266518], [11.055204, 52.26274], [11.061359, 52.25533], [11.055345, 52.25169], [11.061359, 52.240643], [11.079542, 52.2405], [11.079542, 52.236866], [11.091712, 52.22945], [11.091712, 52.225674], [11.079682, 52.22204], [11.079682, 52.218403], [11.061639, 52.21854], [11.049609, 52.214905], [11.043735, 52.21127], [11.037721, 52.211407], [11.025831, 52.204136], [11.025831, 52.200356], [11.019957, 52.19672], [11.020236, 52.1784], [11.026251, 52.1784], [11.03828, 52.170845], [11.062058, 52.170704], [11.068073, 52.166927], [11.068073, 52.163292], [11.062199, 52.159653], [11.062199, 52.15224], [11.056323, 52.148605], [11.050448, 52.14133], [11.050589, 52.13392], [11.044574, 52.134056], [11.0328245, 52.13042], [11.02681, 52.13042], [11.01506, 52.123146], [11.01506, 52.11951], [10.991562, 52.112377], [10.985687, 52.105103], [10.979813, 52.105103], [10.973798, 52.10888], [10.961629, 52.105244], [10.94932, 52.105385], [10.94946, 52.094334], [10.961908, 52.090557], [10.974217, 52.090416], [10.980232, 52.08664], [10.980512, 52.071953], [10.974777, 52.06468], [10.974777, 52.057266], [10.968622, 52.057266], [10.956314, 52.061184], [10.888474, 52.06174], [10.88232, 52.058105], [10.863857, 52.054607], [10.857702, 52.050972], [10.777695, 52.05181], [10.6918125, 52.05279], [10.673348, 52.049294], [10.648871, 52.045937], [10.648871, 52.04216], [10.66132, 52.034607], [10.66132, 52.03097], [10.655166, 52.03111], [10.649011, 52.027473], [10.642857, 52.027473], [10.642996, 52.02006], [10.636842, 52.016422], [10.624673, 52.016705], [10.624673, 52.012928], [10.618518, 52.016705], [10.612364, 52.01684], [10.60621, 52.013206], [10.600055, 52.013206], [10.600055, 52.02062], [10.593901, 52.02076], [10.593901, 52.016983], [10.569423, 52.01726], [10.569423, 52.00999], [10.575717, 51.99866], [10.588026, 51.98733], [10.588026, 51.979916], [10.59418, 51.979774], [10.600195, 51.98355], [10.606349, 51.983414], [10.606349, 51.975998], [10.618658, 51.97586], [10.624813, 51.972084], [10.624813, 51.968307], [10.618658, 51.968445], [10.618658, 51.96467], [10.637121, 51.96453], [10.643276, 51.968166], [10.64943, 51.960613], [10.64943, 51.956978], [10.637121, 51.957115], [10.624813, 51.95348], [10.612643, 51.94215], [10.612643, 51.938515], [10.618798, 51.938515], [10.618798, 51.93474], [10.612783, 51.927185], [10.631107, 51.92341], [10.643415, 51.919632], [10.643415, 51.915855], [10.64957, 51.91208], [10.64957, 51.90844], [10.655725, 51.904663], [10.64957, 51.900887], [10.64957, 51.889698], [10.631387, 51.87837], [10.631387, 51.87459], [10.619218, 51.87445], [10.607049, 51.866756], [10.607188, 51.859203], [10.601034, 51.859066], [10.58285, 51.855007], [10.576836, 51.85123], [10.576976, 51.84354], [10.5890045, 51.84382], [10.589145, 51.836266], [10.58313, 51.832348], [10.577116, 51.83221], [10.577255, 51.80941], [10.58327, 51.805634], [10.5835495, 51.78661], [10.577536, 51.782696], [10.5897045, 51.77542], [10.589844, 51.767727], [10.601873, 51.76801], [10.601873, 51.76423], [10.613902, 51.76451], [10.626072, 51.761013], [10.632226, 51.757378], [10.632366, 51.74227], [10.63838, 51.734856], [10.644395, 51.734997], [10.644535, 51.727444], [10.65055, 51.72381], [10.65055, 51.72003], [10.662719, 51.72045], [10.668733, 51.713036], [10.668733, 51.70926], [10.674888, 51.69821], [10.668873, 51.69793], [10.662858, 51.693874], [10.668873, 51.6866], [10.669013, 51.671356], [10.675167, 51.66786], [10.681182, 51.660725], [10.687197, 51.657227], [10.687197, 51.65345], [10.7051, 51.64352], [10.693351, 51.6424], [10.681461, 51.637363], [10.675587, 51.636944], [10.675587, 51.63303], [10.663837, 51.624355], [10.657823, 51.624077], [10.645933, 51.61946], [10.639919, 51.61932], [10.6400585, 51.61149], [10.646073, 51.61163], [10.646073, 51.60771], [10.634184, 51.603516], [10.634464, 51.591908], [10.640478, 51.58799], [10.640618, 51.580296], [10.646633, 51.580296], [10.652648, 51.57652], [10.664677, 51.57736], [10.670551, 51.574], [10.670551, 51.570087], [10.664677, 51.569527], [10.658942, 51.561134], [10.664817, 51.55792], [10.658942, 51.55344], [10.647193, 51.552883], [10.6291485, 51.564632], [10.629009, 51.568546], [10.616839, 51.57638], [10.604951, 51.57638], [10.60509, 51.572464], [10.599076, 51.572605], [10.5992155, 51.568687], [10.587466, 51.561275], [10.581451, 51.561275], [10.581592, 51.5575], [10.575577, 51.557636], [10.569702, 51.55386], [10.557813, 51.554], [10.551938, 51.550224], [10.539909, 51.554142], [10.534035, 51.550365], [10.522145, 51.550503], [10.510117, 51.558056], [10.503962, 51.56575], [10.497947, 51.569527], [10.491933, 51.569527], [10.491793, 51.573303], [10.485918, 51.573303], [10.479903, 51.57708], [10.467875, 51.580997], [10.455845, 51.580997], [10.443816, 51.58855], [10.431927, 51.588688], [10.420037, 51.58491], [10.378355, 51.585194], [10.378355, 51.581417], [10.384509, 51.573864], [10.384929, 51.558895], [10.378915, 51.559036], [10.379054, 51.55526], [10.373179, 51.551483], [10.37332, 51.544067], [10.367445, 51.54029], [10.367584, 51.536655], [10.36157, 51.536655], [10.349821, 51.529243], [10.34996, 51.521828], [10.338211, 51.514416], [10.320447, 51.51078], [10.320308, 51.514557], [10.314432, 51.514557], [10.308698, 51.50714], [10.302683, 51.50714], [10.302963, 51.492317], [10.285199, 51.492455], [10.279325, 51.48882], [10.267435, 51.485043], [10.249671, 51.481544], [10.249811, 51.477768], [10.243796, 51.477768], [10.237922, 51.474133], [10.238062, 51.470356], [10.220158, 51.470497], [10.220017, 51.47805], [10.207989, 51.485462], [10.196239, 51.481827], [10.190365, 51.478188], [10.190504, 51.470776], [10.18449, 51.470776], [10.184629, 51.467], [10.190644, 51.467], [10.190644, 51.463364], [10.18477, 51.459587], [10.18491, 51.455948], [10.179174, 51.448536], [10.179174, 51.44476], [10.1733, 51.44476], [10.161271, 51.448536], [10.155396, 51.448677], [10.143646, 51.44126], [10.143646, 51.437485], [10.137912, 51.43385], [10.137772, 51.437626], [10.126022, 51.433987], [10.120148, 51.43021], [10.114133, 51.43035], [10.114133, 51.433987], [10.108119, 51.433987], [10.09623, 51.437904], [10.08434, 51.43427], [10.0846195, 51.426716], [10.078745, 51.423077], [10.078745, 51.4193], [10.07287, 51.41944], [10.072731, 51.426853], [10.066576, 51.43427], [10.060561, 51.438046], [10.054547, 51.438046], [10.054827, 51.43063], [10.048812, 51.43063], [10.048952, 51.423218], [10.037203, 51.42336], [10.031328, 51.419582], [10.025313, 51.419582], [10.013424, 51.42336], [10.013703, 51.412308], [10.007969, 51.404896], [9.996079, 51.404896], [9.990205, 51.401257], [9.98419, 51.401257], [9.978456, 51.39762], [9.972441, 51.39762], [9.966566, 51.393986], [9.960691, 51.393986], [9.954957, 51.38657], [9.943208, 51.379158], [9.937193, 51.379158], [9.936633, 51.393986], [9.930479, 51.393986], [9.911596, 51.408672], [9.911177, 51.41972], [9.892853, 51.419582], [9.886838, 51.415943], [9.886978, 51.412308], [9.880963, 51.40853], [9.874529, 51.415806], [9.856206, 51.415806], [9.850331, 51.404755], [9.856485, 51.40112], [9.856766, 51.386433], [9.86306, 51.382793], [9.869214, 51.37538], [9.850751, 51.37538], [9.838302, 51.386433], [9.838162, 51.393703], [9.844176, 51.404755], [9.837882, 51.40839], [9.825574, 51.408253], [9.819419, 51.415665], [9.813265, 51.41189], [9.800956, 51.41189], [9.794941, 51.408253], [9.794941, 51.400837], [9.801096, 51.404613], [9.801235, 51.389927], [9.795081, 51.389927], [9.788926, 51.393566], [9.776618, 51.393566], [9.752699, 51.386013], [9.752699, 51.37874], [9.734935, 51.37482], [9.7292, 51.371044], [9.723326, 51.374542], [9.717451, 51.3744], [9.705841, 51.370487], [9.700107, 51.36671], [9.706121, 51.359436], [9.711996, 51.359577], [9.723886, 51.34517], [9.724025, 51.341534], [9.729899, 51.337894], [9.735914, 51.33076], [9.736194, 51.32335], [9.741929, 51.323486], [9.764729, 51.338875], [9.758993, 51.338734], [9.758854, 51.342373], [9.770742, 51.34251], [9.770742, 51.338875], [9.758993, 51.33132], [9.764868, 51.327824], [9.770742, 51.3316], [9.770883, 51.324326], [9.765568, 51.31286], [9.748223, 51.3088], [9.731158, 51.300827], [9.713534, 51.307823], [9.678706, 51.314255], [9.678566, 51.317894], [9.672691, 51.32153], [9.666817, 51.32139], [9.667096, 51.313976], [9.655487, 51.317333], [9.649612, 51.32083], [9.637863, 51.324326], [9.631988, 51.327824], [9.620238, 51.33132], [9.614644, 51.327404], [9.608909, 51.327263], [9.597019, 51.3344], [9.59688, 51.338036], [9.5849905, 51.34517], [9.573521, 51.34489], [9.561771, 51.348385], [9.561352, 51.359436], [9.555617, 51.359295], [9.555477, 51.36307], [9.572822, 51.36349], [9.578277, 51.371044], [9.578136, 51.37482], [9.572402, 51.374683], [9.566387, 51.378178], [9.566247, 51.381954], [9.571842, 51.389507], [9.571702, 51.393147], [9.577437, 51.393284], [9.582892, 51.400837], [9.588627, 51.404613], [9.5945015, 51.40112], [9.600376, 51.401257], [9.605971, 51.405033], [9.611846, 51.405174], [9.617441, 51.409092], [9.634926, 51.40951], [9.634645, 51.416782], [9.640241, 51.424335], [9.6401005, 51.427975], [9.634366, 51.427834], [9.633946, 51.438885], [9.627932, 51.44616], [9.627652, 51.45357], [9.633387, 51.460983], [9.644856, 51.468536], [9.644716, 51.472313], [9.638702, 51.47581], [9.626952, 51.47931], [9.620938, 51.482944], [9.6149235, 51.490078], [9.608909, 51.493713], [9.608629, 51.500988], [9.602614, 51.508263], [9.590725, 51.515396], [9.5904455, 51.522808], [9.613805, 51.523228], [9.619539, 51.527004], [9.625274, 51.534416], [9.624994, 51.54169], [9.612825, 51.55624], [9.6187, 51.556377], [9.624854, 51.549107], [9.636464, 51.55302], [9.648354, 51.549526], [9.648354, 51.55316], [9.659963, 51.560715], [9.659822, 51.56435], [9.671712, 51.56449], [9.671573, 51.568127], [9.683461, 51.56841], [9.689197, 51.57582], [9.689056, 51.583096], [9.6768875, 51.59023], [9.671013, 51.59023], [9.670873, 51.593864], [9.664859, 51.593723], [9.646675, 51.608273], [9.6408, 51.60813], [9.634645, 51.615406], [9.640241, 51.622818], [9.628211, 51.62995], [9.634087, 51.633728], [9.627932, 51.637363], [9.622197, 51.633587], [9.616182, 51.63345], [9.6163225, 51.62981], [9.592684, 51.62939], [9.586948, 51.625614], [9.5693245, 51.625336], [9.557296, 51.63247], [9.557015, 51.63988], [9.545266, 51.639744], [9.539671, 51.63219], [9.528062, 51.628414], [9.504703, 51.627995], [9.498828, 51.63149], [9.498689, 51.635265], [9.492674, 51.638763], [9.503863, 51.649952], [9.503724, 51.65373], [9.497709, 51.657227], [9.486099, 51.65709], [9.468755, 51.65303], [9.457425, 51.649113], [9.451691, 51.645336], [9.445676, 51.65261], [9.439801, 51.65247], [9.422876, 51.64478], [9.405393, 51.648136], [9.394063, 51.64422], [9.382313, 51.647717], [9.382033, 51.654987], [9.387348, 51.66618], [9.404273, 51.673874], [9.398119, 51.684784], [9.392385, 51.684643], [9.391965, 51.692055], [9.409029, 51.69975], [9.40875, 51.703384], [9.397, 51.710518], [9.3963, 51.725204], [9.4018955, 51.72898], [9.396021, 51.73262], [9.384272, 51.736115], [9.383991, 51.74339], [9.389586, 51.747166], [9.389028, 51.758217], [9.400637, 51.758495], [9.400777, 51.75486], [9.4121065, 51.762413], [9.411826, 51.76605], [9.417562, 51.769825], [9.417282, 51.773464], [9.428751, 51.777378], [9.434206, 51.78493], [9.451131, 51.792625], [9.445256, 51.796124], [9.444837, 51.803535], [9.433228, 51.806892], [9.432528, 51.817944], [9.438402, 51.81808], [9.444138, 51.821857], [9.443718, 51.829273], [9.437424, 51.836544], [9.437143, 51.840183], [9.448474, 51.847736], [9.460223, 51.848015], [9.460083, 51.85165], [9.465958, 51.855427], [9.459804, 51.859066], [9.447914, 51.858925], [9.4420395, 51.85515], [9.406511, 51.854588], [9.370424, 51.861584], [9.358535, 51.861443], [9.352799, 51.857666], [9.346925, 51.857525], [9.347065, 51.85389], [9.34119, 51.85375], [9.340491, 51.86494], [9.346086, 51.872494], [9.3453865, 51.88732], [9.351261, 51.88746], [9.350982, 51.894875], [9.344827, 51.89851], [9.344547, 51.905922], [9.338393, 51.9097], [9.338253, 51.913338], [9.332098, 51.916973], [9.320069, 51.916832], [9.319929, 51.92061], [9.302026, 51.92033], [9.296151, 51.916412], [9.277687, 51.927322], [9.277128, 51.938515], [9.283143, 51.938652], [9.283003, 51.94243], [9.276988, 51.94229], [9.270834, 51.945927], [9.276568, 51.949703], [9.276428, 51.95348], [9.288458, 51.95362], [9.288318, 51.957397], [9.275869, 51.96467], [9.275729, 51.968307], [9.269435, 51.97572], [9.257406, 51.97558], [9.245517, 51.971664], [9.245377, 51.97544], [9.233348, 51.97516], [9.233487, 51.971523], [9.221598, 51.971245], [9.210129, 51.959915], [9.19782, 51.96355], [9.191805, 51.96341], [9.191525, 51.970825], [9.185231, 51.97446], [9.185091, 51.978237], [9.179076, 51.978096], [9.178937, 51.981873], [9.184951, 51.981873], [9.184531, 51.98943], [9.190406, 51.993206], [9.183972, 52.000618], [9.189707, 52.00817], [9.201736, 52.008312], [9.195162, 52.01936], [9.194882, 52.026775], [9.182573, 52.03041], [9.176419, 52.034046], [9.17516, 52.060062], [9.181035, 52.06398], [9.192924, 52.067757], [9.192784, 52.071533], [9.179915, 52.08622], [9.167747, 52.089855], [9.155718, 52.089577], [9.155298, 52.09713], [9.149283, 52.096992], [9.149143, 52.10077], [9.137394, 52.093075], [9.136834, 52.104263], [9.148584, 52.111958], [9.160613, 52.1121], [9.160053, 52.123287], [9.153899, 52.126923], [9.147465, 52.134197], [9.129421, 52.13392], [9.129142, 52.137695], [9.123127, 52.137554], [9.111378, 52.13], [9.105223, 52.133636], [9.0869, 52.136993], [9.0744505, 52.144268], [9.074171, 52.148045], [9.056128, 52.147766], [9.044238, 52.14385], [9.032489, 52.136154], [9.020599, 52.13224], [9.014305, 52.135876], [9.014165, 52.139652], [9.01976, 52.147205], [9.019481, 52.154617], [9.013186, 52.158257], [9.013046, 52.161892], [9.018921, 52.16581], [9.018641, 52.169445], [9.012067, 52.180634], [9.006053, 52.180496], [8.993604, 52.187767], [8.993324, 52.191406], [8.999199, 52.19532], [8.999478, 52.191544], [9.011508, 52.191826], [9.017383, 52.195602], [9.023677, 52.191963], [9.023816, 52.188187], [9.017802, 52.188187], [9.017941, 52.18441], [9.024236, 52.180775], [9.04214, 52.18483], [9.042, 52.18847], [9.047874, 52.192383], [9.046756, 52.214764], [9.040462, 52.218403], [9.040321, 52.22204], [9.046196, 52.225956], [9.05263, 52.21854], [9.058505, 52.222317], [9.06452, 52.222458], [9.06438, 52.226234], [9.0703945, 52.226234], [9.076269, 52.230152], [9.076129, 52.233788], [9.063821, 52.237423], [9.057806, 52.237286], [9.0390625, 52.248196], [9.026753, 52.25169], [9.008571, 52.25141], [9.008151, 52.258823], [8.996121, 52.258686], [8.989827, 52.26232], [8.971643, 52.262043], [8.971084, 52.27309], [8.96465, 52.280506], [8.982834, 52.280785], [8.982694, 52.28456], [8.988568, 52.288338], [8.9880085, 52.299526], [8.993744, 52.30708], [8.98745, 52.31072], [8.999199, 52.318413], [8.998919, 52.325825], [9.004933, 52.325966], [9.010808, 52.329742], [9.016963, 52.32988], [9.028712, 52.337574], [9.028293, 52.344986], [9.034447, 52.345127], [9.040741, 52.34149], [9.059065, 52.337994], [9.0587845, 52.345406], [9.070674, 52.349464], [9.076549, 52.35324], [9.082704, 52.35338], [9.088578, 52.357155], [9.088018, 52.368347], [9.094033, 52.368484], [9.100048, 52.37226], [9.099348, 52.38723], [9.105223, 52.391006], [9.117252, 52.39492], [9.122987, 52.402473], [9.122707, 52.40625], [9.128442, 52.413803], [9.121868, 52.424854], [9.1159935, 52.421078], [9.109979, 52.420937], [9.109699, 52.424717], [9.115714, 52.428493], [9.115434, 52.43227], [9.096691, 52.44318], [9.102146, 52.458145], [9.125924, 52.469753], [9.125645, 52.47717], [9.137814, 52.477448], [9.131379, 52.484722], [9.112916, 52.488216], [9.094173, 52.499126], [9.088299, 52.495213], [9.07585, 52.498707], [9.063681, 52.49857], [9.051372, 52.502064], [9.045637, 52.49451], [9.046196, 52.483322], [9.040182, 52.479546], [9.034027, 52.48318], [9.027873, 52.483044], [9.021998, 52.479267], [9.022138, 52.47549], [9.016543, 52.46416], [9.016823, 52.46052], [9.010808, 52.456608], [8.998639, 52.456467], [8.98689, 52.448772], [8.987309, 52.44136], [8.981155, 52.44122], [8.981295, 52.437443], [8.987589, 52.433807], [8.981854, 52.426254], [8.975699, 52.42989], [8.969686, 52.426113], [8.963671, 52.425976], [8.96395, 52.41856], [8.957936, 52.41842], [8.946186, 52.41073], [8.940452, 52.403175], [8.922128, 52.402893], [8.903805, 52.40639], [8.897651, 52.40625], [8.8859005, 52.39856], [8.873872, 52.39464], [8.867717, 52.398277], [8.861703, 52.394363], [8.855688, 52.394363], [8.855828, 52.390587], [8.788409, 52.400658], [8.77652, 52.39674], [8.746447, 52.388767], [8.740432, 52.388626], [8.740293, 52.392403], [8.733998, 52.39604], [8.733718, 52.399677], [8.727424, 52.403313], [8.721828, 52.39576], [8.70966, 52.395622], [8.708121, 52.425415], [8.72029, 52.425556], [8.719871, 52.43311], [8.707282, 52.440243], [8.706303, 52.458843], [8.712458, 52.458984], [8.711478, 52.47759], [8.705184, 52.481224], [8.705044, 52.485], [8.69889, 52.48486], [8.69875, 52.488636], [8.704205, 52.49983], [8.704065, 52.503605], [8.697491, 52.510876], [8.691476, 52.510876], [8.685182, 52.514515], [8.684762, 52.521927], [8.672733, 52.51801], [8.666299, 52.525284], [8.65371, 52.53256], [8.611888, 52.51689], [8.587689, 52.512695], [8.557756, 52.500946], [8.526984, 52.5078], [8.514536, 52.511295], [8.508242, 52.514935], [8.484742, 52.499546], [8.472434, 52.499268], [8.460685, 52.491714], [8.461524, 52.47675], [8.456208, 52.465557], [8.456348, 52.46178], [8.450334, 52.461643], [8.43271, 52.450172], [8.426555, 52.45003], [8.426275, 52.453808], [8.42026, 52.45367], [8.420401, 52.449894], [8.408232, 52.449753], [8.4019375, 52.45339], [8.396063, 52.449474], [8.390048, 52.449333], [8.384173, 52.445557], [8.359836, 52.445137], [8.353541, 52.448635], [8.353401, 52.45241], [8.347107, 52.456047], [8.316614, 52.45535], [8.304166, 52.462482], [8.298291, 52.458706], [8.305144, 52.44402], [8.305564, 52.436604], [8.311719, 52.436745], [8.324307, 52.42947], [8.324867, 52.41842], [8.318852, 52.41828], [8.319272, 52.410866], [8.313117, 52.41073], [8.313397, 52.40709], [8.3257065, 52.403595], [8.344309, 52.400238], [8.356898, 52.392963], [8.375361, 52.389606], [8.381376, 52.389748], [8.3876705, 52.38611], [8.393825, 52.38625], [8.400119, 52.382614], [8.400259, 52.378838], [8.431311, 52.368347], [8.437605, 52.364708], [8.44376, 52.36485], [8.44418, 52.357296], [8.451313, 52.338833], [8.451733, 52.33142], [8.464741, 52.316734], [8.470756, 52.31687], [8.465301, 52.305542], [8.459426, 52.301765], [8.460545, 52.28316], [8.466979, 52.27575], [8.467399, 52.268337], [8.461803, 52.260784], [8.462083, 52.257008], [8.468377, 52.25351], [8.468797, 52.245956], [8.462643, 52.245956], [8.462922, 52.24218], [8.457327, 52.234627], [8.457467, 52.23085], [8.451592, 52.227074], [8.452152, 52.21966], [8.446278, 52.215744], [8.446417, 52.21211], [8.452572, 52.212246], [8.4529915, 52.204693], [8.471734, 52.193924], [8.489918, 52.194202], [8.496212, 52.190567], [8.52069, 52.18721], [8.514815, 52.183434], [8.5088005, 52.183292], [8.508941, 52.179657], [8.485722, 52.16427], [8.485862, 52.160633], [8.479847, 52.160492], [8.473972, 52.156715], [8.449774, 52.156296], [8.43229, 52.14483], [8.414526, 52.14077], [8.414666, 52.136993], [8.403056, 52.12944], [8.403337, 52.125664], [8.409631, 52.12203], [8.41005, 52.114616], [8.404176, 52.11084], [8.374103, 52.11028], [8.373822, 52.114056], [8.324587, 52.128044], [8.318852, 52.124268], [8.318992, 52.12049], [8.312978, 52.12049], [8.300669, 52.123985], [8.28808, 52.13126], [8.28794, 52.134895], [8.282065, 52.13112], [8.270037, 52.13084], [8.264301, 52.127064], [8.264581, 52.12343], [8.246398, 52.12301], [8.234928, 52.115456], [8.235208, 52.11168], [8.229193, 52.11168], [8.223458, 52.10776], [8.223738, 52.104126], [8.211988, 52.10021], [8.212269, 52.09643], [8.200799, 52.08888], [8.201078, 52.085102], [8.195764, 52.077686], [8.196043, 52.07391], [8.178279, 52.07363], [8.160235, 52.07713], [8.137296, 52.07307], [8.131561, 52.07307], [8.103867, 52.061462], [8.0970125, 52.068596], [8.070576, 52.06664], [8.064002, 52.069996], [8.057568, 52.069576], [8.057848, 52.065937], [8.038964, 52.06496], [8.038685, 52.068596], [8.032531, 52.068317], [8.015046, 52.056427], [8.008892, 52.05615], [7.9971423, 52.051952], [7.9860926, 52.036705], [7.9740634, 52.036427], [7.9371367, 52.046497], [7.918813, 52.049713], [7.9242682, 52.057407], [7.9118195, 52.060764], [7.892097, 52.082584], [7.8860826, 52.082443], [7.8858027, 52.08622], [7.903567, 52.090416], [7.9151764, 52.094475], [7.9329405, 52.09867], [7.9449697, 52.09895], [7.967629, 52.114475], [8.0091715, 52.115173], [8.0005, 52.149025], [7.99994, 52.156578], [8.005815, 52.160633], [8.025117, 52.162033], [8.0248375, 52.16581], [8.018263, 52.16525], [8.017843, 52.172802], [8.01099, 52.17616], [7.9804974, 52.1749], [7.9807773, 52.171124], [7.9747624, 52.170982], [7.968468, 52.17462], [7.962454, 52.17434], [7.956159, 52.17798], [7.9321012, 52.177418], [7.9258065, 52.180916], [7.9136376, 52.18441], [7.906924, 52.191826], [7.9060845, 52.203156], [7.9000697, 52.203014], [7.8995104, 52.210567], [7.9049654, 52.21826], [7.9112597, 52.214626], [7.916575, 52.222317], [7.92259, 52.2226], [7.928324, 52.226513], [7.9266458, 52.249172], [7.9203515, 52.25267], [7.920072, 52.256447], [7.9260864, 52.256725], [7.925527, 52.26414], [7.931262, 52.268196], [7.9432907, 52.268616], [7.9547606, 52.27659], [7.929583, 52.290714], [7.928744, 52.305542], [7.946508, 52.310017], [7.9586773, 52.3068], [7.9886103, 52.30792], [7.98847, 52.311695], [7.976301, 52.314915], [7.951264, 52.336037], [7.945249, 52.335754], [7.9449697, 52.34317], [7.950984, 52.34345], [7.9505644, 52.350723], [7.94441, 52.354218], [7.94427, 52.357857], [7.937976, 52.36499], [7.9378357, 52.368767], [7.931961, 52.36485], [7.919792, 52.368065], [7.913498, 52.3752], [7.8951745, 52.381912], [7.8891597, 52.381775], [7.871256, 52.377438], [7.8652415, 52.37716], [7.841603, 52.369045], [7.8174043, 52.37184], [7.81139, 52.371704], [7.7867723, 52.381912], [7.750125, 52.391846], [7.7253675, 52.402195], [7.7193527, 52.402054], [7.712779, 52.416462], [7.705925, 52.434647], [7.6996307, 52.44178], [7.6931963, 52.45269], [7.6930566, 52.456326], [7.674873, 52.45577], [7.6625643, 52.459126], [7.637946, 52.469334], [7.613468, 52.472412], [7.6133285, 52.476048], [7.5896897, 52.45339], [7.583815, 52.445976], [7.583955, 52.44234], [7.57808, 52.43115], [7.602838, 52.424435], [7.6091323, 52.420937], [7.609412, 52.413666], [7.5852137, 52.405693], [7.5856333, 52.39464], [7.5801783, 52.383453], [7.5803185, 52.379814], [7.5744433, 52.3759], [7.574164, 52.379677], [7.5565395, 52.368065], [7.5502453, 52.371563], [7.5443707, 52.367786], [7.544231, 52.37142], [7.5320616, 52.371143], [7.5203123, 52.36345], [7.514298, 52.36317], [7.5084233, 52.359394], [7.490799, 52.35142], [7.4847846, 52.35128], [7.485064, 52.347645], [7.46716, 52.34345], [7.4435215, 52.335335], [7.4324718, 52.323868], [7.4270167, 52.316174], [7.415267, 52.312115], [7.403238, 52.311836], [7.4035177, 52.30806], [7.3914886, 52.30778], [7.3912086, 52.311558], [7.368409, 52.29589], [7.362954, 52.288338], [7.3513446, 52.284283], [7.3331614, 52.283722], [7.3214116, 52.279804], [7.298612, 52.26414], [7.2198634, 52.265957], [7.2018194, 52.2654], [7.159158, 52.268196], [7.1292253, 52.26372], [7.1232104, 52.26358], [7.111741, 52.25575], [7.1123004, 52.248333], [7.1065655, 52.24442], [7.071038, 52.24344], [7.0448813, 52.257565], [7.037328, 52.27589], [7.0311737, 52.27575], [7.0297747, 52.294353], [7.0412445, 52.30596], [7.047119, 52.310017], [7.046839, 52.313656], [7.052574, 52.32135], [7.0522943, 52.325127], [7.061386, 52.335056], [7.064743, 52.34149], [7.080409, 52.357155], [7.082227, 52.36583], [7.07915, 52.38275], [7.0643234, 52.400795], [7.043203, 52.40681], [7.039286, 52.411846], [7.033272, 52.425274], [7.020823, 52.43255], [7.0068355, 52.462063], [7.006276, 52.469475], [7.0004015, 52.469475], [7.0001216, 52.47311], [6.987673, 52.47283], [6.9878125, 52.469055], [6.9815183, 52.46486], [6.975224, 52.457027], [6.975504, 52.45325], [6.962775, 52.445137], [6.9503264, 52.440662], [6.9506063, 52.437023], [6.9313035, 52.439823], [6.911861, 52.446396], [6.886684, 52.449055], [6.867381, 52.45577], [6.8624854, 52.45395], [6.859548, 52.459824], [6.8542333, 52.46262], [6.811152, 52.46094], [6.7648535, 52.465], [6.7441525, 52.472134], [6.728906, 52.479546], [6.71366, 52.48444], [6.707925, 52.501366], [6.7115617, 52.51913], [6.7104425, 52.52808], [6.683727, 52.556057], [6.718136, 52.55228], [6.728906, 52.560673], [6.730165, 52.566826], [6.7419143, 52.56711], [6.7496076, 52.57326], [6.7242904, 52.590607], [6.7263885, 52.600677], [6.7326827, 52.60935], [6.727787, 52.622776], [6.719255, 52.62963], [6.7305846, 52.635086], [6.7438726, 52.647114], [6.7617764, 52.649494], [6.767931, 52.648094], [6.773666, 52.65215], [6.7807994, 52.65243], [6.7865343, 52.656208], [6.8016405, 52.656906], [6.8312936, 52.65327], [6.8433228, 52.65495], [6.859548, 52.65271], [6.883187, 52.657047], [6.889481, 52.654247], [6.905147, 52.655506], [6.9300447, 52.645435], [6.9487877, 52.64264], [6.9878125, 52.649773], [7.006416, 52.644737], [7.020823, 52.63872], [7.0397058, 52.635506], [7.0518746, 52.635784], [7.0630646, 52.647114], [7.0714574, 52.691593], [7.069499, 52.713554], [7.0753736, 52.71733], [7.078311, 52.754257], [7.07929, 52.802654], [7.080409, 52.813843], [7.0914593, 52.827553], [7.100271, 52.835804], [7.0942564, 52.846436], [7.1020894, 52.854267], [7.122791, 52.868256], [7.136638, 52.87539], [7.1779013, 52.90784], [7.21217, 52.932877], [7.2123103, 52.936512], [7.219164, 52.94015], [7.2261577, 52.95092], [7.2264376, 52.958054], [7.2404246, 52.97246], [7.2476983, 52.98673], [7.2476983, 52.990364], [7.2615457, 52.997498], [7.254832, 53.001137], [7.2555313, 53.022675], [7.249097, 53.044357], [7.249237, 53.066036], [7.2565103, 53.098347], [7.249377, 53.105762], [7.242103, 53.1059], [7.23469, 53.109676], [7.23469, 53.113316], [7.2271366, 53.11723], [7.226997, 53.124504], [7.2342706, 53.12786], [7.2342706, 53.131638], [7.241544, 53.134995], [7.241404, 53.142406], [7.2486773, 53.145763], [7.2485375, 53.149403], [7.263224, 53.16003], [7.2706375, 53.15975], [7.2927375, 53.162968], [7.2703576, 53.17444], [7.270218, 53.178074], [7.277771, 53.177795], [7.2776313, 53.18143], [7.2849045, 53.18857], [7.284625, 53.199615], [7.2760925, 53.210945], [7.2745543, 53.22941], [7.2716165, 53.22857], [7.239026, 53.231087], [7.2255983, 53.234165], [7.2187443, 53.233604], [7.2053165, 53.23878], [7.206995, 53.242416], [7.2241993, 53.253468], [7.2341304, 53.269833], [7.2363687, 53.276546], [7.2352495, 53.289833], [7.2296543, 53.29431], [7.2341304, 53.29599], [7.2408442, 53.303963], [7.248118, 53.33012], [7.205876, 53.333755], [7.1886716, 53.334316], [7.181398, 53.338512], [7.1774817, 53.334034], [7.165313, 53.335155], [7.085864, 53.335155], [7.060827, 53.334595], [7.052015, 53.33823], [7.036908, 53.336273], [7.0247393, 53.33655], [7.0185847, 53.33963], [7.007535, 53.34956], [6.998583, 53.36131], [6.999142, 53.37376], [7.0080943, 53.377956], [7.0114512, 53.387047], [7.007535, 53.39544], [7.010892, 53.407608], [7.0146685, 53.415443], [7.0114512, 53.430687], [7.016347, 53.44132], [7.0191445, 53.454887], [7.0225015, 53.45964], [7.0264177, 53.474888], [7.0252986, 53.48342], [7.0497766, 53.507618], [7.0385866, 53.520206], [7.034111, 53.533215], [7.037468, 53.53797], [7.0503364, 53.534893], [7.061386, 53.524822], [7.0757933, 53.529858], [7.0774717, 53.532658], [7.095236, 53.519367], [7.1013904, 53.526222], [7.11244, 53.52846], [7.127547, 53.5293], [7.133561, 53.532375], [7.1341205, 53.53881], [7.116916, 53.548462], [7.110902, 53.555454], [7.1053066, 53.555176], [7.103069, 53.56203], [7.089221, 53.57098], [7.092438, 53.58063], [7.1075444, 53.590984], [7.1185946, 53.597137], [7.133002, 53.60287], [7.1441917, 53.609028], [7.1558013, 53.619797], [7.1597176, 53.62819], [7.165313, 53.626793], [7.1752434, 53.631268], [7.182517, 53.64008], [7.2014, 53.64875], [7.219164, 53.655186], [7.227556, 53.66148], [7.2458797, 53.669033], [7.2608466, 53.67239], [7.2724557, 53.67239], [7.2836456, 53.67463], [7.2969337, 53.68064], [7.316936, 53.68344], [7.3519044, 53.68596], [7.3664513, 53.68512], [7.3758225, 53.68288], [7.4102316, 53.684], [7.413029, 53.68288], [7.475273, 53.68344], [7.4913583, 53.68064], [7.5203123, 53.67183], [7.5380764, 53.67267], [7.5491266, 53.67463], [7.5636735, 53.674908], [7.5719256, 53.677425], [7.5719256, 53.680363], [7.5803185, 53.68148], [7.5902495, 53.680084], [7.61137, 53.687077], [7.6274557, 53.687637], [7.6375265, 53.690434], [7.6646624, 53.69435], [7.670817, 53.697147], [7.6930566, 53.700924], [7.7108207, 53.701763], [7.73362, 53.699245], [7.758098, 53.701485], [7.774743, 53.70484], [7.793626, 53.710155], [7.808033, 53.709038], [7.81139, 53.711555], [7.831392, 53.710995], [7.8652415, 53.71379], [7.8747525, 53.71547], [7.91084, 53.71771], [7.9302826, 53.71659], [7.9547606, 53.71659], [7.979099, 53.71435], [7.995324, 53.71379], [8.023019, 53.709038], [8.031411, 53.7054], [8.0302925, 53.698685], [8.020222, 53.689316], [8.026936, 53.678265], [8.028614, 53.66176], [8.036447, 53.654907], [8.0447, 53.641758], [8.061904, 53.64148], [8.064701, 53.643715], [8.07701, 53.645393], [8.086942, 53.644276], [8.0908575, 53.635742], [8.0970125, 53.63183], [8.099111, 53.626793], [8.114217, 53.61546], [8.1207905, 53.597416], [8.130862, 53.587345], [8.130302, 53.58399], [8.140233, 53.579792], [8.145828, 53.569023], [8.150304, 53.567345], [8.151423, 53.560352], [8.155899, 53.56119], [8.161354, 53.54958], [8.169746, 53.543427], [8.159117, 53.531258], [8.166949, 53.529858], [8.164711, 53.522305], [8.155339, 53.51377], [8.12135, 53.508457], [8.093656, 53.50202], [8.076451, 53.50202], [8.064701, 53.50594], [8.060785, 53.500484], [8.064142, 53.478245], [8.07757, 53.46104], [8.084703, 53.457123], [8.099111, 53.445656], [8.109741, 53.447052], [8.116455, 53.45097], [8.135338, 53.452927], [8.152542, 53.44789], [8.175901, 53.431526], [8.196322, 53.413483], [8.196322, 53.408447], [8.2086315, 53.402153], [8.229193, 53.401035], [8.239684, 53.399075], [8.252552, 53.399075], [8.263602, 53.403133], [8.281366, 53.414043], [8.296892, 53.42901], [8.296332, 53.442577], [8.308082, 53.448174], [8.313117, 53.455166], [8.315775, 53.464256], [8.316335, 53.493492], [8.312558, 53.520626], [8.303046, 53.525383], [8.285282, 53.522587], [8.276331, 53.51881], [8.260245, 53.51825], [8.246957, 53.519928], [8.231991, 53.519928], [8.235348, 53.533775], [8.238005, 53.56119], [8.243041, 53.575737], [8.240803, 53.577415], [8.251992, 53.592663], [8.263602, 53.600075], [8.2746525, 53.60483], [8.271435, 53.609585], [8.27745, 53.611824], [8.304725, 53.617977], [8.325287, 53.61742], [8.338015, 53.614063], [8.348086, 53.608746], [8.370326, 53.584827], [8.378578, 53.581192], [8.384173, 53.574337], [8.394104, 53.57014], [8.414666, 53.565105], [8.447536, 53.559093], [8.458587, 53.554058], [8.466979, 53.552937], [8.504745, 53.55154], [8.512998, 53.553497], [8.52027, 53.547623], [8.538594, 53.53993], [8.546987, 53.53965], [8.552442, 53.535732], [8.556917, 53.524822], [8.547546, 53.519928], [8.521949, 53.512653], [8.512998, 53.50566], [8.52083, 53.500904], [8.555239, 53.507896], [8.5707655, 53.51825], [8.57692, 53.53937], [8.569226, 53.542587], [8.56531, 53.5507], [8.556358, 53.554615], [8.548665, 53.564266], [8.531321, 53.579792], [8.524747, 53.588467], [8.526984, 53.592102], [8.52139, 53.60679], [8.506423, 53.62707], [8.496352, 53.63658], [8.492995, 53.645676], [8.4836235, 53.655746], [8.483064, 53.667076], [8.4836235, 53.69435], [8.492995, 53.70652], [8.492435, 53.711555], [8.500828, 53.72596], [8.50922, 53.73044], [8.515235, 53.74233], [8.522509, 53.75044], [8.519152, 53.75184], [8.5292225, 53.768204], [8.5346775, 53.78149], [8.541951, 53.791843], [8.541951, 53.80681], [8.545868, 53.8152], [8.55356, 53.819256], [8.555799, 53.831566], [8.564191, 53.836742], [8.570346, 53.845135], [8.577479, 53.848213], [8.596922, 53.865974], [8.604754, 53.87101], [8.603076, 53.875206], [8.617483, 53.88206], [8.628114, 53.88206], [8.636366, 53.88598], [8.64252, 53.886257], [8.676929, 53.891853], [8.684203, 53.89073], [8.684762, 53.8815], [8.693574, 53.875908], [8.700288, 53.879265], [8.716933, 53.869614], [8.725326, 53.862617], [8.727004, 53.857025], [8.744768, 53.85157], [8.748545, 53.847652], [8.78701, 53.833805], [8.825895, 53.831005], [8.830231, 53.833244], [8.858625, 53.829887], [8.893034, 53.828487], [8.898629, 53.829887], [8.91919, 53.830166], [8.944788, 53.835903], [8.962552, 53.8387], [8.98633, 53.840656], [8.998639, 53.8373], [9.016963, 53.83618], [9.020879, 53.841778], [9.03081, 53.842617], [9.05305, 53.85325], [9.069136, 53.856186], [9.084102, 53.86178], [9.099768, 53.8629], [9.096411, 53.884018]], [[8.626855, 53.146744], [8.633149, 53.14311], [8.633569, 53.135693], [8.652731, 53.124924], [8.653431, 53.110096], [8.666019, 53.1066], [8.666578, 53.09541], [8.673153, 53.08814], [8.691616, 53.08856], [8.6980505, 53.08492], [8.704205, 53.08506], [8.710639, 53.077785], [8.711618, 53.05918], [8.705744, 53.055267], [8.712317, 53.047993], [8.73134, 53.037224], [8.737494, 53.03736], [8.74323, 53.044914], [8.749524, 53.04128], [8.755678, 53.04142], [8.755538, 53.045197], [8.761553, 53.04911], [8.761273, 53.05275], [8.767288, 53.056664], [8.773442, 53.056805], [8.773862, 53.04925], [8.780296, 53.041977], [8.792605, 53.04226], [8.792885, 53.038483], [8.805333, 53.034985], [8.811488, 53.035126], [8.818062, 53.02785], [8.818202, 53.024075], [8.830511, 53.024353], [8.836805, 53.020718], [8.848695, 53.02841], [8.849114, 53.020996], [8.855128, 53.024914], [8.867297, 53.025055], [8.867158, 53.02883], [8.860444, 53.03988], [8.866458, 53.043797], [8.866878, 53.036243], [8.885761, 53.025475], [8.892335, 53.0182], [8.917092, 53.014843], [8.922968, 53.01876], [8.935416, 53.015263], [8.940871, 53.030228], [8.9471655, 53.026733], [8.946886, 53.034145], [8.952761, 53.03792], [8.971084, 53.042118], [8.976819, 53.04967], [8.982973, 53.04967], [8.976679, 53.053307], [8.970244, 53.060722], [8.96409, 53.06058], [8.962691, 53.090515], [8.968566, 53.09429], [8.974721, 53.094433], [8.98675, 53.102123], [8.968146, 53.10548], [8.961713, 53.10912], [8.955278, 53.11639], [8.949123, 53.11639], [8.948704, 53.123806], [8.967168, 53.124084], [8.973182, 53.128002], [8.985491, 53.12828], [8.978917, 53.135555], [8.972623, 53.13919], [8.966468, 53.13905], [8.960034, 53.146465], [8.9536, 53.1501], [8.9471655, 53.157375], [8.941011, 53.157234], [8.922828, 53.149403], [8.923107, 53.145763], [8.911078, 53.13793], [8.904923, 53.13793], [8.904784, 53.141567], [8.898769, 53.13779], [8.861842, 53.13695], [8.861703, 53.140728], [8.84268, 53.1515], [8.84212, 53.16269], [8.829532, 53.166187], [8.78645, 53.165207], [8.786311, 53.168983], [8.780296, 53.165207], [8.780436, 53.16143], [8.7742815, 53.16129], [8.761553, 53.168423], [8.74309, 53.168003], [8.74267, 53.175556], [8.736516, 53.17542], [8.730082, 53.178913], [8.729941, 53.18269], [8.717353, 53.186188], [8.711478, 53.18227], [8.705324, 53.182133], [8.69889, 53.185627], [8.686721, 53.181713], [8.680566, 53.181572], [8.680706, 53.177795], [8.674551, 53.177654], [8.674412, 53.18143], [8.662103, 53.181152], [8.661823, 53.184788], [8.655529, 53.188427], [8.64294, 53.191784], [8.64266, 53.19556], [8.629931, 53.202694], [8.624057, 53.198776], [8.611748, 53.198498], [8.612028, 53.191086], [8.605873, 53.190945], [8.599998, 53.187027], [8.593844, 53.186886], [8.593564, 53.190525], [8.581116, 53.194023], [8.586571, 53.205353], [8.5986, 53.213043], [8.59832, 53.21682], [8.585872, 53.220177], [8.579717, 53.22004], [8.573982, 53.212486], [8.567548, 53.21598], [8.555519, 53.211926], [8.54279, 53.21906], [8.530481, 53.21878], [8.530202, 53.222416], [8.523627, 53.22969], [8.517473, 53.22955], [8.505024, 53.232906], [8.492995, 53.22885], [8.486841, 53.22871], [8.487121, 53.224934], [8.493415, 53.221436], [8.4938345, 53.213882], [8.500269, 53.21039], [8.513137, 53.199615], [8.519431, 53.19598], [8.538314, 53.189125], [8.544469, 53.189266], [8.563352, 53.18227], [8.588249, 53.175556], [8.600558, 53.17584], [8.613147, 53.17248], [8.625875, 53.165348], [8.626855, 53.146744]]], [[[8.49859, 53.931297], [8.514676, 53.924862], [8.518033, 53.921227], [8.5135565, 53.91619], [8.506423, 53.913532], [8.492995, 53.912693], [8.48754, 53.914093], [8.4881, 53.925423], [8.491877, 53.92962], [8.49859, 53.931297]]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Nordrhein-Westfalen',
      type: 'Land',
      area: '34,084.13 km²',
      bundesratVotes: '6 (out of 69)',
      density: '530/km²',
      timeZone: 'UTC+1 (CET)',
      population: 17932651,
      capital: 'Düsseldorf',
      government: 'Landtag of North Rhine-Westphalia',
      head: 'Armin Laschet (CDU)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[8.666299, 52.525284], [8.672733, 52.51801], [8.684762, 52.521927], [8.685182, 52.514515], [8.691476, 52.510876], [8.697491, 52.510876], [8.704065, 52.503605], [8.704205, 52.49983], [8.69875, 52.488636], [8.69889, 52.48486], [8.705044, 52.485], [8.705184, 52.481224], [8.711478, 52.47759], [8.712458, 52.458984], [8.706303, 52.458843], [8.707282, 52.440243], [8.719871, 52.43311], [8.72029, 52.425556], [8.708121, 52.425415], [8.70966, 52.395622], [8.721828, 52.39576], [8.727424, 52.403313], [8.733718, 52.399677], [8.733998, 52.39604], [8.740293, 52.392403], [8.740432, 52.388626], [8.746447, 52.388767], [8.77652, 52.39674], [8.788409, 52.400658], [8.855828, 52.390587], [8.855688, 52.394363], [8.861703, 52.394363], [8.867717, 52.398277], [8.873872, 52.39464], [8.8859005, 52.39856], [8.897651, 52.40625], [8.903805, 52.40639], [8.922128, 52.402893], [8.940452, 52.403175], [8.946186, 52.41073], [8.957936, 52.41842], [8.96395, 52.41856], [8.963671, 52.425976], [8.969686, 52.426113], [8.975699, 52.42989], [8.981854, 52.426254], [8.987589, 52.433807], [8.981295, 52.437443], [8.981155, 52.44122], [8.987309, 52.44136], [8.98689, 52.448772], [8.998639, 52.456467], [9.010808, 52.456608], [9.016823, 52.46052], [9.016543, 52.46416], [9.022138, 52.47549], [9.021998, 52.479267], [9.027873, 52.483044], [9.034027, 52.48318], [9.040182, 52.479546], [9.046196, 52.483322], [9.045637, 52.49451], [9.051372, 52.502064], [9.063681, 52.49857], [9.07585, 52.498707], [9.088299, 52.495213], [9.094173, 52.499126], [9.112916, 52.488216], [9.131379, 52.484722], [9.137814, 52.477448], [9.125645, 52.47717], [9.125924, 52.469753], [9.102146, 52.458145], [9.096691, 52.44318], [9.115434, 52.43227], [9.115714, 52.428493], [9.109699, 52.424717], [9.109979, 52.420937], [9.1159935, 52.421078], [9.121868, 52.424854], [9.128442, 52.413803], [9.122707, 52.40625], [9.122987, 52.402473], [9.117252, 52.39492], [9.105223, 52.391006], [9.099348, 52.38723], [9.100048, 52.37226], [9.094033, 52.368484], [9.088018, 52.368347], [9.088578, 52.357155], [9.082704, 52.35338], [9.076549, 52.35324], [9.070674, 52.349464], [9.0587845, 52.345406], [9.059065, 52.337994], [9.040741, 52.34149], [9.034447, 52.345127], [9.028293, 52.344986], [9.028712, 52.337574], [9.016963, 52.32988], [9.010808, 52.329742], [9.004933, 52.325966], [8.998919, 52.325825], [8.999199, 52.318413], [8.98745, 52.31072], [8.993744, 52.30708], [8.9880085, 52.299526], [8.988568, 52.288338], [8.982694, 52.28456], [8.982834, 52.280785], [8.96465, 52.280506], [8.971084, 52.27309], [8.971643, 52.262043], [8.989827, 52.26232], [8.996121, 52.258686], [9.008151, 52.258823], [9.008571, 52.25141], [9.026753, 52.25169], [9.0390625, 52.248196], [9.057806, 52.237286], [9.063821, 52.237423], [9.076129, 52.233788], [9.076269, 52.230152], [9.0703945, 52.226234], [9.06438, 52.226234], [9.06452, 52.222458], [9.058505, 52.222317], [9.05263, 52.21854], [9.046196, 52.225956], [9.040321, 52.22204], [9.040462, 52.218403], [9.046756, 52.214764], [9.047874, 52.192383], [9.042, 52.18847], [9.04214, 52.18483], [9.024236, 52.180775], [9.017941, 52.18441], [9.017802, 52.188187], [9.023816, 52.188187], [9.023677, 52.191963], [9.017383, 52.195602], [9.011508, 52.191826], [8.999478, 52.191544], [8.999199, 52.19532], [8.993324, 52.191406], [8.993604, 52.187767], [9.006053, 52.180496], [9.012067, 52.180634], [9.018641, 52.169445], [9.018921, 52.16581], [9.013046, 52.161892], [9.013186, 52.158257], [9.019481, 52.154617], [9.01976, 52.147205], [9.014165, 52.139652], [9.014305, 52.135876], [9.020599, 52.13224], [9.032489, 52.136154], [9.044238, 52.14385], [9.056128, 52.147766], [9.074171, 52.148045], [9.0744505, 52.144268], [9.0869, 52.136993], [9.105223, 52.133636], [9.111378, 52.13], [9.123127, 52.137554], [9.129142, 52.137695], [9.129421, 52.13392], [9.147465, 52.134197], [9.153899, 52.126923], [9.160053, 52.123287], [9.160613, 52.1121], [9.148584, 52.111958], [9.136834, 52.104263], [9.137394, 52.093075], [9.149143, 52.10077], [9.149283, 52.096992], [9.155298, 52.09713], [9.155718, 52.089577], [9.167747, 52.089855], [9.179915, 52.08622], [9.192784, 52.071533], [9.192924, 52.067757], [9.181035, 52.06398], [9.17516, 52.060062], [9.176419, 52.034046], [9.182573, 52.03041], [9.194882, 52.026775], [9.195162, 52.01936], [9.201736, 52.008312], [9.189707, 52.00817], [9.183972, 52.000618], [9.190406, 51.993206], [9.184531, 51.98943], [9.184951, 51.981873], [9.178937, 51.981873], [9.179076, 51.978096], [9.185091, 51.978237], [9.185231, 51.97446], [9.191525, 51.970825], [9.191805, 51.96341], [9.19782, 51.96355], [9.210129, 51.959915], [9.221598, 51.971245], [9.233487, 51.971523], [9.233348, 51.97516], [9.245377, 51.97544], [9.245517, 51.971664], [9.257406, 51.97558], [9.269435, 51.97572], [9.275729, 51.968307], [9.275869, 51.96467], [9.288318, 51.957397], [9.288458, 51.95362], [9.276428, 51.95348], [9.276568, 51.949703], [9.270834, 51.945927], [9.276988, 51.94229], [9.283003, 51.94243], [9.283143, 51.938652], [9.277128, 51.938515], [9.277687, 51.927322], [9.296151, 51.916412], [9.302026, 51.92033], [9.319929, 51.92061], [9.320069, 51.916832], [9.332098, 51.916973], [9.338253, 51.913338], [9.338393, 51.9097], [9.344547, 51.905922], [9.344827, 51.89851], [9.350982, 51.894875], [9.351261, 51.88746], [9.3453865, 51.88732], [9.346086, 51.872494], [9.340491, 51.86494], [9.34119, 51.85375], [9.347065, 51.85389], [9.346925, 51.857525], [9.352799, 51.857666], [9.358535, 51.861443], [9.370424, 51.861584], [9.406511, 51.854588], [9.4420395, 51.85515], [9.447914, 51.858925], [9.459804, 51.859066], [9.465958, 51.855427], [9.460083, 51.85165], [9.460223, 51.848015], [9.448474, 51.847736], [9.437143, 51.840183], [9.437424, 51.836544], [9.443718, 51.829273], [9.444138, 51.821857], [9.438402, 51.81808], [9.432528, 51.817944], [9.433228, 51.806892], [9.444837, 51.803535], [9.445256, 51.796124], [9.451131, 51.792625], [9.434206, 51.78493], [9.428751, 51.777378], [9.417282, 51.773464], [9.417562, 51.769825], [9.411826, 51.76605], [9.4121065, 51.762413], [9.400777, 51.75486], [9.400637, 51.758495], [9.389028, 51.758217], [9.389586, 51.747166], [9.383991, 51.74339], [9.384272, 51.736115], [9.396021, 51.73262], [9.4018955, 51.72898], [9.3963, 51.725204], [9.397, 51.710518], [9.40875, 51.703384], [9.409029, 51.69975], [9.391965, 51.692055], [9.392385, 51.684643], [9.398119, 51.684784], [9.404273, 51.673874], [9.387348, 51.66618], [9.382033, 51.654987], [9.382313, 51.647717], [9.394063, 51.64422], [9.405393, 51.648136], [9.422876, 51.64478], [9.439801, 51.65247], [9.445676, 51.65261], [9.451691, 51.645336], [9.434906, 51.634007], [9.435045, 51.63037], [9.417702, 51.62995], [9.406371, 51.626034], [9.377558, 51.625477], [9.377837, 51.618202], [9.366228, 51.62156], [9.360633, 51.617783], [9.343429, 51.613728], [9.343568, 51.61009], [9.367347, 51.59582], [9.373081, 51.595963], [9.378956, 51.592327], [9.373501, 51.58491], [9.362171, 51.580997], [9.356856, 51.569805], [9.351261, 51.56589], [9.345527, 51.56589], [9.345806, 51.558475], [9.340211, 51.5547], [9.328602, 51.55442], [9.329161, 51.54337], [9.323706, 51.535816], [9.324125, 51.524765], [9.31881, 51.513435], [9.284262, 51.512737], [9.278807, 51.505325], [9.278947, 51.50155], [9.273352, 51.497772], [9.256007, 51.497353], [9.239082, 51.48966], [9.233627, 51.482105], [9.234047, 51.470917], [9.228732, 51.459724], [9.216982, 51.463223], [9.205513, 51.462944], [9.199638, 51.46658], [9.188169, 51.46266], [9.1827135, 51.45511], [9.182853, 51.451332], [9.1772585, 51.447556], [9.177398, 51.44378], [9.171523, 51.44378], [9.160193, 51.439724], [9.160053, 51.4435], [9.154179, 51.447136], [9.154039, 51.450775], [9.148444, 51.447], [9.13124, 51.44294], [9.113895, 51.44266], [9.102146, 51.449795], [9.101727, 51.460983], [9.095991, 51.460846], [9.095852, 51.464622], [9.106762, 51.483364], [9.112356, 51.48714], [9.112077, 51.494553], [9.106202, 51.49819], [9.094593, 51.501686], [9.088858, 51.50155], [9.088858, 51.49791], [9.077388, 51.49763], [9.077249, 51.501408], [9.060044, 51.50113], [9.04228, 51.511898], [9.041861, 51.51931], [9.0192, 51.51148], [8.990807, 51.503647], [8.990526, 51.507282], [8.954719, 51.49539], [8.948704, 51.491615], [8.936396, 51.491337], [8.924366, 51.48742], [8.912477, 51.47973], [8.913036, 51.468536], [8.925345, 51.465042], [8.937794, 51.457767], [8.937934, 51.45399], [8.931919, 51.450214], [8.944228, 51.44294], [8.938494, 51.435387], [8.938633, 51.427975], [8.968566, 51.42853], [8.968706, 51.42112], [8.973322, 51.412727], [8.962972, 51.40979], [8.963391, 51.394825], [8.957517, 51.38727], [8.951642, 51.38713], [8.933598, 51.390488], [8.903665, 51.389927], [8.886041, 51.37832], [8.874012, 51.3744], [8.867857, 51.37804], [8.855688, 51.381535], [8.855548, 51.38531], [8.843519, 51.385033], [8.84324, 51.38881], [8.825056, 51.38839], [8.807012, 51.384335], [8.788829, 51.383915], [8.777079, 51.37622], [8.76491, 51.37608], [8.759035, 51.372166], [8.728542, 51.371605], [8.715954, 51.375103], [8.703785, 51.37482], [8.691756, 51.370907], [8.692036, 51.36713], [8.69833, 51.363632], [8.698609, 51.359856], [8.686581, 51.355938], [8.686721, 51.35216], [8.674551, 51.351883], [8.668676, 51.348106], [8.669376, 51.336777], [8.656927, 51.340275], [8.650773, 51.340275], [8.632589, 51.33608], [8.633288, 51.324886], [8.620979, 51.324745], [8.615105, 51.32083], [8.6156645, 51.313416], [8.604055, 51.30195], [8.5979, 51.301807], [8.59846, 51.294395], [8.586711, 51.28656], [8.574402, 51.286423], [8.568947, 51.275093], [8.581815, 51.26782], [8.58797, 51.26796], [8.588249, 51.264183], [8.594543, 51.260544], [8.6013975, 51.249496], [8.601677, 51.245857], [8.613846, 51.246], [8.626295, 51.2425], [8.643779, 51.254112], [8.64364, 51.25789], [8.655529, 51.261803], [8.679727, 51.262363], [8.679587, 51.266], [8.697631, 51.26642], [8.70938, 51.274113], [8.70952, 51.270336], [8.715674, 51.270477], [8.721409, 51.274254], [8.739733, 51.270897], [8.740012, 51.26348], [8.746447, 51.25607], [8.746587, 51.252434], [8.740712, 51.248516], [8.746866, 51.24488], [8.747146, 51.237465], [8.75344, 51.230053], [8.75358, 51.226418], [8.760015, 51.215366], [8.766169, 51.211727], [8.7783375, 51.208233], [8.784352, 51.204594], [8.778618, 51.20068], [8.772603, 51.20068], [8.766728, 51.196762], [8.767847, 51.170605], [8.756238, 51.162914], [8.750223, 51.162773], [8.750363, 51.159138], [8.733019, 51.147526], [8.727004, 51.14739], [8.715395, 51.139694], [8.7098, 51.13214], [8.710079, 51.12473], [8.716234, 51.12109], [8.716514, 51.113537], [8.734278, 51.113956], [8.734557, 51.106544], [8.722808, 51.102486], [8.704905, 51.105843], [8.693154, 51.10193], [8.681685, 51.094234], [8.669935, 51.090317], [8.663921, 51.09018], [8.646017, 51.093536], [8.633988, 51.09703], [8.622099, 51.096752], [8.60993, 51.10025], [8.562093, 51.09927], [8.556498, 51.091717], [8.544189, 51.095215], [8.538175, 51.095074], [8.532579, 51.08752], [8.515096, 51.07605], [8.515375, 51.072273], [8.521669, 51.068638], [8.533978, 51.06514], [8.540413, 51.057728], [8.534818, 51.050175], [8.529082, 51.0464], [8.523068, 51.046257], [8.517473, 51.038704], [8.523767, 51.03507], [8.529502, 51.038845], [8.535517, 51.038986], [8.541811, 51.03157], [8.542231, 51.02416], [8.548386, 51.020523], [8.55468, 51.01325], [8.537055, 51.009193], [8.508381, 50.989887], [8.508521, 50.98611], [8.485442, 50.970726], [8.485722, 50.96695], [8.479707, 50.96695], [8.479987, 50.963314], [8.4679575, 50.963314], [8.475371, 50.94471], [8.463761, 50.940933], [8.464461, 50.929882], [8.471314, 50.915195], [8.471455, 50.91156], [8.453831, 50.91128], [8.447676, 50.914917], [8.442081, 50.91128], [8.442221, 50.907505], [8.436346, 50.907505], [8.419002, 50.899952], [8.419282, 50.896313], [8.407672, 50.892536], [8.4019375, 50.88876], [8.402917, 50.87757], [8.3971815, 50.87393], [8.385292, 50.873795], [8.379558, 50.870018], [8.380537, 50.858967], [8.368507, 50.858826], [8.368228, 50.862602], [8.350184, 50.862602], [8.33242, 50.858826], [8.3202505, 50.858826], [8.319971, 50.862465], [8.306963, 50.870018], [8.306684, 50.873795], [8.300249, 50.87743], [8.2998295, 50.881207], [8.275631, 50.881207], [8.2698965, 50.87757], [8.270596, 50.870018], [8.2644415, 50.870018], [8.258706, 50.86638], [8.258986, 50.862602], [8.252972, 50.862602], [8.241502, 50.85519], [8.241782, 50.851414], [8.236047, 50.84778], [8.230032, 50.84778], [8.224298, 50.844], [8.2188425, 50.836586], [8.206813, 50.836586], [8.189609, 50.825397], [8.184014, 50.817986], [8.178839, 50.806793], [8.172824, 50.806793], [8.161354, 50.79938], [8.155339, 50.79938], [8.14387, 50.79183], [8.131841, 50.79183], [8.138695, 50.780777], [8.145268, 50.773365], [8.145409, 50.76959], [8.157997, 50.762173], [8.1582775, 50.758396], [8.164572, 50.758396], [8.165411, 50.750984], [8.172125, 50.747066], [8.179398, 50.739513], [8.179957, 50.735737], [8.173943, 50.7321], [8.163033, 50.717136], [8.164152, 50.70972], [8.152542, 50.698532], [8.153102, 50.694756], [8.146527, 50.694897], [8.145968, 50.698673], [8.139255, 50.69881], [8.13296, 50.695316], [8.133939, 50.687763], [8.127365, 50.687763], [8.121071, 50.702168], [8.110021, 50.705246], [8.093096, 50.704407], [8.092816, 50.708183], [8.086942, 50.707905], [8.070856, 50.696014], [8.052813, 50.699093], [8.049735, 50.728886], [8.030992, 50.739513], [8.030572, 50.743153], [8.024278, 50.746647], [8.018403, 50.74651], [8.011829, 50.753643], [8.01141, 50.75742], [8.005535, 50.757137], [7.9992404, 50.760635], [7.993366, 50.760494], [7.993086, 50.764133], [7.974343, 50.774624], [7.973224, 50.785812], [7.9792385, 50.785954], [7.978819, 50.78973], [7.9726644, 50.79323], [7.9719653, 50.80064], [7.97756, 50.804558], [7.9834347, 50.804836], [7.9810567, 50.83071], [7.974343, 50.84162], [7.973923, 50.84526], [7.9677687, 50.848755], [7.9323807, 50.847496], [7.926786, 50.843582], [7.9204917, 50.847076], [7.9146166, 50.846798], [7.914337, 50.850574], [7.908043, 50.854073], [7.9014688, 50.861206], [7.895314, 50.8647], [7.8946147, 50.872116], [7.88846, 50.87561], [7.8704166, 50.87869], [7.8526525, 50.878128], [7.834609, 50.881207], [7.83335, 50.895893], [7.839225, 50.896175], [7.838246, 50.907223], [7.8438406, 50.91114], [7.8435607, 50.914917], [7.854471, 50.926388], [7.8483167, 50.929882], [7.8305526, 50.929184], [7.8242583, 50.932682], [7.817684, 50.939953], [7.8118095, 50.939674], [7.7996407, 50.94303], [7.788031, 50.938976], [7.7831354, 50.927647], [7.7541814, 50.919113], [7.7364173, 50.918552], [7.736697, 50.914776], [7.748866, 50.91156], [7.749426, 50.90415], [7.75544, 50.904285], [7.761595, 50.90079], [7.7622943, 50.893375], [7.7564197, 50.893238], [7.756699, 50.889458], [7.763553, 50.87869], [7.757958, 50.874634], [7.7526426, 50.86708], [7.7589374, 50.863583], [7.759217, 50.859947], [7.765511, 50.85645], [7.765791, 50.852673], [7.7543216, 50.848618], [7.7487264, 50.8447], [7.742432, 50.848198], [7.7365575, 50.847916], [7.7362776, 50.851692], [7.719493, 50.839806], [7.7200522, 50.83239], [7.7141776, 50.832253], [7.7029877, 50.824417], [7.6800485, 50.816166], [7.674174, 50.815887], [7.673754, 50.819664], [7.6620045, 50.819244], [7.6744533, 50.81225], [7.680328, 50.81239], [7.681447, 50.80134], [7.6878815, 50.794067], [7.688301, 50.79043], [7.682706, 50.786514], [7.6834054, 50.7791], [7.677531, 50.77882], [7.677111, 50.782597], [7.6709566, 50.786095], [7.664942, 50.785812], [7.666341, 50.770985], [7.6607456, 50.76707], [7.6253576, 50.765812], [7.624938, 50.769447], [7.6193433, 50.76553], [7.601719, 50.76483], [7.596823, 50.7535], [7.598082, 50.738674], [7.5922074, 50.738537], [7.5866127, 50.734478], [7.5682893, 50.741333], [7.5624146, 50.741055], [7.55612, 50.74455], [7.550525, 50.740635], [7.5446506, 50.740353], [7.5390553, 50.73644], [7.527586, 50.732243], [7.521991, 50.728325], [7.5224104, 50.72469], [7.5102415, 50.727905], [7.504367, 50.727764], [7.5046463, 50.723988], [7.4990516, 50.720074], [7.481707, 50.715736], [7.446459, 50.714336], [7.441144, 50.706646], [7.4235196, 50.705944], [7.4170856, 50.71322], [7.405196, 50.712658], [7.405616, 50.709023], [7.3875723, 50.71196], [7.381697, 50.71182], [7.3814178, 50.715458], [7.3758225, 50.71154], [7.376242, 50.707905], [7.365052, 50.699932], [7.365472, 50.696293], [7.3716264, 50.6928], [7.372606, 50.681606], [7.37876, 50.67825], [7.3791795, 50.674473], [7.373305, 50.674194], [7.3738647, 50.66678], [7.3679895, 50.66664], [7.362395, 50.662724], [7.3640733, 50.64412], [7.352324, 50.6437], [7.341274, 50.635727], [7.335399, 50.63559], [7.329105, 50.639084], [7.3177752, 50.634888], [7.3119, 50.63461], [7.3008504, 50.626778], [7.2893806, 50.62258], [7.2776313, 50.62202], [7.260427, 50.617683], [7.2542725, 50.62118], [7.242103, 50.624397], [7.2307734, 50.6202], [7.219024, 50.61978], [7.216786, 50.64566], [7.2109113, 50.64552], [7.1995816, 50.641323], [7.200141, 50.63391], [7.194686, 50.629852], [7.1956654, 50.618805], [7.1839156, 50.618385], [7.1784606, 50.614326], [7.1790204, 50.606915], [7.167411, 50.606495], [7.1612563, 50.609993], [7.155661, 50.605934], [7.155941, 50.6023], [7.1507654, 50.594604], [7.144891, 50.594326], [7.1264277, 50.604816], [7.114818, 50.604397], [7.1153774, 50.596985], [7.1099224, 50.592926], [7.110482, 50.585514], [7.1047473, 50.585373], [7.099152, 50.581318], [7.093417, 50.581177], [7.0755134, 50.584114], [7.075234, 50.58789], [7.0690794, 50.59139], [7.06866, 50.595165], [7.062785, 50.594887], [7.0566306, 50.59838], [7.0346704, 50.582577], [7.0240397, 50.57097], [7.007395, 50.55908], [6.9899106, 50.558517], [6.9790006, 50.550545], [6.9615164, 50.549984], [6.961097, 50.55376], [6.954942, 50.55726], [6.9492073, 50.557117], [6.9378777, 50.55292], [6.932003, 50.552784], [6.926548, 50.548866], [6.9334016, 50.537815], [6.934381, 50.526627], [6.928506, 50.52635], [6.923051, 50.52243], [6.917316, 50.52229], [6.911721, 50.518375], [6.9055667, 50.52187], [6.9052873, 50.525646], [6.893957, 50.52145], [6.888222, 50.521313], [6.8889217, 50.513897], [6.900811, 50.51054], [6.901231, 50.506763], [6.8956356, 50.50285], [6.9079447, 50.495716], [6.9138193, 50.495995], [6.914099, 50.492218], [6.9083643, 50.492077], [6.9029093, 50.48802], [6.9036083, 50.48061], [6.9093432, 50.480747], [6.910043, 50.473335], [6.9045877, 50.469418], [6.9052873, 50.462006], [6.899832, 50.45795], [6.8936777, 50.461586], [6.888222, 50.45753], [6.8823476, 50.45739], [6.8768926, 50.453472], [6.877312, 50.449696], [6.8657026, 50.449276], [6.8659825, 50.4455], [6.8602476, 50.44536], [6.859828, 50.449135], [6.8479385, 50.452496], [6.847519, 50.45613], [6.83563, 50.459488], [6.8297553, 50.459347], [6.817446, 50.46648], [6.8170266, 50.470257], [6.8105927, 50.47753], [6.810173, 50.481308], [6.8040185, 50.484806], [6.7868137, 50.48047], [6.7813587, 50.47655], [6.775624, 50.476414], [6.764574, 50.46858], [6.7529645, 50.46816], [6.747789, 50.46047], [6.7595387, 50.460888], [6.759119, 50.464664], [6.7649937, 50.4648], [6.7661123, 50.453472], [6.7718472, 50.453754], [6.7732463, 50.442284], [6.751146, 50.43361], [6.7515655, 50.429695], [6.758, 50.426056], [6.770309, 50.42242], [6.769749, 50.42634], [6.775484, 50.426617], [6.777023, 50.41501], [6.7883525, 50.415565], [6.79129, 50.395985], [6.785555, 50.395706], [6.7859745, 50.39193], [6.780659, 50.38787], [6.781079, 50.383957], [6.7949266, 50.36885], [6.795486, 50.364933], [6.8082147, 50.35766], [6.8138094, 50.35794], [6.8091936, 50.349827], [6.79115, 50.349827], [6.7907305, 50.353462], [6.755482, 50.342274], [6.7433133, 50.342133], [6.7317038, 50.338356], [6.725689, 50.338356], [6.7139397, 50.33444], [6.7143593, 50.330803], [6.706806, 50.329823], [6.701211, 50.341854], [6.694777, 50.34549], [6.6943574, 50.349266], [6.688063, 50.352905], [6.681349, 50.360317], [6.674915, 50.363953], [6.6633053, 50.36004], [6.6644244, 50.348846], [6.6530943, 50.341293], [6.64708, 50.341152], [6.6414847, 50.337376], [6.635051, 50.341015], [6.628337, 50.34829], [6.6276374, 50.355843], [6.6329527, 50.363396], [6.632533, 50.36703], [6.6265182, 50.36703], [6.620224, 50.370667], [6.608195, 50.370388], [6.607076, 50.381577], [6.601481, 50.3778], [6.5895915, 50.37752], [6.578262, 50.369827], [6.5667925, 50.365913], [6.5610576, 50.362137], [6.543154, 50.361717], [6.5308447, 50.36521], [6.5196548, 50.35752], [6.5200744, 50.35388], [6.508045, 50.353603], [6.5024505, 50.349827], [6.5087447, 50.34619], [6.4912605, 50.342133], [6.4855256, 50.338356], [6.485945, 50.33472], [6.473916, 50.33444], [6.467622, 50.337936], [6.461747, 50.337795], [6.4613276, 50.34157], [6.455453, 50.341434], [6.4547534, 50.348846], [6.4600687, 50.356262], [6.459649, 50.36004], [6.4477596, 50.359756], [6.44706, 50.367172], [6.435171, 50.36689], [6.429576, 50.363113], [6.4235616, 50.362976], [6.4232817, 50.36661], [6.4172673, 50.36647], [6.416568, 50.373886], [6.4221625, 50.3778], [6.4158683, 50.381298], [6.415589, 50.384933], [6.39167, 50.384377], [6.386495, 50.37696], [6.387194, 50.36955], [6.3934884, 50.365913], [6.394468, 50.354862], [6.401042, 50.347588], [6.4014616, 50.343952], [6.4146094, 50.329544], [6.4206243, 50.329685], [6.4211836, 50.32227], [6.40328, 50.32199], [6.408315, 50.333042], [6.4024405, 50.3329], [6.402021, 50.336678], [6.3961463, 50.336536], [6.395447, 50.34381], [6.3828583, 50.350945], [6.3774033, 50.350807], [6.364115, 50.361156], [6.3636956, 50.36521], [6.339777, 50.379898], [6.3404765, 50.39067], [6.362017, 50.404797], [6.3622966, 50.420742], [6.3746057, 50.44592], [6.372927, 50.450676], [6.3664927, 50.454174], [6.3636956, 50.452213], [6.3424344, 50.464245], [6.329986, 50.493618], [6.3151593, 50.50271], [6.298934, 50.497814], [6.271239, 50.49921], [6.264805, 50.50271], [6.2592096, 50.49879], [6.2594895, 50.495014], [6.2534747, 50.494877], [6.253055, 50.498512], [6.246761, 50.50089], [6.2238216, 50.50229], [6.210394, 50.516975], [6.1808805, 50.533062], [6.1722083, 50.550545], [6.175705, 50.559917], [6.1975255, 50.56691], [6.1966863, 50.574463], [6.2028403, 50.574604], [6.212212, 50.57964], [6.220185, 50.586494], [6.2326336, 50.583275], [6.2323537, 50.58705], [6.2417254, 50.593487], [6.251517, 50.592087], [6.2783723, 50.616425], [6.2659235, 50.6202], [6.2593493, 50.625378], [6.228857, 50.62426], [6.2099743, 50.630974], [6.1975255, 50.63111], [6.1730475, 50.62146], [6.166054, 50.640205], [6.1719284, 50.64426], [6.178083, 50.64454], [6.1776633, 50.648315], [6.1695504, 50.652653], [6.1737466, 50.658386], [6.149129, 50.676853], [6.1187763, 50.708744], [6.100733, 50.718674], [6.0787725, 50.71979], [6.0789123, 50.718533], [6.060309, 50.717693], [6.0349917, 50.723988], [6.0284176, 50.727345], [6.0121922, 50.7542], [6.007157, 50.75658], [6.006178, 50.76735], [6.012472, 50.76777], [6.011913, 50.77518], [5.999324, 50.774624], [5.9990444, 50.77826], [5.99275, 50.77798], [5.9924703, 50.781757], [5.9863157, 50.781338], [5.986036, 50.785114], [5.9797416, 50.784836], [5.979462, 50.78847], [5.972888, 50.79197], [5.9665937, 50.79155], [5.9609985, 50.80246], [5.9657545, 50.80274], [5.975266, 50.814068], [5.9886937, 50.810432], [5.9997435, 50.80288], [6.009535, 50.804558], [6.0271587, 50.814766], [6.0310755, 50.821342], [6.029117, 50.827637], [6.020305, 50.839386], [6.019746, 50.84526], [6.041846, 50.849457], [6.0631065, 50.851555], [6.073877, 50.846798], [6.0787725, 50.86344], [6.0878644, 50.8696], [6.087724, 50.878967], [6.0782127, 50.886383], [6.0754156, 50.90093], [6.0775137, 50.9103], [6.0833883, 50.914356], [6.0829687, 50.921772], [6.0584908, 50.920513], [6.0521965, 50.924007], [6.0519166, 50.927784], [6.0456223, 50.93114], [6.0397477, 50.927086], [6.0396075, 50.930862], [6.0151296, 50.9331], [6.008556, 50.94779], [6.0022616, 50.95478], [6.0021214, 50.958557], [6.0081363, 50.958977], [6.007996, 50.962753], [6.0138707, 50.96303], [6.013731, 50.96681], [6.0278583, 50.975063], [6.0323343, 50.979958], [6.022823, 50.985134], [6.0084157, 50.982754], [5.982539, 50.98807], [5.966873, 50.983173], [5.9500885, 50.992126], [5.9359612, 50.990307], [5.913721, 50.984154], [5.9036503, 50.97828], [5.899734, 50.981495], [5.908266, 50.993526], [5.9079866, 51.00094], [5.896377, 51.003876], [5.896097, 51.01143], [5.889803, 51.015068], [5.880431, 51.025837], [5.88225, 51.03241], [5.8779135, 51.040104], [5.872039, 51.04346], [5.871619, 51.050873], [5.8835087, 51.047935], [5.895118, 51.048637], [5.903091, 51.054512], [5.92617, 51.05577], [5.9300866, 51.047237], [5.941836, 51.040524], [5.9456124, 51.03465], [5.9477105, 51.037308], [5.95932, 51.038006], [5.95932, 51.035908], [5.969531, 51.034508], [5.9664536, 51.042202], [5.9734473, 51.043182], [5.9822593, 51.05339], [5.978063, 51.05745], [5.978343, 51.063183], [5.9889736, 51.06514], [5.989533, 51.072273], [5.995268, 51.073673], [5.998904, 51.081787], [6.0098147, 51.08626], [6.0096745, 51.089897], [6.0155497, 51.090317], [6.0152698, 51.094093], [6.0387683, 51.095634], [6.061428, 51.110462], [6.0745764, 51.12039], [6.0845075, 51.12109], [6.0842276, 51.124866], [6.095837, 51.129345], [6.095557, 51.13312], [6.101292, 51.137177], [6.107167, 51.137596], [6.107027, 51.141373], [6.124651, 51.14249], [6.130386, 51.146687], [6.130246, 51.150463], [6.1717887, 51.15298], [6.1785026, 51.161934], [6.1670327, 51.16711], [6.144793, 51.173683], [6.1510873, 51.17802], [6.1737466, 51.183613], [6.1873145, 51.191586], [6.1743064, 51.19802], [6.1682916, 51.1976], [6.1456323, 51.190468], [6.1422753, 51.18739], [6.1218534, 51.17844], [6.1221333, 51.17578], [6.0986347, 51.173683], [6.0917807, 51.17536], [6.0852065, 51.18054], [6.084787, 51.184174], [6.078353, 51.18753], [6.073597, 51.224037], [6.091641, 51.225437], [6.0912213, 51.229073], [6.0782127, 51.24474], [6.0977955, 51.25453], [6.109125, 51.26488], [6.1177974, 51.269917], [6.1245112, 51.278168], [6.128148, 51.28628], [6.135561, 51.292156], [6.1440935, 51.295654], [6.154584, 51.303627], [6.1596193, 51.31118], [6.1652145, 51.315235], [6.164795, 51.31901], [6.174586, 51.337757], [6.198924, 51.338875], [6.1983647, 51.34251], [6.231934, 51.36601], [6.2315145, 51.369648], [6.2227025, 51.391468], [6.227878, 51.39902], [6.2208843, 51.406155], [6.215289, 51.402237], [6.21431, 51.40951], [6.2228427, 51.439445], [6.2214437, 51.450493], [6.227598, 51.450634], [6.2259197, 51.464203], [6.2313747, 51.46924], [6.2305355, 51.47665], [6.219765, 51.492596], [6.2203245, 51.5091], [6.215569, 51.516933], [6.1951475, 51.534836], [6.1792016, 51.54085], [6.156822, 51.56925], [6.130106, 51.582394], [6.122413, 51.592884], [6.1162586, 51.592464], [6.0909414, 51.605194], [6.098215, 51.622818], [6.105628, 51.622677], [6.108845, 51.62995], [6.114021, 51.649395], [6.1211543, 51.65359], [6.1187763, 51.660446], [6.1018515, 51.660583], [6.051497, 51.672615], [6.039048, 51.677788], [6.0354114, 51.682823], [6.0328937, 51.702965], [6.0344324, 51.710938], [6.041566, 51.715553], [6.0365305, 51.727444], [6.012892, 51.735836], [6.0010023, 51.737934], [5.969531, 51.737934], [5.968692, 51.7529], [5.9740067, 51.7529], [5.9842176, 51.760593], [5.9997435, 51.76437], [5.999324, 51.771923], [5.9941487, 51.771923], [5.993729, 51.779476], [6.000723, 51.781994], [5.9923306, 51.795002], [5.98198, 51.802], [5.976245, 51.80941], [5.965335, 51.813187], [5.965055, 51.816822], [5.9758253, 51.816963], [5.9646354, 51.824375], [5.9720488, 51.83179], [6.0011425, 51.82857], [6.009535, 51.83221], [6.017368, 51.83221], [6.0277185, 51.836124], [6.033034, 51.84284], [6.0480003, 51.843678], [6.0610085, 51.85165], [6.060309, 51.857246], [6.0649247, 51.857105], [6.0682817, 51.86494], [6.0909414, 51.855568], [6.0986347, 51.850952], [6.110104, 51.846897], [6.144653, 51.847317], [6.1534653, 51.844658], [6.168991, 51.845078], [6.1670327, 51.858646], [6.144653, 51.870533], [6.144653, 51.87641], [6.1383586, 51.879066], [6.1383586, 51.88494], [6.1193357, 51.88718], [6.1193357, 51.890118], [6.107167, 51.889], [6.106747, 51.892494], [6.118077, 51.89879], [6.1298265, 51.899208], [6.150108, 51.904526], [6.1589203, 51.905365], [6.168991, 51.902985], [6.1850767, 51.895294], [6.1930494, 51.889977], [6.19263, 51.88676], [6.2018614, 51.884243], [6.201302, 51.879208], [6.2130513, 51.868717], [6.2185063, 51.86746], [6.2482996, 51.869415], [6.2705393, 51.872353], [6.278652, 51.87613], [6.289003, 51.87655], [6.3049483, 51.870674], [6.3069067, 51.857525], [6.3105435, 51.850952], [6.3404765, 51.85445], [6.3529253, 51.85445], [6.3657937, 51.847034], [6.3698497, 51.839344], [6.3813195, 51.836544], [6.3870544, 51.840603], [6.399643, 51.837105], [6.408595, 51.828712], [6.410553, 51.835987], [6.4175467, 51.841442], [6.411113, 51.845078], [6.4104133, 51.85361], [6.3990836, 51.860043], [6.397265, 51.871372], [6.402301, 51.87487], [6.4147496, 51.871933], [6.4203444, 51.87529], [6.426779, 51.87179], [6.432793, 51.871933], [6.433073, 51.868156], [6.4390874, 51.868435], [6.439787, 51.86088], [6.4458013, 51.861023], [6.445522, 51.8648], [6.4513965, 51.86494], [6.4571314, 51.868855], [6.4631457, 51.868996], [6.4634256, 51.86522], [6.4701395, 51.859066], [6.48035, 51.854588], [6.501751, 51.858925], [6.5223126, 51.868996], [6.5318236, 51.872074], [6.5533643, 51.882706], [6.568331, 51.883125], [6.56945, 51.88676], [6.5810595, 51.890816], [6.5867944, 51.894733], [6.587074, 51.891098], [6.592669, 51.894875], [6.610293, 51.899208], [6.6339316, 51.903545], [6.6399465, 51.903687], [6.645541, 51.9076], [6.6575704, 51.90802], [6.66918, 51.91208], [6.674775, 51.915855], [6.6807895, 51.916134], [6.692399, 51.92019], [6.692679, 51.917393], [6.704848, 51.916695], [6.705407, 51.910957], [6.711422, 51.90942], [6.7119813, 51.905643], [6.7307243, 51.89865], [6.731144, 51.89501], [6.7427535, 51.89907], [6.7508664, 51.90676], [6.7599583, 51.907043], [6.765553, 51.910957], [6.765273, 51.914734], [6.7771626, 51.915016], [6.7868137, 51.92159], [6.793668, 51.930542], [6.7994027, 51.934456], [6.805417, 51.934597], [6.804298, 51.945786], [6.808774, 51.961033], [6.826258, 51.962433], [6.8384275, 51.96565], [6.83535, 51.995583], [6.8173065, 51.99502], [6.8170266, 51.9988], [6.778561, 52.02006], [6.772547, 52.01992], [6.772267, 52.023697], [6.7593985, 52.03069], [6.7221923, 52.0409], [6.698134, 52.040062], [6.6961756, 52.058666], [6.701491, 52.066357], [6.7006516, 52.073772], [6.7427535, 52.07517], [6.7596784, 52.086918], [6.7593985, 52.090557], [6.7529645, 52.094193], [6.752545, 52.09783], [6.764574, 52.09825], [6.7638745, 52.105663], [6.7694697, 52.10958], [6.7684903, 52.12077], [6.828916, 52.11895], [6.8529744, 52.11979], [6.858569, 52.123707], [6.876333, 52.128044], [6.8759136, 52.13168], [6.881928, 52.131958], [6.887523, 52.15], [6.8865438, 52.156857], [6.9083643, 52.170284], [6.9143786, 52.170425], [6.916337, 52.17798], [6.937738, 52.178818], [6.9433327, 52.18273], [6.955362, 52.18315], [6.96893, 52.190426], [6.974105, 52.201756], [6.9826374, 52.214066], [6.982218, 52.217842], [6.9883723, 52.225395], [6.999422, 52.22959], [7.0232005, 52.23057], [7.02362, 52.226795], [7.029635, 52.226933], [7.0412445, 52.23113], [7.064883, 52.235744], [7.071038, 52.24344], [7.1065655, 52.24442], [7.1123004, 52.248333], [7.111741, 52.25575], [7.1232104, 52.26358], [7.1292253, 52.26372], [7.159158, 52.268196], [7.2018194, 52.2654], [7.2198634, 52.265957], [7.298612, 52.26414], [7.3214116, 52.279804], [7.3331614, 52.283722], [7.3513446, 52.284283], [7.362954, 52.288338], [7.368409, 52.29589], [7.3912086, 52.311558], [7.3914886, 52.30778], [7.4035177, 52.30806], [7.403238, 52.311836], [7.415267, 52.312115], [7.4270167, 52.316174], [7.4324718, 52.323868], [7.4435215, 52.335335], [7.46716, 52.34345], [7.485064, 52.347645], [7.4847846, 52.35128], [7.490799, 52.35142], [7.5084233, 52.359394], [7.514298, 52.36317], [7.5203123, 52.36345], [7.5320616, 52.371143], [7.544231, 52.37142], [7.5443707, 52.367786], [7.5502453, 52.371563], [7.5565395, 52.368065], [7.574164, 52.379677], [7.5744433, 52.3759], [7.5803185, 52.379814], [7.5801783, 52.383453], [7.5856333, 52.39464], [7.5852137, 52.405693], [7.609412, 52.413666], [7.6091323, 52.420937], [7.602838, 52.424435], [7.57808, 52.43115], [7.583955, 52.44234], [7.583815, 52.445976], [7.5896897, 52.45339], [7.6133285, 52.476048], [7.613468, 52.472412], [7.637946, 52.469334], [7.6625643, 52.459126], [7.674873, 52.45577], [7.6930566, 52.456326], [7.6931963, 52.45269], [7.6996307, 52.44178], [7.705925, 52.434647], [7.712779, 52.416462], [7.7193527, 52.402054], [7.7253675, 52.402195], [7.750125, 52.391846], [7.7867723, 52.381912], [7.81139, 52.371704], [7.8174043, 52.37184], [7.841603, 52.369045], [7.8652415, 52.37716], [7.871256, 52.377438], [7.8891597, 52.381775], [7.8951745, 52.381912], [7.913498, 52.3752], [7.919792, 52.368065], [7.931961, 52.36485], [7.9378357, 52.368767], [7.937976, 52.36499], [7.94427, 52.357857], [7.94441, 52.354218], [7.9505644, 52.350723], [7.950984, 52.34345], [7.9449697, 52.34317], [7.945249, 52.335754], [7.951264, 52.336037], [7.976301, 52.314915], [7.98847, 52.311695], [7.9886103, 52.30792], [7.9586773, 52.3068], [7.946508, 52.310017], [7.928744, 52.305542], [7.929583, 52.290714], [7.9547606, 52.27659], [7.9432907, 52.268616], [7.931262, 52.268196], [7.925527, 52.26414], [7.9260864, 52.256725], [7.920072, 52.256447], [7.9203515, 52.25267], [7.9266458, 52.249172], [7.928324, 52.226513], [7.92259, 52.2226], [7.916575, 52.222317], [7.9112597, 52.214626], [7.9049654, 52.21826], [7.8995104, 52.210567], [7.9000697, 52.203014], [7.9060845, 52.203156], [7.906924, 52.191826], [7.9136376, 52.18441], [7.9258065, 52.180916], [7.9321012, 52.177418], [7.956159, 52.17798], [7.962454, 52.17434], [7.968468, 52.17462], [7.9747624, 52.170982], [7.9807773, 52.171124], [7.9804974, 52.1749], [8.01099, 52.17616], [8.017843, 52.172802], [8.018263, 52.16525], [8.0248375, 52.16581], [8.025117, 52.162033], [8.005815, 52.160633], [7.99994, 52.156578], [8.0005, 52.149025], [8.0091715, 52.115173], [7.967629, 52.114475], [7.9449697, 52.09895], [7.9329405, 52.09867], [7.9151764, 52.094475], [7.903567, 52.090416], [7.8858027, 52.08622], [7.8860826, 52.082443], [7.892097, 52.082584], [7.9118195, 52.060764], [7.9242682, 52.057407], [7.918813, 52.049713], [7.9371367, 52.046497], [7.9740634, 52.036427], [7.9860926, 52.036705], [7.9971423, 52.051952], [8.008892, 52.05615], [8.015046, 52.056427], [8.032531, 52.068317], [8.038685, 52.068596], [8.038964, 52.06496], [8.057848, 52.065937], [8.057568, 52.069576], [8.064002, 52.069996], [8.070576, 52.06664], [8.0970125, 52.068596], [8.103867, 52.061462], [8.131561, 52.07307], [8.137296, 52.07307], [8.160235, 52.07713], [8.178279, 52.07363], [8.196043, 52.07391], [8.195764, 52.077686], [8.201078, 52.085102], [8.200799, 52.08888], [8.212269, 52.09643], [8.211988, 52.10021], [8.223738, 52.104126], [8.223458, 52.10776], [8.229193, 52.11168], [8.235208, 52.11168], [8.234928, 52.115456], [8.246398, 52.12301], [8.264581, 52.12343], [8.264301, 52.127064], [8.270037, 52.13084], [8.282065, 52.13112], [8.28794, 52.134895], [8.28808, 52.13126], [8.300669, 52.123985], [8.312978, 52.12049], [8.318992, 52.12049], [8.318852, 52.124268], [8.324587, 52.128044], [8.373822, 52.114056], [8.374103, 52.11028], [8.404176, 52.11084], [8.41005, 52.114616], [8.409631, 52.12203], [8.403337, 52.125664], [8.403056, 52.12944], [8.414666, 52.136993], [8.414526, 52.14077], [8.43229, 52.14483], [8.449774, 52.156296], [8.473972, 52.156715], [8.479847, 52.160492], [8.485862, 52.160633], [8.485722, 52.16427], [8.508941, 52.179657], [8.5088005, 52.183292], [8.514815, 52.183434], [8.52069, 52.18721], [8.496212, 52.190567], [8.489918, 52.194202], [8.471734, 52.193924], [8.4529915, 52.204693], [8.452572, 52.212246], [8.446417, 52.21211], [8.446278, 52.215744], [8.452152, 52.21966], [8.451592, 52.227074], [8.457467, 52.23085], [8.457327, 52.234627], [8.462922, 52.24218], [8.462643, 52.245956], [8.468797, 52.245956], [8.468377, 52.25351], [8.462083, 52.257008], [8.461803, 52.260784], [8.467399, 52.268337], [8.466979, 52.27575], [8.460545, 52.28316], [8.459426, 52.301765], [8.465301, 52.305542], [8.470756, 52.31687], [8.464741, 52.316734], [8.451733, 52.33142], [8.451313, 52.338833], [8.44418, 52.357296], [8.44376, 52.36485], [8.437605, 52.364708], [8.431311, 52.368347], [8.400259, 52.378838], [8.400119, 52.382614], [8.393825, 52.38625], [8.3876705, 52.38611], [8.381376, 52.389748], [8.375361, 52.389606], [8.356898, 52.392963], [8.344309, 52.400238], [8.3257065, 52.403595], [8.313397, 52.40709], [8.313117, 52.41073], [8.319272, 52.410866], [8.318852, 52.41828], [8.324867, 52.41842], [8.324307, 52.42947], [8.311719, 52.436745], [8.305564, 52.436604], [8.305144, 52.44402], [8.298291, 52.458706], [8.304166, 52.462482], [8.316614, 52.45535], [8.347107, 52.456047], [8.353401, 52.45241], [8.353541, 52.448635], [8.359836, 52.445137], [8.384173, 52.445557], [8.390048, 52.449333], [8.396063, 52.449474], [8.4019375, 52.45339], [8.408232, 52.449753], [8.420401, 52.449894], [8.42026, 52.45367], [8.426275, 52.453808], [8.426555, 52.45003], [8.43271, 52.450172], [8.450334, 52.461643], [8.456348, 52.46178], [8.456208, 52.465557], [8.461524, 52.47675], [8.460685, 52.491714], [8.472434, 52.499268], [8.484742, 52.499546], [8.508242, 52.514935], [8.514536, 52.511295], [8.526984, 52.5078], [8.557756, 52.500946], [8.587689, 52.512695], [8.611888, 52.51689], [8.65371, 52.53256], [8.666299, 52.525284]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Rheinland-Pfalz',
      type: 'Land',
      area: '19,854.21 km²',
      bundesratVotes: '4 (out of 69)',
      density: '202/km²',
      timeZone: 'UTC+1 (CET)',
      population: 4084844,
      capital: 'Mainz',
      government: 'Landtag of Rhineland-Palatinate',
      head: 'Malu Dreyer (SPD)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[7.7996407, 50.94303], [7.8118095, 50.939674], [7.817684, 50.939953], [7.8242583, 50.932682], [7.8305526, 50.929184], [7.8483167, 50.929882], [7.854471, 50.926388], [7.8435607, 50.914917], [7.8438406, 50.91114], [7.838246, 50.907223], [7.839225, 50.896175], [7.83335, 50.895893], [7.834609, 50.881207], [7.8526525, 50.878128], [7.8704166, 50.87869], [7.88846, 50.87561], [7.8946147, 50.872116], [7.895314, 50.8647], [7.9014688, 50.861206], [7.908043, 50.854073], [7.914337, 50.850574], [7.9146166, 50.846798], [7.9204917, 50.847076], [7.926786, 50.843582], [7.9323807, 50.847496], [7.9677687, 50.848755], [7.973923, 50.84526], [7.974343, 50.84162], [7.9810567, 50.83071], [7.9834347, 50.804836], [7.97756, 50.804558], [7.9719653, 50.80064], [7.9726644, 50.79323], [7.978819, 50.78973], [7.9792385, 50.785954], [7.973224, 50.785812], [7.974343, 50.774624], [7.993086, 50.764133], [7.993366, 50.760494], [7.9992404, 50.760635], [8.005535, 50.757137], [8.01141, 50.75742], [8.011829, 50.753643], [8.018403, 50.74651], [8.024278, 50.746647], [8.030572, 50.743153], [8.030992, 50.739513], [8.049735, 50.728886], [8.052813, 50.699093], [8.070856, 50.696014], [8.086942, 50.707905], [8.092816, 50.708183], [8.093096, 50.704407], [8.110021, 50.705246], [8.121071, 50.702168], [8.127365, 50.687763], [8.133939, 50.687763], [8.128484, 50.68021], [8.118692, 50.67573], [8.120511, 50.660767], [8.127085, 50.653492], [8.13324, 50.653633], [8.134639, 50.64594], [8.156178, 50.63419], [8.158836, 50.619083], [8.1466675, 50.615448], [8.140793, 50.61167], [8.147926, 50.607754], [8.154361, 50.607754], [8.161075, 50.603977], [8.167089, 50.603977], [8.167648, 50.6002], [8.173523, 50.6002], [8.174502, 50.59279], [8.169188, 50.58887], [8.170027, 50.58146], [8.160376, 50.56621], [8.15506, 50.562435], [8.155899, 50.554882], [8.145409, 50.547188], [8.139394, 50.547188], [8.140094, 50.54341], [8.133659, 50.54341], [8.134219, 50.539635], [8.140933, 50.53586], [8.115196, 50.535717], [8.108202, 50.539494], [8.089319, 50.539215], [8.08834, 50.546627], [8.062603, 50.5574], [8.063023, 50.553623], [8.050854, 50.55334], [8.045119, 50.549427], [8.045539, 50.54565], [8.034209, 50.537956], [8.034489, 50.53418], [8.028474, 50.53404], [8.028754, 50.530262], [8.016725, 50.529984], [8.01099, 50.526066], [8.011689, 50.518654], [8.00036, 50.51096], [8.000919, 50.503548], [8.007353, 50.499912], [8.001618, 50.495995], [7.9956036, 50.495853], [7.996583, 50.484806], [8.002598, 50.484943], [8.003576, 50.473755], [8.009591, 50.473896], [8.009871, 50.47012], [8.016584, 50.462845], [8.029034, 50.459347], [8.030013, 50.44816], [8.017843, 50.447876], [8.018124, 50.44424], [8.006094, 50.443962], [8.006374, 50.440186], [7.994205, 50.439903], [7.994485, 50.436268], [8.006654, 50.436546], [8.007214, 50.428993], [8.002038, 50.417664], [7.996303, 50.413887], [7.984134, 50.41361], [7.9844136, 50.409832], [7.9904284, 50.409973], [7.9907084, 50.406334], [7.9968624, 50.406475], [8.002598, 50.41025], [8.0091715, 50.402977], [8.009451, 50.3992], [8.039664, 50.39976], [8.040643, 50.384796], [8.052813, 50.381157], [8.058826, 50.381298], [8.058547, 50.385075], [8.064562, 50.385075], [8.064981, 50.377663], [8.070995, 50.374023], [8.082746, 50.374165], [8.083025, 50.366753], [8.0889, 50.366753], [8.089319, 50.35556], [8.095334, 50.351925], [8.095893, 50.336956], [8.090158, 50.333042], [8.096033, 50.329403], [8.107782, 50.329685], [8.125406, 50.326187], [8.125687, 50.318775], [8.120232, 50.307446], [8.126106, 50.307446], [8.131981, 50.303806], [8.138135, 50.296535], [8.138974, 50.274014], [8.127365, 50.2701], [8.127785, 50.258907], [8.122049, 50.25877], [8.116035, 50.262405], [8.110161, 50.262264], [8.098691, 50.25835], [8.098411, 50.265762], [8.092536, 50.26954], [8.086661, 50.269398], [8.080647, 50.273037], [8.063163, 50.272755], [8.051693, 50.26884], [8.051973, 50.261288], [8.046098, 50.261288], [8.040363, 50.25751], [8.0405035, 50.253735], [8.052253, 50.253872], [8.058268, 50.24646], [8.064281, 50.242825], [8.064422, 50.239048], [8.076171, 50.23555], [8.076311, 50.231773], [8.064841, 50.227856], [8.053512, 50.22016], [8.053652, 50.216385], [8.047916, 50.21247], [8.041902, 50.216248], [8.0302925, 50.216106], [8.018403, 50.22338], [8.018124, 50.230934], [8.006374, 50.230793], [8.000779, 50.227016], [7.97756, 50.219322], [7.9659505, 50.219185], [7.9662304, 50.21163], [7.9604955, 50.207855], [7.9544806, 50.21149], [7.9369965, 50.207573], [7.925387, 50.203796], [7.9258065, 50.196384], [7.914337, 50.18869], [7.8971324, 50.181], [7.903287, 50.173725], [7.897552, 50.16995], [7.9037066, 50.162537], [7.915596, 50.158897], [7.9216104, 50.15512], [7.927485, 50.15512], [7.927625, 50.151344], [7.9335, 50.151344], [7.9335, 50.14771], [7.9396544, 50.140156], [7.9341993, 50.132603], [7.9350386, 50.11008], [7.941053, 50.102528], [7.935458, 50.09875], [7.9351783, 50.106304], [7.9291635, 50.109943], [7.9230094, 50.117496], [7.9169946, 50.121273], [7.91112, 50.121273], [7.8997903, 50.11372], [7.887761, 50.12113], [7.8761516, 50.12113], [7.8758717, 50.128548], [7.869997, 50.128548], [7.8583875, 50.12477], [7.858807, 50.11358], [7.8529325, 50.113438], [7.853492, 50.10225], [7.847897, 50.094696], [7.8483167, 50.083366], [7.824958, 50.083366], [7.8130684, 50.087], [7.813208, 50.083225], [7.7961435, 50.071896], [7.7962837, 50.06812], [7.784534, 50.06812], [7.785094, 50.053154], [7.796983, 50.049377], [7.808872, 50.041965], [7.820761, 50.03819], [7.8269157, 50.030636], [7.8448195, 50.019444], [7.856709, 50.015667], [7.868738, 50.008255], [7.8694377, 49.989372], [7.8755918, 49.981956], [7.875732, 49.97818], [7.887761, 49.970627], [7.9578376, 49.97091], [7.9693074, 49.974823], [7.9867916, 49.974964], [7.9982615, 49.97888], [8.015466, 49.986713], [8.02134, 49.986855], [8.0500145, 49.99874], [8.05575, 49.998882], [8.067219, 50.002937], [8.101908, 50.003918], [8.107643, 50.007835], [8.124707, 50.01581], [8.142052, 50.020004], [8.147647, 50.02378], [8.164991, 50.02434], [8.170726, 50.028255], [8.17646, 50.028397], [8.18793, 50.03245], [8.205275, 50.033012], [8.217024, 50.029655], [8.234368, 50.030075], [8.246118, 50.02672], [8.257728, 50.027138], [8.275352, 50.016506], [8.281366, 50.00923], [8.29927, 49.994965], [8.334798, 49.973705], [8.346827, 49.959297], [8.352982, 49.948387], [8.353261, 49.93734], [8.359276, 49.930065], [8.36543, 49.919155], [8.3658495, 49.908104], [8.349205, 49.885445], [8.349345, 49.881668], [8.355359, 49.874535], [8.355499, 49.870758], [8.361514, 49.863625], [8.367249, 49.863766], [8.384733, 49.860546], [8.390608, 49.85705], [8.390747, 49.853413], [8.396762, 49.84992], [8.396762, 49.84614], [8.391167, 49.842365], [8.385712, 49.831036], [8.386131, 49.819984], [8.392006, 49.816486], [8.40991, 49.80236], [8.416064, 49.79145], [8.422079, 49.784176], [8.4223585, 49.773125], [8.428373, 49.76599], [8.486141, 49.76781], [8.486422, 49.75676], [8.463761, 49.74501], [8.452572, 49.733543], [8.452711, 49.729904], [8.447256, 49.72235], [8.430052, 49.718155], [8.424457, 49.71424], [8.401518, 49.709904], [8.384453, 49.705708], [8.378718, 49.70179], [8.367389, 49.697735], [8.361934, 49.69018], [8.362493, 49.675495], [8.368787, 49.660946], [8.374661, 49.65745], [8.381096, 49.639267], [8.393405, 49.617588], [8.41089, 49.610733], [8.4169035, 49.6036], [8.417184, 49.596325], [8.429072, 49.585556], [8.429492, 49.574646], [8.423758, 49.574364], [8.418303, 49.56681], [8.418862, 49.552124], [8.425016, 49.541355], [8.44362, 49.501633], [8.443899, 49.494217], [8.455648, 49.487366], [8.467538, 49.4731], [8.450893, 49.461487], [8.445158, 49.46121], [8.445578, 49.4503], [8.451452, 49.4468], [8.496912, 49.448338], [8.508521, 49.441486], [8.5088005, 49.43421], [8.498171, 49.41547], [8.49859, 49.40442], [8.492855, 49.404278], [8.464881, 49.39225], [8.46558, 49.377563], [8.47691, 49.377983], [8.48782, 49.389313], [8.49901, 49.393368], [8.504885, 49.386375], [8.499569, 49.378822], [8.499849, 49.37141], [8.494534, 49.360218], [8.472573, 49.344692], [8.461384, 49.340637], [8.450474, 49.3328], [8.450893, 49.32189], [8.456768, 49.318398], [8.473832, 49.31532], [8.485442, 49.308464], [8.491317, 49.30133], [8.486002, 49.293777], [8.480546, 49.289864], [8.469357, 49.289444], [8.458306, 49.285248], [8.452711, 49.28133], [8.447676, 49.27014], [8.436766, 49.262306], [8.403616, 49.24986], [8.392845, 49.242023], [8.3876705, 49.23447], [8.393684, 49.227337], [8.404875, 49.227757], [8.405294, 49.220345], [8.394943, 49.205097], [8.384033, 49.2009], [8.384733, 49.189854], [8.379278, 49.185936], [8.369067, 49.17069], [8.369487, 49.163277], [8.375361, 49.15978], [8.375502, 49.156002], [8.370465, 49.14845], [8.3713045, 49.133484], [8.362073, 49.10341], [8.362213, 49.099632], [8.340813, 49.08397], [8.319831, 49.06089], [8.314516, 49.056973], [8.304585, 49.034313], [8.3052845, 49.02312], [8.295354, 49.0041], [8.268497, 48.984657], [8.241363, 48.968853], [8.229893, 48.968433], [8.2215, 48.975285], [8.202897, 48.96941], [8.1977215, 48.97025], [8.193525, 48.976406], [8.162474, 48.977383], [8.13282, 48.98102], [8.124847, 48.984936], [8.091417, 48.989273], [8.068198, 48.999344], [8.051134, 49.01277], [8.020641, 49.019344], [7.997282, 49.02802], [7.976301, 49.028297], [7.965391, 49.040466], [7.9369965, 49.056274], [7.915316, 49.041866], [7.890139, 49.047882], [7.8849635, 49.04676], [7.8673396, 49.033474], [7.85545, 49.03543], [7.8473372, 49.043686], [7.8329306, 49.04774], [7.79992, 49.064106], [7.794745, 49.064247], [7.78873, 49.05865], [7.7783794, 49.05767], [7.7664905, 49.046623], [7.741313, 49.0469], [7.732221, 49.044384], [7.7305427, 49.054455], [7.7206116, 49.052776], [7.695854, 49.056274], [7.697113, 49.049698], [7.6710963, 49.04592], [7.6352887, 49.054176], [7.6274557, 49.073338], [7.5997605, 49.08299], [7.568429, 49.07991], [7.5589175, 49.082428], [7.5312223, 49.097115], [7.5238094, 49.10579], [7.5177946, 49.118797], [7.504926, 49.12411], [7.4984922, 49.13362], [7.48954, 49.13656], [7.5035276, 49.150547], [7.5033875, 49.154045], [7.4951353, 49.158382], [7.4913583, 49.168453], [7.4758325, 49.16873], [7.4568095, 49.164116], [7.4492564, 49.16901], [7.437367, 49.164536], [7.4456196, 49.18398], [7.3815575, 49.175304], [7.3660316, 49.17111], [7.3538623, 49.17055], [7.3416934, 49.184956], [7.341134, 49.19223], [7.3237896, 49.198944], [7.3117604, 49.209576], [7.3002906, 49.21279], [7.2997313, 49.220203], [7.304627, 49.231396], [7.2928777, 49.238388], [7.2983327, 49.242306], [7.292458, 49.245663], [7.3032284, 49.253494], [7.308823, 49.253635], [7.3081236, 49.264687], [7.3194537, 49.265106], [7.3258877, 49.254333], [7.3313427, 49.25811], [7.330923, 49.265526], [7.3419733, 49.26958], [7.3470087, 49.28077], [7.340854, 49.287903], [7.3636537, 49.288464], [7.369668, 49.284966], [7.380858, 49.288883], [7.3916283, 49.300213], [7.385614, 49.30371], [7.3849144, 49.31476], [7.4016995, 49.322453], [7.4014196, 49.32623], [7.38995, 49.32595], [7.384495, 49.322174], [7.384075, 49.329445], [7.38953, 49.333363], [7.401, 49.333504], [7.4003005, 49.34455], [7.4116306, 49.34847], [7.4050565, 49.35938], [7.410651, 49.363155], [7.398622, 49.37043], [7.4039373, 49.377842], [7.381138, 49.373646], [7.3748436, 49.38092], [7.3576393, 49.3805], [7.362954, 49.388054], [7.328545, 49.387074], [7.3226705, 49.39057], [7.2935767, 49.397144], [7.2932973, 49.400784], [7.3039274, 49.41225], [7.297913, 49.41575], [7.2974935, 49.423023], [7.2917585, 49.422882], [7.2737145, 49.433514], [7.262385, 49.433094], [7.2558107, 49.444004], [7.261266, 49.44778], [7.2552514, 49.451275], [7.2607064, 49.455193], [7.288821, 49.463585], [7.305466, 49.47142], [7.3106413, 49.478973], [7.304627, 49.482468], [7.3040676, 49.489883], [7.286583, 49.4931], [7.2861633, 49.50051], [7.291619, 49.504288], [7.291059, 49.511703], [7.285324, 49.511562], [7.295675, 49.52667], [7.30113, 49.530586], [7.3071446, 49.526947], [7.3128796, 49.52723], [7.3063054, 49.53814], [7.2885413, 49.54499], [7.2828064, 49.544853], [7.281128, 49.567093], [7.2748337, 49.574226], [7.2688193, 49.577724], [7.2685394, 49.5815], [7.2739944, 49.585415], [7.273435, 49.59283], [7.2677, 49.59255], [7.26798, 49.588913], [7.25693, 49.58108], [7.24546, 49.5808], [7.24574, 49.577023], [7.240285, 49.573105], [7.2172055, 49.572407], [7.2163663, 49.583458], [7.1932874, 49.58276], [7.186993, 49.589893], [7.1809783, 49.593388], [7.1797194, 49.608215], [7.162515, 49.607517], [7.1563606, 49.61101], [7.1506257, 49.610874], [7.1509056, 49.607098], [7.1454506, 49.60318], [7.1166363, 49.602062], [7.110622, 49.605556], [7.110342, 49.609333], [7.1041875, 49.61269], [7.0932775, 49.60486], [7.087263, 49.608356], [7.0862837, 49.619404], [7.0743947, 49.62276], [7.073835, 49.630035], [7.061666, 49.637028], [7.055931, 49.63675], [7.0380273, 49.643322], [7.0318727, 49.64682], [7.0266976, 49.639126], [7.0155077, 49.63507], [7.009493, 49.638428], [7.0036182, 49.63815], [6.998583, 49.630596], [6.993128, 49.62668], [6.9924283, 49.633953], [6.9978833, 49.63801], [6.997604, 49.641644], [6.992149, 49.63773], [6.9805393, 49.63717], [6.9802594, 49.640945], [6.9636145, 49.632694], [6.9581594, 49.628777], [6.952005, 49.632275], [6.9513054, 49.639687], [6.939836, 49.639126], [6.934381, 49.635212], [6.940535, 49.631714], [6.9415145, 49.620663], [6.929625, 49.623882], [6.9125605, 49.619404], [6.889481, 49.618427], [6.878571, 49.61059], [6.8725567, 49.61395], [6.866682, 49.61367], [6.8504567, 49.60192], [6.845421, 49.594227], [6.839966, 49.590313], [6.828077, 49.59353], [6.822622, 49.58961], [6.8222017, 49.59325], [6.8160477, 49.596745], [6.8048577, 49.59255], [6.777862, 49.572685], [6.7662525, 49.572266], [6.761217, 49.564575], [6.750027, 49.56038], [6.7442923, 49.560097], [6.7381377, 49.563454], [6.732403, 49.563175], [6.726948, 49.559258], [6.7096033, 49.55842], [6.710023, 49.554783], [6.704568, 49.550865], [6.6995325, 49.543175], [6.6940775, 49.539257], [6.6883426, 49.53898], [6.687224, 49.550026], [6.6756144, 49.54947], [6.6644244, 49.545273], [6.65855, 49.54499], [6.6578503, 49.552265], [6.6519756, 49.552124], [6.652815, 49.544712], [6.64736, 49.540657], [6.641625, 49.540375], [6.6412053, 49.54415], [6.6353307, 49.543873], [6.618406, 49.539257], [6.6191053, 49.531845], [6.607496, 49.531284], [6.6079154, 49.52765], [6.6140695, 49.52415], [6.6087546, 49.520233], [6.5912704, 49.519394], [6.5788217, 49.526108], [6.578402, 49.529884], [6.571828, 49.53688], [6.5714083, 49.540657], [6.5656734, 49.540375], [6.5652537, 49.544014], [6.5543437, 49.53604], [6.5423145, 49.539116], [6.5365796, 49.538837], [6.5253897, 49.5345], [6.5258093, 49.530724], [6.5141997, 49.530025], [6.5133605, 49.537437], [6.5076256, 49.53716], [6.4967155, 49.529045], [6.490561, 49.532402], [6.484826, 49.532124], [6.4844065, 49.53576], [6.478112, 49.539116], [6.4778323, 49.542892], [6.4719577, 49.542473], [6.465803, 49.54583], [6.4600687, 49.54555], [6.4492984, 49.537437], [6.448879, 49.541077], [6.42496, 49.54709], [6.4190855, 49.54681], [6.41377, 49.542614], [6.4133506, 49.54639], [6.3901315, 49.54499], [6.383977, 49.548347], [6.3781023, 49.54807], [6.3795013, 49.5587], [6.3712487, 49.564434], [6.3636956, 49.574085], [6.3692904, 49.577305], [6.36971, 49.573666], [6.3813195, 49.574226], [6.381739, 49.583458], [6.3767037, 49.59213], [6.3792214, 49.596607], [6.390551, 49.597164], [6.396006, 49.601223], [6.406357, 49.61311], [6.4120917, 49.61339], [6.417407, 49.617447], [6.4224424, 49.62528], [6.421603, 49.632694], [6.4369893, 49.652275], [6.43629, 49.659687], [6.4248204, 49.65899], [6.424121, 49.666264], [6.429436, 49.67032], [6.449578, 49.67969], [6.461607, 49.694798], [6.473077, 49.695496], [6.489582, 49.70361], [6.5031495, 49.71578], [6.497135, 49.72557], [6.500632, 49.728928], [6.4979744, 49.73424], [6.5079055, 49.734802], [6.502031, 49.74851], [6.5044084, 49.753963], [6.5151787, 49.759], [6.5188155, 49.763615], [6.51392, 49.77984], [6.5176964, 49.785156], [6.506926, 49.79005], [6.5178366, 49.796486], [6.5281873, 49.808514], [6.5244107, 49.81313], [6.5175567, 49.805717], [6.508325, 49.802082], [6.4958763, 49.81243], [6.4845467, 49.811733], [6.472098, 49.822083], [6.4607677, 49.821384], [6.4499974, 49.81327], [6.4320936, 49.815228], [6.405238, 49.819984], [6.397405, 49.82362], [6.375725, 49.849216], [6.362996, 49.853973], [6.3424344, 49.851177], [6.335441, 49.841805], [6.329846, 49.840126], [6.330126, 49.83635], [6.312222, 49.83551], [6.3115225, 49.842922], [6.3171177, 49.84698], [6.316698, 49.850616], [6.3104033, 49.854115], [6.3099837, 49.85775], [6.3039694, 49.85747], [6.3036895, 49.861107], [6.309564, 49.861526], [6.3092847, 49.86516], [6.3028502, 49.86866], [6.296836, 49.86824], [6.286345, 49.864044], [6.285366, 49.871456], [6.2797713, 49.874813], [6.269001, 49.874535], [6.2627068, 49.878033], [6.256692, 49.87789], [6.2562723, 49.881668], [6.250258, 49.881527], [6.2498384, 49.885166], [6.243404, 49.8888], [6.243124, 49.892437], [6.23697, 49.892437], [6.238788, 49.899014], [6.2308154, 49.909504], [6.234312, 49.917336], [6.2317944, 49.921112], [6.224381, 49.923073], [6.22578, 49.940556], [6.219206, 49.951607], [6.2130513, 49.954544], [6.1983647, 49.95608], [6.1951475, 49.967133], [6.1905317, 49.971188], [6.1836777, 49.96895], [6.179062, 49.960278], [6.1685715, 49.965034], [6.1688514, 49.961395], [6.1751456, 49.961536], [6.175705, 49.954124], [6.163256, 49.953983], [6.1625566, 49.961395], [6.1564026, 49.961258], [6.154584, 49.983356], [6.141436, 49.99049], [6.141156, 49.994267], [6.1287074, 49.993988], [6.1284275, 49.997765], [6.134582, 49.997765], [6.134302, 50.0014], [6.140317, 50.005177], [6.140037, 50.008953], [6.133743, 50.008812], [6.126889, 50.016087], [6.1266093, 50.019726], [6.1329036, 50.019863], [6.1326237, 50.023502], [6.1263294, 50.023502], [6.119476, 50.030773], [6.1183567, 50.04546], [6.1117826, 50.0491], [6.1109433, 50.06001], [6.098355, 50.059868], [6.097935, 50.064625], [6.1106634, 50.063786], [6.110244, 50.06742], [6.1162586, 50.071198], [6.1156993, 50.078472], [6.1096845, 50.074833], [6.10339, 50.074696], [6.1031103, 50.07833], [6.1094046, 50.078472], [6.108286, 50.09316], [6.1141605, 50.096935], [6.1138806, 50.10057], [6.1263294, 50.10071], [6.12605, 50.10449], [6.1198955, 50.104347], [6.1183567, 50.12281], [6.124651, 50.12281], [6.1305256, 50.126587], [6.1299663, 50.134003], [6.1422753, 50.13414], [6.1419954, 50.137497], [6.1498284, 50.13736], [6.1534653, 50.149666], [6.1352816, 50.1547], [6.1464715, 50.173866], [6.1573815, 50.171207], [6.156822, 50.17736], [6.1695504, 50.17904], [6.1896925, 50.18953], [6.1703897, 50.236248], [6.1919303, 50.243523], [6.2028403, 50.254852], [6.228857, 50.259747], [6.2396274, 50.260166], [6.2547336, 50.264503], [6.275575, 50.265484], [6.2750154, 50.27136], [6.2807503, 50.280308], [6.2792115, 50.291637], [6.285366, 50.29192], [6.2849464, 50.295555], [6.291101, 50.295834], [6.289982, 50.306885], [6.3021507, 50.307446], [6.301172, 50.318493], [6.319495, 50.319332], [6.3413157, 50.32283], [6.3565617, 50.3129], [6.381879, 50.320034], [6.39167, 50.318073], [6.40328, 50.32199], [6.4211836, 50.32227], [6.4206243, 50.329685], [6.4146094, 50.329544], [6.4014616, 50.343952], [6.401042, 50.347588], [6.394468, 50.354862], [6.3934884, 50.365913], [6.387194, 50.36955], [6.386495, 50.37696], [6.39167, 50.384377], [6.415589, 50.384933], [6.4158683, 50.381298], [6.4221625, 50.3778], [6.416568, 50.373886], [6.4172673, 50.36647], [6.4232817, 50.36661], [6.4235616, 50.362976], [6.429576, 50.363113], [6.435171, 50.36689], [6.44706, 50.367172], [6.4477596, 50.359756], [6.459649, 50.36004], [6.4600687, 50.356262], [6.4547534, 50.348846], [6.455453, 50.341434], [6.4613276, 50.34157], [6.461747, 50.337795], [6.467622, 50.337936], [6.473916, 50.33444], [6.485945, 50.33472], [6.4855256, 50.338356], [6.4912605, 50.342133], [6.5087447, 50.34619], [6.5024505, 50.349827], [6.508045, 50.353603], [6.5200744, 50.35388], [6.5196548, 50.35752], [6.5308447, 50.36521], [6.543154, 50.361717], [6.5610576, 50.362137], [6.5667925, 50.365913], [6.578262, 50.369827], [6.5895915, 50.37752], [6.601481, 50.3778], [6.607076, 50.381577], [6.608195, 50.370388], [6.620224, 50.370667], [6.6265182, 50.36703], [6.632533, 50.36703], [6.6329527, 50.363396], [6.6276374, 50.355843], [6.628337, 50.34829], [6.635051, 50.341015], [6.6414847, 50.337376], [6.64708, 50.341152], [6.6530943, 50.341293], [6.6644244, 50.348846], [6.6633053, 50.36004], [6.674915, 50.363953], [6.681349, 50.360317], [6.688063, 50.352905], [6.6943574, 50.349266], [6.694777, 50.34549], [6.701211, 50.341854], [6.706806, 50.329823], [6.7143593, 50.330803], [6.7139397, 50.33444], [6.725689, 50.338356], [6.7317038, 50.338356], [6.7433133, 50.342133], [6.755482, 50.342274], [6.7907305, 50.353462], [6.79115, 50.349827], [6.8091936, 50.349827], [6.8138094, 50.35794], [6.8082147, 50.35766], [6.795486, 50.364933], [6.7949266, 50.36885], [6.781079, 50.383957], [6.780659, 50.38787], [6.7859745, 50.39193], [6.785555, 50.395706], [6.79129, 50.395985], [6.7883525, 50.415565], [6.777023, 50.41501], [6.775484, 50.426617], [6.769749, 50.42634], [6.770309, 50.42242], [6.758, 50.426056], [6.7515655, 50.429695], [6.751146, 50.43361], [6.7732463, 50.442284], [6.7718472, 50.453754], [6.7661123, 50.453472], [6.7649937, 50.4648], [6.759119, 50.464664], [6.7595387, 50.460888], [6.747789, 50.46047], [6.7529645, 50.46816], [6.764574, 50.46858], [6.775624, 50.476414], [6.7813587, 50.47655], [6.7868137, 50.48047], [6.8040185, 50.484806], [6.810173, 50.481308], [6.8105927, 50.47753], [6.8170266, 50.470257], [6.817446, 50.46648], [6.8297553, 50.459347], [6.83563, 50.459488], [6.847519, 50.45613], [6.8479385, 50.452496], [6.859828, 50.449135], [6.8602476, 50.44536], [6.8659825, 50.4455], [6.8657026, 50.449276], [6.877312, 50.449696], [6.8768926, 50.453472], [6.8823476, 50.45739], [6.888222, 50.45753], [6.8936777, 50.461586], [6.899832, 50.45795], [6.9052873, 50.462006], [6.9045877, 50.469418], [6.910043, 50.473335], [6.9093432, 50.480747], [6.9036083, 50.48061], [6.9029093, 50.48802], [6.9083643, 50.492077], [6.914099, 50.492218], [6.9138193, 50.495995], [6.9079447, 50.495716], [6.8956356, 50.50285], [6.901231, 50.506763], [6.900811, 50.51054], [6.8889217, 50.513897], [6.888222, 50.521313], [6.893957, 50.52145], [6.9052873, 50.525646], [6.9055667, 50.52187], [6.911721, 50.518375], [6.917316, 50.52229], [6.923051, 50.52243], [6.928506, 50.52635], [6.934381, 50.526627], [6.9334016, 50.537815], [6.926548, 50.548866], [6.932003, 50.552784], [6.9378777, 50.55292], [6.9492073, 50.557117], [6.954942, 50.55726], [6.961097, 50.55376], [6.9615164, 50.549984], [6.9790006, 50.550545], [6.9899106, 50.558517], [7.007395, 50.55908], [7.0240397, 50.57097], [7.0346704, 50.582577], [7.0566306, 50.59838], [7.062785, 50.594887], [7.06866, 50.595165], [7.0690794, 50.59139], [7.075234, 50.58789], [7.0755134, 50.584114], [7.093417, 50.581177], [7.099152, 50.581318], [7.1047473, 50.585373], [7.110482, 50.585514], [7.1099224, 50.592926], [7.1153774, 50.596985], [7.114818, 50.604397], [7.1264277, 50.604816], [7.144891, 50.594326], [7.1507654, 50.594604], [7.155941, 50.6023], [7.155661, 50.605934], [7.1612563, 50.609993], [7.167411, 50.606495], [7.1790204, 50.606915], [7.1784606, 50.614326], [7.1839156, 50.618385], [7.1956654, 50.618805], [7.194686, 50.629852], [7.200141, 50.63391], [7.1995816, 50.641323], [7.2109113, 50.64552], [7.216786, 50.64566], [7.219024, 50.61978], [7.2307734, 50.6202], [7.242103, 50.624397], [7.2542725, 50.62118], [7.260427, 50.617683], [7.2776313, 50.62202], [7.2893806, 50.62258], [7.3008504, 50.626778], [7.3119, 50.63461], [7.3177752, 50.634888], [7.329105, 50.639084], [7.335399, 50.63559], [7.341274, 50.635727], [7.352324, 50.6437], [7.3640733, 50.64412], [7.362395, 50.662724], [7.3679895, 50.66664], [7.3738647, 50.66678], [7.373305, 50.674194], [7.3791795, 50.674473], [7.37876, 50.67825], [7.372606, 50.681606], [7.3716264, 50.6928], [7.365472, 50.696293], [7.365052, 50.699932], [7.376242, 50.707905], [7.3758225, 50.71154], [7.3814178, 50.715458], [7.381697, 50.71182], [7.3875723, 50.71196], [7.405616, 50.709023], [7.405196, 50.712658], [7.4170856, 50.71322], [7.4235196, 50.705944], [7.441144, 50.706646], [7.446459, 50.714336], [7.481707, 50.715736], [7.4990516, 50.720074], [7.5046463, 50.723988], [7.504367, 50.727764], [7.5102415, 50.727905], [7.5224104, 50.72469], [7.521991, 50.728325], [7.527586, 50.732243], [7.5390553, 50.73644], [7.5446506, 50.740353], [7.550525, 50.740635], [7.55612, 50.74455], [7.5624146, 50.741055], [7.5682893, 50.741333], [7.5866127, 50.734478], [7.5922074, 50.738537], [7.598082, 50.738674], [7.596823, 50.7535], [7.601719, 50.76483], [7.6193433, 50.76553], [7.624938, 50.769447], [7.6253576, 50.765812], [7.6607456, 50.76707], [7.666341, 50.770985], [7.664942, 50.785812], [7.6709566, 50.786095], [7.677111, 50.782597], [7.677531, 50.77882], [7.6834054, 50.7791], [7.682706, 50.786514], [7.688301, 50.79043], [7.6878815, 50.794067], [7.681447, 50.80134], [7.680328, 50.81239], [7.6744533, 50.81225], [7.6620045, 50.819244], [7.673754, 50.819664], [7.674174, 50.815887], [7.6800485, 50.816166], [7.7029877, 50.824417], [7.7141776, 50.832253], [7.7200522, 50.83239], [7.719493, 50.839806], [7.7362776, 50.851692], [7.7365575, 50.847916], [7.742432, 50.848198], [7.7487264, 50.8447], [7.7543216, 50.848618], [7.765791, 50.852673], [7.765511, 50.85645], [7.759217, 50.859947], [7.7589374, 50.863583], [7.7526426, 50.86708], [7.757958, 50.874634], [7.763553, 50.87869], [7.756699, 50.889458], [7.7564197, 50.893238], [7.7622943, 50.893375], [7.761595, 50.90079], [7.75544, 50.904285], [7.749426, 50.90415], [7.748866, 50.91156], [7.736697, 50.914776], [7.7364173, 50.918552], [7.7541814, 50.919113], [7.7831354, 50.927647], [7.788031, 50.938976], [7.7996407, 50.94303]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Saarland',
      type: 'Land',
      area: '2,570 km²',
      bundesratVotes: '3 (out of 69)',
      density: '390/km²',
      timeZone: 'UTC+1 (CET)',
      population: 990509,
      capital: 'Saarbrücken',
      government: 'Landtag of Saarland',
      head: 'Tobias Hans (CDU)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[7.0380273, 49.643322], [7.055931, 49.63675], [7.061666, 49.637028], [7.073835, 49.630035], [7.0743947, 49.62276], [7.0862837, 49.619404], [7.087263, 49.608356], [7.0932775, 49.60486], [7.1041875, 49.61269], [7.110342, 49.609333], [7.110622, 49.605556], [7.1166363, 49.602062], [7.1454506, 49.60318], [7.1509056, 49.607098], [7.1506257, 49.610874], [7.1563606, 49.61101], [7.162515, 49.607517], [7.1797194, 49.608215], [7.1809783, 49.593388], [7.186993, 49.589893], [7.1932874, 49.58276], [7.2163663, 49.583458], [7.2172055, 49.572407], [7.240285, 49.573105], [7.24574, 49.577023], [7.24546, 49.5808], [7.25693, 49.58108], [7.26798, 49.588913], [7.2677, 49.59255], [7.273435, 49.59283], [7.2739944, 49.585415], [7.2685394, 49.5815], [7.2688193, 49.577724], [7.2748337, 49.574226], [7.281128, 49.567093], [7.2828064, 49.544853], [7.2885413, 49.54499], [7.3063054, 49.53814], [7.3128796, 49.52723], [7.3071446, 49.526947], [7.30113, 49.530586], [7.295675, 49.52667], [7.285324, 49.511562], [7.291059, 49.511703], [7.291619, 49.504288], [7.2861633, 49.50051], [7.286583, 49.4931], [7.3040676, 49.489883], [7.304627, 49.482468], [7.3106413, 49.478973], [7.305466, 49.47142], [7.288821, 49.463585], [7.2607064, 49.455193], [7.2552514, 49.451275], [7.261266, 49.44778], [7.2558107, 49.444004], [7.262385, 49.433094], [7.2737145, 49.433514], [7.2917585, 49.422882], [7.2974935, 49.423023], [7.297913, 49.41575], [7.3039274, 49.41225], [7.2932973, 49.400784], [7.2935767, 49.397144], [7.3226705, 49.39057], [7.328545, 49.387074], [7.362954, 49.388054], [7.3576393, 49.3805], [7.3748436, 49.38092], [7.381138, 49.373646], [7.4039373, 49.377842], [7.398622, 49.37043], [7.410651, 49.363155], [7.4050565, 49.35938], [7.4116306, 49.34847], [7.4003005, 49.34455], [7.401, 49.333504], [7.38953, 49.333363], [7.384075, 49.329445], [7.384495, 49.322174], [7.38995, 49.32595], [7.4014196, 49.32623], [7.4016995, 49.322453], [7.3849144, 49.31476], [7.385614, 49.30371], [7.3916283, 49.300213], [7.380858, 49.288883], [7.369668, 49.284966], [7.3636537, 49.288464], [7.340854, 49.287903], [7.3470087, 49.28077], [7.3419733, 49.26958], [7.330923, 49.265526], [7.3313427, 49.25811], [7.3258877, 49.254333], [7.3194537, 49.265106], [7.3081236, 49.264687], [7.308823, 49.253635], [7.3032284, 49.253494], [7.292458, 49.245663], [7.2983327, 49.242306], [7.2928777, 49.238388], [7.304627, 49.231396], [7.2997313, 49.220203], [7.3002906, 49.21279], [7.3117604, 49.209576], [7.3237896, 49.198944], [7.341134, 49.19223], [7.3416934, 49.184956], [7.3538623, 49.17055], [7.3660316, 49.17111], [7.3628144, 49.145233], [7.3258877, 49.143414], [7.313719, 49.13656], [7.3040676, 49.12411], [7.293437, 49.115158], [7.2836456, 49.11754], [7.2793097, 49.123272], [7.249097, 49.127327], [7.24546, 49.129707], [7.2110515, 49.12495], [7.198323, 49.115158], [7.196085, 49.122013], [7.184895, 49.129566], [7.1640534, 49.126907], [7.1587386, 49.120754], [7.131743, 49.132225], [7.124889, 49.14118], [7.1041875, 49.13866], [7.103628, 49.145374], [7.110902, 49.15027], [7.108244, 49.153347], [7.098173, 49.154324], [7.0832067, 49.15125], [7.082507, 49.141315], [7.09006, 49.132225], [7.072716, 49.12509], [7.067401, 49.115578], [7.058029, 49.11264], [7.046, 49.118237], [7.0458603, 49.138798], [7.034111, 49.154465], [7.0282364, 49.17125], [7.0336914, 49.188313], [7.020263, 49.19279], [7.0131297, 49.188595], [7.0080943, 49.193768], [6.9988627, 49.19433], [6.9766226, 49.208595], [6.9575996, 49.20384], [6.9436126, 49.21377], [6.9348006, 49.222164], [6.9243097, 49.22314], [6.894237, 49.210133], [6.8848653, 49.211113], [6.8584294, 49.221603], [6.8403854, 49.21419], [6.8375883, 49.211254], [6.8511558, 49.20048], [6.850177, 49.19349], [6.860947, 49.17866], [6.858709, 49.175724], [6.844722, 49.172928], [6.845281, 49.1602], [6.847659, 49.157402], [6.834511, 49.151386], [6.7841563, 49.16817], [6.763735, 49.165096], [6.747929, 49.165936], [6.737998, 49.164536], [6.7198143, 49.176563], [6.7128205, 49.18957], [6.7305846, 49.206776], [6.722052, 49.219364], [6.6972947, 49.215588], [6.6929584, 49.21755], [6.6851254, 49.243702], [6.688762, 49.24622], [6.684286, 49.252098], [6.661487, 49.25727], [6.6677814, 49.28049], [6.6532345, 49.28105], [6.650996, 49.287346], [6.631694, 49.296017], [6.6255393, 49.30133], [6.616028, 49.30273], [6.5888925, 49.322033], [6.5933685, 49.32763], [6.5921097, 49.33364], [6.5786815, 49.33504], [6.5653934, 49.349308], [6.564974, 49.356163], [6.5695896, 49.3577], [6.5795207, 49.35644], [6.587214, 49.351685], [6.599383, 49.366653], [6.585955, 49.37127], [6.583997, 49.384697], [6.5754642, 49.388752], [6.564834, 49.388474], [6.5521054, 49.39449], [6.549168, 49.40008], [6.540496, 49.401203], [6.538398, 49.41099], [6.554623, 49.419106], [6.5354605, 49.43421], [6.520494, 49.437847], [6.500492, 49.449738], [6.4849663, 49.452534], [6.468181, 49.464703], [6.453914, 49.463863], [6.4404864, 49.466663], [6.431814, 49.474495], [6.4224424, 49.476036], [6.40314, 49.46596], [6.367612, 49.466522], [6.3688707, 49.45981], [6.3643947, 49.45953], [6.359779, 49.465122], [6.366353, 49.46834], [6.3649545, 49.48191], [6.367472, 49.497017], [6.3649545, 49.506947], [6.3725076, 49.509186], [6.367332, 49.526947], [6.3603387, 49.52555], [6.360898, 49.53506], [6.3715286, 49.544434], [6.3713884, 49.54807], [6.3781023, 49.54807], [6.383977, 49.548347], [6.3901315, 49.54499], [6.4133506, 49.54639], [6.41377, 49.542614], [6.4190855, 49.54681], [6.42496, 49.54709], [6.448879, 49.541077], [6.4492984, 49.537437], [6.4600687, 49.54555], [6.465803, 49.54583], [6.4719577, 49.542473], [6.4778323, 49.542892], [6.478112, 49.539116], [6.4844065, 49.53576], [6.484826, 49.532124], [6.490561, 49.532402], [6.4967155, 49.529045], [6.5076256, 49.53716], [6.5133605, 49.537437], [6.5141997, 49.530025], [6.5258093, 49.530724], [6.5253897, 49.5345], [6.5365796, 49.538837], [6.5423145, 49.539116], [6.5543437, 49.53604], [6.5652537, 49.544014], [6.5656734, 49.540375], [6.5714083, 49.540657], [6.571828, 49.53688], [6.578402, 49.529884], [6.5788217, 49.526108], [6.5912704, 49.519394], [6.6087546, 49.520233], [6.6140695, 49.52415], [6.6079154, 49.52765], [6.607496, 49.531284], [6.6191053, 49.531845], [6.618406, 49.539257], [6.6353307, 49.543873], [6.6412053, 49.54415], [6.641625, 49.540375], [6.64736, 49.540657], [6.652815, 49.544712], [6.6519756, 49.552124], [6.6578503, 49.552265], [6.65855, 49.54499], [6.6644244, 49.545273], [6.6756144, 49.54947], [6.687224, 49.550026], [6.6883426, 49.53898], [6.6940775, 49.539257], [6.6995325, 49.543175], [6.704568, 49.550865], [6.710023, 49.554783], [6.7096033, 49.55842], [6.726948, 49.559258], [6.732403, 49.563175], [6.7381377, 49.563454], [6.7442923, 49.560097], [6.750027, 49.56038], [6.761217, 49.564575], [6.7662525, 49.572266], [6.777862, 49.572685], [6.8048577, 49.59255], [6.8160477, 49.596745], [6.8222017, 49.59325], [6.822622, 49.58961], [6.828077, 49.59353], [6.839966, 49.590313], [6.845421, 49.594227], [6.8504567, 49.60192], [6.866682, 49.61367], [6.8725567, 49.61395], [6.878571, 49.61059], [6.889481, 49.618427], [6.9125605, 49.619404], [6.929625, 49.623882], [6.9415145, 49.620663], [6.940535, 49.631714], [6.934381, 49.635212], [6.939836, 49.639126], [6.9513054, 49.639687], [6.952005, 49.632275], [6.9581594, 49.628777], [6.9636145, 49.632694], [6.9802594, 49.640945], [6.9805393, 49.63717], [6.992149, 49.63773], [6.997604, 49.641644], [6.9978833, 49.63801], [6.9924283, 49.633953], [6.993128, 49.62668], [6.998583, 49.630596], [7.0036182, 49.63815], [7.009493, 49.638428], [7.0155077, 49.63507], [7.0266976, 49.639126], [7.0318727, 49.64682], [7.0380273, 49.643322]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Sachsen-Anhalt',
      type: 'Land',
      area: '20,451.58 km²',
      bundesratVotes: '4 (out of 69)',
      density: '110/km²',
      timeZone: 'UTC+1 (CET)',
      population: 2208321,
      capital: 'Magdeburg',
      government: 'Landtag of Saxony-Anhalt',
      head: 'Reiner Haseloff (CDU)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[11.632464, 53.01638], [11.632324, 53.00897], [11.644633, 53.001415], [11.657082, 53.001274], [11.675685, 53.004913], [11.687994, 53.004772], [11.687574, 52.982533], [11.693728, 52.978756], [11.693728, 52.97498], [11.712192, 52.97484], [11.724641, 52.978477], [11.743384, 52.98575], [11.749538, 52.98561], [11.755553, 52.981834], [11.7618475, 52.981834], [11.767861, 52.978058], [11.78017, 52.97428], [11.786185, 52.962948], [11.7922, 52.95917], [11.7922, 52.955536], [11.835421, 52.955116], [11.835281, 52.95148], [11.8475895, 52.947563], [11.8537445, 52.947563], [11.853465, 52.9326], [11.841016, 52.9291], [11.8285675, 52.921688], [11.828427, 52.914272], [11.846611, 52.902943], [11.871368, 52.90644], [11.8836775, 52.902664], [11.889692, 52.89511], [11.901861, 52.891335], [11.908015, 52.887558], [11.938787, 52.88728], [11.963265, 52.879585], [11.96928, 52.87581], [11.981589, 52.872032], [11.993898, 52.87189], [12.000052, 52.87553], [12.012362, 52.87539], [12.012501, 52.8828], [12.02481, 52.8828], [12.031104, 52.88644], [12.037119, 52.882664], [12.074046, 52.882244], [12.074046, 52.878605], [12.086354, 52.882103], [12.086215, 52.87105], [12.092369, 52.870914], [12.104678, 52.87455], [12.110693, 52.870773], [12.116847, 52.870632], [12.129576, 52.88546], [12.129156, 52.870632], [12.135171, 52.86308], [12.141185, 52.859303], [12.135031, 52.855667], [12.134751, 52.84825], [12.141046, 52.85189], [12.159649, 52.855385], [12.165803, 52.855385], [12.178112, 52.858883], [12.184266, 52.858883], [12.196995, 52.87357], [12.203149, 52.87357], [12.209024, 52.866016], [12.209024, 52.86238], [12.2151785, 52.86224], [12.215038, 52.858604], [12.221053, 52.854828], [12.221333, 52.86224], [12.227488, 52.862103], [12.227347, 52.858463], [12.239516, 52.854546], [12.239237, 52.8435], [12.245252, 52.83972], [12.245111, 52.832306], [12.250707, 52.813564], [12.256721, 52.806152], [12.262735, 52.80601], [12.262316, 52.791183], [12.256162, 52.787548], [12.2560215, 52.783913], [12.249867, 52.780273], [12.243712, 52.78405], [12.231544, 52.78405], [12.231124, 52.769226], [12.218815, 52.769363], [12.218676, 52.76195], [12.212381, 52.758316], [12.212241, 52.754677], [12.218256, 52.747124], [12.22441, 52.747124], [12.224131, 52.73971], [12.2301445, 52.735935], [12.217696, 52.72852], [12.217556, 52.724884], [12.211542, 52.724884], [12.211262, 52.717472], [12.205108, 52.71761], [12.2049675, 52.710197], [12.211262, 52.713833], [12.217277, 52.713696], [12.217277, 52.710056], [12.2111225, 52.710056], [12.210982, 52.70642], [12.216997, 52.702644], [12.223151, 52.702503], [12.229166, 52.698727], [12.229166, 52.69509], [12.223011, 52.69509], [12.222872, 52.691456], [12.228746, 52.683903], [12.2410555, 52.68376], [12.240915, 52.680126], [12.2349, 52.680126], [12.234761, 52.676487], [12.240915, 52.67635], [12.240636, 52.668934], [12.24665, 52.665157], [12.24665, 52.661522], [12.240216, 52.65411], [12.240076, 52.646694], [12.246091, 52.642918], [12.245951, 52.635506], [12.239797, 52.635643], [12.239516, 52.624454], [12.233222, 52.62082], [12.214899, 52.620956], [12.214759, 52.61732], [12.208605, 52.613686], [12.196296, 52.613823], [12.178112, 52.621376], [12.177692, 52.602913], [12.183707, 52.602776], [12.183007, 52.57312], [12.189022, 52.569344], [12.170419, 52.558434], [12.1641245, 52.55102], [12.157551, 52.536335], [12.151396, 52.5327], [12.151116, 52.521507], [12.163425, 52.525143], [12.163565, 52.52878], [12.175874, 52.532417], [12.182029, 52.532417], [12.188043, 52.52864], [12.194057, 52.5285], [12.193917, 52.521088], [12.175314, 52.510178], [12.1750345, 52.502766], [12.18119, 52.502766], [12.187203, 52.49899], [12.193078, 52.491436], [12.199372, 52.49507], [12.205527, 52.49507], [12.205387, 52.491295], [12.211542, 52.491295], [12.217696, 52.49493], [12.217836, 52.49857], [12.22385, 52.49857], [12.22385, 52.49493], [12.229865, 52.494793], [12.236159, 52.49843], [12.2362995, 52.502205], [12.2301445, 52.50598], [12.230285, 52.509617], [12.23644, 52.509617], [12.236579, 52.517033], [12.242873, 52.520668], [12.260918, 52.512974], [12.267072, 52.512974], [12.266652, 52.49815], [12.272667, 52.494373], [12.272667, 52.490597], [12.278681, 52.490597], [12.278542, 52.48318], [12.284696, 52.483044], [12.290851, 52.48682], [12.30302, 52.48668], [12.303159, 52.490314], [12.309314, 52.490314], [12.315328, 52.486538], [12.315048, 52.47535], [12.321063, 52.471573], [12.333232, 52.47143], [12.332812, 52.456608], [12.326658, 52.45297], [12.326378, 52.445557], [12.314209, 52.445698], [12.31393, 52.438282], [12.307775, 52.434647], [12.307495, 52.427235], [12.295326, 52.427372], [12.295186, 52.423737], [12.301201, 52.41996], [12.282738, 52.412685], [12.282598, 52.40905], [12.294766, 52.405132], [12.300781, 52.405132], [12.300781, 52.401356], [12.306935, 52.40499], [12.31295, 52.401215], [12.312671, 52.390167], [12.306516, 52.390167], [12.300221, 52.382893], [12.300082, 52.37548], [12.312251, 52.37534], [12.311971, 52.367928], [12.305957, 52.368065], [12.293648, 52.36443], [12.293368, 52.357018], [12.305397, 52.349464], [12.305257, 52.345825], [12.311412, 52.345688], [12.311272, 52.338272], [12.298543, 52.31995], [12.292389, 52.316315], [12.2798, 52.3054], [12.27966, 52.301624], [12.273366, 52.290577], [12.267072, 52.286938], [12.267072, 52.283302], [12.260637, 52.27225], [12.260218, 52.257427], [12.253923, 52.25001], [12.253923, 52.246376], [12.259938, 52.246376], [12.272107, 52.24246], [12.277982, 52.23868], [12.277982, 52.235046], [12.283856, 52.23127], [12.290011, 52.23113], [12.296025, 52.227352], [12.295886, 52.223717], [12.3019, 52.223717], [12.3019, 52.21994], [12.289452, 52.212666], [12.271268, 52.212948], [12.258819, 52.205673], [12.252805, 52.205673], [12.252665, 52.202034], [12.258819, 52.201897], [12.258539, 52.19448], [12.252385, 52.190845], [12.252105, 52.179794], [12.245951, 52.17616], [12.233922, 52.183712], [12.227488, 52.168884], [12.227347, 52.161472], [12.239377, 52.157696], [12.239237, 52.150284], [12.245252, 52.150284], [12.245111, 52.146507], [12.250986, 52.13909], [12.274904, 52.123985], [12.274765, 52.116573], [12.28064, 52.10916], [12.280499, 52.101746], [12.292529, 52.10161], [12.292529, 52.09797], [12.298543, 52.09783], [12.304558, 52.094055], [12.310573, 52.094055], [12.310432, 52.090275], [12.322601, 52.090137], [12.328616, 52.08636], [12.328337, 52.07531], [12.334211, 52.071533], [12.340086, 52.06412], [12.346101, 52.060345], [12.3581295, 52.05657], [12.363864, 52.045376], [12.369879, 52.0416], [12.400231, 52.04118], [12.406106, 52.033768], [12.417995, 52.026215], [12.430025, 52.022438], [12.4359, 52.01866], [12.43576, 52.014885], [12.460097, 52.014606], [12.4602375, 52.02202], [12.466532, 52.025654], [12.472686, 52.03293], [12.478841, 52.03293], [12.4908695, 52.02901], [12.49073, 52.025375], [12.496465, 52.014187], [12.496325, 52.010548], [12.502339, 52.00677], [12.508354, 52.006634], [12.514229, 52.002857], [12.544441, 51.9988], [12.544302, 51.99502], [12.550316, 51.991386], [12.549896, 51.980194], [12.628646, 51.979218], [12.628785, 51.982994], [12.6229105, 51.98677], [12.6290655, 51.99027], [12.653263, 51.989986], [12.659838, 52.004673], [12.665992, 52.008312], [12.6841755, 52.00817], [12.69019, 52.004395], [12.69005, 52.000618], [12.714249, 52.00034], [12.720123, 51.996563], [12.719983, 51.992924], [12.726138, 51.992786], [12.744041, 51.985092], [12.76824, 51.984814], [12.76796, 51.977398], [12.786143, 51.977257], [12.785584, 51.962433], [12.791598, 51.96229], [12.797613, 51.958515], [12.827826, 51.958096], [12.833981, 51.96173], [12.84629, 51.96523], [12.858318, 51.965088], [12.858039, 51.957676], [12.863914, 51.9539], [12.8632145, 51.9318], [12.899442, 51.93124], [12.899302, 51.927605], [12.91133, 51.923687], [12.929514, 51.927185], [12.929934, 51.938232], [12.935948, 51.938232], [12.960007, 51.934177], [12.972176, 51.934036], [12.971756, 51.922848], [12.965602, 51.919212], [12.98966, 51.91893], [12.98938, 51.91152], [12.982946, 51.900467], [13.0251875, 51.89991], [13.031202, 51.896133], [13.037357, 51.89977], [13.055401, 51.89949], [13.060996, 51.888298], [13.048966, 51.88844], [13.054702, 51.881027], [13.048547, 51.877388], [13.048267, 51.869976], [13.066311, 51.869694], [13.072326, 51.865917], [13.096384, 51.86564], [13.096663, 51.87305], [13.126876, 51.87263], [13.133031, 51.87627], [13.13317, 51.879906], [13.1452, 51.87977], [13.157089, 51.87221], [13.163103, 51.872074], [13.162544, 51.857246], [13.150375, 51.857525], [13.14422, 51.85389], [13.138346, 51.857666], [13.137926, 51.846615], [13.149536, 51.835285], [13.149396, 51.83165], [13.155271, 51.827873], [13.15513, 51.824097], [13.1666, 51.80913], [13.1783495, 51.80158], [13.17821, 51.79794], [13.172055, 51.794304], [13.17793, 51.790527], [13.171636, 51.786892], [13.177231, 51.7757], [13.171077, 51.772064], [13.170937, 51.76843], [13.164922, 51.76843], [13.164783, 51.76479], [13.170657, 51.761013], [13.176392, 51.75346], [13.176251, 51.749825], [13.170238, 51.74996], [13.169957, 51.74255], [13.175693, 51.738773], [13.181847, 51.738632], [13.181567, 51.734997], [13.187442, 51.73122], [13.193457, 51.73108], [13.199191, 51.723667], [13.198912, 51.716255], [13.186742, 51.712616], [13.186462, 51.705345], [13.174713, 51.7129], [13.168559, 51.70926], [13.168419, 51.705624], [13.174153, 51.69807], [13.174014, 51.694435], [13.16758, 51.68702], [13.063793, 51.647854], [13.039175, 51.637226], [13.0333, 51.641003], [13.034, 51.65569], [13.028265, 51.663242], [13.016096, 51.659607], [13.016376, 51.66702], [12.992178, 51.66744], [12.991898, 51.660027], [12.986023, 51.663803], [12.980009, 51.66394], [12.979589, 51.652752], [12.973434, 51.649254], [12.961406, 51.649395], [12.96714, 51.64184], [12.960986, 51.638203], [12.954971, 51.638344], [12.9551115, 51.64212], [12.943361, 51.649673], [12.937347, 51.649673], [12.931192, 51.646038], [12.931053, 51.6424], [12.925038, 51.64254], [12.919164, 51.646317], [12.907134, 51.646458], [12.907834, 51.66492], [12.901819, 51.66492], [12.895525, 51.657646], [12.883495, 51.657787], [12.883356, 51.65415], [12.877481, 51.65793], [12.877621, 51.661564], [12.871607, 51.661705], [12.871886, 51.669117], [12.87804, 51.672752], [12.872166, 51.67653], [12.860137, 51.680305], [12.842093, 51.680588], [12.841813, 51.673172], [12.835659, 51.669537], [12.829644, 51.669678], [12.82349, 51.66604], [12.817475, 51.66618], [12.811321, 51.662544], [12.799292, 51.66268], [12.792857, 51.65177], [12.786703, 51.64436], [12.774534, 51.644638], [12.774673, 51.648273], [12.762645, 51.648415], [12.75677, 51.65219], [12.750755, 51.652332], [12.7508955, 51.655968], [12.744881, 51.65611], [12.732991, 51.659885], [12.696764, 51.660446], [12.696764, 51.65667], [12.69061, 51.65317], [12.69047, 51.649395], [12.678021, 51.638485], [12.677741, 51.63107], [12.665572, 51.627575], [12.659418, 51.623936], [12.659418, 51.6203], [12.635079, 51.614426], [12.641374, 51.624218], [12.635499, 51.627995], [12.63536, 51.624355], [12.611301, 51.624638], [12.611161, 51.621], [12.605007, 51.617363], [12.598992, 51.617363], [12.599272, 51.624775], [12.593258, 51.624916], [12.586823, 51.613865], [12.580809, 51.614006], [12.574655, 51.61037], [12.562625, 51.606873], [12.55661, 51.606873], [12.556471, 51.603237], [12.550316, 51.599598], [12.544441, 51.603374], [12.526398, 51.603657], [12.514369, 51.607433], [12.514369, 51.603794], [12.495905, 51.592884], [12.489891, 51.593025], [12.49003, 51.59666], [12.496185, 51.6003], [12.496185, 51.603935], [12.478141, 51.604214], [12.478002, 51.60058], [12.471987, 51.60058], [12.460097, 51.604496], [12.4602375, 51.60813], [12.454223, 51.608273], [12.454083, 51.604496], [12.447928, 51.600998], [12.447928, 51.59722], [12.43576, 51.597363], [12.43534, 51.582676], [12.405267, 51.582954], [12.393377, 51.586872], [12.387223, 51.583233], [12.375195, 51.583374], [12.35729, 51.58729], [12.35715, 51.583652], [12.345121, 51.583794], [12.344981, 51.580017], [12.338966, 51.57652], [12.3267975, 51.57666], [12.3267975, 51.572884], [12.320643, 51.56925], [12.308475, 51.56575], [12.30246, 51.562115], [12.30232, 51.558475], [12.260218, 51.558895], [12.260358, 51.56631], [12.248328, 51.56645], [12.242174, 51.559177], [12.241895, 51.548126], [12.217696, 51.540993], [12.217417, 51.533577], [12.211402, 51.53372], [12.211402, 51.52994], [12.205387, 51.530083], [12.205247, 51.526306], [12.199093, 51.522667], [12.199093, 51.51903], [12.205108, 51.51903], [12.204827, 51.50798], [12.198813, 51.50798], [12.198673, 51.504345], [12.210703, 51.500427], [12.216717, 51.500427], [12.216578, 51.49679], [12.210283, 51.48574], [12.186225, 51.482384], [12.185945, 51.471195], [12.1797905, 51.467697], [12.173776, 51.467697], [12.167761, 51.46406], [12.155732, 51.464203], [12.155592, 51.460564], [12.167481, 51.45301], [12.167062, 51.43469], [12.173077, 51.434547], [12.178951, 51.43077], [12.179091, 51.434547], [12.19098, 51.43063], [12.196855, 51.423218], [12.196715, 51.415943], [12.190701, 51.415943], [12.19056, 51.412308], [12.184546, 51.408672], [12.184406, 51.401257], [12.190141, 51.39021], [12.183987, 51.38657], [12.183707, 51.375523], [12.189721, 51.37538], [12.189582, 51.368107], [12.195596, 51.368107], [12.1954565, 51.36433], [12.20147, 51.36433], [12.20147, 51.360554], [12.207485, 51.360554], [12.207346, 51.35692], [12.201191, 51.349644], [12.200771, 51.33118], [12.1947565, 51.327545], [12.176713, 51.327824], [12.176573, 51.32041], [12.158529, 51.32055], [12.164404, 51.3095], [12.163984, 51.294815], [12.176014, 51.294674], [12.181889, 51.287262], [12.181609, 51.27621], [12.175594, 51.272575], [12.175454, 51.268936], [12.181469, 51.2688], [12.181329, 51.261524], [12.193218, 51.261383], [12.199233, 51.257607], [12.2049675, 51.250195], [12.204408, 51.224457], [12.210283, 51.217045], [12.198113, 51.206135], [12.203849, 51.19872], [12.191819, 51.191586], [12.185805, 51.191586], [12.185665, 51.184174], [12.203709, 51.18767], [12.209583, 51.18767], [12.221473, 51.183895], [12.221333, 51.172844], [12.215319, 51.172844], [12.2151785, 51.16557], [12.209164, 51.16557], [12.208744, 51.143612], [12.220493, 51.139835], [12.244412, 51.139553], [12.250287, 51.13214], [12.250147, 51.128365], [12.238118, 51.124866], [12.232243, 51.125008], [12.231963, 51.113956], [12.237978, 51.11382], [12.237838, 51.11018], [12.243712, 51.106403], [12.255602, 51.102627], [12.2614765, 51.102627], [12.2614765, 51.09885], [12.273506, 51.102486], [12.29127, 51.102207], [12.29127, 51.09857], [12.297145, 51.094795], [12.297005, 51.08752], [12.290851, 51.083885], [12.278961, 51.080387], [12.278821, 51.072975], [12.272806, 51.073112], [12.272387, 51.05479], [12.2662325, 51.047516], [12.260358, 51.047516], [12.260218, 51.04388], [12.266092, 51.040104], [12.272107, 51.040104], [12.278122, 51.043602], [12.3019, 51.04332], [12.301761, 51.03605], [12.307775, 51.035908], [12.307495, 51.024998], [12.30148, 51.021362], [12.301341, 51.017723], [12.295326, 51.014088], [12.295326, 51.010452], [12.289311, 51.010452], [12.283157, 51.003178], [12.277143, 50.99968], [12.277143, 50.995903], [12.270988, 50.98863], [12.265114, 50.98877], [12.252944, 50.981495], [12.252805, 50.974224], [12.24679, 50.970585], [12.24679, 50.96695], [12.252665, 50.96681], [12.252524, 50.9559], [12.2465105, 50.9559], [12.240496, 50.952263], [12.2403555, 50.948627], [12.234481, 50.948765], [12.234342, 50.94499], [12.228466, 50.94513], [12.222732, 50.95618], [12.228606, 50.95604], [12.228746, 50.96345], [12.216857, 50.963593], [12.216857, 50.959816], [12.210842, 50.959957], [12.210982, 50.963593], [12.205108, 50.971004], [12.193358, 50.982056], [12.175314, 50.971287], [12.175175, 50.96387], [12.163425, 50.971424], [12.15727, 50.96779], [12.151396, 50.96779], [12.145381, 50.964153], [12.145521, 50.971565], [12.133492, 50.971565], [12.127618, 50.97534], [12.121603, 50.97534], [12.115728, 50.97912], [12.103839, 50.97912], [12.103839, 50.982895], [12.097964, 50.982895], [12.091809, 50.97926], [12.079921, 50.979397], [12.067751, 50.972126], [12.055862, 50.97576], [12.043833, 50.975903], [12.025789, 50.972263], [12.019774, 50.972263], [12.019915, 50.97968], [12.025929, 50.97968], [12.026069, 50.98695], [12.020194, 50.990726], [12.014179, 50.990726], [12.014319, 50.994366], [12.008305, 50.994503], [12.008445, 50.998142], [11.990261, 50.994503], [11.984246, 50.994503], [11.984386, 50.99828], [11.978372, 50.99828], [11.978512, 51.00192], [11.984527, 51.005554], [11.984806, 51.020382], [11.972917, 51.024017], [11.966903, 51.02416], [11.949139, 51.03521], [11.943124, 51.03157], [11.943264, 51.03521], [11.937109, 51.03157], [11.919206, 51.03171], [11.919485, 51.0464], [11.91347, 51.050175], [11.901442, 51.04654], [11.901581, 51.05381], [11.895706, 51.057587], [11.883818, 51.061363], [11.871648, 51.05395], [11.859619, 51.054092], [11.8537445, 51.057728], [11.84773, 51.054092], [11.835701, 51.054092], [11.823671, 51.050453], [11.805628, 51.050594], [11.793738, 51.05423], [11.78171, 51.05437], [11.775695, 51.050594], [11.775555, 51.04696], [11.76968, 51.04696], [11.763526, 51.04332], [11.763665, 51.050594], [11.757651, 51.050594], [11.757791, 51.05437], [11.751777, 51.05437], [11.751916, 51.058006], [11.757931, 51.058006], [11.757931, 51.061783], [11.752056, 51.065422], [11.740026, 51.065422], [11.740167, 51.0692], [11.728138, 51.0692], [11.728277, 51.072834], [11.7162485, 51.072975], [11.716108, 51.0692], [11.710234, 51.0692], [11.704219, 51.072975], [11.7046385, 51.09144], [11.698625, 51.095215], [11.698764, 51.09885], [11.686875, 51.102627], [11.6808605, 51.106262], [11.674986, 51.106262], [11.668971, 51.110043], [11.669111, 51.113678], [11.657082, 51.110043], [11.651067, 51.110043], [11.645192, 51.113678], [11.627008, 51.106403], [11.627008, 51.102627], [11.620995, 51.09899], [11.621134, 51.106403], [11.60337, 51.117455], [11.591341, 51.117455], [11.579452, 51.12123], [11.573437, 51.12123], [11.567423, 51.11382], [11.561408, 51.110043], [11.555393, 51.110043], [11.555533, 51.11382], [11.549519, 51.11382], [11.549379, 51.102627], [11.53749, 51.106403], [11.52546, 51.106262], [11.513711, 51.110043], [11.513571, 51.102627], [11.489793, 51.102627], [11.489793, 51.106262], [11.483918, 51.1099], [11.472029, 51.1099], [11.466014, 51.113678], [11.466293, 51.132282], [11.460279, 51.132282], [11.460419, 51.139694], [11.454405, 51.14333], [11.454544, 51.147106], [11.472448, 51.150883], [11.484477, 51.1583], [11.478602, 51.161934], [11.478602, 51.16571], [11.490492, 51.16571], [11.490632, 51.169346], [11.472728, 51.173122], [11.473008, 51.191586], [11.455104, 51.195362], [11.449089, 51.195362], [11.449369, 51.21019], [11.43748, 51.213966], [11.431465, 51.213825], [11.413562, 51.21019], [11.407407, 51.202778], [11.395517, 51.202637], [11.389643, 51.21019], [11.389783, 51.2176], [11.383768, 51.22124], [11.366004, 51.22124], [11.366004, 51.228653], [11.372019, 51.228653], [11.378034, 51.23607], [11.3840475, 51.239845], [11.3840475, 51.24348], [11.390062, 51.247257], [11.390062, 51.24362], [11.401952, 51.24362], [11.401812, 51.236206], [11.407826, 51.239845], [11.413841, 51.239845], [11.413841, 51.24362], [11.419856, 51.247257], [11.42601, 51.25467], [11.432025, 51.25467], [11.438039, 51.258446], [11.444054, 51.26586], [11.438179, 51.269497], [11.444194, 51.273273], [11.450209, 51.273273], [11.456223, 51.27691], [11.456363, 51.2881], [11.462517, 51.295513], [11.468392, 51.291737], [11.480421, 51.29915], [11.468672, 51.306564], [11.456642, 51.31034], [11.4507675, 51.317753], [11.444754, 51.317753], [11.438878, 51.32153], [11.42699, 51.325165], [11.421115, 51.33258], [11.421115, 51.336357], [11.433144, 51.336357], [11.433144, 51.34377], [11.403211, 51.34377], [11.403351, 51.351185], [11.397336, 51.351185], [11.397476, 51.358597], [11.391461, 51.362373], [11.391602, 51.373425], [11.397615, 51.373425], [11.397756, 51.38447], [11.391741, 51.384613], [11.379851, 51.38825], [11.379851, 51.384613], [11.373837, 51.38825], [11.367823, 51.384613], [11.367823, 51.380836], [11.361808, 51.384613], [11.361948, 51.392025], [11.355933, 51.38839], [11.349918, 51.38839], [11.349918, 51.384613], [11.3439045, 51.38839], [11.344044, 51.392025], [11.332015, 51.392025], [11.332155, 51.39944], [11.32628, 51.41063], [11.320266, 51.41063], [11.308236, 51.406853], [11.290193, 51.403217], [11.284178, 51.403217], [11.278303, 51.406853], [11.278164, 51.39944], [11.254245, 51.39944], [11.24823, 51.395664], [11.24837, 51.406853], [11.230467, 51.406853], [11.230467, 51.41063], [11.224592, 51.414265], [11.218577, 51.414265], [11.206688, 51.40671], [11.194659, 51.40671], [11.194659, 51.403076], [11.188784, 51.402935], [11.188784, 51.40671], [11.17088, 51.406574], [11.17088, 51.402935], [11.147101, 51.402798], [11.135212, 51.406433], [11.129198, 51.41021], [11.129198, 51.413986], [11.123323, 51.41021], [11.117309, 51.41021], [11.117309, 51.413845], [11.105419, 51.417484], [11.099545, 51.42126], [11.087655, 51.42126], [11.075766, 51.42853], [11.051847, 51.42853], [11.045973, 51.424755], [11.033944, 51.42098], [11.028069, 51.417202], [10.992261, 51.416924], [11.004291, 51.424477], [11.010165, 51.424477], [11.010165, 51.428253], [10.998276, 51.428253], [10.998276, 51.424477], [10.980372, 51.424335], [10.980372, 51.43189], [10.968483, 51.43175], [10.974497, 51.44294], [10.968483, 51.44294], [10.968622, 51.446716], [10.974497, 51.450493], [10.974497, 51.454132], [10.968622, 51.454132], [10.968622, 51.461544], [10.962748, 51.469097], [10.962748, 51.472733], [10.968622, 51.47651], [10.968762, 51.484062], [10.962748, 51.491478], [10.956873, 51.491337], [10.956873, 51.495113], [10.950859, 51.495113], [10.944844, 51.49875], [10.93897, 51.49875], [10.93897, 51.502525], [10.9449835, 51.502525], [10.9449835, 51.50994], [10.933095, 51.517353], [10.939109, 51.53246], [10.939109, 51.536095], [10.945124, 51.536095], [10.945124, 51.53246], [10.950998, 51.53246], [10.950998, 51.536236], [10.945124, 51.53987], [10.939109, 51.53987], [10.939109, 51.543648], [10.92722, 51.54351], [10.92722, 51.547287], [10.915331, 51.547287], [10.915331, 51.550922], [10.909316, 51.550922], [10.909316, 51.547146], [10.897427, 51.55456], [10.897427, 51.573303], [10.885537, 51.580715], [10.891552, 51.59582], [10.897567, 51.59582], [10.903582, 51.592045], [10.933374, 51.592186], [10.939389, 51.595963], [10.939528, 51.60715], [10.9275, 51.60715], [10.91561, 51.61079], [10.92764, 51.618343], [10.91561, 51.618343], [10.903582, 51.61079], [10.891692, 51.61079], [10.891692, 51.614567], [10.885677, 51.614426], [10.867774, 51.62939], [10.861898, 51.633167], [10.843855, 51.633167], [10.825811, 51.62198], [10.819797, 51.625755], [10.819937, 51.64072], [10.78385, 51.641003], [10.77196, 51.644917], [10.77196, 51.648693], [10.759791, 51.648975], [10.753777, 51.6452], [10.753777, 51.641422], [10.723563, 51.646175], [10.711255, 51.64296], [10.7051, 51.64352], [10.687197, 51.65345], [10.687197, 51.657227], [10.681182, 51.660725], [10.675167, 51.66786], [10.669013, 51.671356], [10.668873, 51.6866], [10.662858, 51.693874], [10.668873, 51.69793], [10.674888, 51.69821], [10.668733, 51.70926], [10.668733, 51.713036], [10.662719, 51.72045], [10.65055, 51.72003], [10.65055, 51.72381], [10.644535, 51.727444], [10.644395, 51.734997], [10.63838, 51.734856], [10.632366, 51.74227], [10.632226, 51.757378], [10.626072, 51.761013], [10.613902, 51.76451], [10.601873, 51.76423], [10.601873, 51.76801], [10.589844, 51.767727], [10.5897045, 51.77542], [10.577536, 51.782696], [10.5835495, 51.78661], [10.58327, 51.805634], [10.577255, 51.80941], [10.577116, 51.83221], [10.58313, 51.832348], [10.589145, 51.836266], [10.5890045, 51.84382], [10.576976, 51.84354], [10.576836, 51.85123], [10.58285, 51.855007], [10.601034, 51.859066], [10.607188, 51.859203], [10.607049, 51.866756], [10.619218, 51.87445], [10.631387, 51.87459], [10.631387, 51.87837], [10.64957, 51.889698], [10.64957, 51.900887], [10.655725, 51.904663], [10.64957, 51.90844], [10.64957, 51.91208], [10.643415, 51.915855], [10.643415, 51.919632], [10.631107, 51.92341], [10.612783, 51.927185], [10.618798, 51.93474], [10.618798, 51.938515], [10.612643, 51.938515], [10.612643, 51.94215], [10.624813, 51.95348], [10.637121, 51.957115], [10.64943, 51.956978], [10.64943, 51.960613], [10.643276, 51.968166], [10.637121, 51.96453], [10.618658, 51.96467], [10.618658, 51.968445], [10.624813, 51.968307], [10.624813, 51.972084], [10.618658, 51.97586], [10.606349, 51.975998], [10.606349, 51.983414], [10.600195, 51.98355], [10.59418, 51.979774], [10.588026, 51.979916], [10.588026, 51.98733], [10.575717, 51.99866], [10.569423, 52.00999], [10.569423, 52.01726], [10.593901, 52.016983], [10.593901, 52.02076], [10.600055, 52.02062], [10.600055, 52.013206], [10.60621, 52.013206], [10.612364, 52.01684], [10.618518, 52.016705], [10.624673, 52.012928], [10.624673, 52.016705], [10.636842, 52.016422], [10.642996, 52.02006], [10.642857, 52.027473], [10.649011, 52.027473], [10.655166, 52.03111], [10.66132, 52.03097], [10.66132, 52.034607], [10.648871, 52.04216], [10.648871, 52.045937], [10.673348, 52.049294], [10.6918125, 52.05279], [10.777695, 52.05181], [10.857702, 52.050972], [10.863857, 52.054607], [10.88232, 52.058105], [10.888474, 52.06174], [10.956314, 52.061184], [10.968622, 52.057266], [10.974777, 52.057266], [10.974777, 52.06468], [10.980512, 52.071953], [10.980232, 52.08664], [10.974217, 52.090416], [10.961908, 52.090557], [10.94946, 52.094334], [10.94932, 52.105385], [10.961629, 52.105244], [10.973798, 52.10888], [10.979813, 52.105103], [10.985687, 52.105103], [10.991562, 52.112377], [11.01506, 52.11951], [11.01506, 52.123146], [11.02681, 52.13042], [11.0328245, 52.13042], [11.044574, 52.134056], [11.050589, 52.13392], [11.050448, 52.14133], [11.056323, 52.148605], [11.062199, 52.15224], [11.062199, 52.159653], [11.068073, 52.163292], [11.068073, 52.166927], [11.062058, 52.170704], [11.03828, 52.170845], [11.026251, 52.1784], [11.020236, 52.1784], [11.019957, 52.19672], [11.025831, 52.200356], [11.025831, 52.204136], [11.037721, 52.211407], [11.043735, 52.21127], [11.049609, 52.214905], [11.061639, 52.21854], [11.079682, 52.218403], [11.079682, 52.22204], [11.091712, 52.225674], [11.091712, 52.22945], [11.079542, 52.236866], [11.079542, 52.2405], [11.061359, 52.240643], [11.055345, 52.25169], [11.061359, 52.25533], [11.055204, 52.26274], [11.055204, 52.266518], [11.04905, 52.270153], [11.031007, 52.270294], [11.024852, 52.277706], [11.024712, 52.281483], [11.018558, 52.2889], [11.024572, 52.29617], [11.036741, 52.296032], [11.042756, 52.299667], [11.042616, 52.30708], [11.036601, 52.30708], [11.024292, 52.31827], [11.018138, 52.325684], [11.011984, 52.325684], [11.005829, 52.3331], [10.99366, 52.333237], [10.987645, 52.337013], [10.987506, 52.340652], [10.999675, 52.34051], [11.011844, 52.344147], [11.030027, 52.34401], [11.036181, 52.34037], [11.04835, 52.347645], [11.06052, 52.347645], [11.072689, 52.355057], [11.072689, 52.369743], [11.078703, 52.369743], [11.078703, 52.373383], [11.072689, 52.37352], [11.066534, 52.369743], [11.066534, 52.37716], [11.06038, 52.37716], [11.054225, 52.380936], [11.054225, 52.38457], [11.035762, 52.384712], [11.023453, 52.392124], [11.023453, 52.39576], [10.998555, 52.410587], [10.992401, 52.410587], [10.992401, 52.418], [10.973658, 52.42919], [10.967504, 52.42919], [10.9613495, 52.43297], [10.961069, 52.44402], [10.948761, 52.447796], [10.948621, 52.451572], [10.936172, 52.458984], [10.935892, 52.473812], [10.942046, 52.47367], [10.941907, 52.481083], [10.947922, 52.484722], [10.941767, 52.488358], [10.947782, 52.491993], [10.953936, 52.491993], [10.960091, 52.495632], [10.972539, 52.499268], [10.978833, 52.499268], [10.978833, 52.495632], [10.997577, 52.495632], [11.003871, 52.491856], [11.010025, 52.491856], [11.010025, 52.495632], [10.978554, 52.514095], [10.959671, 52.52878], [10.959531, 52.53256], [10.953237, 52.53997], [10.946942, 52.54361], [10.940508, 52.55102], [10.940088, 52.576897], [10.9463825, 52.576897], [10.9463825, 52.580536], [10.939948, 52.587948], [10.952538, 52.587948], [10.958971, 52.591724], [10.958971, 52.5955], [10.965265, 52.599277], [10.9717, 52.599277], [10.977994, 52.603054], [10.977994, 52.621796], [10.965405, 52.621796], [10.946242, 52.61788], [10.939809, 52.61033], [10.933515, 52.610188], [10.92708, 52.60641], [10.921065, 52.60669], [10.921065, 52.610466], [10.9150505, 52.614525], [10.909176, 52.622635], [10.909176, 52.626553], [10.903162, 52.626694], [10.903301, 52.634525], [10.897427, 52.64264], [10.879383, 52.655087], [10.8796625, 52.6667], [10.873508, 52.666977], [10.873649, 52.670895], [10.867634, 52.671173], [10.867634, 52.67509], [10.861619, 52.67537], [10.855604, 52.683342], [10.84973, 52.68754], [10.843716, 52.695652], [10.843855, 52.699566], [10.837701, 52.699707], [10.831826, 52.703762], [10.831826, 52.70782], [10.83798, 52.711456], [10.83798, 52.715374], [10.831965, 52.71957], [10.832106, 52.723347], [10.807907, 52.724186], [10.807907, 52.72027], [10.795738, 52.720547], [10.796019, 52.736492], [10.790004, 52.74055], [10.790144, 52.75244], [10.796298, 52.756355], [10.790283, 52.760414], [10.790423, 52.764328], [10.7782545, 52.76461], [10.778394, 52.772583], [10.77238, 52.77678], [10.772519, 52.780693], [10.766505, 52.78489], [10.766505, 52.788807], [10.760631, 52.792862], [10.76077, 52.80867], [10.7666445, 52.815243], [10.760631, 52.819298], [10.76035, 52.833565], [10.766365, 52.836784], [10.77238, 52.836365], [10.77224, 52.847134], [10.766225, 52.85119], [10.77224, 52.85441], [10.796298, 52.852448], [10.802313, 52.855667], [10.802313, 52.859444], [10.814482, 52.854828], [10.83868, 52.85301], [10.844694, 52.856365], [10.863018, 52.855106], [10.863018, 52.858883], [10.875187, 52.858044], [10.875187, 52.85441], [10.881202, 52.850212], [10.893371, 52.84965], [10.899525, 52.856785], [10.930297, 52.855526], [10.942466, 52.85133], [10.948761, 52.85874], [10.961069, 52.86588], [10.961069, 52.869656], [10.967363, 52.876926], [10.979672, 52.876648], [10.985827, 52.88406], [10.992122, 52.8877], [10.992261, 52.9063], [10.998416, 52.9063], [10.998416, 52.90994], [11.041917, 52.909378], [11.041917, 52.913155], [11.048211, 52.913013], [11.054365, 52.909237], [11.073109, 52.9091], [11.079403, 52.912735], [11.098006, 52.912594], [11.098006, 52.89763], [11.116749, 52.89371], [11.122904, 52.89371], [11.141646, 52.89735], [11.154096, 52.900986], [11.16039, 52.900845], [11.16039, 52.90462], [11.191442, 52.89693], [11.222494, 52.89679], [11.222354, 52.889236], [11.234802, 52.889236], [11.240957, 52.88546], [11.240957, 52.878048], [11.278164, 52.877766], [11.278164, 52.881405], [11.284318, 52.88518], [11.296766, 52.88504], [11.296766, 52.87763], [11.302921, 52.87385], [11.321384, 52.87371], [11.340128, 52.88476], [11.358591, 52.88462], [11.377334, 52.89567], [11.389783, 52.899307], [11.414401, 52.89903], [11.41454, 52.902805], [11.420695, 52.90644], [11.42699, 52.913853], [11.433144, 52.917492], [11.439438, 52.917492], [11.458041, 52.92854], [11.476785, 52.935814], [11.489093, 52.935673], [11.495388, 52.93945], [11.507696, 52.939312], [11.495527, 52.954277], [11.501962, 52.97288], [11.508256, 52.980156], [11.508256, 52.98771], [11.51455, 52.991344], [11.51455, 52.998756], [11.520844, 53.002396], [11.533294, 53.00603], [11.539448, 52.99862], [11.545602, 52.998478], [11.551757, 52.9947], [11.564066, 52.9947], [11.564345, 53.00953], [11.570499, 53.00953], [11.570499, 53.013165], [11.576795, 53.013165], [11.601691, 53.02785], [11.601831, 53.031487], [11.626589, 53.03876], [11.639038, 53.03862], [11.651347, 53.031208], [11.645053, 53.02743], [11.632464, 53.01638]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Sachsen',
      type: 'Land',
      area: '18,449.99 km²',
      bundesratVotes: '4 (out of 69)',
      density: '221/km2',
      timeZone: 'UTC+1 (CET)',
      population: 4077937,
      capital: 'Dresden',
      government: 'Landtag of the Free State of Saxony',
      head: 'Michael Kretschmer (CDU)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[12.87804, 51.672752], [12.871886, 51.669117], [12.871607, 51.661705], [12.877621, 51.661564], [12.877481, 51.65793], [12.883356, 51.65415], [12.883495, 51.657787], [12.895525, 51.657646], [12.901819, 51.66492], [12.907834, 51.66492], [12.907134, 51.646458], [12.919164, 51.646317], [12.925038, 51.64254], [12.931053, 51.6424], [12.931192, 51.646038], [12.937347, 51.649673], [12.943361, 51.649673], [12.9551115, 51.64212], [12.954971, 51.638344], [12.960986, 51.638203], [12.96714, 51.64184], [12.961406, 51.649395], [12.973434, 51.649254], [12.979589, 51.652752], [12.980009, 51.66394], [12.986023, 51.663803], [12.991898, 51.660027], [12.992178, 51.66744], [13.016376, 51.66702], [13.016096, 51.659607], [13.028265, 51.663242], [13.034, 51.65569], [13.0333, 51.641003], [13.039175, 51.637226], [13.063793, 51.647854], [13.0926075, 51.617924], [13.098482, 51.614147], [13.098202, 51.60673], [13.110091, 51.602818], [13.110231, 51.606594], [13.116246, 51.606453], [13.116385, 51.61023], [13.128415, 51.60995], [13.128695, 51.617363], [13.134709, 51.617363], [13.140584, 51.613445], [13.146318, 51.606033], [13.157928, 51.59848], [13.169957, 51.59834], [13.175693, 51.590786], [13.169538, 51.58715], [13.169398, 51.583515], [13.156949, 51.572605], [13.156809, 51.568966], [13.1626835, 51.56519], [13.162404, 51.561413], [13.174573, 51.56491], [13.1742935, 51.557636], [13.204367, 51.55708], [13.203527, 51.538612], [13.215277, 51.53106], [13.214996, 51.527424], [13.220872, 51.523647], [13.220592, 51.516235], [13.226466, 51.51246], [13.226047, 51.505043], [13.220033, 51.505184], [13.219613, 51.494133], [13.207304, 51.486862], [13.201429, 51.49064], [13.200729, 51.472176], [13.206325, 51.46476], [13.212339, 51.464622], [13.218214, 51.460846], [13.217654, 51.449795], [13.2115, 51.44616], [13.21122, 51.438744], [13.199191, 51.438885], [13.192897, 51.43161], [13.192757, 51.427975], [13.198631, 51.4242], [13.204646, 51.424057], [13.205066, 51.43511], [13.211081, 51.43511], [13.22283, 51.43119], [13.22269, 51.427555], [13.216395, 51.42014], [13.22227, 51.416363], [13.227725, 51.405174], [13.227586, 51.40154], [13.23332, 51.397762], [13.251364, 51.39748], [13.257099, 51.393703], [13.269128, 51.393425], [13.280877, 51.38965], [13.280738, 51.38587], [13.2866125, 51.38573], [13.287032, 51.393147], [13.281017, 51.393284], [13.2811575, 51.396923], [13.275143, 51.39706], [13.275422, 51.400837], [13.305216, 51.40028], [13.29976, 51.41147], [13.324099, 51.41846], [13.330253, 51.4221], [13.330393, 51.425877], [13.348577, 51.429234], [13.342702, 51.43301], [13.337107, 51.440563], [13.348996, 51.440285], [13.348716, 51.43287], [13.35459, 51.43287], [13.36676, 51.436367], [13.372774, 51.436226], [13.390399, 51.42853], [13.396133, 51.424755], [13.4022875, 51.428394], [13.396693, 51.435806], [13.409142, 51.446716], [13.415576, 51.45399], [13.421451, 51.45399], [13.42131, 51.450214], [13.438655, 51.438885], [13.44425, 51.43133], [13.450265, 51.43119], [13.455999, 51.427414], [13.462153, 51.43105], [13.468168, 51.430912], [13.467749, 51.423496], [13.479638, 51.42336], [13.479918, 51.426994], [13.485653, 51.423218], [13.4792185, 51.415943], [13.490968, 51.41203], [13.508732, 51.40797], [13.514466, 51.404194], [13.538245, 51.403774], [13.537685, 51.392586], [13.54314, 51.385033], [13.543001, 51.381397], [13.554891, 51.381115], [13.55461, 51.37748], [13.560205, 51.369926], [13.566779, 51.380978], [13.572654, 51.380836], [13.584824, 51.384335], [13.590978, 51.38797], [13.608742, 51.38755], [13.608602, 51.383915], [13.614057, 51.37636], [13.613777, 51.372585], [13.619512, 51.36881], [13.619792, 51.372444], [13.679098, 51.371326], [13.679378, 51.37496], [13.685533, 51.378597], [13.691267, 51.37482], [13.702877, 51.370766], [13.703016, 51.374542], [13.709031, 51.3744], [13.714626, 51.370625], [13.726235, 51.36657], [13.7439995, 51.36629], [13.749735, 51.362373], [13.761484, 51.362095], [13.761764, 51.36587], [13.767778, 51.36573], [13.768198, 51.373283], [13.780087, 51.373005], [13.779248, 51.361813], [13.797292, 51.36517], [13.797852, 51.372585], [13.815615, 51.372303], [13.82177, 51.3758], [13.827644, 51.3758], [13.827365, 51.372025], [13.839253, 51.371746], [13.8515625, 51.379017], [13.852122, 51.386433], [13.857857, 51.382656], [13.869606, 51.382374], [13.881776, 51.38587], [13.881216, 51.37832], [13.89884, 51.3779], [13.905134, 51.381535], [13.928773, 51.380978], [13.929333, 51.38853], [13.941082, 51.38825], [13.953251, 51.391747], [13.959545, 51.395382], [13.96542, 51.395245], [13.971575, 51.39888], [13.989199, 51.39846], [13.987241, 51.379436], [13.998151, 51.375103], [14.015215, 51.374264], [14.016054, 51.381954], [14.010879, 51.386013], [14.011298, 51.389927], [14.022629, 51.38937], [14.023048, 51.393147], [14.017873, 51.397343], [14.018292, 51.40112], [14.0408125, 51.39986], [14.041232, 51.403774], [14.030042, 51.404335], [14.030461, 51.408253], [14.036476, 51.411747], [14.042211, 51.41147], [14.060394, 51.42196], [14.062633, 51.441124], [14.080397, 51.447697], [14.070045, 51.45609], [14.070885, 51.463783], [14.055919, 51.483784], [14.061653, 51.483505], [14.084033, 51.47805], [14.089348, 51.473854], [14.101518, 51.480705], [14.097041, 51.492317], [14.10921, 51.49903], [14.10963, 51.502808], [14.115365, 51.502388], [14.116624, 51.517353], [14.122918, 51.524487], [14.151872, 51.522667], [14.152152, 51.526443], [14.146696, 51.530502], [14.147535, 51.54169], [14.153411, 51.54127], [14.15369, 51.545048], [14.159425, 51.54463], [14.16502, 51.540573], [14.211458, 51.537773], [14.217612, 51.54127], [14.223348, 51.54085], [14.228803, 51.536797], [14.234677, 51.536514], [14.240132, 51.53246], [14.251602, 51.53176], [14.257057, 51.527702], [14.268666, 51.527004], [14.269086, 51.53078], [14.28643, 51.5298], [14.297621, 51.525467], [14.303076, 51.521408], [14.3205595, 51.52057], [14.3260145, 51.516514], [14.33175, 51.516235], [14.337205, 51.512318], [14.3362255, 51.50113], [14.341961, 51.500847], [14.348535, 51.50798], [14.354409, 51.5077], [14.354829, 51.51148], [14.349234, 51.515396], [14.349653, 51.519173], [14.3614025, 51.518612], [14.373432, 51.52169], [14.385741, 51.528683], [14.391616, 51.528404], [14.39791, 51.53176], [14.392315, 51.535816], [14.398609, 51.539173], [14.404345, 51.538895], [14.415394, 51.53106], [14.421688, 51.534416], [14.4274235, 51.534138], [14.439452, 51.537354], [14.445327, 51.537075], [14.451482, 51.540573], [14.456937, 51.536655], [14.458336, 51.551342], [14.493164, 51.549805], [14.499179, 51.553303], [14.516523, 51.5526], [14.527713, 51.548405], [14.527992, 51.552044], [14.551211, 51.55484], [14.552331, 51.56575], [14.563661, 51.56533], [14.570095, 51.572464], [14.58702, 51.571625], [14.58674, 51.56799], [14.59793, 51.56757], [14.602685, 51.564213], [14.601846, 51.55302], [14.606042, 51.54603], [14.628982, 51.549664], [14.629261, 51.55344], [14.654998, 51.55442], [14.665349, 51.550785], [14.676679, 51.55834], [14.683393, 51.57708], [14.688707, 51.57708], [14.689267, 51.58449], [14.685071, 51.59946], [14.700877, 51.59582], [14.705493, 51.584633], [14.710808, 51.584633], [14.710248, 51.57722], [14.698639, 51.56603], [14.698079, 51.558475], [14.70885, 51.558617], [14.70857, 51.55484], [14.720879, 51.55484], [14.721438, 51.550365], [14.728712, 51.550644], [14.731369, 51.528263], [14.7385025, 51.52854], [14.739062, 51.524067], [14.753469, 51.524765], [14.753749, 51.52155], [14.786619, 51.521828], [14.78634, 51.518192], [14.797529, 51.517914], [14.803684, 51.510918], [14.820189, 51.50994], [14.820748, 51.505463], [14.827882, 51.505745], [14.828442, 51.501266], [14.835575, 51.501686], [14.836135, 51.497353], [14.844807, 51.500008], [14.850542, 51.496372], [14.850262, 51.492596], [14.8562765, 51.492737], [14.862571, 51.496513], [14.87446, 51.49665], [14.880335, 51.492874], [14.910408, 51.493156], [14.909988, 51.48574], [14.928032, 51.48588], [14.933907, 51.482246], [14.940201, 51.470497], [14.956566, 51.453293], [14.963699, 51.45357], [14.965239, 51.440144], [14.972512, 51.440422], [14.972932, 51.435947], [14.965797, 51.435528], [14.966357, 51.43105], [14.959084, 51.43077], [14.962161, 51.403774], [14.969435, 51.404194], [14.969854, 51.39972], [14.962721, 51.3993], [14.964819, 51.381397], [14.971952, 51.381676], [14.972372, 51.3772], [14.979646, 51.37748], [14.980624, 51.368526], [14.973491, 51.368248], [14.97391, 51.363773], [14.966777, 51.363354], [14.967756, 51.3544], [14.97503, 51.35468], [14.976428, 51.34223], [14.987338, 51.334957], [14.993353, 51.3351], [14.999228, 51.331463], [14.999088, 51.327824], [15.004963, 51.32419], [15.004683, 51.316772], [15.016712, 51.317055], [15.028461, 51.30978], [15.022306, 51.306004], [15.028182, 51.30237], [15.027762, 51.294952], [15.033916, 51.295094], [15.033357, 51.283066], [15.038113, 51.240265], [15.030979, 51.239983], [15.031539, 51.235508], [15.024405, 51.23509], [15.024825, 51.230614], [15.017691, 51.23033], [15.01867, 51.221382], [15.011537, 51.220963], [15.012516, 51.21201], [15.005383, 51.211727], [15.0079, 51.18921], [15.000906, 51.18893], [15.002865, 51.170887], [14.998109, 51.16879], [14.997829, 51.161373], [14.991815, 51.161236], [14.991395, 51.15382], [14.99741, 51.150185], [14.99671, 51.135498], [14.992514, 51.135357], [14.993073, 51.1299], [14.986079, 51.129482], [14.987478, 51.116055], [14.980345, 51.115635], [14.980905, 51.11116], [14.973771, 51.11088], [14.975309, 51.09745], [14.982443, 51.097733], [14.982722, 51.094513], [14.975869, 51.092976], [14.977267, 51.079407], [14.970274, 51.07913], [14.970694, 51.074654], [14.96356, 51.074234], [14.96328, 51.064583], [14.956985, 51.060806], [14.956846, 51.057167], [14.950691, 51.05703], [14.950132, 51.042202], [14.943838, 51.038425], [14.943698, 51.03465], [14.937543, 51.03465], [14.938382, 51.027935], [14.9332075, 51.027657], [14.935725, 51.005276], [14.928592, 51.004856], [14.93013, 50.99143], [14.9229965, 50.99101], [14.923556, 50.98653], [14.916423, 50.98611], [14.917961, 50.972824], [14.903833, 50.972126], [14.904813, 50.963173], [14.897679, 50.962753], [14.899218, 50.949326], [14.884531, 50.94499], [14.878377, 50.94485], [14.877957, 50.93478], [14.871663, 50.93366], [14.871383, 50.926247], [14.865229, 50.926105], [14.858934, 50.92233], [14.85264, 50.92219], [14.85236, 50.914776], [14.839632, 50.907085], [14.839492, 50.903446], [14.833338, 50.90331], [14.826763, 50.895756], [14.820329, 50.89198], [14.820049, 50.884563], [14.826064, 50.881065], [14.825784, 50.873512], [14.822427, 50.873375], [14.823406, 50.86428], [14.816552, 50.86302], [14.817391, 50.85505], [14.812496, 50.85477], [14.812077, 50.847496], [14.805782, 50.84372], [14.805082, 50.828896], [14.798788, 50.828754], [14.799068, 50.83253], [14.792774, 50.83239], [14.778227, 50.8247], [14.765779, 50.825397], [14.755148, 50.83155], [14.75263, 50.829315], [14.710808, 50.826797], [14.712346, 50.840782], [14.691086, 50.839806], [14.679756, 50.840645], [14.660872, 50.847496], [14.642409, 50.84736], [14.617792, 50.85477], [14.611917, 50.85477], [14.606462, 50.862045], [14.612756, 50.869457], [14.618911, 50.873093], [14.61933, 50.88051], [14.625484, 50.884144], [14.626324, 50.89883], [14.644507, 50.906105], [14.646746, 50.914356], [14.653879, 50.91464], [14.651641, 50.932682], [14.644648, 50.932262], [14.644088, 50.936737], [14.629821, 50.93604], [14.630381, 50.93156], [14.623386, 50.931282], [14.623806, 50.926666], [14.602685, 50.925686], [14.603105, 50.92121], [14.567717, 50.91939], [14.567158, 50.92387], [14.5601635, 50.92345], [14.559605, 50.927925], [14.566598, 50.928345], [14.5656185, 50.936317], [14.570934, 50.94303], [14.577368, 50.94695], [14.578907, 50.951565], [14.585201, 50.951843], [14.584641, 50.95702], [14.591216, 50.961216], [14.590096, 50.970165], [14.59723, 50.970585], [14.594993, 50.98849], [14.587998, 50.98821], [14.58744, 50.992687], [14.580305, 50.992268], [14.579746, 50.996742], [14.566458, 51.002197], [14.561422, 51.006115], [14.5499525, 51.006393], [14.536386, 51.00206], [14.529811, 51.00164], [14.53121, 51.005836], [14.538903, 51.01031], [14.539882, 51.01423], [14.515544, 51.017445], [14.502396, 51.016884], [14.49722, 51.02066], [14.4968, 51.03325], [14.503934, 51.03353], [14.501697, 51.051575], [14.494563, 51.051155], [14.491066, 51.040943], [14.4975, 51.04122], [14.490646, 51.020382], [14.470924, 51.0194], [14.472322, 51.023598], [14.461972, 51.031292], [14.448824, 51.03073], [14.409939, 51.008633], [14.39735, 51.008213], [14.385601, 51.01185], [14.379307, 51.01171], [14.367417, 51.015205], [14.369935, 51.026955], [14.363361, 51.026676], [14.351612, 51.030174], [14.338603, 51.029613], [14.33161, 51.02556], [14.319301, 51.025276], [14.313426, 51.028915], [14.302936, 51.040104], [14.305453, 51.052273], [14.293983, 51.05423], [14.294543, 51.049614], [14.28755, 51.049335], [14.288109, 51.04486], [14.280975, 51.04444], [14.283214, 51.026535], [14.276219, 51.026115], [14.277339, 51.017166], [14.263072, 51.016327], [14.263631, 51.01185], [14.256638, 51.01143], [14.257196, 51.006954], [14.264191, 51.007374], [14.26545, 50.99842], [14.258316, 50.998], [14.25342, 50.994503], [14.247685, 50.994644], [14.247406, 50.98751], [14.253, 50.983734], [14.246846, 50.973244], [14.258316, 50.972824], [14.269646, 50.96527], [14.281255, 50.964993], [14.299159, 50.971985], [14.3110485, 50.971844], [14.313706, 50.95576], [14.3207, 50.95618], [14.3212595, 50.951702], [14.34252, 50.952824], [14.34308, 50.948345], [14.357347, 50.949047], [14.357906, 50.94457], [14.386161, 50.94611], [14.38672, 50.94163], [14.400988, 50.942333], [14.402666, 50.928905], [14.395533, 50.928486], [14.396651, 50.919533], [14.389518, 50.919113], [14.391196, 50.905685], [14.384202, 50.905266], [14.384762, 50.90079], [14.378747, 50.90051], [14.378327, 50.892117], [14.3723135, 50.88862], [14.336925, 50.8889], [14.336645, 50.88526], [14.33063, 50.881626], [14.318881, 50.881767], [14.306852, 50.87827], [14.300978, 50.87841], [14.294963, 50.87477], [14.277339, 50.875053], [14.271884, 50.882324], [14.2545395, 50.886383], [14.242371, 50.87575], [14.225026, 50.87617], [14.224187, 50.861626], [14.217893, 50.850994], [14.206283, 50.851273], [14.194114, 50.840645], [14.176769, 50.841064], [14.153411, 50.838127], [14.141521, 50.83477], [14.123617, 50.82428], [14.106133, 50.82106], [14.100259, 50.821342], [14.094244, 50.817703], [14.088509, 50.817986], [14.082495, 50.814487], [14.076759, 50.81463], [14.070745, 50.81113], [14.070326, 50.803856], [14.058576, 50.8005], [14.046967, 50.80078], [14.041371, 50.804695], [14.023607, 50.797844], [14.017873, 50.79798], [14.012278, 50.8019], [13.995073, 50.80246], [13.9952135, 50.806095], [13.983883, 50.81015], [13.983744, 50.806515], [13.977869, 50.806656], [13.96612, 50.8033], [13.95465, 50.80372], [13.948635, 50.80022], [13.947656, 50.785393], [13.935906, 50.782177], [13.895483, 50.783436], [13.895762, 50.774483], [13.888769, 50.774063], [13.88849, 50.76511], [13.882475, 50.761616], [13.88779, 50.754063], [13.89898, 50.74637], [13.8987, 50.74301], [13.864851, 50.741055], [13.86541, 50.736576], [13.858417, 50.736156], [13.856878, 50.721752], [13.850863, 50.718254], [13.833379, 50.718674], [13.82163, 50.715458], [13.816034, 50.719234], [13.793375, 50.727345], [13.758686, 50.728466], [13.746657, 50.72147], [13.735047, 50.72189], [13.729453, 50.725807], [13.723718, 50.72595], [13.711689, 50.718533], [13.690428, 50.717274], [13.689869, 50.721752], [13.682875, 50.721333], [13.682176, 50.725807], [13.675181, 50.725388], [13.674482, 50.729862], [13.667489, 50.729443], [13.666789, 50.73392], [13.6528015, 50.73308], [13.653921, 50.72455], [13.642311, 50.724968], [13.642172, 50.72119], [13.633499, 50.718395], [13.619372, 50.717415], [13.620071, 50.71294], [13.577829, 50.710423], [13.57713, 50.714897], [13.549016, 50.71322], [13.548177, 50.705666], [13.542022, 50.702168], [13.536287, 50.70245], [13.538105, 50.69], [13.545099, 50.69042], [13.547057, 50.676853], [13.541323, 50.66748], [13.527195, 50.66664], [13.527895, 50.662163], [13.520901, 50.661743], [13.521461, 50.65727], [13.514466, 50.65685], [13.515026, 50.647057], [13.520621, 50.643143], [13.525936, 50.63559], [13.519922, 50.63195], [13.514047, 50.632233], [13.502297, 50.628876], [13.496423, 50.629013], [13.496143, 50.625378], [13.490408, 50.62552], [13.4901285, 50.621742], [13.47796, 50.614746], [13.477819, 50.61097], [13.471665, 50.609013], [13.472364, 50.604538], [13.465651, 50.603977], [13.465231, 50.596424], [13.453761, 50.60062], [13.448167, 50.604538], [13.436557, 50.604816], [13.430962, 50.608734], [13.425087, 50.609013], [13.425367, 50.612648], [13.413757, 50.613068], [13.414177, 50.620483], [13.408582, 50.624397], [13.409142, 50.63195], [13.403827, 50.63643], [13.397672, 50.63601], [13.396133, 50.640484], [13.386342, 50.640064], [13.380747, 50.643982], [13.374872, 50.6437], [13.376831, 50.627197], [13.379488, 50.625378], [13.370676, 50.62076], [13.363683, 50.620342], [13.364382, 50.615868], [13.343261, 50.614468], [13.343961, 50.609993], [13.337526, 50.60971], [13.337526, 50.605095], [13.323818, 50.60244], [13.326756, 50.58188], [13.298641, 50.58006], [13.29934, 50.575584], [13.292347, 50.575165], [13.291648, 50.57964], [13.284654, 50.57908], [13.283675, 50.59111], [13.261575, 50.59181], [13.260876, 50.595726], [13.248567, 50.592228], [13.248147, 50.584816], [13.242272, 50.584953], [13.241992, 50.581318], [13.235838, 50.577682], [13.235139, 50.56691], [13.229823, 50.56663], [13.230523, 50.562157], [13.22297, 50.559498], [13.22269, 50.55572], [13.228564, 50.55558], [13.226886, 50.539215], [13.220033, 50.538795], [13.220452, 50.53432], [13.213458, 50.5339], [13.214857, 50.52495], [13.207863, 50.524387], [13.208423, 50.519913], [13.201429, 50.519493], [13.196814, 50.515438], [13.195974, 50.50061], [13.172475, 50.50131], [13.166881, 50.505226], [13.143381, 50.505924], [13.13387, 50.515156], [13.124358, 50.514458], [13.125058, 50.509983], [13.111071, 50.509144], [13.11177, 50.504665], [13.090649, 50.50327], [13.091349, 50.49879], [13.070367, 50.497395], [13.069668, 50.50187], [13.055541, 50.50131], [13.054281, 50.509983], [13.0333, 50.508583], [13.035259, 50.495155], [13.028265, 50.494595], [13.031063, 50.476692], [13.024069, 50.476273], [13.028126, 50.449417], [13.0211315, 50.448856], [13.021831, 50.44438], [12.9952545, 50.43361], [12.996654, 50.42466], [12.98966, 50.4241], [12.990359, 50.419624], [12.977491, 50.418785], [12.977072, 50.414307], [12.949097, 50.41221], [12.949796, 50.407875], [12.935808, 50.407036], [12.935109, 50.41151], [12.928815, 50.411232], [12.927416, 50.41543], [12.920423, 50.41501], [12.9197235, 50.419483], [12.900001, 50.42298], [12.882377, 50.43277], [12.874824, 50.43543], [12.874264, 50.439064], [12.86727, 50.438644], [12.866571, 50.443123], [12.859577, 50.442562], [12.858878, 50.447037], [12.851884, 50.446617], [12.851185, 50.451096], [12.844192, 50.450676], [12.843492, 50.45515], [12.829504, 50.454174], [12.828805, 50.45865], [12.821812, 50.458088], [12.82321, 50.449135], [12.816216, 50.448715], [12.8169155, 50.44424], [12.809922, 50.44368], [12.81244, 50.43249], [12.806565, 50.432632], [12.80111, 50.440323], [12.791598, 50.447037], [12.781248, 50.44634], [12.781947, 50.441864], [12.761386, 50.440464], [12.73439, 50.429554], [12.735089, 50.42508], [12.718584, 50.419903], [12.712151, 50.41263], [12.706136, 50.408993], [12.705156, 50.397804], [12.691169, 50.403816], [12.677741, 50.41361], [12.678021, 50.417244], [12.666552, 50.417664], [12.654522, 50.41053], [12.643052, 50.41095], [12.637597, 50.414726], [12.626548, 50.418922], [12.615078, 50.419205], [12.603048, 50.41221], [12.602769, 50.408432], [12.58011, 50.40927], [12.573955, 50.405636], [12.56836, 50.405914], [12.556471, 50.402557], [12.533531, 50.40326], [12.527657, 50.39976], [12.5160475, 50.40004], [12.491849, 50.38228], [12.491709, 50.3785], [12.485135, 50.36745], [12.49003, 50.36731], [12.493108, 50.34913], [12.458139, 50.34661], [12.458979, 50.342133], [12.444991, 50.341152], [12.447229, 50.327724], [12.440375, 50.327305], [12.441074, 50.32283], [12.434081, 50.32227], [12.433242, 50.326748], [12.4193945, 50.325626], [12.420094, 50.321293], [12.406106, 50.320312], [12.407645, 50.31136], [12.400651, 50.310802], [12.40149, 50.306324], [12.408344, 50.306885], [12.409883, 50.29793], [12.402889, 50.297375], [12.4037285, 50.292896], [12.396595, 50.29234], [12.397434, 50.28786], [12.376593, 50.286324], [12.377293, 50.281986], [12.370298, 50.28143], [12.371138, 50.27695], [12.364144, 50.276394], [12.365542, 50.26744], [12.358549, 50.26702], [12.363725, 50.23569], [12.356871, 50.23513], [12.356031, 50.239605], [12.33519, 50.238068], [12.339666, 50.21135], [12.3329525, 50.21065], [12.333511, 50.206177], [12.326518, 50.205757], [12.328476, 50.194565], [12.316867, 50.194565], [12.321902, 50.183655], [12.327777, 50.183376], [12.327637, 50.17974], [12.299522, 50.17932], [12.282738, 50.18268], [12.282877, 50.194145], [12.2716875, 50.197502], [12.2662325, 50.205055], [12.272247, 50.208973], [12.277842, 50.208973], [12.278681, 50.223938], [12.273087, 50.227436], [12.273506, 50.23499], [12.267911, 50.23863], [12.2577, 50.238487], [12.250846, 50.242264], [12.245531, 50.249676], [12.234201, 50.253315], [12.234481, 50.25709], [12.240076, 50.25709], [12.240496, 50.264503], [12.251825, 50.260868], [12.251685, 50.25709], [12.25756, 50.25709], [12.25812, 50.26856], [12.252944, 50.275692], [12.206507, 50.275555], [12.194897, 50.27905], [12.195736, 50.294155], [12.190141, 50.297653], [12.190701, 50.305065], [12.196435, 50.305347], [12.197135, 50.316257], [12.194057, 50.32283], [12.131254, 50.318214], [12.131953, 50.31374], [12.12496, 50.31318], [12.119644, 50.31276], [12.109294, 50.31975], [12.1035595, 50.319473], [12.0871935, 50.33066], [12.087474, 50.3343], [12.070689, 50.33416], [12.065233, 50.337936], [12.054044, 50.337795], [12.053904, 50.33416], [12.042435, 50.33416], [12.042714, 50.337936], [12.031244, 50.33416], [12.031943, 50.34521], [12.020614, 50.34507], [12.015299, 50.348846], [11.998514, 50.352486], [11.992919, 50.35612], [11.981309, 50.352486], [11.975854, 50.35612], [11.982148, 50.363674], [11.982429, 50.371086], [11.988723, 50.3785], [11.983268, 50.38228], [11.983827, 50.393467], [11.972497, 50.397102], [11.972917, 50.40088], [11.955572, 50.40088], [11.955293, 50.397102], [11.9496975, 50.40088], [11.955712, 50.408154], [11.955992, 50.41193], [11.939207, 50.426895], [11.933332, 50.42312], [11.927737, 50.426895], [11.933473, 50.430534], [11.933892, 50.438087], [11.922282, 50.437946], [11.910673, 50.441723], [11.904658, 50.437946], [11.899063, 50.44536], [11.899483, 50.452915], [11.911372, 50.45655], [11.922982, 50.45655], [11.929136, 50.464104], [11.935151, 50.46788], [11.940886, 50.46788], [11.940886, 50.464104], [11.952215, 50.46047], [11.95809, 50.45669], [11.95837, 50.46047], [11.94676, 50.464104], [11.94746, 50.482708], [11.965084, 50.482845], [11.971099, 50.486485], [11.971378, 50.49026], [11.965504, 50.494038], [11.965644, 50.497673], [11.954034, 50.50131], [11.954034, 50.505085], [11.948439, 50.50886], [11.942564, 50.50886], [11.936689, 50.5125], [11.937249, 50.527325], [11.931514, 50.5311], [11.9255, 50.5311], [11.919485, 50.527325], [11.92522, 50.52355], [11.92508, 50.519913], [11.889832, 50.519913], [11.890112, 50.527325], [11.884237, 50.530823], [11.878782, 50.545788], [11.884657, 50.549564], [11.884936, 50.55334], [11.890811, 50.55698], [11.91445, 50.557117], [11.932493, 50.560894], [11.932633, 50.56831], [11.938787, 50.572086], [11.939068, 50.583275], [11.933332, 50.586914], [11.933332, 50.59055], [11.945082, 50.59069], [11.945362, 50.594467], [11.951237, 50.594467], [11.957251, 50.60188], [11.963546, 50.605656], [11.963546, 50.60929], [11.96942, 50.60929], [11.975295, 50.605656], [11.999353, 50.616844], [11.993479, 50.620483], [11.993898, 50.627895], [11.999912, 50.63167], [12.005927, 50.63167], [12.017957, 50.639225], [12.029566, 50.631813], [12.029566, 50.628036], [12.023551, 50.628036], [12.017537, 50.62426], [12.017537, 50.620483], [12.011522, 50.620483], [12.011242, 50.616844], [12.034601, 50.60202], [12.040755, 50.605797], [12.046491, 50.60202], [12.040196, 50.590828], [12.039916, 50.583416], [12.027887, 50.575863], [12.027468, 50.56845], [12.038938, 50.557537], [12.056841, 50.561317], [12.056702, 50.557537], [12.062716, 50.557537], [12.074745, 50.561317], [12.08062, 50.561317], [12.086774, 50.56481], [12.087474, 50.583557], [12.105377, 50.583557], [12.111532, 50.587334], [12.122722, 50.572365], [12.128596, 50.572506], [12.134891, 50.576283], [12.134891, 50.579918], [12.164684, 50.58006], [12.170838, 50.583694], [12.171118, 50.58747], [12.165243, 50.59111], [12.153355, 50.59111], [12.1539135, 50.6023], [12.160348, 50.613487], [12.160768, 50.62468], [12.154893, 50.628315], [12.155033, 50.63209], [12.161047, 50.635727], [12.179091, 50.635727], [12.184966, 50.63209], [12.184546, 50.620903], [12.20245, 50.620903], [12.203149, 50.635868], [12.209164, 50.635868], [12.209304, 50.639645], [12.221473, 50.647057], [12.233222, 50.639645], [12.245111, 50.639645], [12.244971, 50.635868], [12.25714, 50.635868], [12.25714, 50.639645], [12.263295, 50.64342], [12.281059, 50.639645], [12.281479, 50.64734], [12.2757435, 50.650833], [12.2818985, 50.65475], [12.293648, 50.650833], [12.294067, 50.65825], [12.305676, 50.65461], [12.306096, 50.658386], [12.318266, 50.665802], [12.318545, 50.66958], [12.324699, 50.673214], [12.330435, 50.673214], [12.331134, 50.680767], [12.337428, 50.68804], [12.337568, 50.69182], [12.331694, 50.695454], [12.325539, 50.69182], [12.31351, 50.69182], [12.313649, 50.695595], [12.289452, 50.695454], [12.283577, 50.69923], [12.283577, 50.70287], [12.277562, 50.70287], [12.277842, 50.713917], [12.266092, 50.724968], [12.272247, 50.728603], [12.278261, 50.728603], [12.278261, 50.732243], [12.284416, 50.735878], [12.284416, 50.739655], [12.278542, 50.74693], [12.254483, 50.74343], [12.254483, 50.739796], [12.248468, 50.739796], [12.248609, 50.747066], [12.242594, 50.747066], [12.243013, 50.765392], [12.249028, 50.769028], [12.255182, 50.776302], [12.261057, 50.772663], [12.267072, 50.772663], [12.272946, 50.768887], [12.278821, 50.768887], [12.302879, 50.783295], [12.30302, 50.797844], [12.29113, 50.794346], [12.267351, 50.794624], [12.267491, 50.805534], [12.261757, 50.81295], [12.255742, 50.816586], [12.261757, 50.82022], [12.261896, 50.82386], [12.267771, 50.82386], [12.273645, 50.820084], [12.285535, 50.819942], [12.285675, 50.82372], [12.29155, 50.823578], [12.2914095, 50.816307], [12.297424, 50.816166], [12.2975645, 50.827217], [12.303578, 50.827076], [12.309453, 50.82344], [12.309593, 50.83435], [12.315608, 50.837986], [12.315468, 50.83071], [12.321342, 50.826935], [12.344981, 50.826656], [12.350996, 50.830154], [12.362745, 50.830013], [12.363025, 50.8447], [12.374914, 50.848198], [12.380929, 50.851692], [12.380929, 50.85533], [12.386804, 50.85533], [12.386944, 50.858967], [12.392818, 50.858826], [12.392818, 50.85519], [12.416317, 50.85477], [12.422332, 50.858406], [12.422471, 50.862045], [12.428206, 50.85827], [12.428206, 50.85463], [12.433941, 50.847218], [12.433802, 50.84344], [12.44569, 50.850574], [12.451565, 50.846798], [12.45758, 50.850433], [12.45758, 50.854073], [12.463594, 50.857567], [12.463735, 50.861206], [12.45786, 50.864983], [12.457999, 50.86876], [12.469889, 50.875893], [12.4759035, 50.87575], [12.476183, 50.886803], [12.494087, 50.893795], [12.494087, 50.897434], [12.500101, 50.897293], [12.52374, 50.90051], [12.523601, 50.896873], [12.529614, 50.90051], [12.52388, 50.904285], [12.52402, 50.907925], [12.53591, 50.91142], [12.541784, 50.91128], [12.541644, 50.907505], [12.547519, 50.907505], [12.553393, 50.90373], [12.571298, 50.91072], [12.577172, 50.91058], [12.577032, 50.906944], [12.582907, 50.906803], [12.583047, 50.910442], [12.588922, 50.906666], [12.61242, 50.906246], [12.61256, 50.90988], [12.630324, 50.909603], [12.636338, 50.913097], [12.642074, 50.90932], [12.647948, 50.90932], [12.653683, 50.905407], [12.654102, 50.916454], [12.666132, 50.923588], [12.666271, 50.927364], [12.660537, 50.93114], [12.654662, 50.931282], [12.654942, 50.938557], [12.643192, 50.94247], [12.637318, 50.94261], [12.637458, 50.946247], [12.6433325, 50.94611], [12.643612, 50.95352], [12.638157, 50.96835], [12.632702, 50.979538], [12.632842, 50.986813], [12.627107, 50.99059], [12.621232, 50.990726], [12.621512, 51.001778], [12.609483, 50.994644], [12.603468, 50.994785], [12.591579, 50.991287], [12.585704, 50.995064], [12.579829, 50.995205], [12.574095, 50.99898], [12.56808, 50.99898], [12.56822, 51.002758], [12.556331, 51.0029], [12.550316, 50.9994], [12.538567, 51.003178], [12.55661, 51.01031], [12.550735, 51.014088], [12.551155, 51.028774], [12.54528, 51.028774], [12.533252, 51.025417], [12.533391, 51.029053], [12.527516, 51.029194], [12.527097, 51.018143], [12.521362, 51.02192], [12.521642, 51.03297], [12.515767, 51.036747], [12.516327, 51.05507], [12.522202, 51.05493], [12.516606, 51.06612], [12.510732, 51.069897], [12.492968, 51.070175], [12.486954, 51.06654], [12.480939, 51.06668], [12.481079, 51.070316], [12.475064, 51.070457], [12.475484, 51.085144], [12.469609, 51.08892], [12.469609, 51.085144], [12.463594, 51.08528], [12.463454, 51.081646], [12.433802, 51.082066], [12.421632, 51.074932], [12.404148, 51.08612], [12.398133, 51.08626], [12.398133, 51.082626], [12.392118, 51.082626], [12.386105, 51.078987], [12.38023, 51.082764], [12.374215, 51.082905], [12.3683405, 51.08668], [12.36862, 51.09759], [12.362745, 51.101368], [12.356871, 51.10151], [12.350996, 51.105145], [12.344981, 51.105286], [12.3329525, 51.09801], [12.321063, 51.09829], [12.315188, 51.10193], [12.30302, 51.094795], [12.297145, 51.094795], [12.29127, 51.09857], [12.29127, 51.102207], [12.273506, 51.102486], [12.2614765, 51.09885], [12.2614765, 51.102627], [12.255602, 51.102627], [12.243712, 51.106403], [12.237838, 51.11018], [12.237978, 51.11382], [12.231963, 51.113956], [12.232243, 51.125008], [12.238118, 51.124866], [12.250147, 51.128365], [12.250287, 51.13214], [12.244412, 51.139553], [12.220493, 51.139835], [12.208744, 51.143612], [12.209164, 51.16557], [12.2151785, 51.16557], [12.215319, 51.172844], [12.221333, 51.172844], [12.221473, 51.183895], [12.209583, 51.18767], [12.203709, 51.18767], [12.185665, 51.184174], [12.185805, 51.191586], [12.191819, 51.191586], [12.203849, 51.19872], [12.198113, 51.206135], [12.210283, 51.217045], [12.204408, 51.224457], [12.2049675, 51.250195], [12.199233, 51.257607], [12.193218, 51.261383], [12.181329, 51.261524], [12.181469, 51.2688], [12.175454, 51.268936], [12.175594, 51.272575], [12.181609, 51.27621], [12.181889, 51.287262], [12.176014, 51.294674], [12.163984, 51.294815], [12.164404, 51.3095], [12.158529, 51.32055], [12.176573, 51.32041], [12.176713, 51.327824], [12.1947565, 51.327545], [12.200771, 51.33118], [12.201191, 51.349644], [12.207346, 51.35692], [12.207485, 51.360554], [12.20147, 51.360554], [12.20147, 51.36433], [12.1954565, 51.36433], [12.195596, 51.368107], [12.189582, 51.368107], [12.189721, 51.37538], [12.183707, 51.375523], [12.183987, 51.38657], [12.190141, 51.39021], [12.184406, 51.401257], [12.184546, 51.408672], [12.19056, 51.412308], [12.190701, 51.415943], [12.196715, 51.415943], [12.196855, 51.423218], [12.19098, 51.43063], [12.179091, 51.434547], [12.178951, 51.43077], [12.173077, 51.434547], [12.167062, 51.43469], [12.167481, 51.45301], [12.155592, 51.460564], [12.155732, 51.464203], [12.167761, 51.46406], [12.173776, 51.467697], [12.1797905, 51.467697], [12.185945, 51.471195], [12.186225, 51.482384], [12.210283, 51.48574], [12.216578, 51.49679], [12.216717, 51.500427], [12.210703, 51.500427], [12.198673, 51.504345], [12.198813, 51.50798], [12.204827, 51.50798], [12.205108, 51.51903], [12.199093, 51.51903], [12.199093, 51.522667], [12.205247, 51.526306], [12.205387, 51.530083], [12.211402, 51.52994], [12.211402, 51.53372], [12.217417, 51.533577], [12.217696, 51.540993], [12.241895, 51.548126], [12.242174, 51.559177], [12.248328, 51.56645], [12.260358, 51.56631], [12.260218, 51.558895], [12.30232, 51.558475], [12.30246, 51.562115], [12.308475, 51.56575], [12.320643, 51.56925], [12.3267975, 51.572884], [12.3267975, 51.57666], [12.338966, 51.57652], [12.344981, 51.580017], [12.345121, 51.583794], [12.35715, 51.583652], [12.35729, 51.58729], [12.375195, 51.583374], [12.387223, 51.583233], [12.393377, 51.586872], [12.405267, 51.582954], [12.43534, 51.582676], [12.43576, 51.597363], [12.447928, 51.59722], [12.447928, 51.600998], [12.454083, 51.604496], [12.454223, 51.608273], [12.4602375, 51.60813], [12.460097, 51.604496], [12.471987, 51.60058], [12.478002, 51.60058], [12.478141, 51.604214], [12.496185, 51.603935], [12.496185, 51.6003], [12.49003, 51.59666], [12.489891, 51.593025], [12.495905, 51.592884], [12.514369, 51.603794], [12.514369, 51.607433], [12.526398, 51.603657], [12.544441, 51.603374], [12.550316, 51.599598], [12.556471, 51.603237], [12.55661, 51.606873], [12.562625, 51.606873], [12.574655, 51.61037], [12.580809, 51.614006], [12.586823, 51.613865], [12.593258, 51.624916], [12.599272, 51.624775], [12.598992, 51.617363], [12.605007, 51.617363], [12.611161, 51.621], [12.611301, 51.624638], [12.63536, 51.624355], [12.635499, 51.627995], [12.641374, 51.624218], [12.635079, 51.614426], [12.659418, 51.6203], [12.659418, 51.623936], [12.665572, 51.627575], [12.677741, 51.63107], [12.678021, 51.638485], [12.69047, 51.649395], [12.69061, 51.65317], [12.696764, 51.65667], [12.696764, 51.660446], [12.732991, 51.659885], [12.744881, 51.65611], [12.7508955, 51.655968], [12.750755, 51.652332], [12.75677, 51.65219], [12.762645, 51.648415], [12.774673, 51.648273], [12.774534, 51.644638], [12.786703, 51.64436], [12.792857, 51.65177], [12.799292, 51.66268], [12.811321, 51.662544], [12.817475, 51.66618], [12.82349, 51.66604], [12.829644, 51.669678], [12.835659, 51.669537], [12.841813, 51.673172], [12.842093, 51.680588], [12.860137, 51.680305], [12.872166, 51.67653], [12.87804, 51.672752]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Schleswig-Holstein',
      type: 'Land',
      area: '15,763.18 km²',
      bundesratVotes: '4 (out of 69)',
      density: '180/km²',
      timeZone: 'UTC+1 (CET)',
      population: 2896712,
      capital: 'Kiel',
      government: 'Landtag of Schleswig-Holstein',
      head: 'Daniel Günther (CDU)'
    },
    geometry: {
      type: 'MultiPolygon',
      coordinates: [[[[8.689658, 54.066833], [8.6918955, 54.06152], [8.701407, 54.059002], [8.700848, 54.056763], [8.68756, 54.052147], [8.689658, 54.047672], [8.682525, 54.04823], [8.676929, 54.052708], [8.67637, 54.059002], [8.683084, 54.066277], [8.689658, 54.066833]]], [[[8.977518, 54.067955], [8.9825535, 54.06376], [8.976399, 54.0618], [8.966887, 54.063198], [8.966887, 54.065994], [8.977518, 54.067955]]], [[[8.611888, 54.088795], [8.615245, 54.08376], [8.602516, 54.080124], [8.600279, 54.075645], [8.592445, 54.075367], [8.586431, 54.08152], [8.591327, 54.08516], [8.611888, 54.088795]]], [[[7.918673, 54.189922], [7.918673, 54.180973], [7.908043, 54.18069], [7.9024477, 54.186565], [7.918673, 54.189922]]], [[[7.862444, 54.19398], [7.873074, 54.187687], [7.8852434, 54.188805], [7.8919573, 54.184048], [7.895314, 54.174816], [7.8891597, 54.16992], [7.886362, 54.176495], [7.8792286, 54.18265], [7.865801, 54.188526], [7.862444, 54.19398]]], [[[8.62084, 54.42631], [8.615245, 54.422672], [8.613007, 54.425472], [8.62084, 54.42631]]], [[[8.5503435, 54.468132], [8.560834, 54.464916], [8.560274, 54.461838], [8.5503435, 54.4596], [8.544748, 54.466312], [8.5503435, 54.468132]]], [[[8.734697, 54.468132], [8.730221, 54.462677], [8.724766, 54.462116], [8.724766, 54.468132], [8.734697, 54.468132]]], [[[8.47635, 54.476524], [8.474671, 54.466034], [8.4836235, 54.4624], [8.486422, 54.454285], [8.484742, 54.45009], [8.492995, 54.449528], [8.508661, 54.436802], [8.518033, 54.434002], [8.526425, 54.436802], [8.525866, 54.433445], [8.4897785, 54.4126], [8.486422, 54.4126], [8.4741125, 54.419315], [8.465859, 54.42715], [8.458027, 54.44016], [8.452012, 54.445194], [8.450334, 54.455402], [8.45411, 54.463238], [8.469776, 54.475685], [8.47635, 54.476524]]], [[[11.069752, 54.534714], [11.072549, 54.532616], [11.116329, 54.528137], [11.131435, 54.524643], [11.17144, 54.521564], [11.190323, 54.51429], [11.190323, 54.511494], [11.216899, 54.50464], [11.224173, 54.50436], [11.228648, 54.507298], [11.235222, 54.50576], [11.233543, 54.499043], [11.243055, 54.49345], [11.247531, 54.48072], [11.252566, 54.47121], [11.267533, 54.464634], [11.276345, 54.45624], [11.276345, 54.45149], [11.287535, 54.43792], [11.296906, 54.432884], [11.301382, 54.420437], [11.307537, 54.411762], [11.312432, 54.408688], [11.313552, 54.40211], [11.298025, 54.40267], [11.278584, 54.40491], [11.256903, 54.410923], [11.245293, 54.412045], [11.213122, 54.411205], [11.194099, 54.408127], [11.19368, 54.412323], [11.210324, 54.413162], [11.210884, 54.417637], [11.196338, 54.419876], [11.189203, 54.41876], [11.173677, 54.419598], [11.165845, 54.413162], [11.181371, 54.40351], [11.175217, 54.400993], [11.158011, 54.400993], [11.138569, 54.40295], [11.118567, 54.40267], [11.109196, 54.406868], [11.094789, 54.409527], [11.097446, 54.413723], [11.095208, 54.423233], [11.101922, 54.42925], [11.101363, 54.43568], [11.095768, 54.43876], [11.094789, 54.44575], [11.085837, 54.444633], [11.081921, 54.44925], [11.074227, 54.44925], [11.063597, 54.452606], [11.053666, 54.44981], [11.053106, 54.445473], [11.044154, 54.44757], [11.032545, 54.445194], [11.030867, 54.442677], [11.023033, 54.444355], [11.021355, 54.438198], [11.009186, 54.441277], [11.00527, 54.44575], [11.011984, 54.486034], [11.02751, 54.508698], [11.03744, 54.51877], [11.061359, 54.533173], [11.069752, 54.534714]]], [[[8.477469, 54.54618], [8.482505, 54.542404], [8.492435, 54.539608], [8.503626, 54.533733], [8.503626, 54.530376], [8.494114, 54.528976], [8.491457, 54.51597], [8.498031, 54.50786], [8.496352, 54.5038], [8.47635, 54.495968], [8.470336, 54.497364], [8.470895, 54.50702], [8.468098, 54.510654], [8.464741, 54.5252], [8.469216, 54.54492], [8.477469, 54.54618]]], [[[8.808551, 54.555973], [8.816943, 54.552895], [8.830231, 54.552616], [8.830231, 54.54702], [8.82086, 54.542965], [8.807431, 54.54814], [8.808551, 54.555973]]], [[[8.6918955, 54.55709], [8.707003, 54.553734], [8.702526, 54.540447], [8.705883, 54.538208], [8.685322, 54.5052], [8.678608, 54.498764], [8.664761, 54.49261], [8.63189, 54.488415], [8.618042, 54.490932], [8.60979, 54.495686], [8.606993, 54.50072], [8.592445, 54.507298], [8.589229, 54.511772], [8.586431, 54.522404], [8.58699, 54.528698], [8.592445, 54.533455], [8.614685, 54.53541], [8.625316, 54.535133], [8.638604, 54.53933], [8.6408415, 54.54492], [8.669656, 54.54898], [8.681405, 54.554855], [8.6918955, 54.55709]]], [[[8.551323, 54.579613], [8.557477, 54.578773], [8.564751, 54.56898], [8.575241, 54.565624], [8.5707655, 54.557373], [8.549225, 54.556534], [8.5408325, 54.564365], [8.528663, 54.565903], [8.52139, 54.5701], [8.517473, 54.56926], [8.50922, 54.574017], [8.51034, 54.577652], [8.516913, 54.579052], [8.530341, 54.575134], [8.546987, 54.576813], [8.551323, 54.579613]]], [[[8.483064, 54.58465], [8.479148, 54.577374], [8.491457, 54.575974], [8.491457, 54.57094], [8.500828, 54.55849], [8.491457, 54.556534], [8.4836235, 54.55793], [8.466979, 54.55765], [8.461384, 54.554855], [8.455229, 54.55877], [8.456348, 54.569542], [8.467538, 54.579052], [8.475231, 54.58325], [8.483064, 54.58465]]], [[[8.733019, 54.644375], [8.738054, 54.642696], [8.738614, 54.634583], [8.728123, 54.628147], [8.716933, 54.62759], [8.70966, 54.631786], [8.711338, 54.63738], [8.718052, 54.641857], [8.727004, 54.641857], [8.733019, 54.644375]]], [[[8.663641, 54.661858], [8.663641, 54.65011], [8.660844, 54.646473], [8.648675, 54.639618], [8.633009, 54.63794], [8.628673, 54.6357], [8.602516, 54.632626], [8.598041, 54.635143], [8.584193, 54.633743], [8.568108, 54.62591], [8.561953, 54.62647], [8.546987, 54.617657], [8.542511, 54.621574], [8.530901, 54.62493], [8.530341, 54.631226], [8.539713, 54.63654], [8.555239, 54.63542], [8.607552, 54.642696], [8.616364, 54.645634], [8.629232, 54.647312], [8.641401, 54.65067], [8.648675, 54.655144], [8.658606, 54.656822], [8.663641, 54.661858]]], [[[8.712458, 54.69207], [8.721409, 54.687874], [8.721969, 54.685078], [8.710779, 54.674587], [8.704764, 54.67291], [8.685322, 54.671787], [8.682525, 54.676266], [8.690217, 54.676266], [8.703645, 54.684517], [8.70966, 54.685356], [8.712458, 54.69207]]], [[[8.356898, 54.711514], [8.358017, 54.707317], [8.347527, 54.701862], [8.339134, 54.69375], [8.339134, 54.689274], [8.344728, 54.68018], [8.3541, 54.673466], [8.353541, 54.66759], [8.360255, 54.65878], [8.360255, 54.65151], [8.381935, 54.641018], [8.379698, 54.632904], [8.385852, 54.62759], [8.400259, 54.629547], [8.403616, 54.62591], [8.385852, 54.623814], [8.390327, 54.616817], [8.396342, 54.6171], [8.395224, 54.612064], [8.379698, 54.611782], [8.370326, 54.607586], [8.362493, 54.608425], [8.352562, 54.618217], [8.307523, 54.65011], [8.293116, 54.665634], [8.291996, 54.67039], [8.303046, 54.676544], [8.3052845, 54.682697], [8.322489, 54.689552], [8.342491, 54.70564], [8.356898, 54.711514]]], [[[8.539713, 54.755714], [8.558596, 54.752636], [8.57692, 54.7476], [8.586431, 54.741306], [8.586431, 54.73571], [8.581955, 54.7276], [8.591886, 54.722424], [8.595243, 54.717945], [8.583074, 54.713192], [8.575241, 54.7027], [8.577479, 54.69179], [8.573563, 54.69123], [8.566989, 54.6799], [8.563072, 54.67934], [8.533559, 54.68158], [8.518592, 54.68046], [8.480267, 54.68102], [8.470336, 54.68298], [8.452012, 54.69235], [8.428653, 54.69431], [8.399139, 54.70214], [8.395782, 54.708996], [8.396342, 54.717667], [8.408651, 54.734314], [8.418582, 54.741867], [8.429772, 54.745922], [8.449774, 54.747322], [8.472993, 54.752636], [8.48698, 54.74984], [8.497471, 54.74928], [8.52083, 54.755154], [8.539713, 54.755714]]], [[[9.572541, 54.885098], [9.565827, 54.87908], [9.56359, 54.88118], [9.571143, 54.888874], [9.572541, 54.885098]]], [[[10.89477, 53.955914], [10.899105, 53.94976], [10.886796, 53.942486], [10.887775, 53.92388], [10.89379, 53.92752], [10.906239, 53.92724], [10.931696, 53.922905], [10.931836, 53.91913], [10.93813, 53.918987], [10.93827, 53.91535], [10.957293, 53.91479], [10.957433, 53.911156], [10.957433, 53.90738], [10.950998, 53.911293], [10.944704, 53.911434], [10.944844, 53.9078], [10.93855, 53.90416], [10.93841, 53.907936], [10.932256, 53.9043], [10.919666, 53.90458], [10.913512, 53.900944], [10.901064, 53.901222], [10.89477, 53.90514], [10.894489, 53.91255], [10.900364, 53.919968], [10.887916, 53.920105], [10.881621, 53.924023], [10.881481, 53.927658], [10.875327, 53.9278], [10.869312, 53.924164], [10.869592, 53.916748], [10.863577, 53.91689], [10.851408, 53.91339], [10.851548, 53.909615], [10.845533, 53.909756], [10.8395195, 53.90612], [10.839659, 53.90248], [10.833784, 53.898846], [10.821615, 53.898987], [10.803711, 53.888077], [10.797836, 53.880802], [10.779933, 53.877304], [10.773918, 53.88108], [10.767903, 53.88108], [10.767903, 53.877304], [10.756015, 53.866394], [10.756015, 53.862617], [10.75, 53.858982], [10.750139, 53.85157], [10.744265, 53.84052], [10.750279, 53.836742], [10.756294, 53.836742], [10.762448, 53.829327], [10.762729, 53.814503], [10.768883, 53.810726], [10.762868, 53.807087], [10.769023, 53.80331], [10.769162, 53.7959], [10.763288, 53.784847], [10.769302, 53.78471], [10.769443, 53.78107], [10.763428, 53.77366], [10.757413, 53.77016], [10.757693, 53.75156], [10.763847, 53.75156], [10.763847, 53.755196], [10.769862, 53.755054], [10.7823105, 53.751278], [10.7884655, 53.75114], [10.79476, 53.747364], [10.801054, 53.747223], [10.807348, 53.743446], [10.807768, 53.724842], [10.814062, 53.724842], [10.814202, 53.721066], [10.820356, 53.721066], [10.833085, 53.71337], [10.845533, 53.713234], [10.851968, 53.70568], [10.864556, 53.7054], [10.864416, 53.709038], [10.870851, 53.70526], [10.877145, 53.70512], [10.8833, 53.708755], [10.889594, 53.70862], [10.908477, 53.704422], [10.914911, 53.700645], [10.9212055, 53.700504], [10.92764, 53.696587], [10.92764, 53.69295], [10.940508, 53.68512], [10.946942, 53.677567], [10.940648, 53.67407], [10.940787, 53.666515], [10.947222, 53.66274], [10.947362, 53.658962], [10.953656, 53.65882], [10.953796, 53.65141], [10.947641, 53.644135], [10.941347, 53.64064], [10.929038, 53.62973], [10.929038, 53.625954], [10.923024, 53.607628], [10.923444, 53.585247], [10.910995, 53.57448], [10.892251, 53.574898], [10.885957, 53.5714], [10.867214, 53.57182], [10.867354, 53.568184], [10.854765, 53.568462], [10.848471, 53.57238], [10.848331, 53.579792], [10.823434, 53.58021], [10.823434, 53.576576], [10.829728, 53.5728], [10.829867, 53.565388], [10.823713, 53.56175], [10.830008, 53.557972], [10.830008, 53.554195], [10.836442, 53.546642], [10.823993, 53.53951], [10.817839, 53.53965], [10.817979, 53.524822], [10.824273, 53.524685], [10.824412, 53.51727], [10.811824, 53.521328], [10.787066, 53.51811], [10.787207, 53.510696], [10.781052, 53.50342], [10.781052, 53.499786], [10.768743, 53.49629], [10.762448, 53.49643], [10.7625885, 53.49279], [10.756434, 53.489155], [10.756294, 53.49293], [10.750139, 53.489296], [10.743985, 53.489433], [10.737831, 53.485798], [10.731676, 53.489716], [10.725522, 53.486076], [10.725522, 53.4823], [10.706919, 53.48636], [10.694889, 53.464397], [10.682441, 53.464676], [10.676287, 53.468315], [10.651669, 53.468594], [10.651669, 53.46496], [10.639359, 53.465096], [10.633345, 53.454185], [10.633345, 53.45041], [10.62747, 53.4395], [10.62747, 53.432087], [10.621456, 53.424812], [10.621736, 53.391804], [10.609567, 53.388165], [10.603412, 53.388306], [10.597398, 53.377254], [10.597398, 53.37362], [10.591383, 53.37362], [10.585368, 53.369843], [10.579353, 53.369843], [10.56117, 53.380894], [10.524942, 53.38061], [10.512914, 53.38425], [10.506759, 53.38425], [10.488576, 53.39152], [10.476546, 53.39516], [10.470531, 53.398796], [10.458363, 53.40243], [10.440179, 53.409706], [10.42815, 53.413345], [10.409966, 53.420757], [10.391783, 53.435444], [10.343387, 53.435165], [10.331218, 53.442577], [10.319188, 53.442436], [10.319049, 53.446213], [10.331218, 53.446213], [10.331078, 53.449852], [10.336812, 53.46104], [10.324364, 53.4609], [10.324783, 53.45363], [10.312334, 53.453487], [10.30576, 53.457123], [10.311914, 53.4609], [10.298906, 53.468174], [10.292612, 53.468174], [10.279464, 53.47545], [10.278905, 53.486637], [10.266176, 53.486496], [10.259602, 53.490135], [10.246734, 53.49377], [10.246035, 53.5086], [10.23974, 53.50482], [10.233445, 53.50482], [10.2268715, 53.508457], [10.226731, 53.512234], [10.233166, 53.512234], [10.233026, 53.51587], [10.226452, 53.51951], [10.226172, 53.52692], [10.219598, 53.53056], [10.207009, 53.523144], [10.194281, 53.523144], [10.187707, 53.526783], [10.174699, 53.53042], [10.168124, 53.534054], [10.167985, 53.53783], [10.174279, 53.54147], [10.173999, 53.54888], [10.167565, 53.54888], [10.161271, 53.545105], [10.154557, 53.556156], [10.167006, 53.56357], [10.166726, 53.57098], [10.153857, 53.57462], [10.153717, 53.578255], [10.160012, 53.578396], [10.159593, 53.589443], [10.166026, 53.589443], [10.17232, 53.593082], [10.210647, 53.59322], [10.203932, 53.600636], [10.197498, 53.60427], [10.203652, 53.608047], [10.203233, 53.6191], [10.196798, 53.6191], [10.196659, 53.622734], [10.202953, 53.626373], [10.22799, 53.633926], [10.227851, 53.63756], [10.221557, 53.63756], [10.221416, 53.641197], [10.214843, 53.644974], [10.208548, 53.644836], [10.19568, 53.64847], [10.208128, 53.656025], [10.201414, 53.6633], [10.188406, 53.67071], [10.182112, 53.67057], [10.181832, 53.677986], [10.168963, 53.677986], [10.16239, 53.6854], [10.149521, 53.685257], [10.149382, 53.689034], [10.155676, 53.692673], [10.16183, 53.700085], [10.167845, 53.711136], [10.16141, 53.711136], [10.161271, 53.714912], [10.17386, 53.718548], [10.180154, 53.722324], [10.180293, 53.718548], [10.186588, 53.71869], [10.198896, 53.729736], [10.198617, 53.740788], [10.192183, 53.740788], [10.185749, 53.744427], [10.179315, 53.744427], [10.179174, 53.748062], [10.166446, 53.748062], [10.166726, 53.74065], [10.12882, 53.729458], [10.12896, 53.725822], [10.122665, 53.722046], [10.103363, 53.72568], [10.096788, 53.729458], [10.084061, 53.729317], [10.077906, 53.721905], [10.071471, 53.721905], [10.071611, 53.71827], [10.078046, 53.71827], [10.071752, 53.714493], [10.078325, 53.710854], [10.072171, 53.70344], [10.072731, 53.688755], [10.053428, 53.688614], [10.046994, 53.692253], [10.002094, 53.692112], [9.989785, 53.677284], [9.996499, 53.670013], [9.996639, 53.666237], [9.990205, 53.666237], [9.990485, 53.65882], [9.964748, 53.658684], [9.9518795, 53.66246], [9.945445, 53.66232], [9.919569, 53.665955], [9.90684, 53.662178], [9.90726, 53.65113], [9.9008255, 53.65113], [9.900966, 53.647354], [9.894671, 53.643715], [9.894811, 53.63994], [9.888516, 53.636303], [9.888657, 53.632526], [9.882222, 53.632526], [9.869634, 53.62511], [9.869634, 53.621334], [9.857045, 53.613922], [9.857185, 53.610287], [9.85089, 53.60651], [9.838022, 53.60651], [9.831868, 53.599094], [9.825574, 53.595318], [9.8191395, 53.595318], [9.805991, 53.602592], [9.793122, 53.606228], [9.786408, 53.613644], [9.786269, 53.61728], [9.799137, 53.61742], [9.792563, 53.621056], [9.786269, 53.620914], [9.766827, 53.62819], [9.766546, 53.63924], [9.760252, 53.6391], [9.753958, 53.635323], [9.754098, 53.62805], [9.747804, 53.62427], [9.754238, 53.620636], [9.754518, 53.61336], [9.741649, 53.613224], [9.741929, 53.602173], [9.729341, 53.59476], [9.735914, 53.59112], [9.735914, 53.587486], [9.72976, 53.580074], [9.72976, 53.576435], [9.723605, 53.569023], [9.673531, 53.575317], [9.629331, 53.5928], [9.610448, 53.599796], [9.58527, 53.606647], [9.5598135, 53.620914], [9.547224, 53.62427], [9.534216, 53.63882], [9.527363, 53.653366], [9.526803, 53.67183], [9.513934, 53.682602], [9.506941, 53.700783], [9.481483, 53.71505], [9.443439, 53.732674], [9.417841, 53.746944], [9.404973, 53.757713], [9.391825, 53.775898], [9.372103, 53.801212], [9.365528, 53.812122], [9.365389, 53.81576], [9.358814, 53.823032], [9.339512, 53.8373], [9.326783, 53.844433], [9.313775, 53.855206], [9.288178, 53.869473], [9.256567, 53.876186], [9.231389, 53.879265], [9.23125, 53.88304], [9.199778, 53.88598], [9.162151, 53.885277], [9.143409, 53.88122], [9.105642, 53.88416], [9.096411, 53.884018], [9.095852, 53.888214], [9.079766, 53.89073], [9.068017, 53.89507], [9.05361, 53.89647], [9.051372, 53.898987], [9.027453, 53.898426], [9.011928, 53.89437], [8.99752, 53.89465], [8.981435, 53.89213], [8.971923, 53.89241], [8.949683, 53.9029], [8.929122, 53.91787], [8.922547, 53.920105], [8.903665, 53.93647], [8.896392, 53.9485], [8.883663, 53.96095], [8.874711, 53.967384], [8.87583, 53.979553], [8.869676, 53.98207], [8.863661, 53.991302], [8.852471, 53.99326], [8.847436, 54.001232], [8.844218, 54.00207], [8.838623, 54.012142], [8.829112, 54.022354], [8.81974, 54.021515], [8.82086, 54.02515], [8.837504, 54.02795], [8.84254, 54.03788], [8.854709, 54.042915], [8.880306, 54.046272], [8.9063225, 54.043476], [8.924227, 54.042915], [8.940871, 54.035084], [8.966329, 54.03564], [8.977518, 54.04096], [8.984232, 54.051586], [8.985771, 54.061237], [8.978638, 54.070473], [8.970804, 54.074806], [8.95304, 54.089634], [8.939753, 54.109634], [8.928562, 54.131035], [8.9219885, 54.133694], [8.904224, 54.13481], [8.895832, 54.133972], [8.879187, 54.128517], [8.870794, 54.124043], [8.860864, 54.122086], [8.855828, 54.1288], [8.84254, 54.131737], [8.834707, 54.13649], [8.8253355, 54.14572], [8.821419, 54.160408], [8.818062, 54.16712], [8.807431, 54.173138], [8.810229, 54.180973], [8.80911, 54.191463], [8.811908, 54.192303], [8.815265, 54.202652], [8.821979, 54.208805], [8.833588, 54.21622], [8.838064, 54.232025], [8.8307905, 54.236782], [8.833029, 54.245174], [8.844218, 54.2579], [8.897511, 54.258183], [8.903106, 54.26014], [8.920869, 54.275387], [8.933039, 54.278744], [8.94199, 54.288536], [8.941431, 54.297905], [8.944788, 54.30574], [8.944788, 54.313152], [8.925765, 54.298744], [8.905763, 54.29035], [8.899749, 54.284897], [8.889118, 54.28238], [8.879746, 54.275105], [8.844778, 54.264896], [8.840861, 54.280422], [8.830231, 54.289795], [8.81974, 54.291473], [8.793025, 54.2821], [8.771904, 54.28126], [8.769106, 54.286858], [8.749663, 54.287697], [8.7436495, 54.290073], [8.733579, 54.289093], [8.725885, 54.28518], [8.710779, 54.287697], [8.704205, 54.28602], [8.694134, 54.277065], [8.689098, 54.276505], [8.688119, 54.26853], [8.678048, 54.268253], [8.663082, 54.27091], [8.656927, 54.277622], [8.644758, 54.27287], [8.64308, 54.277344], [8.635247, 54.2807], [8.635247, 54.284058], [8.624197, 54.290073], [8.61972, 54.296787], [8.615805, 54.296227], [8.606993, 54.30294], [8.605314, 54.30742], [8.601957, 54.30294], [8.606433, 54.300705], [8.616364, 54.286297], [8.615245, 54.2835], [8.596922, 54.288254], [8.583074, 54.299305], [8.579717, 54.308258], [8.585312, 54.32658], [8.58755, 54.33791], [8.595243, 54.349518], [8.604754, 54.358192], [8.61972, 54.355953], [8.616923, 54.347702], [8.639163, 54.34015], [8.638044, 54.346302], [8.644198, 54.34574], [8.649235, 54.350918], [8.663082, 54.352318], [8.666998, 54.355114], [8.67637, 54.353157], [8.683084, 54.355392], [8.680846, 54.35959], [8.673013, 54.36015], [8.675251, 54.366863], [8.661404, 54.36798], [8.65357, 54.37204], [8.65357, 54.366863], [8.638044, 54.36854], [8.635247, 54.375954], [8.624197, 54.376514], [8.624197, 54.3698], [8.605873, 54.37064], [8.603076, 54.37372], [8.607552, 54.385468], [8.633569, 54.39344], [8.657487, 54.39428], [8.670774, 54.400715], [8.693574, 54.398476], [8.693574, 54.400715], [8.725326, 54.40351], [8.724207, 54.40603], [8.791347, 54.410084], [8.806453, 54.412884], [8.818062, 54.412323], [8.829112, 54.408966], [8.8431, 54.40743], [8.8552685, 54.403233], [8.864779, 54.40407], [8.893594, 54.412045], [8.917512, 54.42435], [8.9219885, 54.431206], [8.929122, 54.432884], [8.931919, 54.43708], [8.946326, 54.445194], [8.950243, 54.450928], [8.961432, 54.45792], [8.98633, 54.45904], [8.999199, 54.463238], [8.996961, 54.469532], [9.012486, 54.474846], [9.020879, 54.47205], [9.021998, 54.474846], [9.005214, 54.478764], [9.012486, 54.48464], [9.012486, 54.49037], [9.001996, 54.50268], [8.99752, 54.50352], [8.995282, 54.509254], [8.990247, 54.510933], [8.989128, 54.519325], [8.981435, 54.521004], [8.971923, 54.518486], [8.963671, 54.513172], [8.963111, 54.501564], [8.950243, 54.49177], [8.940871, 54.490093], [8.9369545, 54.4824], [8.929682, 54.478764], [8.9274435, 54.47121], [8.920869, 54.466595], [8.910239, 54.462677], [8.893034, 54.45876], [8.841981, 54.46072], [8.836386, 54.462955], [8.827993, 54.462116], [8.806453, 54.47037], [8.808551, 54.476246], [8.818062, 54.484356], [8.818622, 54.487015], [8.8096695, 54.48981], [8.807012, 54.49345], [8.8096695, 54.50072], [8.814146, 54.50352], [8.831909, 54.508137], [8.834147, 54.50702], [8.850233, 54.513733], [8.871914, 54.528137], [8.878628, 54.542686], [8.869676, 54.563248], [8.884222, 54.585346], [8.884222, 54.5943], [8.876949, 54.600174], [8.874711, 54.606186], [8.869676, 54.601852], [8.85359, 54.600452], [8.835266, 54.600452], [8.823097, 54.598774], [8.817503, 54.594578], [8.812467, 54.597935], [8.817503, 54.60269], [8.831909, 54.608704], [8.831909, 54.611782], [8.8403015, 54.619617], [8.826454, 54.631226], [8.825895, 54.641575], [8.817503, 54.646473], [8.814705, 54.653465], [8.808551, 54.653744], [8.799739, 54.66102], [8.780296, 54.666473], [8.754699, 54.68102], [8.750223, 54.69039], [8.751342, 54.70074], [8.744768, 54.708157], [8.723087, 54.71347], [8.721969, 54.71599], [8.711338, 54.717945], [8.7075615, 54.72396], [8.693015, 54.72536], [8.694694, 54.730675], [8.705324, 54.73739], [8.707003, 54.745083], [8.693015, 54.76243], [8.6918955, 54.77068], [8.67581, 54.789], [8.668118, 54.789284], [8.656368, 54.798515], [8.648675, 54.810123], [8.64364, 54.81208], [8.634128, 54.822014], [8.626435, 54.82425], [8.618602, 54.830406], [8.617483, 54.83404], [8.605314, 54.841316], [8.605314, 54.86957], [8.6013975, 54.87936], [8.590207, 54.885098], [8.516355, 54.88286], [8.500269, 54.87936], [8.481385, 54.872646], [8.4625025, 54.861458], [8.452012, 54.85712], [8.426415, 54.852646], [8.416345, 54.84705], [8.403616, 54.84817], [8.37746, 54.8588], [8.3658495, 54.875446], [8.346407, 54.876286], [8.339693, 54.88048], [8.334658, 54.876003], [8.326965, 54.87908], [8.315775, 54.876286], [8.314096, 54.87125], [8.305844, 54.870968], [8.301928, 54.867054], [8.304725, 54.858242], [8.296332, 54.842297], [8.298011, 54.83488], [8.294234, 54.827606], [8.2957735, 54.820755], [8.299689, 54.818516], [8.296892, 54.81124], [8.300249, 54.80341], [8.295214, 54.798233], [8.292556, 54.788445], [8.2957735, 54.778793], [8.300249, 54.775993], [8.300809, 54.762985], [8.294654, 54.756554], [8.295214, 54.745922], [8.293116, 54.742424], [8.279688, 54.751797], [8.281366, 54.762707], [8.282485, 54.80285], [8.284723, 54.82509], [8.286961, 54.857403], [8.290877, 54.88985], [8.296892, 54.906498], [8.31032, 54.931534], [8.319692, 54.943985], [8.328084, 54.95937], [8.345848, 54.978813], [8.3563385, 54.997135], [8.363612, 55.00399], [8.374661, 55.020073], [8.383055, 55.034622], [8.398581, 55.052944], [8.409211, 55.0563], [8.417463, 55.056583], [8.434109, 55.052105], [8.434109, 55.050426], [8.461384, 55.04707], [8.461944, 55.04483], [8.445858, 55.04399], [8.435227, 55.048748], [8.400818, 55.047348], [8.395782, 55.04623], [8.396902, 55.03602], [8.403056, 55.033783], [8.422499, 55.03434], [8.427534, 55.031822], [8.432011, 55.02483], [8.439144, 55.02343], [8.440823, 55.014618], [8.435227, 55.015457], [8.42138, 55.009026], [8.408092, 55.00567], [8.398021, 55.005108], [8.392006, 55.00119], [8.379138, 54.996857], [8.369206, 54.987343], [8.361374, 54.974617], [8.353541, 54.96846], [8.361934, 54.956852], [8.359136, 54.94986], [8.363052, 54.944824], [8.359136, 54.930695], [8.361934, 54.925938], [8.362493, 54.908733], [8.374661, 54.89433], [8.382495, 54.89041], [8.415225, 54.88076], [8.440263, 54.876842], [8.461384, 54.876842], [8.465859, 54.878242], [8.486422, 54.877403], [8.488659, 54.87908], [8.52139, 54.883976], [8.564191, 54.884815], [8.588109, 54.885937], [8.58755, 54.887894], [8.61972, 54.89349], [8.626435, 54.899643], [8.6313305, 54.89992], [8.6313305, 54.90426], [8.638044, 54.91293], [8.652731, 54.910275], [8.693854, 54.91433], [8.695113, 54.909855], [8.7028055, 54.910694], [8.704065, 54.906216], [8.711758, 54.906918], [8.713157, 54.90258], [8.72085, 54.90328], [8.722109, 54.898804], [8.729801, 54.899643], [8.731061, 54.89517], [8.761833, 54.898243], [8.7593155, 54.907055], [8.767008, 54.907757], [8.765749, 54.91223], [8.812047, 54.916706], [8.813307, 54.912373], [8.828692, 54.91377], [8.83149, 54.90426], [8.8505125, 54.893208], [8.865899, 54.894608], [8.86464, 54.899082], [8.889957, 54.90118], [8.902406, 54.90524], [8.945487, 54.9023], [8.950663, 54.90286], [8.951921, 54.898384], [8.975, 54.900623], [8.976259, 54.896145], [8.9839525, 54.896847], [8.985211, 54.89251], [8.992905, 54.893208], [8.9941635, 54.888733], [9.001856, 54.88943], [9.003115, 54.885098], [9.010808, 54.885796], [9.012067, 54.88132], [9.026753, 54.88034], [9.027173, 54.876423], [9.033888, 54.872787], [9.047175, 54.869152], [9.143129, 54.87069], [9.196421, 54.856003], [9.210548, 54.854603], [9.224815, 54.856003], [9.225934, 54.851807], [9.24216, 54.84887], [9.245097, 54.839638], [9.25279, 54.840336], [9.255168, 54.831524], [9.262861, 54.832226], [9.265239, 54.82341], [9.272932, 54.824112], [9.277128, 54.808723], [9.282304, 54.808865], [9.282583, 54.80229], [9.302165, 54.804108], [9.300906, 54.808445], [9.316293, 54.809845], [9.317552, 54.805508], [9.340631, 54.807606], [9.345666, 54.80355], [9.351261, 54.81474], [9.357555, 54.81488], [9.369864, 54.818935], [9.369585, 54.82397], [9.375599, 54.82453], [9.37434, 54.828865], [9.382033, 54.829567], [9.3807745, 54.83404], [9.388608, 54.834743], [9.387629, 54.83838], [9.399797, 54.8388], [9.40875, 54.841175], [9.412246, 54.83922], [9.412806, 54.831665], [9.4191, 54.831944], [9.420219, 54.82649], [9.428052, 54.81488], [9.439661, 54.807327], [9.429171, 54.801033], [9.434766, 54.79376], [9.439661, 54.804527], [9.450292, 54.806488], [9.4570055, 54.817398], [9.464139, 54.822292], [9.490295, 54.82313], [9.497009, 54.822292], [9.503024, 54.829006], [9.515893, 54.83852], [9.525824, 54.83936], [9.540791, 54.84901], [9.5652685, 54.854603], [9.572541, 54.863136], [9.58639, 54.865932], [9.58639, 54.873486], [9.590305, 54.876286], [9.613665, 54.874886], [9.600237, 54.867893], [9.591425, 54.857403], [9.589746, 54.84677], [9.593103, 54.840755], [9.606391, 54.829845], [9.623595, 54.831524], [9.649752, 54.821873], [9.66304, 54.822292], [9.669754, 54.819916], [9.680804, 54.819077], [9.711436, 54.808723], [9.734236, 54.80481], [9.740809, 54.80481], [9.759133, 54.801033], [9.771442, 54.795437], [9.792004, 54.797394], [9.7946615, 54.790962], [9.811446, 54.775715], [9.824175, 54.767883], [9.834665, 54.75907], [9.85145, 54.754314], [9.865297, 54.754314], [9.865297, 54.752075], [9.878026, 54.754036], [9.879704, 54.76075], [9.888097, 54.767883], [9.894112, 54.77012], [9.903623, 54.766205], [9.90698, 54.76928], [9.901944, 54.774315], [9.904742, 54.78215], [9.903064, 54.789562], [9.908659, 54.797394], [9.912994, 54.794598], [9.926422, 54.79152], [9.941389, 54.783688], [9.956355, 54.779633], [9.965867, 54.767044], [9.972441, 54.762985], [9.976917, 54.756832], [9.980274, 54.732635], [9.989225, 54.71655], [9.99524, 54.710953], [10.004192, 54.708714], [10.021956, 54.696827], [10.036364, 54.690113], [10.037482, 54.682697], [10.034685, 54.672348], [10.026992, 54.679623], [10.026992, 54.687874], [10.020838, 54.687874], [10.022516, 54.69207], [10.014683, 54.69263], [10.008668, 54.688152], [9.999157, 54.687595], [9.994681, 54.68046], [9.988107, 54.683258], [9.994681, 54.688713], [9.991324, 54.695427], [9.993003, 54.699062], [9.983071, 54.7013], [9.97356, 54.689274], [9.979714, 54.687313], [9.976917, 54.68242], [9.968664, 54.683537], [9.9613905, 54.678223], [9.950341, 54.678223], [9.938032, 54.67291], [9.94027, 54.67067], [9.935235, 54.661858], [9.9369135, 54.653744], [9.932997, 54.650948], [9.929779, 54.641575], [9.930339, 54.63486], [9.937472, 54.632904], [9.931877, 54.62703], [9.911456, 54.629826], [9.912436, 54.633743], [9.905301, 54.632065], [9.90698, 54.62703], [9.892433, 54.62353], [9.879145, 54.6157], [9.875788, 54.609825], [9.860822, 54.604927], [9.854668, 54.60073], [9.845855, 54.60073], [9.832567, 54.596535], [9.832987, 54.594017], [9.824734, 54.5915], [9.819698, 54.593178], [9.810328, 54.585625], [9.811446, 54.579613], [9.797459, 54.577652], [9.789765, 54.573177], [9.7741, 54.575134], [9.775779, 54.57849], [9.770323, 54.58073], [9.763609, 54.56926], [9.7680855, 54.564644], [9.753678, 54.55849], [9.749762, 54.55066], [9.740809, 54.545483], [9.734655, 54.532333], [9.71913, 54.530376], [9.712555, 54.519608], [9.701365, 54.520164], [9.699127, 54.527298], [9.668076, 54.5252], [9.659683, 54.522404], [9.639122, 54.521843], [9.632547, 54.514572], [9.626952, 54.522964], [9.633666, 54.52702], [9.626952, 54.530937], [9.6163225, 54.52786], [9.6047125, 54.52702], [9.605831, 54.520164], [9.599677, 54.519886], [9.580794, 54.510094], [9.554218, 54.51261], [9.546385, 54.510654], [9.55142, 54.503242], [9.56303, 54.501003], [9.576458, 54.50072], [9.566947, 54.49513], [9.571423, 54.488132], [9.576458, 54.486317], [9.573661, 54.475407], [9.582473, 54.477924], [9.582473, 54.483517], [9.577437, 54.48981], [9.581913, 54.494007], [9.581913, 54.50128], [9.595901, 54.50604], [9.608629, 54.50702], [9.624155, 54.511494], [9.638002, 54.508698], [9.641359, 54.510376], [9.665278, 54.506317], [9.670314, 54.498764], [9.676328, 54.49513], [9.684161, 54.495686], [9.690875, 54.49065], [9.711996, 54.49121], [9.713115, 54.498764], [9.709758, 54.50786], [9.700806, 54.513733], [9.706401, 54.51709], [9.715213, 54.51709], [9.71913, 54.52842], [9.724725, 54.528976], [9.723046, 54.520725], [9.735774, 54.524643], [9.741929, 54.532894], [9.748643, 54.546463], [9.76249, 54.549538], [9.76305, 54.553734], [9.770883, 54.55793], [9.780814, 54.555134], [9.786408, 54.55933], [9.798578, 54.564644], [9.821937, 54.58157], [9.839701, 54.583527], [9.843617, 54.588425], [9.86194, 54.595695], [9.876348, 54.598213], [9.8858595, 54.60465], [9.907539, 54.61514], [9.927542, 54.619617], [9.932437, 54.623814], [9.938032, 54.62353], [9.9369135, 54.629826], [9.945306, 54.63626], [9.944746, 54.641296], [9.937472, 54.644794], [9.936354, 54.65067], [9.941389, 54.654026], [9.939151, 54.658222], [9.940829, 54.666195], [9.948103, 54.673748], [9.964189, 54.675426], [9.975798, 54.673748], [9.989785, 54.665913], [9.9974785, 54.665913], [9.999157, 54.671787], [10.004192, 54.673187], [10.009228, 54.662136], [10.021397, 54.658222], [10.032447, 54.66018], [10.030209, 54.63766], [10.034125, 54.62591], [10.033007, 54.6171], [10.026992, 54.607864], [10.025873, 54.585346], [10.029789, 54.582687], [10.025313, 54.57933], [10.025873, 54.561848], [10.027552, 54.550377], [10.015243, 54.545204], [10.000276, 54.522964], [9.990345, 54.51793], [9.98475, 54.512333], [9.976917, 54.511215], [9.966986, 54.50352], [9.952998, 54.500164], [9.927542, 54.490932], [9.911876, 54.487854], [9.890335, 54.479603], [9.87355, 54.475685], [9.870893, 54.47121], [9.86306, 54.46981], [9.85089, 54.476803], [9.840819, 54.47205], [9.840819, 54.465755], [9.848093, 54.455685], [9.858583, 54.44925], [9.868654, 54.447292], [9.890895, 54.451206], [9.914114, 54.452045], [9.926422, 54.45708], [9.932437, 54.461838], [9.954118, 54.464355], [9.959712, 54.466873], [9.972441, 54.467854], [9.9958, 54.468132], [10.010346, 54.473167], [10.023635, 54.475407], [10.060842, 54.477924], [10.067555, 54.47988], [10.083081, 54.47988], [10.116371, 54.485195], [10.135814, 54.484077], [10.156375, 54.475964], [10.175258, 54.467014], [10.182531, 54.461277], [10.193582, 54.45624], [10.199177, 54.455963], [10.1969385, 54.45009], [10.186448, 54.44785], [10.179174, 54.439598], [10.170782, 54.432884], [10.171901, 54.42659], [10.1819725, 54.41624], [10.187567, 54.41344], [10.192463, 54.40407], [10.188546, 54.39204], [10.175258, 54.3898], [10.1608515, 54.385746], [10.159173, 54.375954], [10.154696, 54.36896], [10.148123, 54.36924], [10.148123, 54.363785], [10.140849, 54.352875], [10.154696, 54.344902], [10.156935, 54.33707], [10.147003, 54.32826], [10.144206, 54.321823], [10.135254, 54.317627], [10.1363735, 54.31511], [10.169663, 54.32714], [10.174699, 54.335953], [10.174699, 54.34924], [10.179734, 54.356792], [10.178615, 54.361828], [10.193582, 54.364624], [10.196379, 54.36714], [10.19526, 54.378193], [10.201974, 54.38127], [10.213584, 54.397076], [10.215821, 54.40435], [10.22799, 54.41344], [10.23974, 54.41624], [10.280303, 54.41792], [10.2935915, 54.422394], [10.29471, 54.42519], [10.286458, 54.424633], [10.280863, 54.420155], [10.279184, 54.422672], [10.302544, 54.433723], [10.318629, 54.43568], [10.331917, 54.43568], [10.346884, 54.433723], [10.390803, 54.42575], [10.400875, 54.422394], [10.423115, 54.411205], [10.444655, 54.40379], [10.448012, 54.40127], [10.499206, 54.386307], [10.512494, 54.385185], [10.529698, 54.38071], [10.539769, 54.38015], [10.573619, 54.369522], [10.592502, 54.366024], [10.603552, 54.362667], [10.639219, 54.34714], [10.649151, 54.335953], [10.648591, 54.333435], [10.6564245, 54.32826], [10.677546, 54.321823], [10.683001, 54.310356], [10.697547, 54.305458], [10.712514, 54.3049], [10.72692, 54.308815], [10.73867, 54.309795], [10.754755, 54.306297], [10.766365, 54.306858], [10.788605, 54.311474], [10.826371, 54.32826], [10.840219, 54.33707], [10.846373, 54.342945], [10.859661, 54.35008], [10.870851, 54.358192], [10.889733, 54.364906], [10.899665, 54.365185], [10.9102955, 54.36924], [10.928618, 54.38183], [10.951418, 54.38463], [10.956453, 54.38211], [10.972539, 54.38211], [10.9931, 54.379593], [11.022474, 54.38071], [11.024712, 54.376514], [11.00415, 54.376514], [10.997437, 54.375114], [11.001353, 54.37008], [11.003592, 54.373158], [11.025831, 54.367702], [11.049749, 54.37232], [11.058561, 54.375397], [11.069192, 54.375114], [11.079682, 54.377354], [11.080242, 54.38239], [11.090313, 54.39148], [11.106957, 54.39512], [11.115211, 54.39064], [11.116889, 54.394], [11.12752, 54.390923], [11.131435, 54.387424], [11.1264, 54.37372], [11.107517, 54.366024], [11.101363, 54.361828], [11.086396, 54.356514], [11.079682, 54.351757], [11.069192, 54.35791], [11.061359, 54.35707], [11.058561, 54.35064], [11.063038, 54.344063], [11.072549, 54.344624], [11.072549, 54.332314], [11.077444, 54.297348], [11.084158, 54.28126], [11.084158, 54.267414], [11.081921, 54.26154], [11.081361, 54.24741], [11.083599, 54.23706], [11.090873, 54.219856], [11.091432, 54.20377], [11.09367, 54.197895], [11.085837, 54.19734], [11.066954, 54.19118], [11.050868, 54.177895], [11.010305, 54.162926], [10.981911, 54.149918], [10.954775, 54.14097], [10.942466, 54.132854], [10.934773, 54.124603], [10.920226, 54.113693], [10.906939, 54.107677], [10.892531, 54.095367], [10.8796625, 54.088795], [10.863577, 54.084877], [10.855325, 54.089073], [10.842457, 54.087955], [10.824133, 54.088516], [10.815321, 54.091873], [10.812524, 54.09593], [10.801333, 54.086277], [10.791962, 54.074806], [10.770841, 54.06376], [10.759791, 54.05984], [10.750839, 54.04879], [10.750279, 54.03844], [10.765246, 54.016758], [10.775317, 54.00543], [10.785248, 53.99732], [10.803012, 53.99158], [10.811964, 53.99452], [10.822454, 53.99424], [10.835882, 53.99158], [10.851408, 53.99326], [10.8646965, 53.99242], [10.873649, 53.989346], [10.885258, 53.978436], [10.881341, 53.967384], [10.886936, 53.957314], [10.89477, 53.955914]]]]
    }
  }, {
    type: 'Feature',
    properties: {
      name: 'Thüringen',
      type: 'Land',
      area: '16,171 km²',
      bundesratVotes: '4 (out of 69)',
      density: '130/km2',
      timeZone: 'UTC+1 (CET)',
      population: 2143145,
      capital: 'Erfurt',
      government: 'Landtag of Thuringia',
      head: 'Bodo Ramelow (The Left)'
    },
    geometry: {
      type: 'Polygon',
      coordinates: [[[10.77196, 51.644917], [10.78385, 51.641003], [10.819937, 51.64072], [10.819797, 51.625755], [10.825811, 51.62198], [10.843855, 51.633167], [10.861898, 51.633167], [10.867774, 51.62939], [10.885677, 51.614426], [10.891692, 51.614567], [10.891692, 51.61079], [10.903582, 51.61079], [10.91561, 51.618343], [10.92764, 51.618343], [10.91561, 51.61079], [10.9275, 51.60715], [10.939528, 51.60715], [10.939389, 51.595963], [10.933374, 51.592186], [10.903582, 51.592045], [10.897567, 51.59582], [10.891552, 51.59582], [10.885537, 51.580715], [10.897427, 51.573303], [10.897427, 51.55456], [10.909316, 51.547146], [10.909316, 51.550922], [10.915331, 51.550922], [10.915331, 51.547287], [10.92722, 51.547287], [10.92722, 51.54351], [10.939109, 51.543648], [10.939109, 51.53987], [10.945124, 51.53987], [10.950998, 51.536236], [10.950998, 51.53246], [10.945124, 51.53246], [10.945124, 51.536095], [10.939109, 51.536095], [10.939109, 51.53246], [10.933095, 51.517353], [10.9449835, 51.50994], [10.9449835, 51.502525], [10.93897, 51.502525], [10.93897, 51.49875], [10.944844, 51.49875], [10.950859, 51.495113], [10.956873, 51.495113], [10.956873, 51.491337], [10.962748, 51.491478], [10.968762, 51.484062], [10.968622, 51.47651], [10.962748, 51.472733], [10.962748, 51.469097], [10.968622, 51.461544], [10.968622, 51.454132], [10.974497, 51.454132], [10.974497, 51.450493], [10.968622, 51.446716], [10.968483, 51.44294], [10.974497, 51.44294], [10.968483, 51.43175], [10.980372, 51.43189], [10.980372, 51.424335], [10.998276, 51.424477], [10.998276, 51.428253], [11.010165, 51.428253], [11.010165, 51.424477], [11.004291, 51.424477], [10.992261, 51.416924], [11.028069, 51.417202], [11.033944, 51.42098], [11.045973, 51.424755], [11.051847, 51.42853], [11.075766, 51.42853], [11.087655, 51.42126], [11.099545, 51.42126], [11.105419, 51.417484], [11.117309, 51.413845], [11.117309, 51.41021], [11.123323, 51.41021], [11.129198, 51.413986], [11.129198, 51.41021], [11.135212, 51.406433], [11.147101, 51.402798], [11.17088, 51.402935], [11.17088, 51.406574], [11.188784, 51.40671], [11.188784, 51.402935], [11.194659, 51.403076], [11.194659, 51.40671], [11.206688, 51.40671], [11.218577, 51.414265], [11.224592, 51.414265], [11.230467, 51.41063], [11.230467, 51.406853], [11.24837, 51.406853], [11.24823, 51.395664], [11.254245, 51.39944], [11.278164, 51.39944], [11.278303, 51.406853], [11.284178, 51.403217], [11.290193, 51.403217], [11.308236, 51.406853], [11.320266, 51.41063], [11.32628, 51.41063], [11.332155, 51.39944], [11.332015, 51.392025], [11.344044, 51.392025], [11.3439045, 51.38839], [11.349918, 51.384613], [11.349918, 51.38839], [11.355933, 51.38839], [11.361948, 51.392025], [11.361808, 51.384613], [11.367823, 51.380836], [11.367823, 51.384613], [11.373837, 51.38825], [11.379851, 51.384613], [11.379851, 51.38825], [11.391741, 51.384613], [11.397756, 51.38447], [11.397615, 51.373425], [11.391602, 51.373425], [11.391461, 51.362373], [11.397476, 51.358597], [11.397336, 51.351185], [11.403351, 51.351185], [11.403211, 51.34377], [11.433144, 51.34377], [11.433144, 51.336357], [11.421115, 51.336357], [11.421115, 51.33258], [11.42699, 51.325165], [11.438878, 51.32153], [11.444754, 51.317753], [11.4507675, 51.317753], [11.456642, 51.31034], [11.468672, 51.306564], [11.480421, 51.29915], [11.468392, 51.291737], [11.462517, 51.295513], [11.456363, 51.2881], [11.456223, 51.27691], [11.450209, 51.273273], [11.444194, 51.273273], [11.438179, 51.269497], [11.444054, 51.26586], [11.438039, 51.258446], [11.432025, 51.25467], [11.42601, 51.25467], [11.419856, 51.247257], [11.413841, 51.24362], [11.413841, 51.239845], [11.407826, 51.239845], [11.401812, 51.236206], [11.401952, 51.24362], [11.390062, 51.24362], [11.390062, 51.247257], [11.3840475, 51.24348], [11.3840475, 51.239845], [11.378034, 51.23607], [11.372019, 51.228653], [11.366004, 51.228653], [11.366004, 51.22124], [11.383768, 51.22124], [11.389783, 51.2176], [11.389643, 51.21019], [11.395517, 51.202637], [11.407407, 51.202778], [11.413562, 51.21019], [11.431465, 51.213825], [11.43748, 51.213966], [11.449369, 51.21019], [11.449089, 51.195362], [11.455104, 51.195362], [11.473008, 51.191586], [11.472728, 51.173122], [11.490632, 51.169346], [11.490492, 51.16571], [11.478602, 51.16571], [11.478602, 51.161934], [11.484477, 51.1583], [11.472448, 51.150883], [11.454544, 51.147106], [11.454405, 51.14333], [11.460419, 51.139694], [11.460279, 51.132282], [11.466293, 51.132282], [11.466014, 51.113678], [11.472029, 51.1099], [11.483918, 51.1099], [11.489793, 51.106262], [11.489793, 51.102627], [11.513571, 51.102627], [11.513711, 51.110043], [11.52546, 51.106262], [11.53749, 51.106403], [11.549379, 51.102627], [11.549519, 51.11382], [11.555533, 51.11382], [11.555393, 51.110043], [11.561408, 51.110043], [11.567423, 51.11382], [11.573437, 51.12123], [11.579452, 51.12123], [11.591341, 51.117455], [11.60337, 51.117455], [11.621134, 51.106403], [11.620995, 51.09899], [11.627008, 51.102627], [11.627008, 51.106403], [11.645192, 51.113678], [11.651067, 51.110043], [11.657082, 51.110043], [11.669111, 51.113678], [11.668971, 51.110043], [11.674986, 51.106262], [11.6808605, 51.106262], [11.686875, 51.102627], [11.698764, 51.09885], [11.698625, 51.095215], [11.7046385, 51.09144], [11.704219, 51.072975], [11.710234, 51.0692], [11.716108, 51.0692], [11.7162485, 51.072975], [11.728277, 51.072834], [11.728138, 51.0692], [11.740167, 51.0692], [11.740026, 51.065422], [11.752056, 51.065422], [11.757931, 51.061783], [11.757931, 51.058006], [11.751916, 51.058006], [11.751777, 51.05437], [11.757791, 51.05437], [11.757651, 51.050594], [11.763665, 51.050594], [11.763526, 51.04332], [11.76968, 51.04696], [11.775555, 51.04696], [11.775695, 51.050594], [11.78171, 51.05437], [11.793738, 51.05423], [11.805628, 51.050594], [11.823671, 51.050453], [11.835701, 51.054092], [11.84773, 51.054092], [11.8537445, 51.057728], [11.859619, 51.054092], [11.871648, 51.05395], [11.883818, 51.061363], [11.895706, 51.057587], [11.901581, 51.05381], [11.901442, 51.04654], [11.91347, 51.050175], [11.919485, 51.0464], [11.919206, 51.03171], [11.937109, 51.03157], [11.943264, 51.03521], [11.943124, 51.03157], [11.949139, 51.03521], [11.966903, 51.02416], [11.972917, 51.024017], [11.984806, 51.020382], [11.984527, 51.005554], [11.978512, 51.00192], [11.978372, 50.99828], [11.984386, 50.99828], [11.984246, 50.994503], [11.990261, 50.994503], [12.008445, 50.998142], [12.008305, 50.994503], [12.014319, 50.994366], [12.014179, 50.990726], [12.020194, 50.990726], [12.026069, 50.98695], [12.025929, 50.97968], [12.019915, 50.97968], [12.019774, 50.972263], [12.025789, 50.972263], [12.043833, 50.975903], [12.055862, 50.97576], [12.067751, 50.972126], [12.079921, 50.979397], [12.091809, 50.97926], [12.097964, 50.982895], [12.103839, 50.982895], [12.103839, 50.97912], [12.115728, 50.97912], [12.121603, 50.97534], [12.127618, 50.97534], [12.133492, 50.971565], [12.145521, 50.971565], [12.145381, 50.964153], [12.151396, 50.96779], [12.15727, 50.96779], [12.163425, 50.971424], [12.175175, 50.96387], [12.175314, 50.971287], [12.193358, 50.982056], [12.205108, 50.971004], [12.210982, 50.963593], [12.210842, 50.959957], [12.216857, 50.959816], [12.216857, 50.963593], [12.228746, 50.96345], [12.228606, 50.95604], [12.222732, 50.95618], [12.228466, 50.94513], [12.234342, 50.94499], [12.234481, 50.948765], [12.2403555, 50.948627], [12.240496, 50.952263], [12.2465105, 50.9559], [12.252524, 50.9559], [12.252665, 50.96681], [12.24679, 50.96695], [12.24679, 50.970585], [12.252805, 50.974224], [12.252944, 50.981495], [12.265114, 50.98877], [12.270988, 50.98863], [12.277143, 50.995903], [12.277143, 50.99968], [12.283157, 51.003178], [12.289311, 51.010452], [12.295326, 51.010452], [12.295326, 51.014088], [12.301341, 51.017723], [12.30148, 51.021362], [12.307495, 51.024998], [12.307775, 51.035908], [12.301761, 51.03605], [12.3019, 51.04332], [12.278122, 51.043602], [12.272107, 51.040104], [12.266092, 51.040104], [12.260218, 51.04388], [12.260358, 51.047516], [12.2662325, 51.047516], [12.272387, 51.05479], [12.272806, 51.073112], [12.278821, 51.072975], [12.278961, 51.080387], [12.290851, 51.083885], [12.297005, 51.08752], [12.297145, 51.094795], [12.30302, 51.094795], [12.315188, 51.10193], [12.321063, 51.09829], [12.3329525, 51.09801], [12.344981, 51.105286], [12.350996, 51.105145], [12.356871, 51.10151], [12.362745, 51.101368], [12.36862, 51.09759], [12.3683405, 51.08668], [12.374215, 51.082905], [12.38023, 51.082764], [12.386105, 51.078987], [12.392118, 51.082626], [12.398133, 51.082626], [12.398133, 51.08626], [12.404148, 51.08612], [12.421632, 51.074932], [12.433802, 51.082066], [12.463454, 51.081646], [12.463594, 51.08528], [12.469609, 51.085144], [12.469609, 51.08892], [12.475484, 51.085144], [12.475064, 51.070457], [12.481079, 51.070316], [12.480939, 51.06668], [12.486954, 51.06654], [12.492968, 51.070175], [12.510732, 51.069897], [12.516606, 51.06612], [12.522202, 51.05493], [12.516327, 51.05507], [12.515767, 51.036747], [12.521642, 51.03297], [12.521362, 51.02192], [12.527097, 51.018143], [12.527516, 51.029194], [12.533391, 51.029053], [12.533252, 51.025417], [12.54528, 51.028774], [12.551155, 51.028774], [12.550735, 51.014088], [12.55661, 51.01031], [12.538567, 51.003178], [12.550316, 50.9994], [12.556331, 51.0029], [12.56822, 51.002758], [12.56808, 50.99898], [12.574095, 50.99898], [12.579829, 50.995205], [12.585704, 50.995064], [12.591579, 50.991287], [12.603468, 50.994785], [12.609483, 50.994644], [12.621512, 51.001778], [12.621232, 50.990726], [12.627107, 50.99059], [12.632842, 50.986813], [12.632702, 50.979538], [12.638157, 50.96835], [12.643612, 50.95352], [12.6433325, 50.94611], [12.637458, 50.946247], [12.637318, 50.94261], [12.643192, 50.94247], [12.654942, 50.938557], [12.654662, 50.931282], [12.660537, 50.93114], [12.666271, 50.927364], [12.666132, 50.923588], [12.654102, 50.916454], [12.653683, 50.905407], [12.647948, 50.90932], [12.642074, 50.90932], [12.636338, 50.913097], [12.630324, 50.909603], [12.61256, 50.90988], [12.61242, 50.906246], [12.588922, 50.906666], [12.583047, 50.910442], [12.582907, 50.906803], [12.577032, 50.906944], [12.577172, 50.91058], [12.571298, 50.91072], [12.553393, 50.90373], [12.547519, 50.907505], [12.541644, 50.907505], [12.541784, 50.91128], [12.53591, 50.91142], [12.52402, 50.907925], [12.52388, 50.904285], [12.529614, 50.90051], [12.523601, 50.896873], [12.52374, 50.90051], [12.500101, 50.897293], [12.494087, 50.897434], [12.494087, 50.893795], [12.476183, 50.886803], [12.4759035, 50.87575], [12.469889, 50.875893], [12.457999, 50.86876], [12.45786, 50.864983], [12.463735, 50.861206], [12.463594, 50.857567], [12.45758, 50.854073], [12.45758, 50.850433], [12.451565, 50.846798], [12.44569, 50.850574], [12.433802, 50.84344], [12.433941, 50.847218], [12.428206, 50.85463], [12.428206, 50.85827], [12.422471, 50.862045], [12.422332, 50.858406], [12.416317, 50.85477], [12.392818, 50.85519], [12.392818, 50.858826], [12.386944, 50.858967], [12.386804, 50.85533], [12.380929, 50.85533], [12.380929, 50.851692], [12.374914, 50.848198], [12.363025, 50.8447], [12.362745, 50.830013], [12.350996, 50.830154], [12.344981, 50.826656], [12.321342, 50.826935], [12.315468, 50.83071], [12.315608, 50.837986], [12.309593, 50.83435], [12.309453, 50.82344], [12.303578, 50.827076], [12.2975645, 50.827217], [12.297424, 50.816166], [12.2914095, 50.816307], [12.29155, 50.823578], [12.285675, 50.82372], [12.285535, 50.819942], [12.273645, 50.820084], [12.267771, 50.82386], [12.261896, 50.82386], [12.261757, 50.82022], [12.255742, 50.816586], [12.261757, 50.81295], [12.267491, 50.805534], [12.267351, 50.794624], [12.29113, 50.794346], [12.30302, 50.797844], [12.302879, 50.783295], [12.278821, 50.768887], [12.272946, 50.768887], [12.267072, 50.772663], [12.261057, 50.772663], [12.255182, 50.776302], [12.249028, 50.769028], [12.243013, 50.765392], [12.242594, 50.747066], [12.248609, 50.747066], [12.248468, 50.739796], [12.254483, 50.739796], [12.254483, 50.74343], [12.278542, 50.74693], [12.284416, 50.739655], [12.284416, 50.735878], [12.278261, 50.732243], [12.278261, 50.728603], [12.272247, 50.728603], [12.266092, 50.724968], [12.277842, 50.713917], [12.277562, 50.70287], [12.283577, 50.70287], [12.283577, 50.69923], [12.289452, 50.695454], [12.313649, 50.695595], [12.31351, 50.69182], [12.325539, 50.69182], [12.331694, 50.695454], [12.337568, 50.69182], [12.337428, 50.68804], [12.331134, 50.680767], [12.330435, 50.673214], [12.324699, 50.673214], [12.318545, 50.66958], [12.318266, 50.665802], [12.306096, 50.658386], [12.305676, 50.65461], [12.294067, 50.65825], [12.293648, 50.650833], [12.2818985, 50.65475], [12.2757435, 50.650833], [12.281479, 50.64734], [12.281059, 50.639645], [12.263295, 50.64342], [12.25714, 50.639645], [12.25714, 50.635868], [12.244971, 50.635868], [12.245111, 50.639645], [12.233222, 50.639645], [12.221473, 50.647057], [12.209304, 50.639645], [12.209164, 50.635868], [12.203149, 50.635868], [12.20245, 50.620903], [12.184546, 50.620903], [12.184966, 50.63209], [12.179091, 50.635727], [12.161047, 50.635727], [12.155033, 50.63209], [12.154893, 50.628315], [12.160768, 50.62468], [12.160348, 50.613487], [12.1539135, 50.6023], [12.153355, 50.59111], [12.165243, 50.59111], [12.171118, 50.58747], [12.170838, 50.583694], [12.164684, 50.58006], [12.134891, 50.579918], [12.134891, 50.576283], [12.128596, 50.572506], [12.122722, 50.572365], [12.111532, 50.587334], [12.105377, 50.583557], [12.087474, 50.583557], [12.086774, 50.56481], [12.08062, 50.561317], [12.074745, 50.561317], [12.062716, 50.557537], [12.056702, 50.557537], [12.056841, 50.561317], [12.038938, 50.557537], [12.027468, 50.56845], [12.027887, 50.575863], [12.039916, 50.583416], [12.040196, 50.590828], [12.046491, 50.60202], [12.040755, 50.605797], [12.034601, 50.60202], [12.011242, 50.616844], [12.011522, 50.620483], [12.017537, 50.620483], [12.017537, 50.62426], [12.023551, 50.628036], [12.029566, 50.628036], [12.029566, 50.631813], [12.017957, 50.639225], [12.005927, 50.63167], [11.999912, 50.63167], [11.993898, 50.627895], [11.993479, 50.620483], [11.999353, 50.616844], [11.975295, 50.605656], [11.96942, 50.60929], [11.963546, 50.60929], [11.963546, 50.605656], [11.957251, 50.60188], [11.951237, 50.594467], [11.945362, 50.594467], [11.945082, 50.59069], [11.933332, 50.59055], [11.933332, 50.586914], [11.939068, 50.583275], [11.938787, 50.572086], [11.932633, 50.56831], [11.932493, 50.560894], [11.91445, 50.557117], [11.890811, 50.55698], [11.884936, 50.55334], [11.884657, 50.549564], [11.878782, 50.545788], [11.884237, 50.530823], [11.890112, 50.527325], [11.889832, 50.519913], [11.92508, 50.519913], [11.92522, 50.52355], [11.919485, 50.527325], [11.9255, 50.5311], [11.931514, 50.5311], [11.937249, 50.527325], [11.936689, 50.5125], [11.942564, 50.50886], [11.948439, 50.50886], [11.954034, 50.505085], [11.954034, 50.50131], [11.965644, 50.497673], [11.965504, 50.494038], [11.971378, 50.49026], [11.971099, 50.486485], [11.965084, 50.482845], [11.94746, 50.482708], [11.94676, 50.464104], [11.95837, 50.46047], [11.95809, 50.45669], [11.952215, 50.46047], [11.940886, 50.464104], [11.940886, 50.46788], [11.935151, 50.46788], [11.929136, 50.464104], [11.922982, 50.45655], [11.911372, 50.45655], [11.899483, 50.452915], [11.899063, 50.44536], [11.904658, 50.437946], [11.910673, 50.441723], [11.922282, 50.437946], [11.933892, 50.438087], [11.933473, 50.430534], [11.927737, 50.426895], [11.915849, 50.426758], [11.903959, 50.419205], [11.886475, 50.419205], [11.886335, 50.41543], [11.868291, 50.404236], [11.856682, 50.404236], [11.838918, 50.396683], [11.833043, 50.396683], [11.827168, 50.392906], [11.821294, 50.392906], [11.821433, 50.396683], [11.833323, 50.4041], [11.827588, 50.407875], [11.827448, 50.4041], [11.815699, 50.4041], [11.798635, 50.418922], [11.7870245, 50.4227], [11.78115, 50.42256], [11.78101, 50.418922], [11.775135, 50.418922], [11.775135, 50.415146], [11.76926, 50.415146], [11.757651, 50.418785], [11.757511, 50.415146], [11.768981, 50.407734], [11.757371, 50.407593], [11.751496, 50.41137], [11.745622, 50.41137], [11.739747, 50.407593], [11.733872, 50.407593], [11.727858, 50.403816], [11.727858, 50.40018], [11.716108, 50.40004], [11.7162485, 50.403816], [11.704499, 50.403816], [11.698484, 50.40004], [11.698484, 50.396263], [11.669111, 50.396263], [11.663096, 50.392487], [11.639737, 50.392487], [11.633723, 50.38871], [11.621973, 50.38871], [11.610364, 50.396126], [11.610504, 50.39976], [11.598754, 50.39976], [11.5930195, 50.403538], [11.587005, 50.39976], [11.575255, 50.39976], [11.569381, 50.395985], [11.569241, 50.388573], [11.557491, 50.384796], [11.551617, 50.384796], [11.533853, 50.38102], [11.533853, 50.377243], [11.527978, 50.377243], [11.522103, 50.373604], [11.5222435, 50.38843], [11.516508, 50.395844], [11.504759, 50.395844], [11.504759, 50.39962], [11.498884, 50.39962], [11.49301, 50.395844], [11.487135, 50.395844], [11.48126, 50.399483], [11.4814005, 50.407036], [11.487275, 50.41067], [11.487414, 50.418083], [11.48168, 50.425636], [11.48182, 50.433052], [11.464195, 50.43291], [11.464195, 50.429276], [11.452307, 50.4255], [11.452446, 50.429276], [11.434962, 50.440323], [11.429088, 50.440323], [11.423213, 50.443962], [11.417478, 50.451515], [11.417618, 50.45515], [11.423492, 50.458927], [11.423492, 50.462566], [11.417758, 50.466343], [11.423633, 50.473755], [11.423772, 50.484943], [11.418037, 50.49236], [11.418037, 50.496136], [11.423912, 50.49236], [11.435661, 50.49236], [11.441676, 50.499912], [11.430066, 50.51096], [11.430066, 50.514736], [11.383208, 50.5146], [11.383208, 50.518234], [11.371459, 50.52201], [11.365584, 50.52201], [11.35971, 50.518234], [11.348101, 50.52187], [11.342226, 50.518093], [11.34796, 50.514458], [11.34796, 50.51068], [11.342086, 50.51068], [11.330337, 50.506905], [11.324462, 50.51068], [11.324322, 50.4883], [11.300823, 50.4883], [11.300823, 50.480747], [11.294949, 50.47711], [11.289074, 50.480747], [11.289074, 50.484524], [11.271589, 50.480747], [11.253965, 50.48061], [11.248091, 50.476833], [11.247951, 50.465782], [11.253825, 50.462006], [11.253686, 50.454594], [11.24781, 50.447178], [11.25942, 50.443542], [11.265295, 50.439766], [11.271029, 50.43235], [11.271029, 50.428715], [11.265155, 50.428574], [11.265155, 50.42116], [11.27089, 50.417526], [11.265016, 50.41375], [11.265016, 50.41011], [11.259141, 50.402557], [11.259001, 50.398922], [11.264735, 50.39151], [11.264735, 50.384094], [11.270471, 50.384094], [11.276345, 50.380318], [11.28194, 50.365494], [11.2818, 50.354443], [11.27019, 50.3543], [11.264316, 50.350666], [11.275785, 50.33584], [11.264036, 50.335697], [11.264036, 50.33206], [11.258021, 50.320873], [11.263896, 50.317234], [11.263757, 50.30968], [11.269491, 50.306046], [11.257742, 50.298634], [11.2520075, 50.298492], [11.251867, 50.29108], [11.257602, 50.28744], [11.257322, 50.26884], [11.251588, 50.26884], [11.245993, 50.2652], [11.234383, 50.272476], [11.222914, 50.276253], [11.217038, 50.283665], [11.211304, 50.283527], [11.199695, 50.29094], [11.194099, 50.287304], [11.194099, 50.27989], [11.188364, 50.27989], [11.188504, 50.2687], [11.1713, 50.2687], [11.18263, 50.27611], [11.18263, 50.27989], [11.15969, 50.283527], [11.148221, 50.283386], [11.142346, 50.287163], [11.142346, 50.2908], [11.136471, 50.298214], [11.130736, 50.298214], [11.130736, 50.30926], [11.142066, 50.316814], [11.153676, 50.320454], [11.15941, 50.320454], [11.15941, 50.328007], [11.147941, 50.339054], [11.142066, 50.339054], [11.136332, 50.34647], [11.142206, 50.350105], [11.124722, 50.353745], [11.124722, 50.34633], [11.118987, 50.34633], [11.118987, 50.361156], [11.113253, 50.364933], [11.090173, 50.36479], [11.090173, 50.361156], [11.084298, 50.35738], [11.084438, 50.349968], [11.055624, 50.34619], [11.044294, 50.342415], [11.03856, 50.342415], [11.032685, 50.353462], [11.021075, 50.3571], [11.015341, 50.360878], [11.009605, 50.360878], [10.998136, 50.364513], [10.992401, 50.360737], [10.992541, 50.353325], [10.986806, 50.349686], [10.963727, 50.364372], [10.963587, 50.371788], [10.946242, 50.382835], [10.940508, 50.39025], [10.934773, 50.39025], [10.911834, 50.382698], [10.900364, 50.382698], [10.900364, 50.37906], [10.8946295, 50.37906], [10.888755, 50.39011], [10.877285, 50.393745], [10.871551, 50.39011], [10.871551, 50.386333], [10.842876, 50.386333], [10.831266, 50.38997], [10.831407, 50.386192], [10.825671, 50.382557], [10.819937, 50.382557], [10.808467, 50.375145], [10.802732, 50.375004], [10.791263, 50.37878], [10.791122, 50.382416], [10.785388, 50.37878], [10.779793, 50.37137], [10.779933, 50.36759], [10.768323, 50.36759], [10.768463, 50.363815], [10.756993, 50.3564], [10.745523, 50.3564], [10.745384, 50.360176], [10.722304, 50.36004], [10.722445, 50.352623], [10.71671, 50.352623], [10.716849, 50.34157], [10.722585, 50.34521], [10.734194, 50.34521], [10.734334, 50.337795], [10.723004, 50.32297], [10.728739, 50.315556], [10.734474, 50.315556], [10.740349, 50.31178], [10.746083, 50.31178], [10.763288, 50.30073], [10.769023, 50.293316], [10.774757, 50.28954], [10.780492, 50.28954], [10.786227, 50.293316], [10.797836, 50.28968], [10.809306, 50.28968], [10.809306, 50.286045], [10.803572, 50.28227], [10.803572, 50.278492], [10.809306, 50.278492], [10.809306, 50.274853], [10.832246, 50.274853], [10.83812, 50.271217], [10.84959, 50.271217], [10.84959, 50.263805], [10.855325, 50.260166], [10.855325, 50.248978], [10.84959, 50.241566], [10.826651, 50.234013], [10.820916, 50.237648], [10.809446, 50.237648], [10.809446, 50.241283], [10.803572, 50.2487], [10.786367, 50.2487], [10.786367, 50.244923], [10.774898, 50.23737], [10.757553, 50.23723], [10.751818, 50.241005], [10.751818, 50.24478], [10.746083, 50.248417], [10.734613, 50.248417], [10.734613, 50.207294], [10.728739, 50.203518], [10.728879, 50.199883], [10.723004, 50.19974], [10.717269, 50.203518], [10.717269, 50.207294], [10.699785, 50.207153], [10.693911, 50.21457], [10.688175, 50.218346], [10.664817, 50.218204], [10.664817, 50.229393], [10.641458, 50.218204], [10.617959, 50.22184], [10.612084, 50.225616], [10.611944, 50.229256], [10.60607, 50.23681], [10.60607, 50.240444], [10.617819, 50.24422], [10.617819, 50.247997], [10.611944, 50.247997], [10.611804, 50.255413], [10.605929, 50.25919], [10.605929, 50.266743], [10.59418, 50.2666], [10.594041, 50.27038], [10.600055, 50.27038], [10.5999155, 50.285343], [10.60579, 50.285343], [10.611665, 50.28912], [10.599775, 50.30409], [10.593901, 50.30409], [10.5937605, 50.315277], [10.599775, 50.315277], [10.599635, 50.319054], [10.60551, 50.330242], [10.582011, 50.330242], [10.582011, 50.33388], [10.564387, 50.33388], [10.552498, 50.341293], [10.552498, 50.348846], [10.5583725, 50.352486], [10.558232, 50.356262], [10.534734, 50.363674], [10.528859, 50.36004], [10.528999, 50.352486], [10.5229845, 50.352486], [10.523125, 50.348846], [10.51725, 50.34871], [10.51711, 50.356262], [10.505361, 50.352486], [10.493611, 50.352486], [10.493611, 50.359898], [10.499486, 50.363674], [10.493611, 50.36745], [10.493471, 50.371086], [10.475847, 50.371086], [10.464098, 50.3785], [10.458083, 50.38969], [10.458083, 50.40088], [10.440459, 50.40088], [10.440459, 50.393467], [10.428849, 50.38969], [10.42871, 50.393467], [10.41696, 50.393326], [10.399336, 50.397102], [10.393461, 50.393326], [10.387587, 50.40074], [10.387587, 50.408295], [10.393461, 50.408295], [10.399196, 50.41207], [10.399196, 50.415707], [10.405071, 50.415707], [10.405071, 50.42326], [10.399196, 50.42326], [10.399056, 50.426895], [10.381433, 50.426895], [10.381433, 50.43067], [10.375558, 50.43067], [10.375558, 50.43445], [10.369682, 50.438087], [10.369682, 50.441864], [10.357794, 50.449276], [10.357794, 50.453053], [10.351919, 50.46047], [10.346045, 50.46047], [10.34003, 50.464245], [10.34003, 50.471657], [10.345764, 50.482845], [10.33989, 50.482845], [10.334015, 50.48662], [10.334015, 50.494038], [10.32814, 50.494038], [10.32814, 50.49026], [10.322266, 50.49026], [10.310516, 50.494038], [10.292892, 50.494038], [10.281142, 50.50145], [10.281003, 50.505226], [10.269254, 50.505226], [10.2575035, 50.51278], [10.234005, 50.512638], [10.22813, 50.516415], [10.233865, 50.527607], [10.233865, 50.531384], [10.22799, 50.531384], [10.22799, 50.53516], [10.2221155, 50.538795], [10.210366, 50.538795], [10.204351, 50.542572], [10.204351, 50.55376], [10.180853, 50.55376], [10.180853, 50.550125], [10.174978, 50.550125], [10.175118, 50.542572], [10.163229, 50.550125], [10.15148, 50.549984], [10.151619, 50.542572], [10.13987, 50.542572], [10.133856, 50.549984], [10.122106, 50.557537], [10.127841, 50.561317], [10.127841, 50.564953], [10.110217, 50.564953], [10.104342, 50.561176], [10.104342, 50.5574], [10.098467, 50.553623], [10.098467, 50.549847], [10.080843, 50.542294], [10.074968, 50.542294], [10.069094, 50.53474], [10.069094, 50.530964], [10.05161, 50.519634], [10.039721, 50.515858], [10.03958, 50.53474], [10.045455, 50.53474], [10.05133, 50.542294], [10.05133, 50.54607], [10.057204, 50.553482], [10.063079, 50.55726], [10.05119, 50.56481], [10.045176, 50.572365], [10.05091, 50.583557], [10.050771, 50.60244], [10.044616, 50.606216], [10.038181, 50.613907], [10.049932, 50.62146], [10.049791, 50.625237], [10.06196, 50.628876], [10.068114, 50.6251], [10.068254, 50.621323], [10.086298, 50.62118], [10.086019, 50.63237], [10.0737095, 50.64734], [10.07343, 50.658527], [10.067555, 50.658527], [10.061261, 50.66608], [10.061261, 50.669716], [10.055246, 50.669716], [10.055106, 50.673496], [10.048952, 50.677273], [9.987967, 50.67797], [9.975798, 50.674335], [9.975938, 50.670696], [9.95146, 50.67098], [9.945445, 50.66734], [9.945445, 50.659927], [9.964048, 50.64482], [9.958034, 50.641182], [9.958174, 50.63377], [9.95202, 50.63377], [9.946145, 50.630135], [9.933696, 50.63405], [9.921527, 50.63419], [9.909079, 50.641743], [9.903064, 50.641884], [9.902924, 50.64552], [9.896909, 50.64566], [9.896909, 50.641884], [9.88474, 50.638386], [9.873131, 50.641884], [9.87327, 50.649155], [9.879145, 50.652794], [9.879285, 50.66748], [9.87355, 50.67098], [9.87355, 50.674614], [9.879425, 50.674755], [9.879425, 50.67839], [9.8853, 50.682167], [9.8913145, 50.68944], [9.897189, 50.685802], [9.915092, 50.696995], [9.915092, 50.704266], [9.909079, 50.704266], [9.903203, 50.707905], [9.909218, 50.715317], [9.926982, 50.726368], [9.932997, 50.726368], [9.932997, 50.730003], [9.939012, 50.737415], [9.938871, 50.759518], [9.932857, 50.763294], [9.926842, 50.759518], [9.920967, 50.763153], [9.926842, 50.770565], [9.9267025, 50.781616], [9.938731, 50.77798], [9.956635, 50.78917], [9.944606, 50.796444], [9.944467, 50.803856], [9.956355, 50.81127], [9.956216, 50.818684], [9.950341, 50.818684], [9.950201, 50.82246], [9.97398, 50.837147], [9.979994, 50.83351], [9.992023, 50.83351], [9.998038, 50.829735], [10.003913, 50.83337], [10.003913, 50.837147], [10.009788, 50.840782], [10.021956, 50.83337], [10.033706, 50.84442], [10.03958, 50.85547], [10.027691, 50.851833], [10.021677, 50.851833], [10.021397, 50.86666], [10.027271, 50.870296], [10.033286, 50.870296], [10.039161, 50.874073], [10.039161, 50.87771], [10.057065, 50.881348], [10.06294, 50.884983], [10.062799, 50.8924], [10.05091, 50.892536], [10.044896, 50.896175], [10.050771, 50.899952], [10.050631, 50.903587], [10.044756, 50.903587], [10.038601, 50.907364], [10.038601, 50.91114], [10.032587, 50.91114], [10.026572, 50.914917], [10.014543, 50.918552], [10.014543, 50.92233], [10.002514, 50.92233], [9.996639, 50.918694], [9.98475, 50.91506], [9.98475, 50.91128], [9.978875, 50.907642], [9.966846, 50.91506], [9.978596, 50.92247], [9.990345, 50.937298], [9.98433, 50.937298], [9.972441, 50.93352], [9.966566, 50.93352], [9.960691, 50.926105], [9.948802, 50.926105], [9.948663, 50.929882], [9.954677, 50.929882], [9.954537, 50.940933], [9.960412, 50.94471], [9.978315, 50.94471], [9.98433, 50.940933], [9.990205, 50.94471], [10.002234, 50.940933], [10.002234, 50.94457], [10.014263, 50.937157], [10.026153, 50.94457], [10.032167, 50.940792], [10.056086, 50.940655], [10.067835, 50.948067], [10.06182, 50.951843], [10.055945, 50.948067], [10.043917, 50.948208], [10.0437765, 50.959255], [10.031748, 50.96303], [10.043636, 50.970448], [10.037622, 50.974224], [10.025593, 50.978], [10.019579, 50.981636], [10.025454, 50.989048], [10.025313, 50.996464], [10.031188, 51.0001], [10.031048, 51.007515], [10.042937, 51.014927], [10.060842, 51.014786], [10.066855, 51.01115], [10.078745, 51.014786], [10.096788, 51.01087], [10.108818, 51.003456], [10.108678, 51.007095], [10.1145525, 51.01087], [10.132457, 51.01073], [10.138472, 51.00332], [10.138611, 50.999542], [10.1505, 50.99576], [10.156515, 50.99576], [10.168264, 50.9994], [10.174139, 51.003036], [10.180154, 50.99926], [10.197918, 50.99926], [10.203793, 51.0029], [10.209667, 51.01031], [10.209667, 51.013947], [10.197778, 51.017723], [10.197638, 51.0215], [10.209527, 51.017723], [10.215542, 51.017723], [10.215402, 51.021362], [10.221276, 51.02514], [10.209388, 51.03255], [10.209388, 51.036327], [10.203373, 51.039963], [10.203233, 51.04374], [10.1914835, 51.04374], [10.191343, 51.051155], [10.185469, 51.047516], [10.179454, 51.051292], [10.17344, 51.051292], [10.167565, 51.05507], [10.149661, 51.05507], [10.149521, 51.069897], [10.16141, 51.069897], [10.155396, 51.07731], [10.155256, 51.084724], [10.149241, 51.084724], [10.149241, 51.0885], [10.161131, 51.092136], [10.160991, 51.095913], [10.166865, 51.09955], [10.166865, 51.106964], [10.178755, 51.106823], [10.178615, 51.118015], [10.160711, 51.118153], [10.148682, 51.12557], [10.142807, 51.12557], [10.142668, 51.129345], [10.136653, 51.13312], [10.136653, 51.136757], [10.1247635, 51.136898], [10.1247635, 51.140533], [10.130638, 51.140533], [10.130638, 51.147945], [10.154417, 51.14417], [10.154417, 51.147808], [10.160292, 51.147808], [10.166166, 51.151443], [10.172181, 51.151443], [10.178195, 51.147667], [10.178195, 51.140255], [10.190084, 51.140255], [10.190225, 51.13284], [10.18435, 51.13284], [10.18435, 51.129063], [10.196379, 51.11424], [10.202394, 51.11424], [10.214143, 51.117874], [10.214143, 51.125286], [10.207989, 51.136337], [10.213863, 51.14375], [10.207849, 51.147526], [10.207849, 51.151165], [10.213723, 51.15494], [10.213584, 51.162354], [10.231208, 51.173405], [10.2370825, 51.180676], [10.236942, 51.18809], [10.225193, 51.184452], [10.219178, 51.18823], [10.213304, 51.18823], [10.213164, 51.192005], [10.201275, 51.192005], [10.201275, 51.19578], [10.19526, 51.203197], [10.171342, 51.21075], [10.165467, 51.20711], [10.153578, 51.20711], [10.153578, 51.210888], [10.147563, 51.214664], [10.147563, 51.218304], [10.141548, 51.22208], [10.141548, 51.218304], [10.135534, 51.22208], [10.12966, 51.218445], [10.11777, 51.218445], [10.111755, 51.22222], [10.093851, 51.22236], [10.093712, 51.229774], [10.087837, 51.229774], [10.081822, 51.226135], [10.075948, 51.226135], [10.069933, 51.22991], [10.069793, 51.23369], [10.075808, 51.237328], [10.075668, 51.248516], [10.0696535, 51.25215], [10.057624, 51.255928], [10.05161, 51.25607], [10.05161, 51.26348], [10.063359, 51.270756], [10.063359, 51.274532], [10.057344, 51.27831], [10.027411, 51.27845], [10.027411, 51.282085], [10.015522, 51.282227], [10.009368, 51.28964], [10.003493, 51.286003], [9.97356, 51.28614], [9.979435, 51.289917], [9.979435, 51.293556], [9.97342, 51.297333], [9.97342, 51.30097], [9.967405, 51.304745], [9.949362, 51.304886], [9.943347, 51.308662], [9.943347, 51.312298], [9.949222, 51.31971], [9.949222, 51.334538], [9.943208, 51.338314], [9.937193, 51.338314], [9.931178, 51.34209], [9.937193, 51.34573], [9.931178, 51.353283], [9.931178, 51.360695], [9.924884, 51.371883], [9.931038, 51.375523], [9.931038, 51.379158], [9.937193, 51.379158], [9.943208, 51.379158], [9.954957, 51.38657], [9.960691, 51.393986], [9.966566, 51.393986], [9.972441, 51.39762], [9.978456, 51.39762], [9.98419, 51.401257], [9.990205, 51.401257], [9.996079, 51.404896], [10.007969, 51.404896], [10.013703, 51.412308], [10.013424, 51.42336], [10.025313, 51.419582], [10.031328, 51.419582], [10.037203, 51.42336], [10.048952, 51.423218], [10.048812, 51.43063], [10.054827, 51.43063], [10.054547, 51.438046], [10.060561, 51.438046], [10.066576, 51.43427], [10.072731, 51.426853], [10.07287, 51.41944], [10.078745, 51.4193], [10.078745, 51.423077], [10.0846195, 51.426716], [10.08434, 51.43427], [10.09623, 51.437904], [10.108119, 51.433987], [10.114133, 51.433987], [10.114133, 51.43035], [10.120148, 51.43021], [10.126022, 51.433987], [10.137772, 51.437626], [10.137912, 51.43385], [10.143646, 51.437485], [10.143646, 51.44126], [10.155396, 51.448677], [10.161271, 51.448536], [10.1733, 51.44476], [10.179174, 51.44476], [10.179174, 51.448536], [10.18491, 51.455948], [10.18477, 51.459587], [10.190644, 51.463364], [10.190644, 51.467], [10.184629, 51.467], [10.18449, 51.470776], [10.190504, 51.470776], [10.190365, 51.478188], [10.196239, 51.481827], [10.207989, 51.485462], [10.220017, 51.47805], [10.220158, 51.470497], [10.238062, 51.470356], [10.237922, 51.474133], [10.243796, 51.477768], [10.249811, 51.477768], [10.249671, 51.481544], [10.267435, 51.485043], [10.279325, 51.48882], [10.285199, 51.492455], [10.302963, 51.492317], [10.302683, 51.50714], [10.308698, 51.50714], [10.314432, 51.514557], [10.320308, 51.514557], [10.320447, 51.51078], [10.338211, 51.514416], [10.34996, 51.521828], [10.349821, 51.529243], [10.36157, 51.536655], [10.367584, 51.536655], [10.367445, 51.54029], [10.37332, 51.544067], [10.373179, 51.551483], [10.379054, 51.55526], [10.378915, 51.559036], [10.384929, 51.558895], [10.384509, 51.573864], [10.378355, 51.581417], [10.378355, 51.585194], [10.420037, 51.58491], [10.431927, 51.588688], [10.443816, 51.58855], [10.455845, 51.580997], [10.467875, 51.580997], [10.479903, 51.57708], [10.485918, 51.573303], [10.491793, 51.573303], [10.491933, 51.569527], [10.497947, 51.569527], [10.503962, 51.56575], [10.510117, 51.558056], [10.522145, 51.550503], [10.534035, 51.550365], [10.539909, 51.554142], [10.551938, 51.550224], [10.557813, 51.554], [10.569702, 51.55386], [10.575577, 51.557636], [10.581592, 51.5575], [10.581451, 51.561275], [10.587466, 51.561275], [10.5992155, 51.568687], [10.599076, 51.572605], [10.60509, 51.572464], [10.604951, 51.57638], [10.616839, 51.57638], [10.629009, 51.568546], [10.6291485, 51.564632], [10.647193, 51.552883], [10.658942, 51.55344], [10.664817, 51.55792], [10.658942, 51.561134], [10.664677, 51.569527], [10.670551, 51.570087], [10.670551, 51.574], [10.664677, 51.57736], [10.652648, 51.57652], [10.646633, 51.580296], [10.640618, 51.580296], [10.640478, 51.58799], [10.634464, 51.591908], [10.634184, 51.603516], [10.646073, 51.60771], [10.646073, 51.61163], [10.6400585, 51.61149], [10.639919, 51.61932], [10.645933, 51.61946], [10.657823, 51.624077], [10.663837, 51.624355], [10.675587, 51.63303], [10.675587, 51.636944], [10.681461, 51.637363], [10.693351, 51.6424], [10.7051, 51.64352], [10.711255, 51.64296], [10.723563, 51.646175], [10.753777, 51.641422], [10.753777, 51.6452], [10.759791, 51.648975], [10.77196, 51.648693], [10.77196, 51.644917]]]
    }
  }]
};

/***/ }),

/***/ 3733:
/*!******************************************************************!*\
  !*** ./src/components/series/map-series/map-series.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MapSeriesChartComponent: () => (/* binding */ MapSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _map_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map-series.service */ 61497);






let MapSeriesChartComponent = class MapSeriesChartComponent {
  get onHover() {
    return this.seriesService.mouseover;
  }
  get onLeave() {
    return this.seriesService.mouseleave;
  }
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: _map_series_service__WEBPACK_IMPORTED_MODULE_3__.MapSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    onHover: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output
    }],
    onLeave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output
    }]
  };
};
MapSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="map"]',
  template: '',
  providers: [_map_series_service__WEBPACK_IMPORTED_MODULE_3__.MapSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush,
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewEncapsulation.None
})], MapSeriesChartComponent);


/***/ }),

/***/ 61497:
/*!****************************************************************!*\
  !*** ./src/components/series/map-series/map-series.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MapSeriesChartService: () => (/* binding */ MapSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _germany__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./germany */ 42443);










const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_1__.CHART_DEFAULT_SERIES_STATE
};
let MapSeriesChartService = class MapSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-map-germany-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`
    };
    this.mouseover = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.mouseleave = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      style
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    this.root.selectAll('path').remove();
    const bounds = d3__WEBPACK_IMPORTED_MODULE_6__.geoBounds(_germany__WEBPACK_IMPORTED_MODULE_7__.DATA);
    const bottomLeft = bounds[0];
    const topRight = bounds[1];
    const rotLong = -(topRight[0] + bottomLeft[0]) / 2;
    const center = [(topRight[0] + bottomLeft[0]) / 2 + rotLong, (topRight[1] + bottomLeft[1]) / 2];
    let projection = d3__WEBPACK_IMPORTED_MODULE_6__.geoAlbers().parallels([bottomLeft[1], topRight[1]]).rotate([rotLong, 0, 0]).translate([rect.width / 2, rect.height / 2]).center(center);
    const bottomLeftPx = projection(bottomLeft);
    const topRightPx = projection(topRight);
    const scaleFactor = 1.00 * Math.min(rect.width / (topRightPx[0] - bottomLeftPx[0]), rect.height / (-topRightPx[1] + bottomLeftPx[1]));
    projection = d3__WEBPACK_IMPORTED_MODULE_6__.geoAlbers().parallels([bottomLeft[1], topRight[1]]).rotate([rotLong, 0, 0]).translate([rect.width / 2, rect.height / 2]).scale(scaleFactor * 0.975 * 1000).center(center);
    const path = d3__WEBPACK_IMPORTED_MODULE_6__.geoPath().projection(projection);
    const datum = _germany__WEBPACK_IMPORTED_MODULE_7__.DATA.features;
    const pathStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.arc);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, datum);
    draw(`.chart-map-series-land-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`, {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', path).attr('chart-map-selector-hover', true).classed('chart-map-series-land', true).attr('fill', (d, i) => pathStyle(d, i).fill).attr('stroke-width', (d, i) => pathStyle(d, i).strokeWidth).attr('stroke', (d, i) => pathStyle(d, i).stroke).on('mouseover', (d, i) => {
        this.root.selectAll('.chart-map-series-land').filter(a => a === d).transition().delay(100).attr('fill', pathStyle(d, i).fillHover);
        this.mouseover.emit(d);
      }).on('mouseleave', (d, i) => {
        this.root.selectAll('.chart-map-series-land').filter(a => a === d).transition().delay(100).attr('fill', pathStyle(d, i).fill);
        this.mouseleave.emit();
      })
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
};
MapSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], MapSeriesChartService);


/***/ }),

/***/ 55887:
/*!************************************************************************!*\
  !*** ./src/components/series/matrix-series/matrix-series.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MatrixSeriesChartComponent: () => (/* binding */ MatrixSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _matrix_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./matrix-series.service */ 22119);






let MatrixSeriesChartComponent = class MatrixSeriesChartComponent {
  get onOrderChange() {
    return this.seriesService.onOrderChange;
  }
  set order(value) {
    this.seriesService.order = value;
  }
  get order() {
    return this.seriesService.order;
  }
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    this.labelOffset = 100;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.data) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      labelOffset: this.labelOffset,
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: _matrix_series_service__WEBPACK_IMPORTED_MODULE_3__.MatrixSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    labelOffset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    onOrderChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output
    }],
    order: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
MatrixSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="matrix"]',
  template: '',
  providers: [_matrix_series_service__WEBPACK_IMPORTED_MODULE_3__.MatrixSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable]
})], MatrixSeriesChartComponent);


/***/ }),

/***/ 22119:
/*!**********************************************************************!*\
  !*** ./src/components/series/matrix-series/matrix-series.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MatrixSeriesChartService: () => (/* binding */ MatrixSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3 */ 86164);








let MatrixSeriesChartService = class MatrixSeriesChartService {
  set order(order) {
    this._order = order;
    this.onOrderChange.emit(order);
    if (this.state) {
      this.invalidateOrder(order);
    }
  }
  get order() {
    return this._order;
  }
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.onOrderChange = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
    const selector = {
      id: `chart-series-matrix-${(0,_kit__WEBPACK_IMPORTED_MODULE_4__.nextId)()}`,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      labelOffset
    } = state;
    this.state = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const datum = this.formatData(data);
    const orders = this.getOrders(datum);
    const chartSideLength = Math.min(rect.width, rect.height);
    const cellSideLength = (Math.min(rect.width, rect.height) - labelOffset) / datum.nodes.length;
    this.root.attr('transform', `translate(${(rect.width - chartSideLength) / 2},
                                    ${(rect.height - chartSideLength) / 2})`);
    const scaleSide = d3__WEBPACK_IMPORTED_MODULE_5__.scaleBand().range([labelOffset, chartSideLength]).domain(orders[this.order]);
    const scaleOpacity = d3__WEBPACK_IMPORTED_MODULE_5__.scaleLinear().domain([0, 4]).clamp(true);
    const setColor = d3__WEBPACK_IMPORTED_MODULE_5__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_5__.schemeCategory10);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_0__.ChartStyle.label);
    const matrixStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_0__.ChartStyle.matrix);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_2__.ChartDrawFactory)(this.root, datum.matrix);
    const drawBackground = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_2__.ChartDrawFactory)(this.root, [data]);
    drawBackground('.chart-background', {
      create: selection => selection.append('rect'),
      update: selection => selection.attr('fill', '#eee').attr('width', chartSideLength - labelOffset).attr('height', chartSideLength - labelOffset).attr('transform', `translate(${labelOffset}, ${labelOffset})`)
    });
    draw('.chart-matrix-column', {
      create: selection => selection.append('g'),
      update: selection => selection.style('width', rect.width).attr('transform', (d, i) => {
        return `translate(${scaleSide(i)}, 0)`;
      })
    });
    draw('.chart-matrix-lol', {
      create: selection => selection.append('g'),
      update: selection => selection.style('width', rect.width).attr('transform', (d, i) => {
        return `translate(0,${scaleSide(i)})`;
      }).each((d, i) => {
        const currentNode = this.root.selectAll('.chart-matrix-lol').filter(e => e === d);
        const drawCell = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_2__.ChartDrawFactory)(currentNode, d);
        drawCell('.chart-matrix-cell', {
          // tslint:disable-next-line:no-shadowed-variable
          create: selection => selection.append('rect'),
          // tslint:disable-next-line:no-shadowed-variable
          update: selection => selection.attr('chart-matrix-selector-hover', (e, c) => c).attr('x', (e, c) => scaleSide(c)).attr('width', cellSideLength).attr('height', cellSideLength).style('fill-opacity', (e, c) => {
            if (matrixStyle(e, c).opacity === 'default') {
              return scaleOpacity(e.z);
            }
            return matrixStyle(e, c).opacity;
          }).style('fill', (e, c) => {
            if (matrixStyle(e, c).color === 'default') {
              return datum.nodes[e.x].group === datum.nodes[e.y].group ? setColor(datum.nodes[e.x].group) : 'transparent';
            }
            return matrixStyle(e, c).color;
          }).on('mouseover', (e, c) => this.mouseover(c, d, i)).on('mouseleave', (e, c) => this.mouseleave(c, d, i))
        });
      })
    });
    this.root.selectAll('.chart-matrix-lol').append('line').attr('x1', chartSideLength - labelOffset).attr('transform', `translate(${labelOffset})`).attr('stroke', '#fff').attr('stroke-width', 1);
    this.root.selectAll('.chart-matrix-column').append('line').attr('y1', chartSideLength - labelOffset).attr('transform', `translate(0, ${labelOffset})`).attr('stroke', '#fff').attr('stroke-width', 1);
    draw('.chart-matrix-row', {
      create: selection => selection.append('g'),
      update: selection => selection.style('height', rect.width).attr('transform', (d, i) => {
        return `translate(0, ${scaleSide(i)})`;
      })
    });
    this.root.selectAll('.chart-matrix-row').append('line').attr('x1', chartSideLength - labelOffset + cellSideLength).attr('transform', `translate(${labelOffset})`).attr('stroke', '#fff').attr('stroke-width', 1);
    this.root.selectAll('.chart-matrix-column').append('line').attr('y1', chartSideLength - labelOffset + cellSideLength).attr('transform', `translate(0, ${labelOffset})`).attr('stroke', '#fff').attr('stroke-width', 1);
    draw('.chart-matrix-label-vertical', {
      create: selection => selection.append('text'),
      update: selection => selection.attr('x', labelOffset - 10).attr('dy', cellSideLength).attr('y', (d, i) => scaleSide(i) - 6).attr('fill', (d, i) => labelStyle(d, i).color).attr('text-anchor', 'end').attr('font-size', (d, i) => labelStyle(d, i).fontSize).attr('font-family', (d, i) => labelStyle(d, i).fontFamily).text((e, c) => datum.nodes[c].name)
    });
    draw('.chart-matrix-label-horizontal', {
      create: selection => selection.append('text'),
      update: selection => selection.attr('x', (d, i) => scaleSide(i)).attr('dy', cellSideLength).attr('fill', (d, i) => labelStyle(d, i).color).attr('transform', (d, i) => `translate(${scaleSide(i) - cellSideLength * 0.25},
                      ${scaleSide(i) + labelOffset - 10})rotate(-90)`).attr('font-size', (d, i) => labelStyle(d, i).fontSize).attr('font-family', (d, i) => labelStyle(d, i).fontFamily).text((d, i) => datum.nodes[i].name)
    });
  }
  mouseover(c, d, i) {
    const {
      style
    } = this.state;
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_0__.ChartStyle.label);
    this.root.selectAll('.chart-matrix-label-vertical').filter(a => a === d).attr('fill', labelStyle(d, i).colorHover);
    this.root.selectAll('.chart-matrix-label-horizontal').filter((a, b) => b === c).attr('fill', labelStyle(d, i).colorHover);
  }
  mouseleave(c, d, i) {
    const {
      style
    } = this.state;
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_0__.ChartStyle.label);
    this.root.selectAll('.chart-matrix-label-vertical, .chart-matrix-label-horizontal ').attr('fill', labelStyle(d, i).color);
  }
  invalidateOrder(order) {
    this.move(order);
  }
  getOrders(datum) {
    return {
      name: d3__WEBPACK_IMPORTED_MODULE_5__.range(datum.length).sort((a, b) => {
        return d3__WEBPACK_IMPORTED_MODULE_5__.ascending(datum.nodes[a].name, datum.nodes[b].name);
      }),
      count: d3__WEBPACK_IMPORTED_MODULE_5__.range(datum.length).sort((a, b) => {
        return datum.nodes[b].count - datum.nodes[a].count;
      }),
      group: d3__WEBPACK_IMPORTED_MODULE_5__.range(datum.length).sort((a, b) => {
        return datum.nodes[b].group - datum.nodes[a].group;
      })
    };
  }
  formatData(data) {
    const matrix = [];
    const nodes = data.nodes;
    const length = nodes.length;
    nodes.forEach((node, i) => {
      node.index = i;
      node.count = 0;
      matrix[i] = d3__WEBPACK_IMPORTED_MODULE_5__.range(length).map(j => {
        return {
          x: j,
          y: i,
          z: 0,
          data: {
            x: data.nodes[i],
            y: data.nodes[j]
          }
        };
      });
    });
    data.links.forEach(link => {
      matrix[link.source][link.target].z += link.value;
      matrix[link.target][link.source].z += link.value;
      matrix[link.source][link.source].z += link.value;
      matrix[link.target][link.target].z += link.value;
      nodes[link.source].count += link.value;
      nodes[link.target].count += link.value;
    });
    return {
      matrix,
      nodes,
      length
    };
  }
  move(order) {
    const {
      rect,
      data,
      labelOffset
    } = this.state;
    const chartSideLength = Math.min(rect.width, rect.height);
    const datum = this.formatData(data);
    const orders = this.getOrders(datum);
    const rectSideLength = (Math.min(rect.width, rect.height) - 70) / datum.nodes.length;
    const scaleSide = d3__WEBPACK_IMPORTED_MODULE_5__.scaleBand().range([labelOffset, chartSideLength]).domain(orders[order]);
    const duration = 2500;
    this.root.selectAll(`.chart-matrix-column`).transition().duration(duration).delay((d, i) => scaleSide(i) * 4).attr('transform', (d, i) => `translate(${scaleSide(i)}, 0)`);
    this.root.selectAll(`.chart-matrix-row`).transition().duration(duration).delay((d, i) => scaleSide(i) * 4).attr('transform', (d, i) => `translate(0,${scaleSide(i)})`);
    this.root.selectAll(`.chart-matrix-lol`).transition().duration(duration).delay((d, i) => scaleSide(i) * 4).attr('transform', (d, i) => `translate(0,${scaleSide(i)})`).each(d => {
      this.root.selectAll(`.chart-matrix-cell`).filter(a => d.includes(a)).transition().duration(duration).delay(e => scaleSide(e.x) * 4).attr('x', (e, c) => scaleSide(c));
    });
    this.root.selectAll('.chart-matrix-label-vertical').transition().duration(duration).delay((d, i) => scaleSide(i) * 4).attr('y', (d, i) => scaleSide(i) - 6);
    this.root.selectAll('.chart-matrix-label-horizontal').transition().duration(duration).delay((d, i) => scaleSide(i) * 4).attr('x', (d, i) => scaleSide(i)).attr('transform', (d, i) => `translate(${scaleSide(i) - rectSideLength * 0.25}, ${scaleSide(i) + labelOffset - 10})rotate(-90)`);
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
};
MatrixSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)()], MatrixSeriesChartService);


/***/ }),

/***/ 25885:
/*!******************************************************************!*\
  !*** ./src/components/series/pie-series/pie-series.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PieSeriesChartComponent: () => (/* binding */ PieSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _pie_series_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pie-series.service */ 15809);






let PieSeriesChartComponent = class PieSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_1__.ChartComponent
  }, {
    type: _pie_series_service__WEBPACK_IMPORTED_MODULE_3__.PieSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
PieSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="pie"]',
  template: '',
  providers: [_pie_series_service__WEBPACK_IMPORTED_MODULE_3__.PieSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_0__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], PieSeriesChartComponent);


/***/ }),

/***/ 15809:
/*!****************************************************************!*\
  !*** ./src/components/series/pie-series/pie-series.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PieSeriesChartService: () => (/* binding */ PieSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let PieSeriesChartService = class PieSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-radial-tree-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  checkSum(data, total) {
    let values = data;
    const sum = values.reduce((a, b) => a + b);
    if (sum < total) {
      values = values.concat(total - sum);
    }
    return values;
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      total
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    const values = this.checkSum(data, total);
    const datum = d3__WEBPACK_IMPORTED_MODULE_0__.pie().sort(null)(values);
    const arcStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.arc);
    const pieStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.pie);
    const arc = d3__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(0).outerRadius(rect.height / 2 * pieStyle(null, 0).outerRadius / 100);
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, datum);
    draw('.chart-pie-arc', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('chart-pie-selector-hover', true).attr('d', d => arc(d)).attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`).style('stroke', (d, i) => arcStyle(d, i).stroke).style('stroke-width', (d, i) => arcStyle(d, i).strokeWidth).style('fill', (d, i) => arcStyle(d, i).fill)
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
PieSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], PieSeriesChartService);


/***/ }),

/***/ 43485:
/*!**********************************************************************************!*\
  !*** ./src/components/series/radial-tree-series/radial-tree-series.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RadialTreeSeriesChartComponent: () => (/* binding */ RadialTreeSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radial-tree-series.component.scss?ngResource */ 46417);
/* harmony import */ var _radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _radial_tree_series_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radial-tree-series.service */ 17793);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);







let RadialTreeSeriesChartComponent = class RadialTreeSeriesChartComponent {
  get selectionChange() {
    return this.seriesService.selectionChange;
  }
  set selection(value) {
    this.seriesService.selection = value;
  }
  get selection() {
    return this.seriesService.selection;
  }
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder();
    this.levels = 0;
    this.offset = 100;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges() {
    this.invalidate();
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      layout: this.layout,
      levels: this.levels,
      links: this.links,
      offset: this.offset,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_4__.ChartComponent
  }, {
    type: _radial_tree_series_service__WEBPACK_IMPORTED_MODULE_1__.RadialTreeSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    layout: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    links: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    levels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    offset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    selection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  };
};
RadialTreeSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
  selector: 'app-chart-series[type="radial-tree"]',
  template: '',
  providers: [_radial_tree_series_service__WEBPACK_IMPORTED_MODULE_1__.RadialTreeSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ChangeDetectionStrategy.OnPush,
  // tslint:disable-next-line:use-view-encapsulation
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
  styles: [(_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0___default())]
})], RadialTreeSeriesChartComponent);


/***/ }),

/***/ 17793:
/*!********************************************************************************!*\
  !*** ./src/components/series/radial-tree-series/radial-tree-series.service.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RadialTreeSeriesChartService: () => (/* binding */ RadialTreeSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_1__.CHART_DEFAULT_SERIES_STATE
};
let RadialTreeSeriesChartService = class RadialTreeSeriesChartService {
  set selection(currentValue) {
    if (this.localSelection !== currentValue) {
      const oldValue = this.localSelection;
      this.localSelection = currentValue;
      this.selectionChange.emit({
        oldValue,
        currentValue
      });
    }
  }
  get selection() {
    return this.localSelection;
  }
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-radial-tree-${(0,_kit__WEBPACK_IMPORTED_MODULE_4__.nextId)()}`
    };
    this.localSelection = [];
    this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__.EventEmitter();
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      layout,
      levels,
      links
    } = state;
    const visibleLevels = levels === 0 ? this.maxDepth(data) + 1 : levels;
    if (!rect.height || !rect.width) {
      return;
    }
    this.root.attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`);
    const radius = visibleLevels === 1 ? this.getRadius(state) * this.maxDepth(data) / visibleLevels : this.getRadius(state) * this.maxDepth(data) / (visibleLevels - 1);
    let tree;
    if (layout === 'cluster') {
      tree = d3__WEBPACK_IMPORTED_MODULE_0__.cluster().size([2 * Math.PI, radius])(d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data));
    } else {
      tree = d3__WEBPACK_IMPORTED_MODULE_0__.tree().size([2 * Math.PI, radius]).separation((a, b) => {
        return a.parent === b.parent ? 1 : 2;
      })(d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data));
    }
    const nodeStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.node);
    const linkStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.link);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.label);
    let linksDatum;
    let drawLink;
    this.root.selectAll('.chart-link').remove();
    const translateLabel = (d, i) => {
      if (d.x >= Math.PI) {
        return `rotate(${d.x * 180 / Math.PI - 90})
                translate(${d.y})
                rotate(180)`;
      }
      return `rotate(${d.x * 180 / Math.PI - 90})
                translate(${d.y})`;
    };
    const drawNode = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, tree.descendants());
    drawNode('.chart-label', {
      create: selection => selection.append('text'),
      update: selection => selection.attr('display', d => d.depth < visibleLevels ? 'all' : 'none').attr('x', d => d.x < Math.PI ? 8 : -8).attr('dy', '.31em').attr('text-anchor', d => d.x < Math.PI ? 'start' : 'end').attr('transform', translateLabel).attr('font-weight', (d, i) => labelStyle(d, i).fontWeight).attr('font-size', (d, i) => labelStyle(d, i).fontSize).text(d => d.data.name)
    });
    drawNode('.chart-node', {
      create: selection => selection.append('circle'),
      update: selection => selection.attr('display', d => d.depth < visibleLevels ? 'all' : 'none').attr('chart-tree-selector-hover', d => d.parent ? 1 : null).attr('transform', d => `rotate(${d.x * 180 / Math.PI - 90})
                                             translate(${d.y})`).attr('r', (d, i) => nodeStyle(d, i).radius).attr('fill', (d, i) => nodeStyle(d, i).fill).attr('stroke-width', (d, i) => nodeStyle(d, i).strokeWidth).attr('stroke', (d, i) => nodeStyle(d, i).stroke).on('click', d => {
        const {
          event
        } = d3__WEBPACK_IMPORTED_MODULE_0__;
        event.stopPropagation();
        this.selection = [d.data];
      }).on('mouseover', (d, i) => {
        this.root.selectAll('.chart-node').filter(n => n === d).attr('r', nodeStyle(d, i).radiusOnHover);
      }).on('mouseleave', (d, i) => {
        this.root.selectAll('.chart-node').filter(n => n === d).attr('r', nodeStyle(d, i).radius);
      })
    });
    if (links === 'straight') {
      linksDatum = tree.links().map(link => ({
        link,
        x1: this.toRadial(link.source.x, link.source.y)[0],
        y1: this.toRadial(link.source.x, link.source.y)[1],
        x2: this.toRadial(link.target.x, link.target.y)[0],
        y2: this.toRadial(link.target.x, link.target.y)[1]
      }));
      drawLink = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, linksDatum);
      drawLink('.chart-link', {
        create: selection => selection.append('line'),
        update: selection => selection.attr('display', d => d.link.target.depth <= visibleLevels - 1 ? 'all' : 'none').attr('stroke', (d, i) => linkStyle(d, i).stroke).attr('stroke-opacity', (d, i) => linkStyle(d, i).strokeOpacity).attr('stroke-width', (d, i) => linkStyle(d, i).strokeWidth).attr('x1', d => d.x1).attr('y1', d => d.y1).attr('x2', d => d.x2).attr('y2', d => d.y2)
      });
    } else {
      linksDatum = tree.links();
      drawLink = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, linksDatum);
      drawLink('.chart-link', {
        create: selection => selection.append('path'),
        update: selection => selection.attr('display', d => d.target.depth <= visibleLevels - 1 ? 'all' : 'none').attr('d', d3__WEBPACK_IMPORTED_MODULE_0__.linkRadial().angle(d => d.x).radius(d => d.y)).attr('fill', 'none').attr('stroke', (d, i) => linkStyle(d, i).stroke).attr('stroke-opacity', (d, i) => linkStyle(d, i).strokeOpacity).attr('stroke-width', (d, i) => linkStyle(d, i).strokeWidth)
      });
    }
  }
  getRadius(state) {
    const {
      rect,
      offset
    } = state;
    return Math.min(rect.height, rect.width) / 2 - offset;
  }
  toRadial(x, y) {
    return [(y = y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
  }
  maxDepth(data) {
    const hierarchy = d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data).sum(d => d.value).descendants();
    return hierarchy[hierarchy.length - 1].depth;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_3__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
};
RadialTreeSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], RadialTreeSeriesChartService);


/***/ }),

/***/ 81667:
/*!********************************************************************!*\
  !*** ./src/components/series/rect-series/rect-series.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RectSeriesChartComponent: () => (/* binding */ RectSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _rect_series_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rect-series.service */ 85819);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);






let RectSeriesChartComponent = class RectSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.data) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      total: this.total,
      rect: this.chart.rect,
      margin: this.chart.margin,
      range: this.range
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent
  }, {
    type: _rect_series_service__WEBPACK_IMPORTED_MODULE_0__.RectSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    total: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
RectSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-series[type="rect"]',
  template: '',
  providers: [_rect_series_service__WEBPACK_IMPORTED_MODULE_0__.RectSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], RectSeriesChartComponent);


/***/ }),

/***/ 85819:
/*!******************************************************************!*\
  !*** ./src/components/series/rect-series/rect-series.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RectSeriesChartService: () => (/* binding */ RectSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let RectSeriesChartService = class RectSeriesChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-pie-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  checkSum(data, total) {
    let values = data;
    const sum = values.reduce((a, b) => a + b);
    if (sum < total) {
      values = values.concat(total - sum);
    }
    return values;
  }
  setState(state) {
    const {
      rect,
      data,
      style,
      range
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    this.root.selectAll('rect').remove();
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_6__.ChartDrawFactory)(this.root, data);
    const scaleX = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_2__.createScaleX)('linear', {
      ...state,
      data: range.x
    });
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_2__.createScaleY)('linear', {
      ...state,
      data: [d3__WEBPACK_IMPORTED_MODULE_0__.max(range.y), d3__WEBPACK_IMPORTED_MODULE_0__.min(range.y)]
    });
    const maxX = d3__WEBPACK_IMPORTED_MODULE_0__.max(data[0]);
    const minX = d3__WEBPACK_IMPORTED_MODULE_0__.min(data[0]);
    const maxY = d3__WEBPACK_IMPORTED_MODULE_0__.max(data[1]);
    const minY = d3__WEBPACK_IMPORTED_MODULE_0__.min(data[1]);
    const rectStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_5__.ChartStyle.rect);
    draw('.chart-rect', {
      create: selection => selection.append('rect'),
      update: selection => selection.attr('width', scaleX(maxX) - scaleX(minX)).attr('height', scaleY(minY) - scaleY(maxY)).attr('x', 1 + scaleX(minX)).attr('y', scaleY(d3__WEBPACK_IMPORTED_MODULE_0__.max(range.y) - minY)).attr('fill', (d, i) => rectStyle(d, i).fill)
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
RectSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)()], RectSeriesChartService);


/***/ }),

/***/ 15699:
/*!****************************************************************************!*\
  !*** ./src/components/series/sunburst-series/sunburst-series.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SunburstSeriesChartComponent: () => (/* binding */ SunburstSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _sunburst_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sunburst-series.component.html?ngResource */ 65317);
/* harmony import */ var _sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sunburst-series.component.scss?ngResource */ 48107);
/* harmony import */ var _sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);
/* harmony import */ var _sunburst_series_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sunburst-series.service */ 29163);








let SunburstSeriesChartComponent = class SunburstSeriesChartComponent {
  get selectionChange() {
    return this.seriesService.selectionChange;
  }
  set selection(value) {
    this.seriesService.selection = value;
  }
  get selection() {
    return this.seriesService.selection;
  }
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder();
    this.rings = 2;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.data) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      data: this.data,
      style: this.style,
      rings: this.rings,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_4__.ChartComponent
  }, {
    type: _sunburst_series_service__WEBPACK_IMPORTED_MODULE_5__.SunburstSeriesChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    rings: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output
    }],
    selection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
SunburstSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-chart-series[type="sunburst"]',
  template: _sunburst_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_sunburst_series_service__WEBPACK_IMPORTED_MODULE_5__.SunburstSeriesChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewEncapsulation.None,
  styles: [(_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], SunburstSeriesChartComponent);


/***/ }),

/***/ 29163:
/*!**************************************************************************!*\
  !*** ./src/components/series/sunburst-series/sunburst-series.service.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SunburstSeriesChartService: () => (/* binding */ SunburstSeriesChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);









const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_5__.CHART_DEFAULT_SERIES_STATE,
  rings: 2
};
const PERIMETER_LIMIT = 22;
let SunburstSeriesChartService = class SunburstSeriesChartService {
  set selection(currentValue) {
    if (this.localSelection !== currentValue) {
      const oldValue = this.localSelection;
      this.localSelection = currentValue;
      this.selectionChange.emit({
        oldValue,
        currentValue
      });
      this.selectedNode = this.invalidateSelection(currentValue);
    }
  }
  get selection() {
    return this.localSelection;
  }
  constructor(chartService, disposable, renderer) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-sunburst-${(0,_kit__WEBPACK_IMPORTED_MODULE_2__.nextId)()}`
    };
    this.selector = {
      id: this.state.id,
      level: 0
    };
    this.localSelection = [];
    this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__.EventEmitter();
    const svg = chartService.selectRoot().node();
    this.root = chartService.select(this.selector);
    this.root.classed('chart-series-sunburst', true);
    this.disposable.add(() => this.chartService.remove(this.selector));
    this.disposable.add(renderer.listen(svg, 'click', () => {
      this.selection = [];
    }));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      rect,
      data,
      rings,
      style
    } = this.state;
    if (!rect.height || !rect.width) {
      return;
    }
    const maxDepth = this.maxDepth(data);
    this.state.scaleX = d3__WEBPACK_IMPORTED_MODULE_0__.scaleLinear().range([0, 2 * Math.PI]);
    this.state.scaleY = d3__WEBPACK_IMPORTED_MODULE_0__.scaleLinear().range([0, this.getRadius() + this.getRadius() / (rings + 1) * (maxDepth - rings)]);
    const {
      scaleX,
      scaleY
    } = this.state;
    const arcStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.arc);
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.label);
    const root = this.buildRoot(data);
    const arc = d3__WEBPACK_IMPORTED_MODULE_0__.arc().startAngle(d => Math.max(0, Math.min(2 * Math.PI, scaleX(d.x0)))).endAngle(d => Math.max(0, Math.min(2 * Math.PI, scaleX(d.x1)))).innerRadius(d => Math.max(0, scaleY(d.y0))).outerRadius(d => Math.max(scaleY(d.y0), scaleY(d.y1)));
    this.zoom = this.zoomFactory(arc);
    const shouldHide = d => d.depth > rings;
    const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_4__.ChartDrawFactory)(this.root, root.descendants());
    draw('.chart-sunburst-arc', {
      create: selection => selection.append('path'),
      update: selection => selection.attr('d', arc).attr('chart-sunburst-selector-hover', d => d.parent ? this.selector.id : null).attr('transform', `translate(${rect.width / 2}, ${rect.height / 2})`).attr('stroke', (d, i) => d.depth > rings ? 'transparent' : arcStyle(d, i).stroke).attr('stroke-width', (d, i) => arcStyle(d, i).strokeWidth).attr('fill', (d, i) => arcStyle(d, i).fill).attr('opacity', d => shouldHide(d) ? 0 : d.depth === 1 ? 1 : 0.7).on('click', (event, d) => {
        // const { event } = d3;
        event.stopPropagation();
        if (this.selection[0] !== d.data) {
          this.selection = [d.data];
        } else {
          if (d.children) {
            this.selection = d.parent ? [d.parent.data] : [d.data];
          }
        }
      }).on('mouseover', (d, i) => {
        const arcStyleOver = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.arc);
        this.root.selectAll('.chart-sunburst-arc').filter(n => n === d).style('fill', () => {
          const {
            changeSet,
            fill,
            fillHover
          } = arcStyleOver(d, i);
          return changeSet.has('fillHover') ? fillHover : fill;
        });
      }).on('mouseleave', (d, i) => {
        const arcStyleLeave = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.arc);
        this.root.selectAll('.chart-sunburst-arc').filter(n => n === d).style('fill', () => {
          return arcStyleLeave(d, i).fill;
        });
      })
    });
    draw('.chart-sunburst-label', {
      create: selection => selection.append('foreignObject'),
      update: selection => selection.attr('height', d => scaleY(d.y1) - scaleY(d.y0)).attr('width', d => scaleY(d.y1) - scaleY(d.y0)).classed('should-hide', shouldHide).attr('color', (d, i) => labelStyle(d, i).color).attr('id', (d, i) => `${this.selector.id}-label-${i}`).attr('transform', (d, i) => this.translateLabel(d, i, arc)).attr('opacity', d => {
        const deltaAngle = scaleX(d.x1) - scaleX(d.x0);
        const r = Math.max(0, (scaleY(d.y0) + scaleY(d.y1)) / 2);
        const perimeter = r * deltaAngle;
        return perimeter < PERIMETER_LIMIT ? 0 : 1;
      }).html('').append('xhtml:span').classed('chart-sunburst-text', true).attr('id', 'chart-sunburst-label').style('transform', d => this.translateText(d)).style('font-size', (d, i) => labelStyle(d, i).fontSize + 'px').style('line-height', (d, i) => labelStyle(d, i).fontSize + 'px').style('background-color', (d, i) => labelStyle(d, i).backgroundColor).text(d => d.parent ? d.data.name : '')
    });
    this.invalidateSelection(this.selection);
  }
  drilldown(arc) {
    const {
      scaleX,
      scaleY,
      style,
      data,
      rings
    } = this.state;
    const maxDepth = this.maxDepth(data);
    const zoomStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.zoom);
    const {
      duration,
      enabled
    } = zoomStyle(null);
    let xd;
    let yd;
    let yr;
    const arcTween = node => {
      const radius = this.getRadius();
      const target = node.children && node.children[0];
      if (!target) {
        return () => {};
      }
      xd = d3__WEBPACK_IMPORTED_MODULE_0__.interpolate(scaleX.domain(), [target.x0, node.x1]);
      yd = d3__WEBPACK_IMPORTED_MODULE_0__.interpolate(scaleY.domain(), [target.y0, 1]);
      yr = d3__WEBPACK_IMPORTED_MODULE_0__.interpolate(scaleY.range(), [target.y0 ? radius / (rings + 1) : 0, radius + (maxDepth - rings - node.depth) * radius / (rings + 1)]);
      return (d, i) => {
        return i ? () => arc(d) : t => {
          scaleX.domain(xd(t));
          scaleY.domain(yd(t)).range(yr(t));
          return arc(d);
        };
      };
    };
    return search => {
      if (enabled) {
        const nodes = [];
        let rootNode;
        this.root.selectAll('.chart-sunburst-arc').filter(n => {
          if (search.indexOf(n.data) >= 0) {
            nodes.push(n);
          }
          if (!rootNode) {
            rootNode = n;
          }
          return true;
        });
        const oldNode = this.selectedNode || null;
        let newNode = nodes[0] && nodes[0].parent ? nodes[0] : null;
        if (newNode === oldNode) {
          newNode = newNode !== null ? newNode.parent : null;
        }
        if (newNode !== oldNode) {
          if (newNode === null && oldNode.parent === null) {
            return null;
          }
          const arcStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.arc);
          const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.label);
          if (oldNode && newNode) {
            if (oldNode.parent === newNode.parent && !(newNode.children && newNode.children.length)) {
              this.root.selectAll('.chart-sunburst-arc').style('fill', (d, i) => arcStyle(d, i).fill);
              return newNode;
            }
          }
          let target = newNode || rootNode;
          if (!(target.children && target.children.length)) {
            target = target.parent;
          }
          const shouldHide = d => !(0,_kit__WEBPACK_IMPORTED_MODULE_2__.hasParent)(target, d) || d.depth > target.depth + rings || d.depth <= target.depth;
          this.root.selectAll('.chart-sunburst-label').classed('should-hide', true);
          this.root.selectAll('#chart-sunburst-label').classed('should-hide', true);
          this.root.selectAll('.chart-sunburst-arc').transition().duration(duration).style('opacity', d => {
            if (shouldHide(d)) {
              return 0;
            }
            if (this.selection.length === 0) {
              return d.depth === 1 ? 1 : 0.7;
            }
            return target === d.parent ? 1 : 0.7;
          }).attr('fill', (d, i) => arcStyle(d, i).fill).attr('stroke', (d, i) => d.depth <= target.depth + rings && d.depth > target.depth ? arcStyle(d, i).stroke : 'transparent').attrTween('d', arcTween(target)).on('end', (d, i) => {
            if (d.x0 >= target.x0 && _kit__WEBPACK_IMPORTED_MODULE_2__.ChartMath.less(d.x0, target.x1)) {
              const labelId = `#${this.state.id}-label-${i}`;
              this.root.selectAll(labelId).style('height', scaleY(d.y1) - scaleY(d.y0)).style('width', scaleY(d.y1) - scaleY(d.y0)).style('font-size', labelStyle(d, i).fontSize).style('color', labelStyle(d, i).color).attr('transform', (n, c) => this.translateLabel(n, c, arc)).filter(n => n.depth <= target.depth + rings && n.depth > target.depth).style('opacity', n => {
                const deltaAngle = scaleX(n.x1) - scaleX(n.x0);
                const r = Math.max(0, (scaleY(n.y0) + scaleY(n.y1)) / 2);
                const perimeter = r * deltaAngle;
                return perimeter < PERIMETER_LIMIT ? 0 : 1;
              });
              this.root.selectAll('#chart-sunburst-label').classed('should-hide', shouldHide).style('transform', n => this.translateText(n));
              this.root.selectAll('.chart-sunburst-arc').attr('chart-sunburst-selector-hover', n => n === target ? null : this.selector.id);
            }
          });
          return newNode;
        }
      }
    };
  }
  maxDepth(data) {
    const hierarchy = d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data).sum(d => d.value).descendants();
    return hierarchy[hierarchy.length - 1].depth;
  }
  buildRoot(data) {
    const hierarchy = d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);
    return d3__WEBPACK_IMPORTED_MODULE_0__.partition()(hierarchy);
  }
  getRadius() {
    const {
      rect
    } = this.state;
    return Math.min(rect.width, rect.height) / 2 - 10;
  }
  translateLabel(d, i, arc) {
    const {
      rect,
      scaleY
    } = this.state;
    const [cx, cy] = arc.centroid(d, i);
    const size = scaleY(d.y1) - scaleY(d.y0);
    return `translate(${rect.width / 2}, ${rect.height / 2})
                translate(${cx}, ${cy})
                translate(-${size / 2}, -${size / 2})`;
  }
  translateText(d) {
    const {
      scaleX
    } = this.state;
    const angle = (scaleX(d.x0) + scaleX(d.x1)) / 2 * 180 / Math.PI;
    return `translate(-50%, -50%)
                rotate(${angle - 90}deg)
                rotate(${angle < 180 ? 0 : 180}deg)`;
  }
  invalidateSelection(value) {
    return this.zoom ? this.zoom(value) : null;
  }
  zoomFactory(arc) {
    return this.drilldown(arc);
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Renderer2
  }];
};
SunburstSeriesChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()], SunburstSeriesChartService);


/***/ }),

/***/ 95767:
/*!********************************************************************************!*\
  !*** ./src/components/series/word-cloud-series/word-cloud-series.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WordCloudSeriesChartComponent: () => (/* binding */ WordCloudSeriesChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _word_cloud_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word-cloud-series.component.html?ngResource */ 89601);
/* harmony import */ var _word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./word-cloud-series.component.scss?ngResource */ 62095);
/* harmony import */ var _word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _word_cloud_series_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./word-cloud-series.service */ 68175);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style.builder */ 49861);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../chart/chart.component */ 45033);








let WordCloudSeriesChartComponent = class WordCloudSeriesChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder();
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    this.invalidate();
  }
  invalidate() {
    const state = this.seriesService.setState({
      data: this.data || [],
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_5__.ChartComponent
  }, {
    type: _word_cloud_series_service__WEBPACK_IMPORTED_MODULE_2__.WordCloudSeriesService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input
    }]
  };
};
WordCloudSeriesChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-chart-series[type="word-cloud"]',
  template: _word_cloud_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [_word_cloud_series_service__WEBPACK_IMPORTED_MODULE_2__.WordCloudSeriesService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], WordCloudSeriesChartComponent);


/***/ }),

/***/ 68175:
/*!******************************************************************************!*\
  !*** ./src/components/series/word-cloud-series/word-cloud-series.service.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WordCloudSeriesService: () => (/* binding */ WordCloudSeriesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../kit */ 67371);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chart/chart.service */ 92013);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/chart-disposable */ 95068);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/chart-series */ 49007);
/* harmony import */ var _chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chart-style/chart-style */ 95580);
/* harmony import */ var _common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/chart-draw.factory */ 8328);
/* harmony import */ var d3_layout_cloud__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3.layout.cloud */ 91155);
/* harmony import */ var d3_layout_cloud__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(d3_layout_cloud__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ 86164);










const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_3__.CHART_DEFAULT_SERIES_STATE
};
let WordCloudSeriesService = class WordCloudSeriesService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-series-word-cloud-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      style,
      rect,
      data
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    this.root.selectAll('text').remove();
    const labelStyle = style.compile(_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.label);
    const fontSize = d3__WEBPACK_IMPORTED_MODULE_7__.scaleLinear().domain([Math.min(...data.map(a => a.area)), Math.max(...data.map(a => a.area))]).range([15, rect.width / 10]);
    const drawChart = words => {
      const draw = (0,_common_chart_draw_factory__WEBPACK_IMPORTED_MODULE_5__.ChartDrawFactory)(this.root, words);
      draw(`.chart-word-cloud-text-${(0,_kit__WEBPACK_IMPORTED_MODULE_0__.nextId)()}`, {
        create: selection => selection.append('text'),
        update: selection => selection.attr('font-size', d => fontSize(d.area)).attr('chart-word-cloud-text', true).attr('font-weight', (d, i) => labelStyle(d, i).fontWeight).attr('text-anchor', 'middle').attr('fill', (d, i) => labelStyle(d, i).color).attr('transform', d => `translate(${d.x + rect.width / 2}, ${d.y + rect.height / 2})rotate(${d.rotate})`).text(d => d.text)
      });
    };
    const layout = d3_layout_cloud__WEBPACK_IMPORTED_MODULE_6__().size([rect.width, rect.height]).words(data.map(d => ({
      text: d.country,
      area: d.area
    }))).fontSize(d => fontSize(d.area)).padding(2.5).font('Impact').on('end', drawChart);
    layout.start();
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_1__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_2__.ChartDisposable
  }];
};
WordCloudSeriesService = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Injectable)()], WordCloudSeriesService);


/***/ }),

/***/ 49223:
/*!***************************************************!*\
  !*** ./src/components/x-axis/x-axis.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XAxisChartComponent: () => (/* binding */ XAxisChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _x_axis_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./x-axis.service */ 82783);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chart-style/chart-style.builder */ 49861);






let XAxisChartComponent = class XAxisChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder();
    this.ticks = [];
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.range) {
      this.invalidate();
    }
  }
  invalidate() {
    this.seriesService.setState({
      range: this.range,
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin,
      ticks: this.ticks
    });
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent
  }, {
    type: _x_axis_service__WEBPACK_IMPORTED_MODULE_0__.XAxisChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    ticks: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
XAxisChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-x-axis',
  template: '',
  providers: [_x_axis_service__WEBPACK_IMPORTED_MODULE_0__.XAxisChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], XAxisChartComponent);


/***/ }),

/***/ 82783:
/*!*************************************************!*\
  !*** ./src/components/x-axis/x-axis.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XAxisChartService: () => (/* binding */ XAxisChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chart/chart.service */ 92013);







const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let XAxisChartService = class XAxisChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-x-axis-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    const {
      rect,
      range,
      margin,
      ticks
    } = state;
    if (!rect.height || !rect.width) {
      return;
    }
    this.root.selectAll('.axis').remove();
    const scaleX = d3__WEBPACK_IMPORTED_MODULE_0__.scaleLinear().domain([d3__WEBPACK_IMPORTED_MODULE_0__.min(range), d3__WEBPACK_IMPORTED_MODULE_0__.max(range)]).range([0, rect.width]);
    const x = d3__WEBPACK_IMPORTED_MODULE_0__.axisBottom().scale(scaleX).tickValues(ticks).tickFormat(d => d3__WEBPACK_IMPORTED_MODULE_0__.format('.0f')(d));
    this.root.append('g').classed('axis', true).attr('transform', `translate(${margin.left}, ${rect.height + margin.top})`).call(x);
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
XAxisChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)()], XAxisChartService);


/***/ }),

/***/ 82813:
/*!***************************************************!*\
  !*** ./src/components/y-axis/y-axis.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   YAxisChartComponent: () => (/* binding */ YAxisChartComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _y_axis_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./y-axis.service */ 48417);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chart/chart.component */ 45033);
/* harmony import */ var _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chart-style/chart-style.builder */ 49861);






let YAxisChartComponent = class YAxisChartComponent {
  constructor(chart, seriesService, disposable) {
    this.chart = chart;
    this.seriesService = seriesService;
    this.disposable = disposable;
    this.ticks = [];
    this.style = new _chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder();
    this.reverse = false;
    const rectChange = chart.rectChange.subscribe(() => this.invalidate());
    this.disposable.add(() => rectChange.unsubscribe());
  }
  ngOnChanges(changes) {
    if (changes.margin) {
      this.invalidate();
    }
  }
  invalidate() {
    const state = this.seriesService.setState({
      range: this.range,
      style: this.style,
      rect: this.chart.rect,
      margin: this.chart.margin,
      ticks: this.ticks,
      reverse: this.reverse
    });
    this.chart.addSeries(state);
    this.disposable.add(() => this.chart.removeSeries(state));
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent
  }, {
    type: _y_axis_service__WEBPACK_IMPORTED_MODULE_0__.YAxisChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable
  }];
  static #_2 = this.propDecorators = {
    range: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    ticks: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }],
    reverse: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input
    }]
  };
};
YAxisChartComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-chart-y-axis',
  template: '',
  providers: [_y_axis_service__WEBPACK_IMPORTED_MODULE_0__.YAxisChartService, _common_chart_disposable__WEBPACK_IMPORTED_MODULE_1__.ChartDisposable],
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush
})], YAxisChartComponent);


/***/ }),

/***/ 48417:
/*!*************************************************!*\
  !*** ./src/components/y-axis/y-axis.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   YAxisChartService: () => (/* binding */ YAxisChartService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kit */ 67371);
/* harmony import */ var _common_chart_series__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/chart-series */ 49007);
/* harmony import */ var _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/chart-disposable */ 95068);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chart/chart.service */ 92013);







const DEFAULT_STATE = {
  ..._common_chart_series__WEBPACK_IMPORTED_MODULE_2__.CHART_DEFAULT_SERIES_STATE
};
let YAxisChartService = class YAxisChartService {
  constructor(chartService, disposable) {
    this.chartService = chartService;
    this.disposable = disposable;
    this.state = {
      ...DEFAULT_STATE,
      id: `chart-y-axis-${(0,_kit__WEBPACK_IMPORTED_MODULE_1__.nextId)()}`
    };
    const selector = {
      id: this.state.id,
      level: 0
    };
    this.root = chartService.select(selector);
    this.disposable.add(() => this.chartService.remove(selector));
  }
  setState(state) {
    this.state = {
      ...this.state,
      ...state
    };
    const {
      rect,
      range,
      margin,
      ticks,
      reverse
    } = this.state;
    if (!rect.height || !rect.width) {
      return this.state;
    }
    this.root.selectAll('.axis').remove();
    const scaleY = (0,_common_chart_series__WEBPACK_IMPORTED_MODULE_2__.createScaleY)('linear', {
      ...state,
      data: reverse ? [d3__WEBPACK_IMPORTED_MODULE_0__.min(range), d3__WEBPACK_IMPORTED_MODULE_0__.max(range)] : [d3__WEBPACK_IMPORTED_MODULE_0__.max(range), d3__WEBPACK_IMPORTED_MODULE_0__.min(range)]
    });
    const y = d3__WEBPACK_IMPORTED_MODULE_0__.axisLeft().scale(scaleY).tickSizeOuter(0).tickValues(ticks);
    this.root.append('g').classed('axis', true).attr('transform', `translate(${margin.left}, 0)`).call(y);
    return this.state;
  }
  static #_ = this.ctorParameters = () => [{
    type: _chart_chart_service__WEBPACK_IMPORTED_MODULE_4__.ChartService
  }, {
    type: _common_chart_disposable__WEBPACK_IMPORTED_MODULE_3__.ChartDisposable
  }];
};
YAxisChartService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)()], YAxisChartService);


/***/ }),

/***/ 31605:
/*!******************************************************!*\
  !*** ./src/directives/stop-propagation.directive.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StopPropagationDirective: () => (/* binding */ StopPropagationDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ 46227);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);



let StopPropagationDirective = class StopPropagationDirective {
  constructor(elementRef) {
    this.elementRef = elementRef;
  }
  ngOnInit() {
    let events = [this.events];
    if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(events)) {
      events = events;
    }
    events.forEach(eventName => this.elementRef.nativeElement.addEventListener(eventName, e => e.stopPropagation()));
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
  }];
  static #_2 = this.propDecorators = {
    events: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }]
  };
};
StopPropagationDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
  selector: '[appStopPropagation]'
})], StopPropagationDirective);


/***/ }),

/***/ 45312:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   environment: () => (/* binding */ environment)
/* harmony export */ });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
  production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.

/***/ }),

/***/ 19810:
/*!***************************************************************************************!*\
  !*** ./src/examples/example-chart-area-series/example-chart-area-series.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartAreaSeriesComponent: () => (/* binding */ ExampleChartAreaSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_area_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-area-series.component.html?ngResource */ 83138);
/* harmony import */ var _example_chart_area_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-area-series.component.scss?ngResource */ 65138);
/* harmony import */ var _example_chart_area_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_area_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/epl-emblems.scss?ngResource */ 59012);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 35443);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _example_data_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../example-data-service */ 56425);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);









let ExampleChartAreaSeriesComponent = class ExampleChartAreaSeriesComponent {
  constructor(dataService) {
    this.dataService = dataService;
    this.margin = {
      left: 30,
      top: 10,
      right: 15,
      bottom: 40
    };
    this.range = {
      x: [1996, 2019],
      y: [0, 100]
    };
    this.ticksX = [];
    this.ticksY = [];
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.circle, () => ({
      fill: '#ffdd00',
      radius: 5,
      stroke: '#000000'
    })).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.line, () => ({
      fill: '#034694',
      strokeWidth: 0
    }));
  }
  ngOnInit() {
    this.data$ = this.dataService.getHistoryData().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(clubs => clubs[0].points.map((x, i) => [i + 1996, x])));
    for (let i = 1995; i < 2020; i++) {
      this.ticksX.push(i);
    }
    for (let i = 5; i < 110; i = i + 5) {
      this.ticksY.push(i);
    }
  }
  static #_ = this.ctorParameters = () => [{
    type: _example_data_service__WEBPACK_IMPORTED_MODULE_5__.ExampleDataService
  }];
};
ExampleChartAreaSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-example-chart-area',
  template: _example_chart_area_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_area_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ExampleChartAreaSeriesComponent);


/***/ }),

/***/ 46966:
/*!***********************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component.ts ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartBarHorizontalSeriesComponent: () => (/* binding */ ExampleChartBarHorizontalSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_bar_horizontal_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-bar-horizontal-series.component.html?ngResource */ 55926);
/* harmony import */ var _example_chart_bar_horizontal_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-bar-horizontal-series.component.scss?ngResource */ 42710);
/* harmony import */ var _example_chart_bar_horizontal_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_bar_horizontal_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/epl-emblems.scss?ngResource */ 59012);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 24380);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 35443);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _example_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../example-data-service */ 56425);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/kit */ 67371);











let ExampleChartBarHorizontalSeriesComponent = class ExampleChartBarHorizontalSeriesComponent {
  constructor(dataService) {
    this.dataService = dataService;
    this.margin = {
      left: 30,
      bottom: 20,
      right: 20,
      top: 0
    };
    this.range = {
      x: [0, 135],
      y: [0, 21]
    };
    this.gridStep = {
      x: 5,
      y: 0
    };
    this.ticksX = [];
    this.ticksY = [];
    this.seasons = [20, 19, 18, 17, 16, 15];
    this.sorts = ['Position', 'Name', 'Goals Ascending', 'Goals Descending'];
    this.colors = ['#709a28', '#87ba30', '#c23612', '#e0471f'];
    this.selectedSeason = 19;
    this.selectedSortBy = 'Position';
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.bar, (d, i) => ({
      fill: this.colors[i],
      background: '#f1f3ca',
      size: 25
    })).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.label, d => {
      const text = `${d}%`;
      return {
        text,
        fontSize: 9,
        fontWeight: 600
      };
    });
    this.gridStyle = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.line, (d, i) => ({
      stroke: '#C0C0C0',
      strokeDasharray: '1 1'
    }));
  }
  ngOnInit() {
    for (let i = 5; i < Math.max(...this.range.x); i += 5) {
      this.ticksX.push(i);
    }
    for (let i = 1; i < Math.max(...this.range.y); i++) {
      this.ticksY.push(i);
    }
    this.requestData('for');
    this.requestClubs();
  }
  onSeasonChange() {
    this.requestClubs();
  }
  onSortChange() {
    switch (this.selectedSortBy) {
      case 'Name':
        {
          this.sortBy = (a, b) => a.club.localeCompare(b.club);
          break;
        }
      case 'Position':
        {
          this.sortBy = (a, b) => a.position - b.position;
          break;
        }
      case 'Goals Descending':
        {
          if (this.inputScored.nativeElement.checked && this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for, a.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for, b.goals.against);
          } else if (this.inputScored.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for);
          } else if (this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.against);
          }
          break;
        }
      case 'Goals Ascending':
        {
          if (this.inputScored.nativeElement.checked && this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for, b.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for, a.goals.against);
          } else if (this.inputScored.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for);
          } else if (this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.against);
          }
          break;
        }
      default:
        {
          this.sortBy = (a, b) => a.club.localeCompare(b.club);
          break;
        }
    }
    this.requestClubs();
  }
  requestData(goals) {
    this.data$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(x => x.sort(this.sortBy).map(club => goals === 'for' ? [club.goals.for.home, club.goals.for.away] : goals === 'against' ? [club.goals.against.home, club.goals.against.away] : [club.goals.for.home, club.goals.for.away, club.goals.against.home, club.goals.against.away])));
  }
  requestClubs() {
    this.clubs$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(data => data.sort(this.sortBy).map(club => club)));
  }
  updateData(scored = true, conceded = false) {
    if (scored && conceded) {
      this.colors = ['#709a28', '#87ba30', '#c23612', '#e0471f'];
      this.onSortChange();
      this.requestData('both');
    } else {
      if (scored) {
        this.colors = ['#709a28', '#87ba30'];
        this.onSortChange();
        this.requestData('for');
      } else {
        if (conceded) {
          this.colors = ['#c23612', '#e0471f'];
          this.onSortChange();
          this.requestData('against');
        } else {
          this.data$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.empty)();
          this.clubs$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.empty)();
        }
      }
    }
  }
  getSeason(season) {
    return `20${season - 1}/20${season}`;
  }
  getLogo(club) {
    return `logo logo-${club.replace(/\s+/g, '-').toLowerCase()}`;
  }
  static #_ = this.ctorParameters = () => [{
    type: _example_data_service__WEBPACK_IMPORTED_MODULE_3__.ExampleDataService
  }];
  static #_2 = this.propDecorators = {
    inputScored: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild,
      args: ['inputScored', {
        static: true
      }]
    }],
    inputConceded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild,
      args: ['inputConceded', {
        static: true
      }]
    }]
  };
};
ExampleChartBarHorizontalSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-example-chart-bar-horizontal',
  template: _example_chart_bar_horizontal_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_bar_horizontal_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ExampleChartBarHorizontalSeriesComponent);


/***/ }),

/***/ 43896:
/*!****************************************************************!*\
  !*** ./src/examples/example-chart-bar-progress-series/data.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  club: 'Manchester City',
  for: {
    home: 57,
    away: 38
  },
  against: {
    home: 12,
    away: 11
  },
  possession: 64.0
}, {
  club: 'Liverpool',
  for: {
    home: 55,
    away: 34
  },
  against: {
    home: 10,
    away: 12
  },
  possession: 58.8
}, {
  club: 'Chelsea',
  for: {
    home: 39,
    away: 24
  },
  against: {
    home: 12,
    away: 27
  },
  possession: 59.9
}, {
  club: 'Tottenham Hotspurs',
  for: {
    home: 34,
    away: 33
  },
  against: {
    home: 16,
    away: 23
  },
  possession: 56.7
}, {
  club: 'Arsenal',
  for: {
    home: 42,
    away: 31
  },
  against: {
    home: 16,
    away: 35
  },
  possession: 56.1
}, {
  club: 'Manchester United',
  for: {
    home: 33,
    away: 32
  },
  against: {
    home: 25,
    away: 29
  },
  possession: 53.5
}, {
  club: 'Wolverhampton',
  for: {
    home: 28,
    away: 19
  },
  against: {
    home: 21,
    away: 25
  },
  possession: 47.7
}, {
  club: 'Everton',
  for: {
    home: 30,
    away: 24
  },
  against: {
    home: 21,
    away: 25
  },
  possession: 51.0
}, {
  club: 'Leicester City',
  for: {
    home: 24,
    away: 27
  },
  against: {
    home: 20,
    away: 28
  },
  possession: 50.8
}, {
  club: 'West Ham United',
  for: {
    home: 32,
    away: 20
  },
  against: {
    home: 27,
    away: 28
  },
  possession: 49.0
}, {
  club: 'Watford',
  for: {
    home: 26,
    away: 26
  },
  against: {
    home: 28,
    away: 31
  },
  possession: 47.4
}, {
  club: 'Crystal Palace',
  for: {
    home: 19,
    away: 32
  },
  against: {
    home: 23,
    away: 30
  },
  possession: 46.6
}, {
  club: 'Newcastle United',
  for: {
    home: 24,
    away: 18
  },
  against: {
    home: 25,
    away: 23
  },
  possession: 42.9
}, {
  club: 'Bournemouth',
  for: {
    home: 30,
    away: 26
  },
  against: {
    home: 25,
    away: 45
  },
  possession: 47.7
}, {
  club: 'Burnley',
  for: {
    home: 24,
    away: 21
  },
  against: {
    home: 32,
    away: 36
  },
  possession: 43.4
}, {
  club: 'Southampton',
  for: {
    home: 27,
    away: 18
  },
  against: {
    home: 30,
    away: 35
  },
  possession: 45.4
}, {
  club: 'Brighton',
  for: {
    home: 19,
    away: 16
  },
  against: {
    home: 28,
    away: 32
  },
  possession: 44.1
}, {
  club: 'Cardiff City',
  for: {
    home: 21,
    away: 13
  },
  against: {
    home: 38,
    away: 31
  },
  possession: 39.1
}, {
  club: 'Fulham',
  for: {
    home: 22,
    away: 12
  },
  against: {
    home: 36,
    away: 45
  },
  possession: 49.2
}, {
  club: 'Huddersfield Town',
  for: {
    home: 10,
    away: 12
  },
  against: {
    home: 31,
    away: 45
  },
  possession: 47.1
}];

/***/ }),

/***/ 36309:
/*!********************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-progress-series/examples-chart-bar-progress-series.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartBarProgressSeriesComponent: () => (/* binding */ ExampleChartBarProgressSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _examples_chart_bar_progress_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./examples-chart-bar-progress-series.component.html?ngResource */ 39999);
/* harmony import */ var _examples_chart_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./examples-chart-bar-progress-series.component.scss?ngResource */ 5593);
/* harmony import */ var _examples_chart_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_examples_chart_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 43896);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartBarProgressSeriesComponent = class ExampleChartBarProgressSeriesComponent {
  constructor() {
    this.clubs = this.getClubs(_data__WEBPACK_IMPORTED_MODULE_2__.DATA);
    this.data = [];
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.bar, d => {
      const fill = d > 55 ? '#80b436' : d >= 50 && d <= 55 ? '#feb74b' : d < 50 ? '#dd0d47' : '#dfe1e6';
      return {
        fill,
        size: 12,
        height: 20
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.label, d => {
      const text = `${d / 100}`;
      return {
        text,
        fontSize: 12,
        fontWeight: 600
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.animation, d => {
      return {
        duration: d * 50 + (100 - d) * 50,
        delay: 1000,
        format: '.1%'
      };
    });
  }
  ngOnInit() {
    this.data = this.getPossession(_data__WEBPACK_IMPORTED_MODULE_2__.DATA);
  }
  getPossession(data) {
    const result = [];
    data.forEach(team => result.push(team.possession));
    return result;
  }
  getClubs(data) {
    const result = [];
    data.forEach(team => result.push(team.club));
    return result;
  }
};
ExampleChartBarProgressSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-examples-chart-progress-bar',
  template: _examples_chart_bar_progress_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_examples_chart_bar_progress_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartBarProgressSeriesComponent);


/***/ }),

/***/ 13015:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-simple-series/examples-chart-bar-simple-series.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartBarSimpleSeriesComponent: () => (/* binding */ ExampleChartBarSimpleSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _examples_chart_bar_simple_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./examples-chart-bar-simple-series.component.html?ngResource */ 29633);
/* harmony import */ var _examples_chart_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./examples-chart-bar-simple-series.component.scss?ngResource */ 88643);
/* harmony import */ var _examples_chart_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_examples_chart_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _example_data_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../example-data-service */ 56425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 35443);
/* harmony import */ var src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/common/chart-disposable */ 95068);









let ExampleChartBarSimpleSeriesComponent = class ExampleChartBarSimpleSeriesComponent {
  constructor(dataService, disposable) {
    this.dataService = dataService;
    this.disposable = disposable;
    this.prevDuration = 0;
    this.selectedSeason = 19;
    this.styleFor = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__.ChartStyle.bar, (d, i) => {
      const fill = i === 0 ? '#94c31a' : i === 1 ? '#bedb75' : '#f8f8f8';
      return {
        fill,
        height: 20,
        offsetLeft: 25
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__.ChartStyle.animation, (d, i) => {
      const duration = d * 10 + (100 - d) * 10;
      const delay = this.prevDuration;
      this.prevDuration = (i + 1) % 3 > 0 ? this.prevDuration + duration - 210 : 0;
      return {
        duration,
        delay,
        format: '.0'
      };
    });
    this.styleAgainst = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__.ChartStyle.bar, (d, i) => {
      const fill = i === 0 ? '#f7a704' : i === 1 ? '#faca68' : '#f8f8f8';
      return {
        fill,
        height: 20,
        offsetLeft: 25
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__.ChartStyle.animation, (d, i) => {
      const duration = d * 10 + (100 - d) * 10;
      const delay = this.prevDuration;
      this.prevDuration = (i + 1) % 3 > 0 ? this.prevDuration + duration - 210 : 0;
      return {
        duration,
        delay
      };
    });
  }
  ngOnInit() {
    this.dataFor$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(data => data.map(club => [club.goals.for.home, club.goals.for.away, 100 - club.goals.for.home - club.goals.for.away])));
    this.dataAgainst$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(data => data.map(club => [club.goals.against.home, club.goals.against.away, 100 - club.goals.against.home - club.goals.against.away])));
    this.clubs$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(data => data.map(club => club.club))).subscribe(data => this.clubs = data);
    this.disposable.add(() => this.clubs$.unsubscribe());
  }
  static #_ = this.ctorParameters = () => [{
    type: _example_data_service__WEBPACK_IMPORTED_MODULE_4__.ExampleDataService
  }, {
    type: src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable
  }];
};
ExampleChartBarSimpleSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-examples-chart-bar',
  template: _examples_chart_bar_simple_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [src_components_common_chart_disposable__WEBPACK_IMPORTED_MODULE_5__.ChartDisposable],
  styles: [(_examples_chart_bar_simple_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartBarSimpleSeriesComponent);


/***/ }),

/***/ 79430:
/*!*******************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-vertical-series/example-chart-bar-vertical-series.component.ts ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartBarVerticalSeriesComponent: () => (/* binding */ ExampleChartBarVerticalSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_bar_vertical_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-bar-vertical-series.component.html?ngResource */ 8854);
/* harmony import */ var _example_chart_bar_vertical_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-bar-vertical-series.component.scss?ngResource */ 46918);
/* harmony import */ var _example_chart_bar_vertical_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_bar_vertical_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/epl-emblems.scss?ngResource */ 59012);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 24380);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 35443);
/* harmony import */ var _example_data_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../example-data-service */ 56425);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/kit */ 67371);











let ExampleChartBarVerticalSeriesComponent = class ExampleChartBarVerticalSeriesComponent {
  constructor(dataService) {
    this.dataService = dataService;
    this.margin = {
      left: 30,
      bottom: 25,
      right: 20,
      top: 0
    };
    this.range = {
      x: [0, 21],
      y: [0, 130]
    };
    this.gridStep = {
      x: 0,
      y: 5
    };
    this.ticksX = [];
    this.ticksY = [];
    this.seasons = [20, 19, 18, 17, 16, 15];
    this.sorts = ['Position', 'Name', 'Goals Ascending', 'Goals Descending'];
    this.colors = ['#709a28', '#87ba30', '#c23612', '#e0471f'];
    this.selectedSeason = 19;
    this.selectedSortBy = 'Position';
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.bar, (d, i) => {
      return {
        fill: this.colors[i],
        background: '#f1f3ca',
        size: 30
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.label, d => {
      const text = `${d}%`;
      return {
        text,
        fontSize: 9,
        fontWeight: 600
      };
    });
    this.gridStyle = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.line, (d, i) => {
      return {
        stroke: '#C0C0C0',
        strokeDasharray: '1 1'
      };
    });
  }
  ngOnInit() {
    for (let i = 1; i < Math.max(...this.range.x); i++) {
      this.ticksX.push(i);
    }
    for (let i = 5; i < Math.max(...this.range.y); i += 5) {
      this.ticksY.push(i);
    }
    this.requestData('for');
    this.requestClubs();
  }
  onSeasonChange() {
    this.requestClubs();
  }
  onSortChange() {
    switch (this.selectedSortBy) {
      case 'Name':
      default:
        {
          this.sortBy = (a, b) => a.club.localeCompare(b.club);
          break;
        }
      case 'Position':
        {
          this.sortBy = (a, b) => a.position - b.position;
          break;
        }
      case 'Goals Descending':
        {
          if (this.inputScored.nativeElement.checked && this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for, a.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for, b.goals.against);
          } else if (this.inputScored.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for);
          } else if (this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.against);
          }
          break;
        }
      case 'Goals Ascending':
        {
          if (this.inputScored.nativeElement.checked && this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for, b.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for, a.goals.against);
          } else if (this.inputScored.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.for) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.for);
          } else if (this.inputConceded.nativeElement.checked) {
            this.sortBy = (a, b) => (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(b.goals.against) - (0,src_components_kit__WEBPACK_IMPORTED_MODULE_6__.getSumFromObjectValues)(a.goals.against);
          }
          break;
        }
    }
    this.requestClubs();
  }
  requestData(goals) {
    this.data$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(x => x.sort(this.sortBy).map(club => goals === 'for' ? [club.goals.for.home, club.goals.for.away] : goals === 'against' ? [club.goals.against.home, club.goals.against.away] : [club.goals.for.home, club.goals.for.away, club.goals.against.home, club.goals.against.away])));
  }
  requestClubs() {
    this.clubs$ = this.dataService.getData(`${this.selectedSeason - 1}${this.selectedSeason}`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.map)(data => data.sort(this.sortBy).map(club => club)));
  }
  updateData(scored = true, conceded = false) {
    if (scored && conceded) {
      this.colors = ['#709a28', '#87ba30', '#c23612', '#e0471f'];
      this.onSortChange();
      this.requestData('both');
    } else {
      if (scored) {
        this.colors = ['#709a28', '#87ba30'];
        this.onSortChange();
        this.requestData('for');
      } else {
        if (conceded) {
          this.colors = ['#c23612', '#e0471f'];
          this.onSortChange();
          this.requestData('against');
        } else {
          this.data$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.empty)();
          this.clubs$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.empty)();
        }
      }
    }
  }
  getSeason(season) {
    return `20${season - 1}/20${season}`;
  }
  getLogo(club) {
    return `logo logo-${club.replace(/\s+/g, '-').toLowerCase()}`;
  }
  static #_ = this.ctorParameters = () => [{
    type: _example_data_service__WEBPACK_IMPORTED_MODULE_5__.ExampleDataService
  }];
  static #_2 = this.propDecorators = {
    inputScored: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild,
      args: ['inputScored', {
        static: true
      }]
    }],
    inputConceded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild,
      args: ['inputConceded', {
        static: true
      }]
    }]
  };
};
ExampleChartBarVerticalSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-example-chart-bar-vertical',
  template: _example_chart_bar_vertical_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_example_chart_bar_vertical_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ExampleChartBarVerticalSeriesComponent);


/***/ }),

/***/ 40303:
/*!*********************************************************!*\
  !*** ./src/examples/example-chart-chord-series/data.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  name: 'flare.analytics.cluster.AgglomerativeCluster',
  size: 3938,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.DataList', 'flare.util.math.IMatrix', 'flare.analytics.cluster.MergeEdge', 'flare.analytics.cluster.HierarchicalCluster', 'flare.vis.data.Data']
}, {
  name: 'flare.analytics.cluster.CommunityStructure',
  size: 3812,
  imports: ['flare.analytics.cluster.HierarchicalCluster', 'flare.animate.Transitioner', 'flare.vis.data.DataList', 'flare.analytics.cluster.MergeEdge', 'flare.util.math.IMatrix']
}, {
  name: 'flare.analytics.cluster.HierarchicalCluster',
  size: 6714,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataList', 'flare.vis.data.Tree', 'flare.util.Arrays', 'flare.analytics.cluster.MergeEdge', 'flare.util.Sort', 'flare.vis.operator.Operator', 'flare.util.Property', 'flare.vis.data.Data']
}, {
  name: 'flare.analytics.cluster.MergeEdge',
  size: 743,
  imports: []
}, {
  name: 'flare.analytics.graph.BetweennessCentrality',
  size: 3534,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataList', 'flare.util.Arrays', 'flare.vis.data.Data', 'flare.util.Property', 'flare.vis.operator.Operator']
}, {
  name: 'flare.analytics.graph.LinkDistance',
  size: 5731,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.EdgeSprite', 'flare.analytics.graph.ShortestPaths', 'flare.vis.data.Data', 'flare.util.Property', 'flare.vis.operator.Operator']
}, {
  name: 'flare.analytics.graph.MaxFlowMinCut',
  size: 7840,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.EdgeSprite', 'flare.vis.data.Data', 'flare.util.Property', 'flare.vis.operator.Operator']
}, {
  name: 'flare.analytics.graph.ShortestPaths',
  size: 5914,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.animate.Transitioner', 'flare.vis.operator.Operator', 'flare.util.heap.HeapNode', 'flare.util.heap.FibonacciHeap', 'flare.util.Property', 'flare.vis.data.Data']
}, {
  name: 'flare.analytics.graph.SpanningTree',
  size: 3416,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.operator.IOperator', 'flare.vis.Visualization', 'flare.vis.data.TreeBuilder', 'flare.vis.operator.Operator']
}, {
  name: 'flare.analytics.optimization.AspectRatioBanker',
  size: 7074,
  imports: ['flare.animate.Transitioner', 'flare.util.Arrays', 'flare.vis.data.DataSprite', 'flare.scale.Scale', 'flare.vis.axis.CartesianAxes', 'flare.vis.Visualization', 'flare.util.Property', 'flare.vis.operator.Operator']
}, {
  name: 'flare.animate.Easing',
  size: 17010,
  imports: ['flare.animate.Transition']
}, {
  name: 'flare.animate.FunctionSequence',
  size: 5842,
  imports: ['flare.util.Maths', 'flare.animate.Transition', 'flare.util.Arrays', 'flare.animate.Sequence', 'flare.animate.Transitioner']
}, {
  name: 'flare.animate.interpolate.ArrayInterpolator',
  size: 1983,
  imports: ['flare.util.Arrays', 'flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.ColorInterpolator',
  size: 2047,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.DateInterpolator',
  size: 1375,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.Interpolator',
  size: 8746,
  imports: ['flare.animate.interpolate.NumberInterpolator', 'flare.animate.interpolate.ColorInterpolator', 'flare.animate.interpolate.PointInterpolator', 'flare.animate.interpolate.ObjectInterpolator', 'flare.animate.interpolate.MatrixInterpolator', 'flare.animate.interpolate.RectangleInterpolator', 'flare.animate.interpolate.DateInterpolator', 'flare.util.Property', 'flare.animate.interpolate.ArrayInterpolator']
}, {
  name: 'flare.animate.interpolate.MatrixInterpolator',
  size: 2202,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.NumberInterpolator',
  size: 1382,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.ObjectInterpolator',
  size: 1629,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.PointInterpolator',
  size: 1675,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.interpolate.RectangleInterpolator',
  size: 2042,
  imports: ['flare.animate.interpolate.Interpolator']
}, {
  name: 'flare.animate.ISchedulable',
  size: 1041,
  imports: ['flare.animate.Scheduler']
}, {
  name: 'flare.animate.Parallel',
  size: 5176,
  imports: ['flare.animate.Easing', 'flare.animate.Transition', 'flare.util.Arrays']
}, {
  name: 'flare.animate.Pause',
  size: 449,
  imports: ['flare.animate.Transition']
}, {
  name: 'flare.animate.Scheduler',
  size: 5593,
  imports: ['flare.animate.ISchedulable', 'flare.animate.Pause', 'flare.animate.Transition']
}, {
  name: 'flare.animate.Sequence',
  size: 5534,
  imports: ['flare.animate.Easing', 'flare.util.Maths', 'flare.animate.Transition', 'flare.util.Arrays']
}, {
  name: 'flare.animate.Transition',
  size: 9201,
  imports: ['flare.animate.Transitioner', 'flare.animate.TransitionEvent', 'flare.animate.Scheduler', 'flare.animate.Pause', 'flare.animate.Parallel', 'flare.animate.Easing', 'flare.animate.Sequence', 'flare.animate.ISchedulable', 'flare.util.Maths', 'flare.animate.Tween']
}, {
  name: 'flare.animate.Transitioner',
  size: 19975,
  imports: ['flare.util.IValueProxy', 'flare.animate.Parallel', 'flare.animate.Easing', 'flare.animate.Sequence', 'flare.animate.Transition', 'flare.animate.Tween', 'flare.util.Property']
}, {
  name: 'flare.animate.TransitionEvent',
  size: 1116,
  imports: ['flare.animate.Transition']
}, {
  name: 'flare.animate.Tween',
  size: 6006,
  imports: ['flare.animate.Transitioner', 'flare.animate.Transition', 'flare.animate.interpolate.Interpolator', 'flare.util.Property']
}, {
  name: 'flare.data.converters.Converters',
  size: 721,
  imports: ['flare.data.converters.IDataConverter', 'flare.data.converters.GraphMLConverter', 'flare.data.converters.JSONConverter', 'flare.data.converters.DelimitedTextConverter']
}, {
  name: 'flare.data.converters.DelimitedTextConverter',
  size: 4294,
  imports: ['flare.data.DataSet', 'flare.data.DataUtil', 'flare.data.DataTable', 'flare.data.converters.IDataConverter', 'flare.data.DataSchema', 'flare.data.DataField']
}, {
  name: 'flare.data.converters.GraphMLConverter',
  size: 9800,
  imports: ['flare.data.DataSet', 'flare.data.DataUtil', 'flare.data.DataTable', 'flare.data.converters.IDataConverter', 'flare.data.DataSchema', 'flare.data.DataField']
}, {
  name: 'flare.data.converters.IDataConverter',
  size: 1314,
  imports: ['flare.data.DataSet', 'flare.data.DataSchema']
}, {
  name: 'flare.data.converters.JSONConverter',
  size: 2220,
  imports: ['flare.data.DataSet', 'flare.data.DataUtil', 'flare.data.DataTable', 'flare.data.converters.IDataConverter', 'flare.data.DataSchema', 'flare.data.DataField', 'flare.util.Property']
}, {
  name: 'flare.data.DataField',
  size: 1759,
  imports: ['flare.data.DataUtil']
}, {
  name: 'flare.data.DataSchema',
  size: 2165,
  imports: ['flare.data.DataField', 'flare.util.Arrays']
}, {
  name: 'flare.data.DataSet',
  size: 586,
  imports: ['flare.data.DataTable']
}, {
  name: 'flare.data.DataSource',
  size: 3331,
  imports: ['flare.data.converters.IDataConverter', 'flare.data.converters.Converters', 'flare.data.DataSchema']
}, {
  name: 'flare.data.DataTable',
  size: 772,
  imports: ['flare.data.DataSchema']
}, {
  name: 'flare.data.DataUtil',
  size: 3322,
  imports: ['flare.data.DataField', 'flare.data.DataSchema']
}, {
  name: 'flare.display.DirtySprite',
  size: 8833,
  imports: []
}, {
  name: 'flare.display.LineSprite',
  size: 1732,
  imports: ['flare.display.DirtySprite']
}, {
  name: 'flare.display.RectSprite',
  size: 3623,
  imports: ['flare.util.Colors', 'flare.display.DirtySprite']
}, {
  name: 'flare.display.TextSprite',
  size: 10066,
  imports: ['flare.display.DirtySprite']
}, {
  name: 'flare.flex.FlareVis',
  size: 4116,
  imports: ['flare.display.DirtySprite', 'flare.data.DataSet', 'flare.vis.Visualization', 'flare.vis.axis.CartesianAxes', 'flare.vis.axis.Axes', 'flare.vis.data.Data']
}, {
  name: 'flare.physics.DragForce',
  size: 1082,
  imports: ['flare.physics.Simulation', 'flare.physics.Particle', 'flare.physics.IForce']
}, {
  name: 'flare.physics.GravityForce',
  size: 1336,
  imports: ['flare.physics.Simulation', 'flare.physics.Particle', 'flare.physics.IForce']
}, {
  name: 'flare.physics.IForce',
  size: 319,
  imports: ['flare.physics.Simulation']
}, {
  name: 'flare.physics.NBodyForce',
  size: 10498,
  imports: ['flare.physics.Simulation', 'flare.physics.Particle', 'flare.physics.IForce']
}, {
  name: 'flare.physics.Particle',
  size: 2822,
  imports: []
}, {
  name: 'flare.physics.Simulation',
  size: 9983,
  imports: ['flare.physics.Particle', 'flare.physics.NBodyForce', 'flare.physics.DragForce', 'flare.physics.GravityForce', 'flare.physics.Spring', 'flare.physics.SpringForce', 'flare.physics.IForce']
}, {
  name: 'flare.physics.Spring',
  size: 2213,
  imports: ['flare.physics.Particle']
}, {
  name: 'flare.physics.SpringForce',
  size: 1681,
  imports: ['flare.physics.Simulation', 'flare.physics.Particle', 'flare.physics.Spring', 'flare.physics.IForce']
}, {
  name: 'flare.query.AggregateExpression',
  size: 1616,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.And',
  size: 1027,
  imports: ['flare.query.CompositeExpression', 'flare.query.Expression']
}, {
  name: 'flare.query.Arithmetic',
  size: 3891,
  imports: ['flare.query.BinaryExpression', 'flare.query.Expression']
}, {
  name: 'flare.query.Average',
  size: 891,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.BinaryExpression',
  size: 2893,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.Comparison',
  size: 5103,
  imports: ['flare.query.Not', 'flare.query.BinaryExpression', 'flare.query.Expression', 'flare.query.Or']
}, {
  name: 'flare.query.CompositeExpression',
  size: 3677,
  imports: ['flare.query.Expression', 'flare.query.If']
}, {
  name: 'flare.query.Count',
  size: 781,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.DateUtil',
  size: 4141,
  imports: ['flare.query.Fn']
}, {
  name: 'flare.query.Distinct',
  size: 933,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.Expression',
  size: 5130,
  imports: ['flare.query.Variable', 'flare.query.IsA', 'flare.query.ExpressionIterator', 'flare.util.IPredicate', 'flare.query.Literal', 'flare.util.IEvaluable', 'flare.query.If']
}, {
  name: 'flare.query.ExpressionIterator',
  size: 3617,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.Fn',
  size: 3240,
  imports: ['flare.query.DateUtil', 'flare.query.CompositeExpression', 'flare.query.Expression', 'flare.query.StringUtil']
}, {
  name: 'flare.query.If',
  size: 2732,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.IsA',
  size: 2039,
  imports: ['flare.query.Expression', 'flare.query.If']
}, {
  name: 'flare.query.Literal',
  size: 1214,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.Match',
  size: 3748,
  imports: ['flare.query.BinaryExpression', 'flare.query.Expression', 'flare.query.StringUtil']
}, {
  name: 'flare.query.Maximum',
  size: 843,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.methods.add',
  size: 593,
  imports: ['flare.query.methods.or', 'flare.query.Arithmetic']
}, {
  name: 'flare.query.methods.and',
  size: 330,
  imports: ['flare.query.And', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.average',
  size: 287,
  imports: ['flare.query.Average', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.count',
  size: 277,
  imports: ['flare.query.Count', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.distinct',
  size: 292,
  imports: ['flare.query.Distinct', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.div',
  size: 595,
  imports: ['flare.query.methods.or', 'flare.query.Arithmetic']
}, {
  name: 'flare.query.methods.eq',
  size: 594,
  imports: ['flare.query.Comparison', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.fn',
  size: 460,
  imports: ['flare.query.methods.or', 'flare.query.Fn']
}, {
  name: 'flare.query.methods.gt',
  size: 603,
  imports: ['flare.query.Comparison', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.gte',
  size: 625,
  imports: ['flare.query.Comparison', 'flare.query.methods.gt', 'flare.query.methods.eq', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.iff',
  size: 748,
  imports: ['flare.query.methods.or', 'flare.query.If']
}, {
  name: 'flare.query.methods.isa',
  size: 461,
  imports: ['flare.query.IsA', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.lt',
  size: 597,
  imports: ['flare.query.Comparison', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.lte',
  size: 619,
  imports: ['flare.query.Comparison', 'flare.query.methods.lt', 'flare.query.methods.eq', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.max',
  size: 283,
  imports: ['flare.query.Maximum', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.min',
  size: 283,
  imports: ['flare.query.Minimum', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.mod',
  size: 591,
  imports: ['flare.query.methods.or', 'flare.query.Arithmetic']
}, {
  name: 'flare.query.methods.mul',
  size: 603,
  imports: ['flare.query.methods.lt', 'flare.query.methods.or', 'flare.query.Arithmetic']
}, {
  name: 'flare.query.methods.neq',
  size: 599,
  imports: ['flare.query.Comparison', 'flare.query.methods.eq', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.not',
  size: 386,
  imports: ['flare.query.Not', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.or',
  size: 323,
  imports: ['flare.query.Or']
}, {
  name: 'flare.query.methods.orderby',
  size: 307,
  imports: ['flare.query.Query', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.range',
  size: 772,
  imports: ['flare.query.methods.max', 'flare.query.Range', 'flare.query.methods.or', 'flare.query.methods.min']
}, {
  name: 'flare.query.methods.select',
  size: 296,
  imports: ['flare.query.Query']
}, {
  name: 'flare.query.methods.stddev',
  size: 363,
  imports: ['flare.query.methods.and', 'flare.query.Variance', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.sub',
  size: 600,
  imports: ['flare.query.methods.or', 'flare.query.Arithmetic']
}, {
  name: 'flare.query.methods.sum',
  size: 280,
  imports: ['flare.query.Sum', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.update',
  size: 307,
  imports: ['flare.query.Query']
}, {
  name: 'flare.query.methods.variance',
  size: 335,
  imports: ['flare.query.Variance', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods.where',
  size: 299,
  imports: ['flare.query.Query', 'flare.query.methods.lt', 'flare.query.methods.lte']
}, {
  name: 'flare.query.methods.xor',
  size: 354,
  imports: ['flare.query.Xor', 'flare.query.methods.or']
}, {
  name: 'flare.query.methods._',
  size: 264,
  imports: ['flare.query.Literal', 'flare.query.methods.or']
}, {
  name: 'flare.query.Minimum',
  size: 843,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.Not',
  size: 1554,
  imports: ['flare.query.Expression']
}, {
  name: 'flare.query.Or',
  size: 970,
  imports: ['flare.query.CompositeExpression', 'flare.query.Expression']
}, {
  name: 'flare.query.Query',
  size: 13896,
  imports: ['flare.query.Variable', 'flare.query.Sum', 'flare.query.Expression', 'flare.util.Sort', 'flare.query.Not', 'flare.query.AggregateExpression', 'flare.query.Literal', 'flare.util.Filter', 'flare.util.Property', 'flare.query.If']
}, {
  name: 'flare.query.Range',
  size: 1594,
  imports: ['flare.query.And', 'flare.query.Comparison', 'flare.query.Expression']
}, {
  name: 'flare.query.StringUtil',
  size: 4130,
  imports: ['flare.query.Fn']
}, {
  name: 'flare.query.Sum',
  size: 791,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.Variable',
  size: 1124,
  imports: ['flare.query.Expression', 'flare.util.Property']
}, {
  name: 'flare.query.Variance',
  size: 1876,
  imports: ['flare.query.Expression', 'flare.query.AggregateExpression']
}, {
  name: 'flare.query.Xor',
  size: 1101,
  imports: ['flare.query.CompositeExpression', 'flare.query.Expression']
}, {
  name: 'flare.scale.IScaleMap',
  size: 2105,
  imports: ['flare.scale.Scale']
}, {
  name: 'flare.scale.LinearScale',
  size: 1316,
  imports: ['flare.util.Maths', 'flare.util.Strings', 'flare.scale.Scale', 'flare.scale.QuantitativeScale', 'flare.scale.ScaleType']
}, {
  name: 'flare.scale.LogScale',
  size: 3151,
  imports: ['flare.util.Maths', 'flare.util.Strings', 'flare.scale.Scale', 'flare.scale.QuantitativeScale', 'flare.scale.ScaleType']
}, {
  name: 'flare.scale.OrdinalScale',
  size: 3770,
  imports: ['flare.scale.ScaleType', 'flare.util.Arrays', 'flare.scale.Scale']
}, {
  name: 'flare.scale.QuantileScale',
  size: 2435,
  imports: ['flare.util.Maths', 'flare.util.Strings', 'flare.scale.Scale', 'flare.scale.ScaleType']
}, {
  name: 'flare.scale.QuantitativeScale',
  size: 4839,
  imports: ['flare.util.Maths', 'flare.util.Strings', 'flare.scale.Scale']
}, {
  name: 'flare.scale.RootScale',
  size: 1756,
  imports: ['flare.util.Maths', 'flare.util.Strings', 'flare.scale.Scale', 'flare.scale.QuantitativeScale', 'flare.scale.ScaleType']
}, {
  name: 'flare.scale.Scale',
  size: 4268,
  imports: ['flare.scale.ScaleType', 'flare.util.Strings']
}, {
  name: 'flare.scale.ScaleType',
  size: 1821,
  imports: ['flare.scale.Scale']
}, {
  name: 'flare.scale.TimeScale',
  size: 5833,
  imports: ['flare.util.Maths', 'flare.util.Dates', 'flare.scale.Scale', 'flare.scale.ScaleType']
}, {
  name: 'flare.util.Arrays',
  size: 8258,
  imports: ['flare.util.IValueProxy', 'flare.util.Property', 'flare.util.IEvaluable']
}, {
  name: 'flare.util.Colors',
  size: 10001,
  imports: ['flare.util.Filter']
}, {
  name: 'flare.util.Dates',
  size: 8217,
  imports: ['flare.util.Maths']
}, {
  name: 'flare.util.Displays',
  size: 12555,
  imports: ['flare.util.IValueProxy', 'flare.util.Filter', 'flare.util.Property', 'flare.util.IEvaluable', 'flare.util.Sort']
}, {
  name: 'flare.util.Filter',
  size: 2324,
  imports: ['flare.util.IPredicate', 'flare.util.Property']
}, {
  name: 'flare.util.Geometry',
  size: 10993,
  imports: []
}, {
  name: 'flare.util.heap.FibonacciHeap',
  size: 9354,
  imports: ['flare.util.heap.HeapNode']
}, {
  name: 'flare.util.heap.HeapNode',
  size: 1233,
  imports: ['flare.util.heap.FibonacciHeap']
}, {
  name: 'flare.util.IEvaluable',
  size: 335,
  imports: []
}, {
  name: 'flare.util.IPredicate',
  size: 383,
  imports: []
}, {
  name: 'flare.util.IValueProxy',
  size: 874,
  imports: []
}, {
  name: 'flare.util.math.DenseMatrix',
  size: 3165,
  imports: ['flare.util.math.IMatrix']
}, {
  name: 'flare.util.math.IMatrix',
  size: 2815,
  imports: []
}, {
  name: 'flare.util.math.SparseMatrix',
  size: 3366,
  imports: ['flare.util.math.IMatrix']
}, {
  name: 'flare.util.Maths',
  size: 17705,
  imports: ['flare.util.Arrays']
}, {
  name: 'flare.util.Orientation',
  size: 1486,
  imports: []
}, {
  name: 'flare.util.palette.ColorPalette',
  size: 6367,
  imports: ['flare.util.palette.Palette', 'flare.util.Colors']
}, {
  name: 'flare.util.palette.Palette',
  size: 1229,
  imports: []
}, {
  name: 'flare.util.palette.ShapePalette',
  size: 2059,
  imports: ['flare.util.palette.Palette', 'flare.util.Shapes']
}, {
  name: 'flare.util.palette.SizePalette',
  size: 2291,
  imports: ['flare.util.palette.Palette']
}, {
  name: 'flare.util.Property',
  size: 5559,
  imports: ['flare.util.IPredicate', 'flare.util.IValueProxy', 'flare.util.IEvaluable']
}, {
  name: 'flare.util.Shapes',
  size: 19118,
  imports: ['flare.util.Arrays']
}, {
  name: 'flare.util.Sort',
  size: 6887,
  imports: ['flare.util.Arrays', 'flare.util.Property']
}, {
  name: 'flare.util.Stats',
  size: 6557,
  imports: ['flare.util.Arrays', 'flare.util.Property']
}, {
  name: 'flare.util.Strings',
  size: 22026,
  imports: ['flare.util.Dates', 'flare.util.Property']
}, {
  name: 'flare.vis.axis.Axes',
  size: 1302,
  imports: ['flare.animate.Transitioner', 'flare.vis.Visualization']
}, {
  name: 'flare.vis.axis.Axis',
  size: 24593,
  imports: ['flare.animate.Transitioner', 'flare.scale.LinearScale', 'flare.util.Arrays', 'flare.scale.ScaleType', 'flare.util.Strings', 'flare.display.TextSprite', 'flare.scale.Scale', 'flare.util.Stats', 'flare.scale.IScaleMap', 'flare.vis.axis.AxisLabel', 'flare.vis.axis.AxisGridLine']
}, {
  name: 'flare.vis.axis.AxisGridLine',
  size: 652,
  imports: ['flare.vis.axis.Axis', 'flare.display.LineSprite']
}, {
  name: 'flare.vis.axis.AxisLabel',
  size: 636,
  imports: ['flare.vis.axis.Axis', 'flare.display.TextSprite']
}, {
  name: 'flare.vis.axis.CartesianAxes',
  size: 6703,
  imports: ['flare.animate.Transitioner', 'flare.display.RectSprite', 'flare.vis.axis.Axis', 'flare.display.TextSprite', 'flare.vis.axis.Axes', 'flare.vis.Visualization', 'flare.vis.axis.AxisGridLine']
}, {
  name: 'flare.vis.controls.AnchorControl',
  size: 2138,
  imports: ['flare.vis.controls.Control', 'flare.vis.Visualization', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.controls.ClickControl',
  size: 3824,
  imports: ['flare.vis.events.SelectionEvent', 'flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.Control',
  size: 1353,
  imports: ['flare.vis.controls.IControl', 'flare.util.Filter']
}, {
  name: 'flare.vis.controls.ControlList',
  size: 4665,
  imports: ['flare.vis.controls.IControl', 'flare.util.Arrays', 'flare.vis.Visualization', 'flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.DragControl',
  size: 2649,
  imports: ['flare.vis.controls.Control', 'flare.vis.data.DataSprite']
}, {
  name: 'flare.vis.controls.ExpandControl',
  size: 2832,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.controls.Control', 'flare.vis.Visualization']
}, {
  name: 'flare.vis.controls.HoverControl',
  size: 4896,
  imports: ['flare.vis.events.SelectionEvent', 'flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.IControl',
  size: 763,
  imports: ['flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.PanZoomControl',
  size: 5222,
  imports: ['flare.util.Displays', 'flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.SelectionControl',
  size: 7862,
  imports: ['flare.vis.events.SelectionEvent', 'flare.vis.controls.Control']
}, {
  name: 'flare.vis.controls.TooltipControl',
  size: 8435,
  imports: ['flare.animate.Tween', 'flare.display.TextSprite', 'flare.vis.controls.Control', 'flare.vis.events.TooltipEvent']
}, {
  name: 'flare.vis.data.Data',
  size: 20544,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.vis.data.DataSprite', 'flare.vis.data.Tree', 'flare.vis.events.DataEvent', 'flare.data.DataSet', 'flare.vis.data.TreeBuilder', 'flare.vis.data.DataList', 'flare.data.DataSchema', 'flare.util.Sort', 'flare.data.DataField', 'flare.util.Property']
}, {
  name: 'flare.vis.data.DataList',
  size: 19788,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.util.math.DenseMatrix', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite', 'flare.vis.events.DataEvent', 'flare.util.Stats', 'flare.util.math.IMatrix', 'flare.util.Sort', 'flare.util.Filter', 'flare.util.Property', 'flare.util.IEvaluable', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.data.DataSprite',
  size: 10349,
  imports: ['flare.util.Colors', 'flare.vis.data.Data', 'flare.display.DirtySprite', 'flare.vis.data.render.IRenderer', 'flare.vis.data.render.ShapeRenderer']
}, {
  name: 'flare.vis.data.EdgeSprite',
  size: 3301,
  imports: ['flare.vis.data.render.EdgeRenderer', 'flare.vis.data.DataSprite', 'flare.vis.data.NodeSprite', 'flare.vis.data.render.ArrowType', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.data.NodeSprite',
  size: 19382,
  imports: ['flare.animate.Transitioner', 'flare.util.Arrays', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite', 'flare.vis.data.Tree', 'flare.util.Sort', 'flare.util.Filter', 'flare.util.IEvaluable', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.data.render.ArrowType',
  size: 698,
  imports: []
}, {
  name: 'flare.vis.data.render.EdgeRenderer',
  size: 5569,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataSprite', 'flare.vis.data.render.IRenderer', 'flare.util.Shapes', 'flare.util.Geometry', 'flare.vis.data.render.ArrowType']
}, {
  name: 'flare.vis.data.render.IRenderer',
  size: 353,
  imports: ['flare.vis.data.DataSprite']
}, {
  name: 'flare.vis.data.render.ShapeRenderer',
  size: 2247,
  imports: ['flare.util.Shapes', 'flare.vis.data.render.IRenderer', 'flare.vis.data.DataSprite']
}, {
  name: 'flare.vis.data.ScaleBinding',
  size: 11275,
  imports: ['flare.scale.TimeScale', 'flare.scale.ScaleType', 'flare.scale.LinearScale', 'flare.scale.LogScale', 'flare.scale.OrdinalScale', 'flare.scale.RootScale', 'flare.scale.Scale', 'flare.scale.QuantileScale', 'flare.util.Stats', 'flare.scale.QuantitativeScale', 'flare.vis.events.DataEvent', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.data.Tree',
  size: 7147,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.events.DataEvent', 'flare.vis.data.NodeSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.data.TreeBuilder',
  size: 9930,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.vis.data.Tree', 'flare.util.heap.HeapNode', 'flare.util.heap.FibonacciHeap', 'flare.util.Property', 'flare.util.IEvaluable', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.events.DataEvent',
  size: 2313,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataList', 'flare.vis.data.DataSprite']
}, {
  name: 'flare.vis.events.SelectionEvent',
  size: 1880,
  imports: ['flare.vis.events.DataEvent']
}, {
  name: 'flare.vis.events.TooltipEvent',
  size: 1701,
  imports: ['flare.vis.data.EdgeSprite', 'flare.vis.data.NodeSprite']
}, {
  name: 'flare.vis.events.VisualizationEvent',
  size: 1117,
  imports: ['flare.animate.Transitioner']
}, {
  name: 'flare.vis.legend.Legend',
  size: 20859,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.ScaleBinding', 'flare.util.palette.SizePalette', 'flare.scale.ScaleType', 'flare.vis.legend.LegendItem', 'flare.display.RectSprite', 'flare.display.TextSprite', 'flare.scale.Scale', 'flare.vis.legend.LegendRange', 'flare.util.Displays', 'flare.util.Orientation', 'flare.util.palette.ShapePalette', 'flare.util.palette.Palette', 'flare.util.palette.ColorPalette']
}, {
  name: 'flare.vis.legend.LegendItem',
  size: 4614,
  imports: ['flare.util.Shapes', 'flare.display.TextSprite', 'flare.vis.legend.Legend', 'flare.display.RectSprite']
}, {
  name: 'flare.vis.legend.LegendRange',
  size: 10530,
  imports: ['flare.util.Colors', 'flare.vis.legend.Legend', 'flare.display.RectSprite', 'flare.display.TextSprite', 'flare.scale.Scale', 'flare.util.Stats', 'flare.scale.IScaleMap', 'flare.util.Orientation', 'flare.util.palette.ColorPalette']
}, {
  name: 'flare.vis.operator.distortion.BifocalDistortion',
  size: 4461,
  imports: ['flare.vis.operator.distortion.Distortion']
}, {
  name: 'flare.vis.operator.distortion.Distortion',
  size: 6314,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.DataSprite', 'flare.vis.events.VisualizationEvent', 'flare.vis.axis.Axis', 'flare.vis.axis.CartesianAxes', 'flare.vis.operator.layout.Layout', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.distortion.FisheyeDistortion',
  size: 3444,
  imports: ['flare.vis.operator.distortion.Distortion']
}, {
  name: 'flare.vis.operator.encoder.ColorEncoder',
  size: 3179,
  imports: ['flare.animate.Transitioner', 'flare.scale.ScaleType', 'flare.vis.operator.encoder.Encoder', 'flare.util.palette.Palette', 'flare.util.palette.ColorPalette', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.encoder.Encoder',
  size: 4060,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.DataSprite', 'flare.vis.operator.Operator', 'flare.vis.data.ScaleBinding', 'flare.util.palette.Palette', 'flare.util.Filter', 'flare.util.Property', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.encoder.PropertyEncoder',
  size: 4138,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.DataList', 'flare.vis.data.Data', 'flare.vis.operator.encoder.Encoder', 'flare.util.Filter', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.encoder.ShapeEncoder',
  size: 1690,
  imports: ['flare.util.palette.Palette', 'flare.scale.ScaleType', 'flare.util.palette.ShapePalette', 'flare.vis.operator.encoder.Encoder', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.encoder.SizeEncoder',
  size: 1830,
  imports: ['flare.util.palette.Palette', 'flare.scale.ScaleType', 'flare.vis.operator.encoder.Encoder', 'flare.util.palette.SizePalette', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.filter.FisheyeTreeFilter',
  size: 5219,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite', 'flare.vis.data.Tree', 'flare.vis.operator.Operator', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.filter.GraphDistanceFilter',
  size: 3165,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.operator.Operator', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite']
}, {
  name: 'flare.vis.operator.filter.VisibilityFilter',
  size: 3509,
  imports: ['flare.vis.operator.Operator', 'flare.animate.Transitioner', 'flare.util.Filter', 'flare.vis.data.DataSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.IOperator',
  size: 1286,
  imports: ['flare.animate.Transitioner', 'flare.vis.Visualization', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.label.Labeler',
  size: 9956,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.DataSprite', 'flare.display.TextSprite', 'flare.vis.operator.Operator', 'flare.util.Shapes', 'flare.util.Filter', 'flare.util.Property', 'flare.util.IEvaluable', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.label.RadialLabeler',
  size: 3899,
  imports: ['flare.vis.operator.label.Labeler', 'flare.util.Shapes', 'flare.display.TextSprite', 'flare.vis.data.DataSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.label.StackedAreaLabeler',
  size: 3202,
  imports: ['flare.vis.operator.label.Labeler', 'flare.display.TextSprite', 'flare.vis.data.DataSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.AxisLayout',
  size: 6725,
  imports: ['flare.scale.ScaleType', 'flare.vis.data.DataSprite', 'flare.vis.axis.CartesianAxes', 'flare.vis.data.ScaleBinding', 'flare.util.Property', 'flare.vis.operator.layout.Layout', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.BundledEdgeRouter',
  size: 3727,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite', 'flare.util.Shapes', 'flare.vis.operator.layout.Layout', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.layout.CircleLayout',
  size: 9317,
  imports: ['flare.vis.data.NodeSprite', 'flare.vis.data.DataList', 'flare.vis.data.ScaleBinding', 'flare.util.Property', 'flare.vis.operator.layout.Layout', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.CirclePackingLayout',
  size: 12003,
  imports: ['flare.vis.data.NodeSprite', 'flare.vis.data.render.ShapeRenderer', 'flare.util.Shapes', 'flare.util.Sort', 'flare.vis.operator.layout.Layout', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.DendrogramLayout',
  size: 4853,
  imports: ['flare.util.Property', 'flare.vis.data.NodeSprite', 'flare.util.Orientation', 'flare.vis.operator.layout.Layout', 'flare.vis.data.EdgeSprite']
}, {
  name: 'flare.vis.operator.layout.ForceDirectedLayout',
  size: 8411,
  imports: ['flare.physics.Simulation', 'flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataSprite', 'flare.physics.Particle', 'flare.physics.Spring', 'flare.vis.operator.layout.Layout', 'flare.vis.data.EdgeSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.IcicleTreeLayout',
  size: 4864,
  imports: ['flare.vis.data.NodeSprite', 'flare.util.Orientation', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.operator.layout.IndentedTreeLayout',
  size: 3174,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.vis.operator.layout.Layout', 'flare.vis.data.EdgeSprite']
}, {
  name: 'flare.vis.operator.layout.Layout',
  size: 7881,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.vis.data.DataList', 'flare.vis.data.DataSprite', 'flare.vis.data.EdgeSprite', 'flare.vis.Visualization', 'flare.vis.axis.CartesianAxes', 'flare.vis.axis.Axes', 'flare.animate.TransitionEvent', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.layout.NodeLinkTreeLayout',
  size: 12870,
  imports: ['flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.util.Orientation', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.operator.layout.PieLayout',
  size: 2728,
  imports: ['flare.vis.data.DataList', 'flare.vis.data.DataSprite', 'flare.util.Shapes', 'flare.util.Property', 'flare.vis.operator.layout.Layout', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.RadialTreeLayout',
  size: 12348,
  imports: ['flare.vis.data.NodeSprite', 'flare.util.Arrays', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.operator.layout.RandomLayout',
  size: 870,
  imports: ['flare.vis.operator.layout.Layout', 'flare.vis.data.DataSprite', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.operator.layout.StackedAreaLayout',
  size: 9121,
  imports: ['flare.scale.TimeScale', 'flare.scale.LinearScale', 'flare.util.Arrays', 'flare.scale.OrdinalScale', 'flare.vis.data.NodeSprite', 'flare.scale.Scale', 'flare.vis.axis.CartesianAxes', 'flare.util.Stats', 'flare.util.Orientation', 'flare.scale.QuantitativeScale', 'flare.util.Maths', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.operator.layout.TreeMapLayout',
  size: 9191,
  imports: ['flare.animate.Transitioner', 'flare.vis.data.NodeSprite', 'flare.util.Property', 'flare.vis.operator.layout.Layout']
}, {
  name: 'flare.vis.operator.Operator',
  size: 2490,
  imports: ['flare.animate.Transitioner', 'flare.vis.operator.IOperator', 'flare.util.Property', 'flare.util.IEvaluable', 'flare.vis.Visualization']
}, {
  name: 'flare.vis.operator.OperatorList',
  size: 5248,
  imports: ['flare.animate.Transitioner', 'flare.util.Arrays', 'flare.vis.operator.IOperator', 'flare.vis.Visualization', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.OperatorSequence',
  size: 4190,
  imports: ['flare.animate.Transitioner', 'flare.util.Arrays', 'flare.vis.operator.IOperator', 'flare.vis.operator.OperatorList', 'flare.animate.FunctionSequence', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.OperatorSwitch',
  size: 2581,
  imports: ['flare.animate.Transitioner', 'flare.vis.operator.OperatorList', 'flare.vis.operator.IOperator', 'flare.vis.operator.Operator']
}, {
  name: 'flare.vis.operator.SortOperator',
  size: 2023,
  imports: ['flare.vis.operator.Operator', 'flare.animate.Transitioner', 'flare.util.Arrays', 'flare.vis.data.Data']
}, {
  name: 'flare.vis.Visualization',
  size: 16540,
  imports: ['flare.animate.Transitioner', 'flare.vis.operator.IOperator', 'flare.animate.Scheduler', 'flare.vis.events.VisualizationEvent', 'flare.vis.data.Tree', 'flare.vis.events.DataEvent', 'flare.vis.axis.Axes', 'flare.vis.axis.CartesianAxes', 'flare.util.Displays', 'flare.vis.operator.OperatorList', 'flare.vis.controls.ControlList', 'flare.animate.ISchedulable', 'flare.vis.data.Data']
}];

/***/ }),

/***/ 75419:
/*!******************************************************************************************!*\
  !*** ./src/examples/example-chart-chord-series/examples-chart-chord-series.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartChordSeriesComponent: () => (/* binding */ ExampleChartChordSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _examples_chart_chord_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./examples-chart-chord-series.component.html?ngResource */ 20917);
/* harmony import */ var _examples_chart_chord_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./examples-chart-chord-series.component.scss?ngResource */ 63287);
/* harmony import */ var _examples_chart_chord_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_examples_chart_chord_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_examples_example_chart_chord_series_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/examples/example-chart-chord-series/data */ 40303);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);








let ExampleChartChordSeriesComponent = class ExampleChartChordSeriesComponent {
  constructor() {
    this.data = src_examples_example_chart_chord_series_data__WEBPACK_IMPORTED_MODULE_4__.DATA;
    this.color = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, (d, i) => {
      return {
        fill: this.color(i),
        stroke: this.color(i),
        opacity: 0.67,
        innerRadius: 300,
        outerRadius: 320
      };
    });
  }
};
ExampleChartChordSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-examples-chart-chord',
  template: _examples_chart_chord_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_examples_chart_chord_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartChordSeriesComponent);


/***/ }),

/***/ 73911:
/*!********************************************************************!*\
  !*** ./src/examples/example-chart-circular-package-series/data.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Afghanistan',
  value: 25500100
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Åland Islands',
  value: 28502
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Albania',
  value: 2821977
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Algeria',
  value: 37900000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'American Samoa',
  value: 55519
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Andorra',
  value: 76246
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Angola',
  value: 20609294
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Anguilla',
  value: 13452
}, {
  region: '',
  subregion: '',
  key: 'Antarctica',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Antigua and Barbuda',
  value: 86295
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Argentina',
  value: 40117096
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Armenia',
  value: 3024100
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Aruba',
  value: 101484
}, {
  region: 'Oceania',
  subregion: 'Australia and New Zealand',
  key: 'Australia',
  value: 23254142
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Austria',
  value: 8501502
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Azerbaijan',
  value: 9235100
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Bahamas',
  value: -1
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Bahrain',
  value: 1234571
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Bangladesh',
  value: 152518015
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Barbados',
  value: 274200
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Belarus',
  value: 9465500
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Belgium',
  value: 11175653
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Belize',
  value: 312971
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Benin',
  value: 10323000
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'Bermuda',
  value: 64237
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Bhutan',
  value: 740990
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Bolivia',
  value: 10027254
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Bonaire',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Bosnia and Herzegovina',
  value: 3791622
}, {
  region: 'Africa',
  subregion: 'Southern Africa',
  key: 'Botswana',
  value: 2024904
}, {
  region: '',
  subregion: '',
  key: 'Bouvet Island',
  value: -1
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Brazil',
  value: 201032714
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'British Indian Ocean Territory',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'British Virgin Islands',
  value: 29537
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Brunei',
  value: 393162
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Bulgaria',
  value: 7282041
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Burkina Faso',
  value: 17322796
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Burundi',
  value: 10163000
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Cambodia',
  value: 15135000
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Cameroon',
  value: 20386799
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'Canada',
  value: 35158304
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Cape Verde',
  value: 491875
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Cayman Islands',
  value: 55456
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Central African Republic',
  value: 4616000
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Chad',
  value: 12825000
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Chile',
  value: 16634603
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'China',
  value: 1361170000
}, {
  region: 'Oceania',
  subregion: 'Australia and New Zealand',
  key: 'Christmas Island',
  value: 2072
}, {
  region: 'Oceania',
  subregion: 'Australia and New Zealand',
  key: 'Cocos (Keeling) Islands',
  value: 550
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Colombia',
  value: 47330000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Comoros',
  value: 724300
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Republic of the Congo',
  value: 4448000
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Democratic Republic of the Congo',
  value: 67514000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Cook Islands',
  value: 14974
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Costa Rica',
  value: 4667096
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Côte dIvoire',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Croatia',
  value: 4290612
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Cuba',
  value: 11167325
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Curaçao',
  value: 150563
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Cyprus',
  value: 865878
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Czech Republic',
  value: 10512900
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Denmark',
  value: 5623501
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Djibouti',
  value: 864618
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Dominica',
  value: 71293
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Dominican Republic',
  value: 9445281
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Ecuador',
  value: 15617900
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Egypt',
  value: 83661000
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'El Salvador',
  value: 6340000
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Equatorial Guinea',
  value: 1622000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Eritrea',
  value: 6333000
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Estonia',
  value: 1286540
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Ethiopia',
  value: 86613986
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Falkland Islands',
  value: 2563
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Faroe Islands',
  value: 48509
}, {
  region: 'Oceania',
  subregion: 'Melanesia',
  key: 'Fiji',
  value: 858038
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Finland',
  value: 5445883
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'France',
  value: 65806000
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'French Guiana',
  value: 229040
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'French Polynesia',
  value: 268270
}, {
  region: '',
  subregion: '',
  key: 'French Southern and Antarctic Lands',
  value: -1
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'Gabon',
  value: 1672000
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Gambia',
  value: -1
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Georgia',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Germany',
  value: 80523700
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Ghana',
  value: 24658823
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Gibraltar',
  value: 29752
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Greece',
  value: 10815197
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'Greenland',
  value: 56370
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Grenada',
  value: 103328
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Guadeloupe',
  value: 403355
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Guam',
  value: 159358
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Guatemala',
  value: 15438384
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Guernsey',
  value: 62431
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Guinea',
  value: 10824200
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Guinea-Bissau',
  value: 1704000
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Guyana',
  value: 784894
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Haiti',
  value: 10413211
}, {
  region: '',
  subregion: '',
  key: 'Heard Island and McDonald Islands',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Vatican City',
  value: 800
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Honduras',
  value: 8555072
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'Hong Kong',
  value: 7184000
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Hungary',
  value: 9906000
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Iceland',
  value: 325010
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'India',
  value: 1236670000
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Indonesia',
  value: 237641326
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Iran',
  value: 77068000
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Iraq',
  value: 34035000
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Ireland',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Isle of Man',
  value: 84497
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Israel',
  value: 8092700
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Italy',
  value: 59829079
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Jamaica',
  value: 2711476
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'Japan',
  value: 127290000
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Jersey',
  value: 97857
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Jordan',
  value: 6512600
}, {
  region: 'Asia',
  subregion: 'Central Asia',
  key: 'Kazakhstan',
  value: 17099000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Kenya',
  value: 44354000
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Kiribati',
  value: 106461
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Kuwait',
  value: 3582054
}, {
  region: 'Asia',
  subregion: 'Central Asia',
  key: 'Kyrgyzstan',
  value: 5551900
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Laos',
  value: 6580800
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Latvia',
  value: 2014000
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Lebanon',
  value: 4822000
}, {
  region: 'Africa',
  subregion: 'Southern Africa',
  key: 'Lesotho',
  value: 2074000
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Liberia',
  value: 4294000
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Libya',
  value: 6202000
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Liechtenstein',
  value: 36842
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Lithuania',
  value: 2950684
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Luxembourg',
  value: 537000
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'Macau',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Macedonia',
  value: -1
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Madagascar',
  value: 20696070
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Malawi',
  value: 16363000
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Malaysia',
  value: 29793600
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Maldives',
  value: 317280
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Mali',
  value: 15302000
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Malta',
  value: 416055
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Marshall Islands',
  value: 56086
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Martinique',
  value: 394173
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Mauritania',
  value: 3461041
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Mauritius',
  value: 1257900
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Mayotte',
  value: 212600
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Mexico',
  value: 118395054
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Micronesia',
  value: -1
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Moldova',
  value: 3559500
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Monaco',
  value: 36136
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'Mongolia',
  value: 2754685
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Montenegro',
  value: 620029
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Montserrat',
  value: 4922
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Morocco',
  value: 33087700
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Mozambique',
  value: 23700715
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Myanmar',
  value: -1
}, {
  region: 'Africa',
  subregion: 'Southern Africa',
  key: 'Namibia',
  value: 2113077
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Nauru',
  value: 9945
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Nepal',
  value: 26494504
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Netherlands',
  value: 16807300
}, {
  region: 'Oceania',
  subregion: 'Melanesia',
  key: 'New Caledonia',
  value: 258958
}, {
  region: 'Oceania',
  subregion: 'Australia and New Zealand',
  key: 'New Zealand',
  value: 4478810
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Nicaragua',
  value: 6071045
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Niger',
  value: 17129076
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Nigeria',
  value: 173615000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Niue',
  value: 1613
}, {
  region: 'Oceania',
  subregion: 'Australia and New Zealand',
  key: 'Norfolk Island',
  value: 2302
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'North Korea',
  value: 24895000
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Northern Mariana Islands',
  value: 53883
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Norway',
  value: 5077798
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Oman',
  value: 3929000
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Pakistan',
  value: 184845000
}, {
  region: 'Oceania',
  subregion: 'Micronesia',
  key: 'Palau',
  value: 20901
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Palestine',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Central America',
  key: 'Panama',
  value: 3405813
}, {
  region: 'Oceania',
  subregion: 'Melanesia',
  key: 'Papua New Guinea',
  value: 7059653
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Paraguay',
  value: 6783374
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Peru',
  value: 30475144
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Philippines',
  value: 98678000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Pitcairn Islands',
  value: 56
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Poland',
  value: 38533299
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Portugal',
  value: 10562178
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Puerto Rico',
  value: 3667084
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Qatar',
  value: 2024707
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Republic of Kosovo',
  value: 1733842
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Réunion',
  value: 821136
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Romania',
  value: 20121641
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Russia',
  value: 143500000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Rwanda',
  value: 10537222
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Saint Barthélemy',
  value: 8938
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Saint Helena',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Saint Kitts and Nevis',
  value: 54000
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Saint Lucia',
  value: 166526
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Saint Martin',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'Saint Pierre and Miquelon',
  value: 6081
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Saint Vincent and the Grenadines',
  value: 109000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Samoa',
  value: 187820
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'San Marino',
  value: 32509
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'São Tomé and Príncipe',
  value: 187356
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Saudi Arabia',
  value: 29994272
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Senegal',
  value: 13567338
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Serbia',
  value: 7181505
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Seychelles',
  value: 90945
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Sierra Leone',
  value: 6190280
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Singapore',
  value: 5399200
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Sint Maarten',
  value: 37429
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Slovakia',
  value: 5412008
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Slovenia',
  value: 2061405
}, {
  region: 'Oceania',
  subregion: 'Melanesia',
  key: 'Solomon Islands',
  value: 561000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Somalia',
  value: 10496000
}, {
  region: 'Africa',
  subregion: 'Southern Africa',
  key: 'South Africa',
  value: 52981991
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'South Georgia',
  value: -1
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'South Korea',
  value: 50219669
}, {
  region: 'Africa',
  subregion: 'Middle Africa',
  key: 'South Sudan',
  value: 11296000
}, {
  region: 'Europe',
  subregion: 'Southern Europe',
  key: 'Spain',
  value: 46704314
}, {
  region: 'Asia',
  subregion: 'Southern Asia',
  key: 'Sri Lanka',
  value: 20277597
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Sudan',
  value: 37964000
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Suriname',
  value: 534189
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Svalbard and Jan Mayen',
  value: 2655
}, {
  region: 'Africa',
  subregion: 'Southern Africa',
  key: 'Swaziland',
  value: 1250000
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'Sweden',
  value: 9625444
}, {
  region: 'Europe',
  subregion: 'Western Europe',
  key: 'Switzerland',
  value: 8085300
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Syria',
  value: 21898000
}, {
  region: 'Asia',
  subregion: 'Eastern Asia',
  key: 'Taiwan',
  value: 23361147
}, {
  region: 'Asia',
  subregion: 'Central Asia',
  key: 'Tajikistan',
  value: 8000000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Tanzania',
  value: 44928923
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Thailand',
  value: 65926261
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Timor-Leste',
  value: -1
}, {
  region: 'Africa',
  subregion: 'Western Africa',
  key: 'Togo',
  value: 6191155
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Tokelau',
  value: 1411
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Tonga',
  value: 103036
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Trinidad and Tobago',
  value: 1328019
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Tunisia',
  value: 10833431
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Turkey',
  value: 75627384
}, {
  region: 'Asia',
  subregion: 'Central Asia',
  key: 'Turkmenistan',
  value: 5240000
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'Turks and Caicos Islands',
  value: 31458
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Tuvalu',
  value: 11323
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Uganda',
  value: 35357000
}, {
  region: 'Europe',
  subregion: 'Eastern Europe',
  key: 'Ukraine',
  value: 45461627
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'United Arab Emirates',
  value: 8264070
}, {
  region: 'Europe',
  subregion: 'Northern Europe',
  key: 'United Kingdom',
  value: 63705000
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'United States',
  value: 317101000
}, {
  region: 'Americas',
  subregion: 'Northern America',
  key: 'United States Minor Outlying Islands',
  value: -1
}, {
  region: 'Americas',
  subregion: 'Caribbean',
  key: 'United States Virgin Islands',
  value: 106405
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Uruguay',
  value: 3286314
}, {
  region: 'Asia',
  subregion: 'Central Asia',
  key: 'Uzbekistan',
  value: 30183400
}, {
  region: 'Oceania',
  subregion: 'Melanesia',
  key: 'Vanuatu',
  value: 264652
}, {
  region: 'Americas',
  subregion: 'South America',
  key: 'Venezuela',
  value: 28946101
}, {
  region: 'Asia',
  subregion: 'South-Eastern Asia',
  key: 'Vietnam',
  value: 90388000
}, {
  region: 'Oceania',
  subregion: 'Polynesia',
  key: 'Wallis and Futuna',
  value: 13135
}, {
  region: 'Africa',
  subregion: 'Northern Africa',
  key: 'Western Sahara',
  value: 567000
}, {
  region: 'Asia',
  subregion: 'Western Asia',
  key: 'Yemen',
  value: 24527000
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Zambia',
  value: 13092666
}, {
  region: 'Africa',
  subregion: 'Eastern Africa',
  key: 'Zimbabwe',
  value: 12973808
}];

/***/ }),

/***/ 44879:
/*!****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-circular-package-series/examples-chart-circular-package-series.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartCircularPackageSeriesComponent: () => (/* binding */ ExampleChartCircularPackageSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _examples_chart_circular_package_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./examples-chart-circular-package-series.component.html?ngResource */ 65553);
/* harmony import */ var _examples_chart_circular_package_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./examples-chart-circular-package-series.component.scss?ngResource */ 23675);
/* harmony import */ var _examples_chart_circular_package_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_examples_chart_circular_package_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data */ 73911);








let ExampleChartCircularPackageSeriesComponent = class ExampleChartCircularPackageSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_5__.DATA;
    this.color = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, (d, i) => {
      return {
        fill: this.color(i),
        stroke: this.color(i),
        opacity: 0.67,
        innerRadius: 300,
        outerRadius: 320
      };
    });
  }
};
ExampleChartCircularPackageSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-examples-chart-circular-package',
  template: _examples_chart_circular_package_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_examples_chart_circular_package_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartCircularPackageSeriesComponent);


/***/ }),

/***/ 97153:
/*!*********************************************************!*\
  !*** ./src/examples/example-chart-donut-series/data.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  club: 'Manchester City',
  won: 32,
  drawn: 2,
  lost: 4
}, {
  club: 'Liverpool',
  won: 30,
  drawn: 7,
  lost: 1
}, {
  club: 'Chelsea',
  won: 21,
  drawn: 9,
  lost: 8
}, {
  club: 'Tottenham Hotspur',
  won: 23,
  drawn: 2,
  lost: 13
}, {
  club: 'Arsenal',
  won: 21,
  drawn: 7,
  lost: 10
}, {
  club: 'Manchester United',
  won: 19,
  drawn: 9,
  lost: 10
}, {
  club: 'Wolverhampton',
  won: 16,
  drawn: 9,
  lost: 13
}, {
  club: 'Everton',
  won: 15,
  drawn: 9,
  lost: 14
}, {
  club: 'Leicester City',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'West Ham United',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'Watford',
  won: 14,
  drawn: 8,
  lost: 16
}, {
  club: 'Crystal Palace',
  won: 14,
  drawn: 7,
  lost: 16
}, {
  club: 'Newcastle United',
  won: 12,
  drawn: 9,
  lost: 17
}, {
  club: 'Bournemouth',
  won: 13,
  drawn: 6,
  lost: 19
}, {
  club: 'Burnley',
  won: 11,
  drawn: 7,
  lost: 20
}, {
  club: 'Southampton',
  won: 9,
  drawn: 12,
  lost: 17
}, {
  club: 'Brighton',
  won: 9,
  drawn: 9,
  lost: 20
}, {
  club: 'Cardiff City',
  won: 10,
  drawn: 4,
  lost: 24
}, {
  club: 'Fulham',
  won: 7,
  drawn: 5,
  lost: 26
}, {
  club: 'Huddersfield Town',
  won: 3,
  drawn: 7,
  lost: 28
}];

/***/ }),

/***/ 34972:
/*!*****************************************************************************************!*\
  !*** ./src/examples/example-chart-donut-series/example-chart-donut-series.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartDonutSeriesComponent: () => (/* binding */ ExampleChartDonutSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-donut-series.component.html?ngResource */ 92412);
/* harmony import */ var _example_chart_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-donut-series.component.scss?ngResource */ 51640);
/* harmony import */ var _example_chart_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 97153);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartDonutSeriesComponent = class ExampleChartDonutSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_2__.DATA;
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, (d, i) => {
      const colors = ['#709a28', '#f7a704', '#c23612'];
      return {
        fill: colors[i],
        strokeWidth: 2
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.pie, () => {
      return {
        innerRadius: 70
      };
    });
  }
};
ExampleChartDonutSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-donut',
  template: _example_chart_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartDonutSeriesComponent);


/***/ }),

/***/ 92407:
/*!****************************************************************!*\
  !*** ./src/examples/example-chart-double-donut-series/data.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  club: 'Manchester City',
  for: {
    home: 57,
    away: 38
  },
  against: {
    home: 12,
    away: 11
  }
}, {
  club: 'Liverpool',
  for: {
    home: 55,
    away: 34
  },
  against: {
    home: 10,
    away: 12
  }
}, {
  club: 'Chelsea',
  for: {
    home: 39,
    away: 24
  },
  against: {
    home: 12,
    away: 27
  }
}, {
  club: 'Tottenham Hotspurs',
  for: {
    home: 34,
    away: 33
  },
  against: {
    home: 16,
    away: 23
  }
}, {
  club: 'Arsenal',
  for: {
    home: 42,
    away: 31
  },
  against: {
    home: 16,
    away: 35
  }
}, {
  club: 'Manchester United',
  for: {
    home: 33,
    away: 32
  },
  against: {
    home: 25,
    away: 29
  }
}, {
  club: 'Wolverhampton',
  for: {
    home: 28,
    away: 19
  },
  against: {
    home: 21,
    away: 25
  }
}, {
  club: 'Everton',
  for: {
    home: 30,
    away: 24
  },
  against: {
    home: 21,
    away: 25
  }
}, {
  club: 'Leicester City',
  for: {
    home: 24,
    away: 27
  },
  against: {
    home: 20,
    away: 28
  }
}, {
  club: 'West Ham United',
  for: {
    home: 32,
    away: 20
  },
  against: {
    home: 27,
    away: 28
  }
}, {
  club: 'Watford',
  for: {
    home: 26,
    away: 26
  },
  against: {
    home: 28,
    away: 31
  }
}, {
  club: 'Crystal Palace',
  for: {
    home: 19,
    away: 32
  },
  against: {
    home: 23,
    away: 30
  }
}, {
  club: 'Newcastle United',
  for: {
    home: 24,
    away: 18
  },
  against: {
    home: 25,
    away: 23
  }
}, {
  club: 'Bournemouth',
  for: {
    home: 30,
    away: 26
  },
  against: {
    home: 25,
    away: 45
  }
}, {
  club: 'Burnley',
  for: {
    home: 24,
    away: 21
  },
  against: {
    home: 32,
    away: 36
  }
}, {
  club: 'Southampton',
  for: {
    home: 27,
    away: 18
  },
  against: {
    home: 30,
    away: 35
  }
}, {
  club: 'Brighton',
  for: {
    home: 19,
    away: 16
  },
  against: {
    home: 28,
    away: 32
  }
}, {
  club: 'Cardiff City',
  for: {
    home: 21,
    away: 13
  },
  against: {
    home: 38,
    away: 31
  }
}, {
  club: 'Fulham',
  for: {
    home: 22,
    away: 12
  },
  against: {
    home: 36,
    away: 45
  }
}, {
  club: 'Huddersfield Town',
  for: {
    home: 10,
    away: 12
  },
  against: {
    home: 31,
    away: 45
  }
}];

/***/ }),

/***/ 69358:
/*!*******************************************************************************************************!*\
  !*** ./src/examples/example-chart-double-donut-series/example-chart-double-donut-series.component.ts ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartDoubleDonutSeriesComponent: () => (/* binding */ ExampleChartDoubleDonutSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_double_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-double-donut-series.component.html?ngResource */ 24198);
/* harmony import */ var _example_chart_double_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-double-donut-series.component.scss?ngResource */ 15086);
/* harmony import */ var _example_chart_double_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_double_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 92407);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartDoubleDonutSeriesComponent = class ExampleChartDoubleDonutSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_2__.DATA;
    this.counter = 0;
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, () => {
      const colors = ['#94c31a', '#bedb75', '#f7a704', '#faca68'];
      const fill = colors[this.counter];
      this.counter = this.counter < 3 ? this.counter + 1 : 0;
      return {
        fill,
        strokeWidth: 2
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.pie, () => {
      return {
        innerRadius: 70
      };
    });
  }
};
ExampleChartDoubleDonutSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-double-donut',
  template: _example_chart_double_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_double_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartDoubleDonutSeriesComponent);


/***/ }),

/***/ 83059:
/*!**************************************************************!*\
  !*** ./src/examples/example-chart-half-donut-series/data.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  club: 'Manchester City',
  won: 32,
  drawn: 2,
  lost: 4
}, {
  club: 'Liverpool',
  won: 30,
  drawn: 7,
  lost: 1
}, {
  club: 'Chelsea',
  won: 21,
  drawn: 9,
  lost: 8
}, {
  club: 'Tottenham Hotspur',
  won: 23,
  drawn: 2,
  lost: 13
}, {
  club: 'Arsenal',
  won: 21,
  drawn: 7,
  lost: 10
}, {
  club: 'Manchester United',
  won: 19,
  drawn: 9,
  lost: 10
}, {
  club: 'Wolverhampton',
  won: 16,
  drawn: 9,
  lost: 13
}, {
  club: 'Everton',
  won: 15,
  drawn: 9,
  lost: 14
}, {
  club: 'Leicester City',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'West Ham United',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'Watford',
  won: 14,
  drawn: 8,
  lost: 16
}, {
  club: 'Crystal Palace',
  won: 14,
  drawn: 7,
  lost: 16
}, {
  club: 'Newcastle United',
  won: 12,
  drawn: 9,
  lost: 17
}, {
  club: 'Bournemouth',
  won: 13,
  drawn: 6,
  lost: 19
}, {
  club: 'Burnley',
  won: 11,
  drawn: 7,
  lost: 20
}, {
  club: 'Southampton',
  won: 9,
  drawn: 12,
  lost: 17
}, {
  club: 'Brighton',
  won: 9,
  drawn: 9,
  lost: 20
}, {
  club: 'Cardiff City',
  won: 10,
  drawn: 4,
  lost: 24
}, {
  club: 'Fulham',
  won: 7,
  drawn: 5,
  lost: 26
}, {
  club: 'Huddersfield Town',
  won: 3,
  drawn: 7,
  lost: 28
}];

/***/ }),

/***/ 5478:
/*!***************************************************************************************************!*\
  !*** ./src/examples/example-chart-half-donut-series/example-chart-half-donut-series.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartHalfDonutSeriesComponent: () => (/* binding */ ExampleChartHalfDonutSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_half_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-half-donut-series.component.html?ngResource */ 58686);
/* harmony import */ var _example_chart_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-half-donut-series.component.scss?ngResource */ 56286);
/* harmony import */ var _example_chart_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 83059);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartHalfDonutSeriesComponent = class ExampleChartHalfDonutSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_2__.DATA;
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, (d, i) => {
      const colors = ['#709a28', '#f7a704', '#c23612'];
      return {
        fill: colors[i],
        strokeWidth: 2
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.pie, () => {
      return {
        innerRadius: 70
      };
    });
  }
};
ExampleChartHalfDonutSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-half-donut',
  template: _example_chart_half_donut_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_half_donut_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartHalfDonutSeriesComponent);


/***/ }),

/***/ 26668:
/*!**********************************************************!*\
  !*** ./src/examples/example-chart-icicle-series/data.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  name: 'flare',
  children: [{
    name: 'analytics',
    children: [{
      name: 'cluster',
      children: [{
        name: 'AgglomerativeCluster',
        value: 3938
      }, {
        name: 'CommunityStructure',
        value: 3812
      }, {
        name: 'HierarchicalCluster',
        value: 6714
      }, {
        name: 'MergeEdge',
        value: 743
      }]
    }, {
      name: 'graph',
      children: [{
        name: 'BetweennessCentrality',
        value: 3534
      }, {
        name: 'LinkDistance',
        value: 5731
      }, {
        name: 'MaxFlowMinCut',
        value: 7840
      }, {
        name: 'ShortestPaths',
        value: 5914
      }, {
        name: 'SpanningTree',
        value: 3416
      }]
    }, {
      name: 'optimization',
      children: [{
        name: 'AspectRatioBanker',
        value: 7074
      }]
    }]
  }, {
    name: 'animate',
    children: [{
      name: 'Easing',
      value: 17010
    }, {
      name: 'FunctionSequence',
      value: 5842
    }, {
      name: 'interpolate',
      children: [{
        name: 'ArrayInterpolator',
        value: 1983
      }, {
        name: 'ColorInterpolator',
        value: 2047
      }, {
        name: 'DateInterpolator',
        value: 1375
      }, {
        name: 'Interpolator',
        value: 8746
      }, {
        name: 'MatrixInterpolator',
        value: 2202
      }, {
        name: 'NumberInterpolator',
        value: 1382
      }, {
        name: 'ObjectInterpolator',
        value: 1629
      }, {
        name: 'PointInterpolator',
        value: 1675
      }, {
        name: 'RectangleInterpolator',
        value: 2042
      }]
    }, {
      name: 'ISchedulable',
      value: 1041
    }, {
      name: 'Parallel',
      value: 5176
    }, {
      name: 'Pause',
      value: 449
    }, {
      name: 'Scheduler',
      value: 5593
    }, {
      name: 'Sequence',
      value: 5534
    }, {
      name: 'Transition',
      value: 9201
    }, {
      name: 'Transitioner',
      value: 19975
    }, {
      name: 'TransitionEvent',
      value: 1116
    }, {
      name: 'Tween',
      value: 6006
    }]
  }, {
    name: 'data',
    children: [{
      name: 'converters',
      children: [{
        name: 'Converters',
        value: 721
      }, {
        name: 'DelimitedTextConverter',
        value: 4294
      }, {
        name: 'GraphMLConverter',
        value: 9800
      }, {
        name: 'IDataConverter',
        value: 1314
      }, {
        name: 'JSONConverter',
        value: 2220
      }]
    }, {
      name: 'DataField',
      value: 1759
    }, {
      name: 'DataSchema',
      value: 2165
    }, {
      name: 'DataSet',
      value: 586
    }, {
      name: 'DataSource',
      value: 3331
    }, {
      name: 'DataTable',
      value: 772
    }, {
      name: 'DataUtil',
      value: 3322
    }]
  }, {
    name: 'display',
    children: [{
      name: 'DirtySprite',
      value: 8833
    }, {
      name: 'LineSprite',
      value: 1732
    }, {
      name: 'RectSprite',
      value: 3623
    }, {
      name: 'TextSprite',
      value: 10066
    }]
  }, {
    name: 'flex',
    children: [{
      name: 'FlareVis',
      value: 4116
    }]
  }, {
    name: 'physics',
    children: [{
      name: 'DragForce',
      value: 1082
    }, {
      name: 'GravityForce',
      value: 1336
    }, {
      name: 'IForce',
      value: 319
    }, {
      name: 'NBodyForce',
      value: 10498
    }, {
      name: 'Particle',
      value: 2822
    }, {
      name: 'Simulation',
      value: 9983
    }, {
      name: 'Spring',
      value: 2213
    }, {
      name: 'SpringForce',
      value: 1681
    }]
  }, {
    name: 'query',
    children: [{
      name: 'AggregateExpression',
      value: 1616
    }, {
      name: 'And',
      value: 1027
    }, {
      name: 'Arithmetic',
      value: 3891
    }, {
      name: 'Average',
      value: 891
    }, {
      name: 'BinaryExpression',
      value: 2893
    }, {
      name: 'Comparison',
      value: 5103
    }, {
      name: 'CompositeExpression',
      value: 3677
    }, {
      name: 'Count',
      value: 781
    }, {
      name: 'DateUtil',
      value: 4141
    }, {
      name: 'Distinct',
      value: 933
    }, {
      name: 'Expression',
      value: 5130
    }, {
      name: 'ExpressionIterator',
      value: 3617
    }, {
      name: 'Fn',
      value: 3240
    }, {
      name: 'If',
      value: 2732
    }, {
      name: 'IsA',
      value: 2039
    }, {
      name: 'Literal',
      value: 1214
    }, {
      name: 'Match',
      value: 3748
    }, {
      name: 'Maximum',
      value: 843
    }, {
      name: 'methods',
      children: [{
        name: 'add',
        value: 593
      }, {
        name: 'and',
        value: 330
      }, {
        name: 'average',
        value: 287
      }, {
        name: 'count',
        value: 277
      }, {
        name: 'distinct',
        value: 292
      }, {
        name: 'div',
        value: 595
      }, {
        name: 'eq',
        value: 594
      }, {
        name: 'fn',
        value: 460
      }, {
        name: 'gt',
        value: 603
      }, {
        name: 'gte',
        value: 625
      }, {
        name: 'iff',
        value: 748
      }, {
        name: 'isa',
        value: 461
      }, {
        name: 'lt',
        value: 597
      }, {
        name: 'lte',
        value: 619
      }, {
        name: 'max',
        value: 283
      }, {
        name: 'min',
        value: 283
      }, {
        name: 'mod',
        value: 591
      }, {
        name: 'mul',
        value: 603
      }, {
        name: 'neq',
        value: 599
      }, {
        name: 'not',
        value: 386
      }, {
        name: 'or',
        value: 323
      }, {
        name: 'orderby',
        value: 307
      }, {
        name: 'range',
        value: 772
      }, {
        name: 'select',
        value: 296
      }, {
        name: 'stddev',
        value: 363
      }, {
        name: 'sub',
        value: 600
      }, {
        name: 'sum',
        value: 280
      }, {
        name: 'update',
        value: 307
      }, {
        name: 'variance',
        value: 335
      }, {
        name: 'where',
        value: 299
      }, {
        name: 'xor',
        value: 354
      }, {
        name: '_',
        value: 264
      }]
    }, {
      name: 'Minimum',
      value: 843
    }, {
      name: 'Not',
      value: 1554
    }, {
      name: 'Or',
      value: 970
    }, {
      name: 'Query',
      value: 13896
    }, {
      name: 'Range',
      value: 1594
    }, {
      name: 'StringUtil',
      value: 4130
    }, {
      name: 'Sum',
      value: 791
    }, {
      name: 'Variable',
      value: 1124
    }, {
      name: 'Variance',
      value: 1876
    }, {
      name: 'Xor',
      value: 1101
    }]
  }, {
    name: 'scale',
    children: [{
      name: 'IScaleMap',
      value: 2105
    }, {
      name: 'LinearScale',
      value: 1316
    }, {
      name: 'LogScale',
      value: 3151
    }, {
      name: 'OrdinalScale',
      value: 3770
    }, {
      name: 'QuantileScale',
      value: 2435
    }, {
      name: 'QuantitativeScale',
      value: 4839
    }, {
      name: 'RootScale',
      value: 1756
    }, {
      name: 'Scale',
      value: 4268
    }, {
      name: 'ScaleType',
      value: 1821
    }, {
      name: 'TimeScale',
      value: 5833
    }]
  }, {
    name: 'util',
    children: [{
      name: 'Arrays',
      value: 8258
    }, {
      name: 'Colors',
      value: 10001
    }, {
      name: 'Dates',
      value: 8217
    }, {
      name: 'Displays',
      value: 12555
    }, {
      name: 'Filter',
      value: 2324
    }, {
      name: 'Geometry',
      value: 10993
    }, {
      name: 'heap',
      children: [{
        name: 'FibonacciHeap',
        value: 9354
      }, {
        name: 'HeapNode',
        value: 1233
      }]
    }, {
      name: 'IEvaluable',
      value: 335
    }, {
      name: 'IPredicate',
      value: 383
    }, {
      name: 'IValueProxy',
      value: 874
    }, {
      name: 'math',
      children: [{
        name: 'DenseMatrix',
        value: 3165
      }, {
        name: 'IMatrix',
        value: 2815
      }, {
        name: 'SparseMatrix',
        value: 3366
      }]
    }, {
      name: 'Maths',
      value: 17705
    }, {
      name: 'Orientation',
      value: 1486
    }, {
      name: 'palette',
      children: [{
        name: 'ColorPalette',
        value: 6367
      }, {
        name: 'Palette',
        value: 1229
      }, {
        name: 'ShapePalette',
        value: 2059
      }, {
        name: 'SizePalette',
        value: 2291
      }]
    }, {
      name: 'Property',
      value: 5559
    }, {
      name: 'Shapes',
      value: 19118
    }, {
      name: 'Sort',
      value: 6887
    }, {
      name: 'Stats',
      value: 6557
    }, {
      name: 'Strings',
      value: 22026
    }]
  }, {
    name: 'vis',
    children: [{
      name: 'axis',
      children: [{
        name: 'Axes',
        value: 1302
      }, {
        name: 'Axis',
        value: 24593
      }, {
        name: 'AxisGridLine',
        value: 652
      }, {
        name: 'AxisLabel',
        value: 636
      }, {
        name: 'CartesianAxes',
        value: 6703
      }]
    }, {
      name: 'controls',
      children: [{
        name: 'AnchorControl',
        value: 2138
      }, {
        name: 'ClickControl',
        value: 3824
      }, {
        name: 'Control',
        value: 1353
      }, {
        name: 'ControlList',
        value: 4665
      }, {
        name: 'DragControl',
        value: 2649
      }, {
        name: 'ExpandControl',
        value: 2832
      }, {
        name: 'HoverControl',
        value: 4896
      }, {
        name: 'IControl',
        value: 763
      }, {
        name: 'PanZoomControl',
        value: 5222
      }, {
        name: 'SelectionControl',
        value: 7862
      }, {
        name: 'TooltipControl',
        value: 8435
      }]
    }, {
      name: 'data',
      children: [{
        name: 'Data',
        value: 20544
      }, {
        name: 'DataList',
        value: 19788
      }, {
        name: 'DataSprite',
        value: 10349
      }, {
        name: 'EdgeSprite',
        value: 3301
      }, {
        name: 'NodeSprite',
        value: 19382
      }, {
        name: 'render',
        children: [{
          name: 'ArrowType',
          value: 698
        }, {
          name: 'EdgeRenderer',
          value: 5569
        }, {
          name: 'IRenderer',
          value: 353
        }, {
          name: 'ShapeRenderer',
          value: 2247
        }]
      }, {
        name: 'ScaleBinding',
        value: 11275
      }, {
        name: 'Tree',
        value: 7147
      }, {
        name: 'TreeBuilder',
        value: 9930
      }]
    }, {
      name: 'events',
      children: [{
        name: 'DataEvent',
        value: 2313
      }, {
        name: 'SelectionEvent',
        value: 1880
      }, {
        name: 'TooltipEvent',
        value: 1701
      }, {
        name: 'VisualizationEvent',
        value: 1117
      }]
    }, {
      name: 'legend',
      children: [{
        name: 'Legend',
        value: 20859
      }, {
        name: 'LegendItem',
        value: 4614
      }, {
        name: 'LegendRange',
        value: 10530
      }]
    }, {
      name: 'operator',
      children: [{
        name: 'distortion',
        children: [{
          name: 'BifocalDistortion',
          value: 4461
        }, {
          name: 'Distortion',
          value: 6314
        }, {
          name: 'FisheyeDistortion',
          value: 3444
        }]
      }, {
        name: 'encoder',
        children: [{
          name: 'ColorEncoder',
          value: 3179
        }, {
          name: 'Encoder',
          value: 4060
        }, {
          name: 'PropertyEncoder',
          value: 4138
        }, {
          name: 'ShapeEncoder',
          value: 1690
        }, {
          name: 'SizeEncoder',
          value: 1830
        }]
      }, {
        name: 'filter',
        children: [{
          name: 'FisheyeTreeFilter',
          value: 5219
        }, {
          name: 'GraphDistanceFilter',
          value: 3165
        }, {
          name: 'VisibilityFilter',
          value: 3509
        }]
      }, {
        name: 'IOperator',
        value: 1286
      }, {
        name: 'label',
        children: [{
          name: 'Labeler',
          value: 9956
        }, {
          name: 'RadialLabeler',
          value: 3899
        }, {
          name: 'StackedAreaLabeler',
          value: 3202
        }]
      }, {
        name: 'layout',
        children: [{
          name: 'AxisLayout',
          value: 6725
        }, {
          name: 'BundledEdgeRouter',
          value: 3727
        }, {
          name: 'CircleLayout',
          value: 9317
        }, {
          name: 'CirclePackingLayout',
          value: 12003
        }, {
          name: 'DendrogramLayout',
          value: 4853
        }, {
          name: 'ForceDirectedLayout',
          value: 8411
        }, {
          name: 'IcicleTreeLayout',
          value: 4864
        }, {
          name: 'IndentedTreeLayout',
          value: 3174
        }, {
          name: 'Layout',
          value: 7881
        }, {
          name: 'NodeLinkTreeLayout',
          value: 12870
        }, {
          name: 'PieLayout',
          value: 2728
        }, {
          name: 'RadialTreeLayout',
          value: 12348
        }, {
          name: 'RandomLayout',
          value: 870
        }, {
          name: 'StackedAreaLayout',
          value: 9121
        }, {
          name: 'TreeMapLayout',
          value: 9191
        }]
      }, {
        name: 'Operator',
        value: 2490
      }, {
        name: 'OperatorList',
        value: 5248
      }, {
        name: 'OperatorSequence',
        value: 4190
      }, {
        name: 'OperatorSwitch',
        value: 2581
      }, {
        name: 'SortOperator',
        value: 2023
      }]
    }, {
      name: 'Visualization',
      value: 16540
    }]
  }]
}];

/***/ }),

/***/ 47414:
/*!*******************************************************************************************!*\
  !*** ./src/examples/example-chart-icicle-series/example-chart-icicle-series.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartIcicleSeriesComponent: () => (/* binding */ ExampleChartIcicleSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_icicle_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-icicle-series.component.html?ngResource */ 43398);
/* harmony import */ var _example_chart_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-icicle-series.component.scss?ngResource */ 93782);
/* harmony import */ var _example_chart_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ 26668);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);








let ExampleChartIcicleSeriesComponent = class ExampleChartIcicleSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_3__.DATA;
    this.color = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.cell, d => {
      let fill;
      while (d.depth > 1) {
        d = d.parent;
      }
      fill = this.color(d.data.name);
      return {
        fill
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.label, d => {
      const text = `${d.data.name}: ${d.value}`;
      return {
        text
      };
    });
  }
};
ExampleChartIcicleSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-example-chart-icicle',
  template: _example_chart_icicle_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_icicle_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartIcicleSeriesComponent);


/***/ }),

/***/ 70985:
/*!**************************************************************!*\
  !*** ./src/examples/example-chart-line-series-types/data.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA),
/* harmony export */   DATA_TYPES: () => (/* binding */ DATA_TYPES)
/* harmony export */ });
const DATA = {
  xs: [-4, 0, 1, 2, 3, 4, 5, 7, 9, 12, 12, 13, 14, 16, 17, 18, 19],
  ys: [0, 1, 4, 4, 17, 3, 4, 14, 7, 6, 4, 11, 1, 2, 3, 1, 0],
  ticksX: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
  ticksY: [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
  range: {
    x: [-5, 20],
    y: [20, 0]
  }
};
const DATA_TYPES = ['curveMonotoneX', 'curveMonotoneY', 'curveLinear', 'curveBasis', 'curveBasisClosed', 'curveBundle(0)', 'curveBundle (ß=0.5)', 'curveBundle (ß=1)', 'curveCardinal (tension=0)', 'curveCardinal (tension=1)', 'curveCatmullRom (α=0)', 'curveCatmullRom (α=0.5)', 'curveCatmullRom (α=1)', 'curveNatural', 'curveStep', 'curveStepAfter', 'curveStepBefore'];

/***/ }),

/***/ 27682:
/*!***************************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series-types/example-chart-line-series-types.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartLineSeriesTypesComponent: () => (/* binding */ ExampleChartLineSeriesTypesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_line_series_types_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-line-series-types.component.html?ngResource */ 88618);
/* harmony import */ var _example_chart_line_series_types_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-line-series-types.component.scss?ngResource */ 98410);
/* harmony import */ var _example_chart_line_series_types_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_line_series_types_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 70985);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartLineSeriesTypesComponent = class ExampleChartLineSeriesTypesComponent {
  constructor() {
    this.xs = _data__WEBPACK_IMPORTED_MODULE_2__.DATA.xs;
    this.ys = _data__WEBPACK_IMPORTED_MODULE_2__.DATA.ys;
    this.datum = [];
    this.data = [];
    this.range = _data__WEBPACK_IMPORTED_MODULE_2__.DATA.range;
    this.ticksX = _data__WEBPACK_IMPORTED_MODULE_2__.DATA.ticksX;
    this.ticksY = _data__WEBPACK_IMPORTED_MODULE_2__.DATA.ticksY;
    this.indicators = [];
    this.margin = {
      left: 30,
      top: 10,
      right: 10,
      bottom: 30
    };
    this.types = _data__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES;
    this.curveType = this.types[0];
    this.colors = ['#3366cc', '#dc3912', '#ff9900', '#109618', '#990099', '#dd4477', '#66aa00', '#b82e2e', '#316395', '#994499', '#22aa99', '#aaaa11', '#6633cc', '#e67300', '#8b0707', '#5574a6', '#3b3eac'];
  }
  onClick(index) {
    if (!this.indicators.includes(index)) {
      this.indicators.push(index);
    }
    if (!this.data[index] || !this.data[index].length) {
      this.data[index] = this.datum[index];
    } else {
      this.data[index] = [];
      this.curveType = this.types[index];
    }
  }
  ngOnInit() {
    const point = [];
    for (let i = 0; i < this.types.length; i++) {
      point.push([this.xs[i], this.ys[i]]);
    }
    for (const i of this.types) {
      this.datum.push(point);
    }
    this.data = [this.datum[0]];
  }
  getStyle(index) {
    let ind = index;
    if (index === this.data.length - 1 && this.indicators.length) {
      ind = this.indicators[0];
      this.indicators.shift();
    }
    return new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.circle, d => {
      const fill = d > 5 ? '#709a28' : d > 2 ? '#f7a704' : '#c23612';
      return {
        fill: '#fff'
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.line, () => {
      return {
        stroke: this.colors[ind],
        strokeWidth: 2
      };
    });
  }
  getCurve(index) {
    let ind = index;
    if (index === this.data.length - 1 && this.indicators.length) {
      ind = this.indicators[0];
      this.indicators.shift();
    }
    return this.curveType = this.types[ind];
  }
};
ExampleChartLineSeriesTypesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-line-types',
  template: _example_chart_line_series_types_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_line_series_types_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartLineSeriesTypesComponent);


/***/ }),

/***/ 34361:
/*!********************************************************!*\
  !*** ./src/examples/example-chart-line-series/data.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA19: () => (/* binding */ DATA19),
/* harmony export */   DATA20: () => (/* binding */ DATA20)
/* harmony export */ });
const DATA19 = [{
  club: 'Arsenal',
  for: {
    home: 42,
    away: 31
  },
  against: {
    home: 16,
    away: 35
  },
  possession: 56.1,
  games: 'LLWWWWWWWDDDWWDWLWDLWLWWLWWWDWWLWLLLDW',
  points: [0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 22, 23, 24, 27, 30, 31, 34, 34, 37, 38, 38, 41, 41, 44, 47, 47, 50, 53, 56, 57, 60, 63, 63, 66, 66, 66, 66, 67, 70],
  position: [15, 17, 9, 9, 7, 6, 5, 4, 4, 4, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 6, 5, 4, 4, 5, 4, 3, 4, 4, 5, 5, 5, 5, 5]
}, {
  club: 'Bournemouth',
  for: {
    home: 30,
    away: 26
  },
  against: {
    home: 25,
    away: 45
  },
  possession: 47.7,
  games: 'WWDLWLWWDWLLLLWLLWLLDLWWLLDLLWDLLWLDWL',
  points: [0, 3, 6, 7, 7, 10, 10, 13, 16, 17, 20, 20, 20, 20, 20, 23, 23, 23, 26, 26, 26, 27, 27, 30, 33, 33, 33, 34, 34, 34, 37, 38, 38, 38, 41, 41, 42, 45, 45],
  position: [3, 6, 6, 6, 5, 8, 7, 6, 6, 6, 6, 6, 8, 9, 6, 8, 11, 8, 11, 12, 12, 12, 12, 10, 10, 11, 10, 12, 12, 12, 12, 12, 13, 12, 13, 14, 14, 14]
}, {
  club: 'Brighton & Hove Albion',
  for: {
    home: 19,
    away: 16
  },
  against: {
    home: 28,
    away: 32
  },
  possession: 44.1,
  games: 'LWLDDLLWWWLLDWWLLLDWDLLLDLLWWLLLLDLDDL',
  points: [0, 0, 3, 3, 4, 5, 5, 5, 8, 11, 14, 14, 14, 15, 18, 21, 21, 21, 21, 22, 25, 26, 26, 26, 26, 27, 27, 27, 30, 33, 33, 33, 33, 33, 34, 34, 35, 36, 36],
  position: [17, 11, 12, 12, 14, 13, 14, 12, 12, 11, 12, 12, 12, 11, 10, 11, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 16, 15, 15, 15, 15, 17, 17, 17, 17, 17, 17, 17]
}, {
  club: 'Burnley',
  for: {
    home: 24,
    away: 21
  },
  against: {
    home: 32,
    away: 36
  },
  possession: 43.4,
  games: 'DLLLLWWDLLLDLLLWLLLWWWDDDWWLLLLWWWDLLL',
  points: [0, 1, 1, 1, 1, 1, 4, 7, 8, 8, 8, 8, 9, 9, 9, 9, 12, 12, 12, 12, 15, 18, 21, 22, 23, 24, 27, 30, 30, 30, 30, 30, 33, 36, 39, 40, 40, 40, 40],
  position: [11, 15, 18, 19, 20, 16, 12, 12, 13, 15, 15, 15, 17, 19, 19, 17, 17, 18, 18, 18, 16, 15, 16, 15, 17, 15, 13, 15, 16, 17, 17, 17, 14, 14, 15, 15, 15, 15]
}, {
  club: 'Cardiff City',
  for: {
    home: 21,
    away: 13
  },
  against: {
    home: 38,
    away: 31
  },
  possession: 39.1,
  games: 'LDDLLLLLWLLWLWLWLLDWLDLLWWLLLWLLLWLLLW',
  points: [0, 0, 1, 2, 2, 2, 2, 2, 2, 5, 5, 5, 8, 8, 11, 11, 14, 14, 14, 15, 18, 18, 19, 19, 19, 22, 25, 25, 25, 25, 28, 28, 28, 28, 31, 31, 31, 31, 34],
  position: [18, 15, 14, 16, 16, 19, 19, 20, 17, 17, 18, 18, 19, 16, 16, 14, 16, 17, 17, 16, 16, 17, 18, 18, 18, 15, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
}, {
  club: 'Chelsea',
  for: {
    home: 39,
    away: 24
  },
  against: {
    home: 12,
    away: 27
  },
  possession: 59.9,
  games: 'WWWWWDDWDWWDLWLWWLWWDWLLWLWWWDLWWLDDWD',
  points: [0, 3, 6, 9, 12, 15, 16, 17, 20, 21, 24, 27, 28, 28, 31, 31, 34, 37, 37, 40, 43, 44, 47, 47, 47, 50, 50, 53, 56, 59, 60, 60, 63, 66, 66, 67, 68, 71, 72],
  position: [2, 3, 3, 2, 1, 3, 3, 2, 3, 3, 2, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 6, 6, 6, 6, 6, 6, 6, 3, 5, 4, 4, 3, 3]
}, {
  club: 'Crystal Palace',
  for: {
    home: 19,
    away: 32
  },
  against: {
    home: 23,
    away: 30
  },
  possession: 46.6,
  games: 'LLLLLLLWLDLDWDDDWWDLDWWLDDLLLLWLDWDWWW',
  points: [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 4, 4, 5, 8, 9, 10, 11, 14, 17, 18, 18, 19, 22, 25, 25, 26, 27, 27, 27, 27, 27, 30, 30, 31, 34, 35, 38, 41, 44],
  position: [3, 10, 10, 15, 12, 11, 13, 14, 15, 14, 14, 16, 16, 14, 15, 16, 15, 14, 14, 14, 14, 14, 14, 15, 14, 13, 13, 14, 13, 14, 13, 13, 12, 13, 12, 12, 12, 12]
}, {
  club: 'Everton',
  for: {
    home: 30,
    away: 24
  },
  against: {
    home: 21,
    away: 25
  },
  possession: 51.0,
  games: 'DWDDLLWWWLWDWLDDLLWLLWLWLLLWDLWWWLWDWD',
  points: [0, 1, 4, 5, 6, 6, 6, 9, 12, 15, 15, 18, 19, 22, 22, 23, 24, 24, 24, 27, 27, 27, 30, 30, 33, 33, 33, 33, 36, 37, 37, 40, 43, 46, 46, 49, 50, 53, 54],
  position: [9, 7, 8, 7, 10, 12, 11, 11, 8, 9, 9, 9, 6, 6, 6, 7, 8, 11, 8, 10, 10, 10, 11, 8, 9, 9, 8, 9, 10, 11, 11, 9, 9, 9, 9, 8, 8, 8]
}, {
  club: 'Fulham',
  for: {
    home: 22,
    away: 12
  },
  against: {
    home: 36,
    away: 45
  },
  possession: 49.2,
  games: 'LLWDLDLLLLLLWLDLLDDWLLLWLLLLLLLLLWWWLL',
  points: [0, 0, 0, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 8, 8, 9, 9, 9, 10, 11, 14, 14, 14, 14, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 20, 23, 26, 26, 26],
  position: [19, 19, 12, 13, 15, 15, 16, 17, 18, 18, 20, 20, 20, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
}, {
  club: 'Huddersfield Town',
  for: {
    home: 10,
    away: 12
  },
  against: {
    home: 31,
    away: 45
  },
  possession: 47.1,
  games: 'LLDDLLLDLLWDWLLLLLLLLDLLLLLWLLLLLLLLDD',
  points: [0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 3, 6, 7, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 16],
  position: [19, 20, 19, 17, 17, 20, 20, 18, 19, 20, 18, 19, 14, 17, 17, 18, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
}, {
  club: 'Leicester City',
  for: {
    home: 24,
    away: 27
  },
  against: {
    home: 20,
    away: 28
  },
  possession: 50.8,
  games: 'LWWLLWWLLDWDDWDLLWWLWLLDLLLWLWWWWLDWLD',
  points: [0, 0, 3, 6, 6, 6, 9, 12, 12, 12, 13, 16, 17, 18, 21, 22, 22, 22, 25, 28, 28, 31, 31, 31, 32, 32, 32, 32, 35, 35, 38, 41, 44, 47, 47, 48, 51, 51, 52],
  position: [13, 8, 7, 8, 9, 9, 8, 10, 11, 12, 10, 10, 10, 8, 9, 9, 12, 9, 7, 8, 7, 8, 9, 11, 11, 12, 12, 11, 11, 10, 10, 8, 7, 8, 10, 8, 9, 9]
}, {
  club: 'Liverpool',
  for: {
    home: 55,
    away: 34
  },
  against: {
    home: 10,
    away: 12
  },
  possession: 58.8,
  games: 'WWWWWWDDWWDWWWWWWWWWLWWDDWDWDWWWWWWWWW',
  points: [0, 3, 6, 9, 12, 15, 18, 19, 20, 23, 26, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 54, 57, 60, 61, 62, 65, 66, 69, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97],
  position: [1, 2, 1, 1, 2, 1, 2, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
}, {
  club: 'Manchester City',
  for: {
    home: 57,
    away: 38
  },
  against: {
    home: 12,
    away: 11
  },
  possession: 64.0,
  games: 'WWDWWWWDWWWWWWWLWLLWWWWLWWWWWWWWWWWWWW',
  points: [0, 3, 6, 7, 10, 13, 16, 19, 20, 23, 26, 29, 32, 35, 38, 41, 41, 44, 44, 44, 47, 50, 53, 56, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98],
  position: [5, 1, 5, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
}, {
  club: 'Manchester United',
  for: {
    home: 33,
    away: 32
  },
  against: {
    home: 25,
    away: 29
  },
  possession: 53.5,
  games: 'WLLWWDLWDWWLDDDWLWWWWWWDWWDWWLLWLWLDDL',
  points: [0, 3, 3, 3, 6, 9, 10, 10, 13, 14, 17, 20, 20, 21, 22, 23, 26, 26, 29, 32, 35, 38, 41, 44, 45, 48, 51, 52, 55, 58, 58, 58, 61, 61, 64, 64, 65, 66, 66],
  position: [7, 10, 13, 10, 8, 7, 10, 8, 10, 8, 7, 8, 7, 7, 8, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 4, 5, 5, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6]
}, {
  club: 'Newcastle United',
  for: {
    home: 24,
    away: 18
  },
  against: {
    home: 25,
    away: 23
  },
  possession: 42.9,
  games: 'LDLLLDLLLDWWWLDLWDLDLLWWLDWWLWDLLWWDLW',
  points: [0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 6, 9, 12, 12, 13, 13, 16, 17, 17, 18, 18, 18, 21, 24, 24, 25, 28, 31, 31, 34, 35, 35, 35, 38, 41, 42, 42, 45],
  position: [14, 13, 16, 18, 19, 18, 18, 19, 20, 19, 17, 14, 13, 15, 14, 15, 14, 15, 15, 15, 15, 18, 17, 14, 15, 16, 14, 13, 14, 13, 13, 14, 15, 13, 12, 13, 14, 13]
}, {
  club: 'Southampton',
  for: {
    home: 27,
    away: 18
  },
  against: {
    home: 30,
    away: 35
  },
  possession: 45.4,
  games: 'DLLWDLLLDDLDLDLLWWLLDWWDDLLWLWWLWLDDLD',
  points: [0, 1, 1, 1, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9, 9, 9, 12, 15, 15, 15, 16, 19, 22, 23, 24, 24, 24, 27, 27, 30, 33, 33, 36, 36, 37, 38, 38, 39],
  position: [12, 12, 17, 12, 13, 14, 16, 16, 16, 16, 16, 17, 17, 18, 18, 19, 17, 16, 16, 17, 18, 16, 15, 16, 16, 18, 18, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16]
}, {
  club: 'Tottenham Hotspur',
  for: {
    home: 34,
    away: 33
  },
  against: {
    home: 16,
    away: 23
  },
  possession: 56.7,
  games: 'WWWLLWWWWLWWWLWWWWWLWLWWWWLLDLLWWLWLLD',
  points: [0, 3, 6, 9, 9, 9, 12, 15, 18, 21, 21, 24, 27, 30, 30, 33, 36, 39, 42, 45, 45, 48, 48, 51, 54, 57, 60, 60, 60, 61, 61, 61, 64, 67, 67, 70, 70, 70, 71],
  position: [8, 5, 2, 5, 6, 5, 4, 5, 5, 5, 4, 4, 3, 5, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 4, 4]
}, {
  club: 'Watford',
  for: {
    home: 26,
    away: 26
  },
  against: {
    home: 28,
    away: 31
  },
  possession: 47.4,
  games: 'WWWWLDLLWWLDLLLDWWLDDWDLDWWLWLLWLWDLLL',
  points: [0, 3, 6, 9, 12, 12, 13, 13, 13, 16, 19, 19, 20, 20, 20, 20, 21, 24, 27, 27, 28, 29, 32, 33, 33, 34, 37, 40, 40, 43, 43, 43, 46, 46, 49, 50, 50, 50, 50],
  position: [4, 3, 4, 3, 5, 4, 6, 9, 7, 7, 8, 7, 9, 10, 11, 12, 10, 7, 10, 9, 8, 7, 7, 9, 8, 8, 7, 8, 8, 8, 10, 8, 10, 7, 7, 9, 10, 11]
}, {
  club: 'West Ham United',
  for: {
    home: 32,
    away: 20
  },
  against: {
    home: 27,
    away: 28
  },
  possession: 49.0,
  games: 'LLLLWDWLLDWDLWWWWLWLDWLLDDWLWLWLLLDWWW',
  points: [0, 0, 0, 0, 0, 3, 4, 7, 7, 7, 8, 11, 12, 12, 15, 18, 21, 24, 24, 27, 27, 28, 31, 31, 31, 32, 33, 36, 36, 39, 39, 42, 42, 42, 42, 43, 46, 49, 52],
  position: [20, 20, 20, 20, 16, 17, 13, 15, 15, 13, 13, 13, 13, 13, 12, 10, 9, 12, 9, 11, 10, 9, 10, 11, 12, 10, 9, 10, 9, 9, 9, 11, 11, 11, 11, 11, 11, 10]
}, {
  club: 'Wolverhampton Wanderers',
  for: {
    home: 28,
    away: 19
  },
  against: {
    home: 21,
    away: 25
  },
  possession: 47.7,
  games: 'DLDWWDWWLLLDLLWWWLDWLLWWWDDLWDLWLDWWWL',
  points: [0, 1, 1, 2, 5, 8, 9, 12, 15, 15, 15, 15, 16, 16, 16, 19, 22, 25, 25, 26, 29, 29, 29, 32, 35, 38, 39, 40, 40, 43, 44, 44, 47, 47, 48, 51, 54, 57, 57],
  position: [8, 14, 14, 9, 9, 10, 8, 7, 9, 9, 11, 11, 11, 11, 12, 10, 7, 10, 11, 7, 9, 11, 8, 7, 7, 7, 8, 7, 7, 7, 7, 8, 8, 8, 7, 7, 7, 7]
}];
const DATA20 = [{
  club: 'Arsenal',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 6, 6, 7, 8, 11, 12, 15, 15, 16, 17, 17],
  position: [7, 2, 3, 5, 7, 4, 4, 3, 5, 5, 5, 6]
}, {
  club: 'Aston Villa',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 0, 3, 3, 4, 4, 5, 8, 11, 11, 11, 11],
  position: [15, 17, 16, 18, 17, 18, 18, 15, 11, 15, 16, 17]
}, {
  club: 'Bournemouth',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 4, 4, 4, 7, 10, 11, 11, 12, 13, 16, 16],
  position: [8, 7, 11, 15, 9, 6, 8, 10, 9, 9, 7, 9]
}, {
  club: 'Brighton & Hove Albion',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 4, 4, 4, 5, 6, 6, 9, 9, 12, 15, 15],
  position: [4, 5, 8, 16, 16, 15, 16, 14, 16, 14, 8, 11]
}, {
  club: 'Burnley',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 3, 4, 4, 5, 8, 9, 12, 12, 12, 12, 15],
  position: [4, 10, 6, 12, 14, 12, 11, 7, 8, 13, 14, 9]
}, {
  club: 'Chelsea',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 1, 4, 5, 8, 8, 11, 14, 17, 20, 23, 26],
  position: [19, 15, 13, 11, 6, 11, 7, 5, 4, 4, 4, 3]
}, {
  club: 'Crystal Palace',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 1, 4, 7, 7, 8, 11, 14, 14, 15, 15, 15],
  position: [10, 14, 10, 4, 11, 12, 9, 6, 6, 6, 9]
}, {
  club: 'Everton',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 4, 4, 7, 7, 7, 7, 7, 10, 10, 11, 14],
  position: [11, 9, 12, 6, 12, 14, 15, 18, 15, 16, 17, 15]
}, {
  club: 'Leicester City',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 2, 5, 8, 8, 11, 14, 14, 17, 20, 23, 26],
  position: [12, 12, 4, 3, 5, 3, 3, 4, 3, 3, 3, 2]
}, {
  club: 'Liverpool',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 6, 9, 12, 15, 18, 21, 24, 25, 28, 31, 34],
  position: [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
}, {
  club: 'Manchester City',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 4, 7, 10, 10, 13, 16, 16, 19, 22, 25, 25],
  position: [1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4]
}, {
  club: 'Manchester United',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 4, 4, 5, 7, 7, 8, 8, 9, 12, 12, 15],
  position: [2, 4, 5, 7, 4, 8, 10, 12, 14, 7, 10, 7]
}, {
  club: 'Newcastle United',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 0, 3, 4, 4, 5, 5, 8, 8, 9, 12, 15],
  position: [14, 18, 19, 14, 18, 17, 19, 16, 18, 17, 15, 13]
}, {
  club: 'Norwich City',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 3, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7],
  position: [16, 11, 17, 19, 12, 16, 17, 19, 19, 19, 19, 20]
}, {
  club: 'Sheffield United',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 4, 4, 5, 5, 8, 8, 9, 12, 13, 16, 17],
  position: [9, 8, 9, 10, 15, 10, 12, 13, 9, 8, 6, 5]
}, {
  club: 'Southampton',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 0, 3, 4, 7, 7, 7, 7, 8, 8, 8, 8],
  position: [17, 19, 18, 13, 10, 13, 14, 17, 17, 18, 18, 19]
}, {
  club: 'Tottenham Hotspur',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 3, 4, 4, 5, 8, 8, 11, 12, 12, 13, 14],
  position: [6, 6, 7, 9, 3, 7, 6, 9, 7, 11, 11, 14]
}, {
  club: 'Watford',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 5, 5, 8],
  position: [18, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 18]
}, {
  club: 'West Ham United',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 0, 1, 4, 7, 8, 11, 12, 12, 12, 13, 13, 13],
  position: [20, 16, 14, 7, 8, 5, 5, 8, 10, 10, 13, 16]
}, {
  club: 'Wolverhampton Wanderers',
  for: {
    home: 0,
    away: 0
  },
  against: {
    home: 0,
    away: 0
  },
  possession: 0,
  games: '',
  points: [0, 1, 2, 3, 3, 3, 4, 7, 10, 11, 12, 13, 16],
  position: [13, 13, 15, 17, 19, 19, 13, 11, 13, 12, 12, 8]
}];

/***/ }),

/***/ 98754:
/*!***************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series/example-chart-line-series.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartLineSeriesComponent: () => (/* binding */ ExampleChartLineSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_line_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-line-series.component.html?ngResource */ 50418);
/* harmony import */ var _example_chart_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-line-series.component.scss?ngResource */ 41386);
/* harmony import */ var _example_chart_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ 34361);
/* harmony import */ var src_styles_colors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/styles/colors */ 50017);








let ExampleChartLineSeriesComponent = class ExampleChartLineSeriesComponent {
  constructor() {
    this.COLORS = src_styles_colors__WEBPACK_IMPORTED_MODULE_5__.COLORS_EPL;
    this.DATA = _data__WEBPACK_IMPORTED_MODULE_4__.DATA19;
    this.seasons = [20, 19, 18, 17, 15, 16];
    this.selectedSeason = 19;
    this.data = [];
    this.range = {
      x: [],
      y: {}
    };
    this.ticksX = [];
    this.ticksY = [];
    this.indicators = [];
    this.colors = [];
    this.margin = {
      left: 30,
      bottom: 30
    };
    this.barStyle = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.bar, (d, i) => {
      return {
        height: 150,
        fill: this.colors[i + 9]
      };
    });
  }
  ngOnInit() {
    this.onSeasonChange('19');
    this.onChartChange('position');
    this.zones = [[0, 4.5], [4.5, 6.5], [6.5, 7.5], [7.5, 17.5], [17.5, 21]];
  }
  onClick(index) {
    if (!this.indicators.includes(index)) {
      this.indicators.push(index);
    }
    if (this.chart === 'position') {
      if (!this.data[index] || this.data[index].length < 1) {
        this.data[index] = this.getDataPosition(this.DATA[index].position);
      } else {
        this.data[index] = [];
      }
    } else {
      if (!this.data[index] || this.data[index] < 1) {
        this.data[index] = this.getDataPoints(this.DATA[index].points);
      } else {
        this.data[index] = [];
      }
    }
  }
  getStyle(index) {
    let ind = index;
    if (index === this.data.length - 1 && this.indicators.length) {
      ind = this.indicators[0];
      this.indicators.shift();
    }
    return new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.circle, d => {
      return {
        fill: this.colors[ind],
        stroke: this.colors[ind],
        radius: 2.5
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.line, () => {
      return {
        stroke: this.colors[ind],
        strokeWidth: 1.5
      };
    });
  }
  rectStyle(index) {
    return new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_2__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.rect, () => {
      const colors = ['#BBF3BB', '#BBF3FF', '#CCF9FF', '#ffffff', '#FFBBBB'];
      return {
        fill: colors[index]
      };
    });
  }
  getDataPosition(position) {
    const result = [];
    for (let i = 0; i < position.length; i++) {
      result.push([i + 1, 21 - position[i]]);
    }
    return result;
  }
  getDataPoints(points) {
    const result = [];
    for (let i = 0; i < points.length; i++) {
      result.push([i, points[i]]);
    }
    return result;
  }
  onSeasonChange(season) {
    if (season === this.season) {
      return;
    }
    if (season === '19') {
      this.DATA = _data__WEBPACK_IMPORTED_MODULE_4__.DATA19;
      this.season = '19';
    } else {
      this.DATA = _data__WEBPACK_IMPORTED_MODULE_4__.DATA20;
      this.season = '20';
    }
    this.data = this.chart === 'position' ? [this.getDataPosition(this.DATA[0].position)] : [this.getDataPoints(this.DATA[0].points)];
    this.colors = [];
    for (let i = 0; i <= this.DATA.length - 1; i++) {
      for (let j = 0; j <= this.COLORS.length - 1; j++) {
        if (this.DATA[i].club === this.COLORS[j].club) {
          this.colors.push(this.COLORS[j].color);
        }
      }
    }
  }
  onChartChange(chart) {
    if (this.chart === chart) {
      return;
    }
    this.chart = chart;
    this.ticksX = [];
    this.ticksY = [];
    const newData = [];
    switch (chart) {
      case 'position':
        {
          for (let i = 0; i <= this.data.length - 1; i++) {
            if (this.data[i] && this.data[i].length) {
              newData[i] = this.getDataPosition(this.DATA[i].position);
            } else {
              newData[i] = [];
            }
          }
          this.data = newData;
          this.range = {
            x: [0, 39],
            y: [0, 21]
          };
          for (let i = 0; i <= 38; i++) {
            this.ticksX.push(i);
          }
          for (let i = 21; i >= 0; i--) {
            if (i !== 0 && i !== 21) {
              this.ticksY.push(i);
            }
          }
          this.reverse = true;
          break;
        }
      case 'points':
        {
          for (let i = 0; i <= this.data.length - 1; i++) {
            if (this.data[i] && this.data[i].length) {
              newData[i] = this.getDataPoints(this.DATA[i].points);
            } else {
              newData[i] = [];
            }
          }
          this.data = newData;
          this.range = {
            x: [0, 39],
            y: [0, 100]
          };
          for (let i = 0; i <= 38; i++) {
            this.ticksX.push(i);
          }
          for (let i = 0; i <= 100; i = i + 5) {
            this.ticksY.push(i);
          }
          this.reverse = false;
          break;
        }
    }
  }
  format(name) {
    return `form-check form-check-${name.toLowerCase().replace(/[&, \s]/g, '')}`;
  }
  getSeason(season) {
    return `20${season - 1}/20${season}`;
  }
};
ExampleChartLineSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-example-chart-line-types',
  template: _example_chart_line_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_line_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartLineSeriesComponent);


/***/ }),

/***/ 10668:
/*!*************************************************************************************!*\
  !*** ./src/examples/example-chart-map-series/example-chart-map-series.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartMapSeriesComponent: () => (/* binding */ ExampleChartMapSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_map_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-map-series.component.html?ngResource */ 55524);
/* harmony import */ var _example_chart_map_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-map-series.component.scss?ngResource */ 75736);
/* harmony import */ var _example_chart_map_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_map_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/germany-lands-logos.scss?ngResource */ 62814);
/* harmony import */ var _styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/kit */ 67371);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ 86164);









let ExampleChartMapSeriesComponent = class ExampleChartMapSeriesComponent {
  constructor() {
    this.show = false;
    this.legend = [4, 8, 12, 16, 20];
    this.color = d3__WEBPACK_IMPORTED_MODULE_6__.scaleLinear().domain([2000000, 18000000]).range(['#c1a166', '#4c3100']);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.arc, (d, i) => {
      return {
        fill: this.color(d.properties.population),
        strokeWidth: 1,
        stroke: '#000000',
        fillHover: '#006666'
      };
    });
  }
  showData(data) {
    this.show = true;
    this.turbo = data;
  }
  getLogo(name) {
    return name ? `logo logo-${(0,src_components_kit__WEBPACK_IMPORTED_MODULE_5__.convertUmlauts)(name.toLowerCase().replace(/\s+/g, '-'))}` : '';
  }
  getLogoBig(name) {
    return name ? `logo-big logo-${(0,src_components_kit__WEBPACK_IMPORTED_MODULE_5__.convertUmlauts)(name.toLowerCase().replace(/\s+/g, '-'))}` : '';
  }
};
ExampleChartMapSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-example-chart-map',
  template: _example_chart_map_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_map_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ExampleChartMapSeriesComponent);


/***/ }),

/***/ 4678:
/*!**********************************************************!*\
  !*** ./src/examples/example-chart-matrix-series/data.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA_GT: () => (/* binding */ DATA_GT),
/* harmony export */   DATA_KF: () => (/* binding */ DATA_KF)
/* harmony export */ });
const DATA_GT = {
  nodes: [{
    name: 'Jorah',
    group: 0
  }, {
    name: 'Balon',
    group: 0
  }, {
    name: 'Loras',
    group: 0
  }, {
    name: 'Barristan',
    group: 0
  }, {
    name: 'Gregor',
    group: 0
  }, {
    name: 'Hound',
    group: 0
  }, {
    name: 'Blackfish',
    group: 0
  }, {
    name: 'Tyrion',
    group: 1
  }, {
    name: 'Jaime',
    group: 1
  }, {
    name: 'Littlefinger',
    group: 1
  }, {
    name: 'Bronn',
    group: 1
  }, {
    name: 'Varys',
    group: 1
  }, {
    name: 'Aemon',
    group: 2
  }, {
    name: 'Pycelle',
    group: 2
  }, {
    name: 'Dothraki',
    group: 3
  }, {
    name: 'Hizdahr',
    group: 3
  }, {
    name: 'Daenerys',
    group: 3
  }, {
    name: 'Drogo',
    group: 3
  }, {
    name: 'Sam',
    group: 4
  }, {
    name: 'Theon',
    group: 4
  }, {
    name: 'Asha',
    group: 4
  }, {
    name: 'Bran',
    group: 4
  }, {
    name: 'Jon',
    group: 4
  }, {
    name: 'Melisandre',
    group: 5
  }, {
    name: 'Ramsay',
    group: 6
  }, {
    name: 'Walder',
    group: 6
  }, {
    name: 'Sansa',
    group: 7
  }, {
    name: 'Catelyn',
    group: 7
  }, {
    name: 'Robb',
    group: 7
  }, {
    name: 'Brienne',
    group: 7
  }, {
    name: 'Arya',
    group: 7
  }, {
    name: 'Eddard',
    group: 7
  }, {
    name: 'Mance',
    group: 8
  }, {
    name: 'Tommen',
    group: 9
  }, {
    name: 'Renly',
    group: 9
  }, {
    name: 'Joffrey',
    group: 9
  }, {
    name: 'Robert',
    group: 9
  }, {
    name: 'Lysa',
    group: 9
  }, {
    name: 'Cersei',
    group: 9
  }, {
    name: 'Margaery',
    group: 9
  }, {
    name: 'Stannis',
    group: 10
  }, {
    name: 'Tywin',
    group: 10
  }, {
    name: 'Davos',
    group: 11
  }],
  links: [{
    source: 1,
    target: 0,
    value: 166
  }, {
    source: 2,
    target: 0,
    value: 181
  }, {
    source: 3,
    target: 0,
    value: 79
  }, {
    source: 4,
    target: 0,
    value: 3
  }, {
    source: 5,
    target: 0,
    value: 284
  }, {
    source: 6,
    target: 0,
    value: 77
  }, {
    source: 7,
    target: 0,
    value: 301
  }, {
    source: 8,
    target: 0,
    value: 35
  }, {
    source: 9,
    target: 0,
    value: 107
  }, {
    source: 10,
    target: 0,
    value: 309
  }, {
    source: 11,
    target: 0,
    value: 263
  }, {
    source: 12,
    target: 0,
    value: 213
  }, {
    source: 13,
    target: 0,
    value: 601
  }, {
    source: 14,
    target: 0,
    value: 60
  }, {
    source: 15,
    target: 0,
    value: 40
  }, {
    source: 16,
    target: 0,
    value: 3
  }, {
    source: 17,
    target: 0,
    value: 9
  }, {
    source: 18,
    target: 0,
    value: 32
  }, {
    source: 19,
    target: 0,
    value: 47
  }, {
    source: 20,
    target: 0,
    value: 10
  }, {
    source: 21,
    target: 0,
    value: 6
  }, {
    source: 22,
    target: 0,
    value: 20
  }, {
    source: 3,
    target: 0,
    value: 18
  }, {
    source: 24,
    target: 0,
    value: 13
  }, {
    source: 25,
    target: 0,
    value: 40
  }, {
    source: 26,
    target: 0,
    value: 302
  }, {
    source: 27,
    target: 0,
    value: 8
  }, {
    source: 28,
    target: 0,
    value: 79
  }, {
    source: 29,
    target: 0,
    value: 7
  }, {
    source: 30,
    target: 0,
    value: 22
  }, {
    source: 31,
    target: 0,
    value: 362
  }, {
    source: 32,
    target: 0,
    value: 2
  }, {
    source: 33,
    target: 0,
    value: 6
  }, {
    source: 34,
    target: 0,
    value: 2
  }, {
    source: 35,
    target: 0,
    value: 7
  }, {
    source: 36,
    target: 0,
    value: 3
  }, {
    source: 37,
    target: 0,
    value: 20
  }, {
    source: 38,
    target: 0,
    value: 154
  }, {
    source: 39,
    target: 0,
    value: 1
  }, {
    source: 40,
    target: 0,
    value: 22
  }, {
    source: 41,
    target: 0,
    value: 2
  }, {
    source: 42,
    target: 0,
    value: 16
  }, {
    source: 2,
    target: 1,
    value: 25
  }, {
    source: 3,
    target: 1,
    value: 348
  }, {
    source: 4,
    target: 1,
    value: 32
  }, {
    source: 5,
    target: 1,
    value: 74
  }, {
    source: 6,
    target: 1,
    value: 346
  }, {
    source: 7,
    target: 1,
    value: 105
  }, {
    source: 8,
    target: 1,
    value: 487
  }, {
    source: 9,
    target: 1,
    value: 160
  }, {
    source: 10,
    target: 1,
    value: 191
  }, {
    source: 11,
    target: 1,
    value: 101
  }, {
    source: 12,
    target: 1,
    value: 151
  }, {
    source: 13,
    target: 1,
    value: 4
  }, {
    source: 14,
    target: 1,
    value: 14
  }, {
    source: 15,
    target: 1,
    value: 389
  }, {
    source: 16,
    target: 1,
    value: 28
  }, {
    source: 17,
    target: 1,
    value: 3
  }, {
    source: 18,
    target: 1,
    value: 358
  }, {
    source: 19,
    target: 1,
    value: 163
  }, {
    source: 20,
    target: 1,
    value: 76
  }, {
    source: 21,
    target: 1,
    value: 76
  }, {
    source: 22,
    target: 1,
    value: 17
  }, {
    source: 23,
    target: 1,
    value: 244
  }, {
    source: 24,
    target: 1,
    value: 13
  }, {
    source: 25,
    target: 1,
    value: 85
  }, {
    source: 26,
    target: 1,
    value: 14
  }, {
    source: 27,
    target: 1,
    value: 0
  }, {
    source: 28,
    target: 1,
    value: 105
  }, {
    source: 29,
    target: 1,
    value: 405
  }, {
    source: 30,
    target: 1,
    value: 89
  }, {
    source: 31,
    target: 1,
    value: 2
  }, {
    source: 32,
    target: 1,
    value: 48
  }, {
    source: 33,
    target: 1,
    value: 10
  }, {
    source: 34,
    target: 1,
    value: 49
  }, {
    source: 35,
    target: 1,
    value: 60
  }, {
    source: 36,
    target: 1,
    value: 0
  }, {
    source: 37,
    target: 1,
    value: 105
  }, {
    source: 38,
    target: 1,
    value: 1
  }, {
    source: 39,
    target: 1,
    value: 3
  }, {
    source: 40,
    target: 1,
    value: 0
  }, {
    source: 41,
    target: 1,
    value: 72
  }, {
    source: 42,
    target: 1,
    value: 14
  }, {
    source: 3,
    target: 2,
    value: 53
  }, {
    source: 4,
    target: 2,
    value: 0
  }, {
    source: 5,
    target: 2,
    value: 142
  }, {
    source: 6,
    target: 2,
    value: 477
  }, {
    source: 7,
    target: 2,
    value: 200
  }, {
    source: 8,
    target: 2,
    value: 39
  }, {
    source: 9,
    target: 2,
    value: 48
  }, {
    source: 10,
    target: 2,
    value: 22
  }, {
    source: 11,
    target: 2,
    value: 149
  }, {
    source: 12,
    target: 2,
    value: 63
  }, {
    source: 13,
    target: 2,
    value: 3
  }, {
    source: 14,
    target: 2,
    value: 62
  }, {
    source: 15,
    target: 2,
    value: 145
  }, {
    source: 16,
    target: 2,
    value: 16
  }, {
    source: 17,
    target: 2,
    value: 0
  }, {
    source: 18,
    target: 2,
    value: 59
  }, {
    source: 19,
    target: 2,
    value: 15
  }, {
    source: 20,
    target: 2,
    value: 208
  }, {
    source: 21,
    target: 2,
    value: 2
  }, {
    source: 22,
    target: 2,
    value: 3
  }, {
    source: 23,
    target: 2,
    value: 14
  }, {
    source: 24,
    target: 2,
    value: 11
  }, {
    source: 25,
    target: 2,
    value: 11
  }, {
    source: 26,
    target: 2,
    value: 4
  }, {
    source: 27,
    target: 2,
    value: 4
  }, {
    source: 28,
    target: 2,
    value: 7
  }, {
    source: 29,
    target: 2,
    value: 0
  }, {
    source: 30,
    target: 2,
    value: 24
  }, {
    source: 31,
    target: 2,
    value: 8
  }, {
    source: 32,
    target: 2,
    value: 3
  }, {
    source: 33,
    target: 2,
    value: 1
  }, {
    source: 34,
    target: 2,
    value: 4
  }, {
    source: 35,
    target: 2,
    value: 0
  }, {
    source: 36,
    target: 2,
    value: 0
  }, {
    source: 37,
    target: 2,
    value: 8
  }, {
    source: 38,
    target: 2,
    value: 4
  }, {
    source: 39,
    target: 2,
    value: 0
  }, {
    source: 40,
    target: 2,
    value: 43
  }, {
    source: 41,
    target: 2,
    value: 31
  }, {
    source: 42,
    target: 2,
    value: 11
  }, {
    source: 4,
    target: 3,
    value: 10
  }, {
    source: 5,
    target: 3,
    value: 31
  }, {
    source: 6,
    target: 3,
    value: 93
  }, {
    source: 7,
    target: 3,
    value: 136
  }, {
    source: 8,
    target: 3,
    value: 366
  }, {
    source: 9,
    target: 3,
    value: 161
  }, {
    source: 10,
    target: 3,
    value: 60
  }, {
    source: 11,
    target: 3,
    value: 129
  }, {
    source: 12,
    target: 3,
    value: 198
  }, {
    source: 13,
    target: 3,
    value: 0
  }, {
    source: 14,
    target: 3,
    value: 25
  }, {
    source: 15,
    target: 3,
    value: 122
  }, {
    source: 16,
    target: 3,
    value: 311
  }, {
    source: 17,
    target: 3,
    value: 3
  }, {
    source: 18,
    target: 3,
    value: 202
  }, {
    source: 19,
    target: 3,
    value: 54
  }, {
    source: 20,
    target: 3,
    value: 65
  }, {
    source: 21,
    target: 3,
    value: 3
  }, {
    source: 22,
    target: 3,
    value: 50
  }, {
    source: 23,
    target: 3,
    value: 56
  }, {
    source: 24,
    target: 3,
    value: 39
  }, {
    source: 25,
    target: 3,
    value: 102
  }, {
    source: 26,
    target: 3,
    value: 16
  }, {
    source: 27,
    target: 3,
    value: 0
  }, {
    source: 28,
    target: 3,
    value: 32
  }, {
    source: 29,
    target: 3,
    value: 12
  }, {
    source: 30,
    target: 3,
    value: 104
  }, {
    source: 31,
    target: 3,
    value: 0
  }, {
    source: 32,
    target: 3,
    value: 117
  }, {
    source: 33,
    target: 3,
    value: 15
  }, {
    source: 34,
    target: 3,
    value: 36
  }, {
    source: 35,
    target: 3,
    value: 41
  }, {
    source: 36,
    target: 3,
    value: 1
  }, {
    source: 37,
    target: 3,
    value: 34
  }, {
    source: 38,
    target: 3,
    value: 0
  }, {
    source: 39,
    target: 3,
    value: 0
  }, {
    source: 40,
    target: 3,
    value: 2
  }, {
    source: 41,
    target: 3,
    value: 61
  }, {
    source: 42,
    target: 3,
    value: 103
  }, {
    source: 5,
    target: 4,
    value: 2
  }, {
    source: 6,
    target: 4,
    value: 0
  }, {
    source: 7,
    target: 4,
    value: 12
  }, {
    source: 8,
    target: 4,
    value: 2
  }, {
    source: 9,
    target: 4,
    value: 0
  }, {
    source: 10,
    target: 4,
    value: 6
  }, {
    source: 11,
    target: 4,
    value: 3
  }, {
    source: 12,
    target: 4,
    value: 47
  }, {
    source: 13,
    target: 4,
    value: 7
  }, {
    source: 14,
    target: 4,
    value: 2
  }, {
    source: 15,
    target: 4,
    value: 9
  }, {
    source: 16,
    target: 4,
    value: 0
  }, {
    source: 17,
    target: 4,
    value: 3
  }, {
    source: 18,
    target: 4,
    value: 5
  }, {
    source: 19,
    target: 4,
    value: 6
  }, {
    source: 20,
    target: 4,
    value: 0
  }, {
    source: 21,
    target: 4,
    value: 427
  }, {
    source: 22,
    target: 4,
    value: 253
  }, {
    source: 23,
    target: 4,
    value: 12
  }, {
    source: 24,
    target: 4,
    value: 0
  }, {
    source: 25,
    target: 4,
    value: 0
  }, {
    source: 26,
    target: 4,
    value: 6
  }, {
    source: 27,
    target: 4,
    value: 3
  }, {
    source: 28,
    target: 4,
    value: 0
  }, {
    source: 29,
    target: 4,
    value: 0
  }, {
    source: 30,
    target: 4,
    value: 0
  }, {
    source: 31,
    target: 4,
    value: 1
  }, {
    source: 32,
    target: 4,
    value: 0
  }, {
    source: 33,
    target: 4,
    value: 324
  }, {
    source: 34,
    target: 4,
    value: 0
  }, {
    source: 35,
    target: 4,
    value: 2
  }, {
    source: 36,
    target: 4,
    value: 467
  }, {
    source: 37,
    target: 4,
    value: 3
  }, {
    source: 38,
    target: 4,
    value: 1
  }, {
    source: 39,
    target: 4,
    value: 183
  }, {
    source: 40,
    target: 4,
    value: 0
  }, {
    source: 41,
    target: 4,
    value: 0
  }, {
    source: 42,
    target: 4,
    value: 0
  }, {
    source: 6,
    target: 5,
    value: 99
  }, {
    source: 7,
    target: 5,
    value: 187
  }, {
    source: 8,
    target: 5,
    value: 12
  }, {
    source: 9,
    target: 5,
    value: 147
  }, {
    source: 10,
    target: 5,
    value: 15
  }, {
    source: 11,
    target: 5,
    value: 538
  }, {
    source: 12,
    target: 5,
    value: 55
  }, {
    source: 13,
    target: 5,
    value: 49
  }, {
    source: 14,
    target: 5,
    value: 191
  }, {
    source: 15,
    target: 5,
    value: 22
  }, {
    source: 16,
    target: 5,
    value: 5
  }, {
    source: 17,
    target: 5,
    value: 0
  }, {
    source: 18,
    target: 5,
    value: 7
  }, {
    source: 19,
    target: 5,
    value: 50
  }, {
    source: 20,
    target: 5,
    value: 2
  }, {
    source: 21,
    target: 5,
    value: 3
  }, {
    source: 22,
    target: 5,
    value: 8
  }, {
    source: 23,
    target: 5,
    value: 11
  }, {
    source: 24,
    target: 5,
    value: 93
  }, {
    source: 25,
    target: 5,
    value: 17
  }, {
    source: 26,
    target: 5,
    value: 12
  }, {
    source: 27,
    target: 5,
    value: 3
  }, {
    source: 28,
    target: 5,
    value: 16
  }, {
    source: 29,
    target: 5,
    value: 0
  }, {
    source: 30,
    target: 5,
    value: 39
  }, {
    source: 31,
    target: 5,
    value: 9
  }, {
    source: 32,
    target: 5,
    value: 3
  }, {
    source: 33,
    target: 5,
    value: 0
  }, {
    source: 34,
    target: 5,
    value: 0
  }, {
    source: 35,
    target: 5,
    value: 5
  }, {
    source: 36,
    target: 5,
    value: 2
  }, {
    source: 37,
    target: 5,
    value: 4
  }, {
    source: 38,
    target: 5,
    value: 2
  }, {
    source: 39,
    target: 5,
    value: 0
  }, {
    source: 40,
    target: 5,
    value: 12
  }, {
    source: 41,
    target: 5,
    value: 0
  }, {
    source: 42,
    target: 5,
    value: 23
  }, {
    source: 7,
    target: 6,
    value: 177
  }, {
    source: 8,
    target: 6,
    value: 174
  }, {
    source: 9,
    target: 6,
    value: 100
  }, {
    source: 10,
    target: 6,
    value: 46
  }, {
    source: 11,
    target: 6,
    value: 136
  }, {
    source: 12,
    target: 6,
    value: 123
  }, {
    source: 13,
    target: 6,
    value: 0
  }, {
    source: 14,
    target: 6,
    value: 5
  }, {
    source: 15,
    target: 6,
    value: 567
  }, {
    source: 16,
    target: 6,
    value: 78
  }, {
    source: 17,
    target: 6,
    value: 0
  }, {
    source: 18,
    target: 6,
    value: 37
  }, {
    source: 19,
    target: 6,
    value: 196
  }, {
    source: 20,
    target: 6,
    value: 157
  }, {
    source: 21,
    target: 6,
    value: 0
  }, {
    source: 22,
    target: 6,
    value: 14
  }, {
    source: 23,
    target: 6,
    value: 50
  }, {
    source: 24,
    target: 6,
    value: 1
  }, {
    source: 25,
    target: 6,
    value: 44
  }, {
    source: 26,
    target: 6,
    value: 13
  }, {
    source: 27,
    target: 6,
    value: 0
  }, {
    source: 28,
    target: 6,
    value: 123
  }, {
    source: 29,
    target: 6,
    value: 11
  }, {
    source: 30,
    target: 6,
    value: 52
  }, {
    source: 31,
    target: 6,
    value: 2
  }, {
    source: 32,
    target: 6,
    value: 85
  }, {
    source: 33,
    target: 6,
    value: 0
  }, {
    source: 34,
    target: 6,
    value: 118
  }, {
    source: 35,
    target: 6,
    value: 16
  }, {
    source: 36,
    target: 6,
    value: 0
  }, {
    source: 37,
    target: 6,
    value: 40
  }, {
    source: 38,
    target: 6,
    value: 0
  }, {
    source: 39,
    target: 6,
    value: 0
  }, {
    source: 40,
    target: 6,
    value: 3
  }, {
    source: 41,
    target: 6,
    value: 17
  }, {
    source: 42,
    target: 6,
    value: 4
  }, {
    source: 8,
    target: 7,
    value: 137
  }, {
    source: 9,
    target: 7,
    value: 278
  }, {
    source: 10,
    target: 7,
    value: 121
  }, {
    source: 11,
    target: 7,
    value: 140
  }, {
    source: 12,
    target: 7,
    value: 614
  }, {
    source: 13,
    target: 7,
    value: 9
  }, {
    source: 14,
    target: 7,
    value: 118
  }, {
    source: 15,
    target: 7,
    value: 117
  }, {
    source: 16,
    target: 7,
    value: 11
  }, {
    source: 17,
    target: 7,
    value: 21
  }, {
    source: 18,
    target: 7,
    value: 82
  }, {
    source: 19,
    target: 7,
    value: 233
  }, {
    source: 20,
    target: 7,
    value: 59
  }, {
    source: 21,
    target: 7,
    value: 13
  }, {
    source: 22,
    target: 7,
    value: 76
  }, {
    source: 23,
    target: 7,
    value: 152
  }, {
    source: 24,
    target: 7,
    value: 9
  }, {
    source: 25,
    target: 7,
    value: 114
  }, {
    source: 26,
    target: 7,
    value: 2
  }, {
    source: 27,
    target: 7,
    value: 19
  }, {
    source: 28,
    target: 7,
    value: 42
  }, {
    source: 29,
    target: 7,
    value: 9
  }, {
    source: 30,
    target: 7,
    value: 5
  }, {
    source: 31,
    target: 7,
    value: 7
  }, {
    source: 32,
    target: 7,
    value: 48
  }, {
    source: 33,
    target: 7,
    value: 18
  }, {
    source: 34,
    target: 7,
    value: 9
  }, {
    source: 35,
    target: 7,
    value: 30
  }, {
    source: 36,
    target: 7,
    value: 3
  }, {
    source: 37,
    target: 7,
    value: 113
  }, {
    source: 38,
    target: 7,
    value: 0
  }, {
    source: 39,
    target: 7,
    value: 0
  }, {
    source: 40,
    target: 7,
    value: 23
  }, {
    source: 41,
    target: 7,
    value: 43
  }, {
    source: 42,
    target: 7,
    value: 18
  }, {
    source: 9,
    target: 8,
    value: 48
  }, {
    source: 10,
    target: 8,
    value: 113
  }, {
    source: 11,
    target: 8,
    value: 25
  }, {
    source: 12,
    target: 8,
    value: 242
  }, {
    source: 13,
    target: 8,
    value: 2
  }, {
    source: 14,
    target: 8,
    value: 3
  }, {
    source: 15,
    target: 8,
    value: 259
  }, {
    source: 16,
    target: 8,
    value: 24
  }, {
    source: 17,
    target: 8,
    value: 11
  }, {
    source: 18,
    target: 8,
    value: 145
  }, {
    source: 19,
    target: 8,
    value: 55
  }, {
    source: 20,
    target: 8,
    value: 45
  }, {
    source: 21,
    target: 8,
    value: 2
  }, {
    source: 22,
    target: 8,
    value: 35
  }, {
    source: 23,
    target: 8,
    value: 96
  }, {
    source: 24,
    target: 8,
    value: 7
  }, {
    source: 25,
    target: 8,
    value: 53
  }, {
    source: 26,
    target: 8,
    value: 7
  }, {
    source: 27,
    target: 8,
    value: 1
  }, {
    source: 28,
    target: 8,
    value: 23
  }, {
    source: 29,
    target: 8,
    value: 58
  }, {
    source: 30,
    target: 8,
    value: 222
  }, {
    source: 31,
    target: 8,
    value: 0
  }, {
    source: 32,
    target: 8,
    value: 78
  }, {
    source: 33,
    target: 8,
    value: 0
  }, {
    source: 34,
    target: 8,
    value: 152
  }, {
    source: 35,
    target: 8,
    value: 31
  }, {
    source: 36,
    target: 8,
    value: 0
  }, {
    source: 37,
    target: 8,
    value: 94
  }, {
    source: 38,
    target: 8,
    value: 0
  }, {
    source: 39,
    target: 8,
    value: 0
  }, {
    source: 40,
    target: 8,
    value: 1
  }, {
    source: 41,
    target: 8,
    value: 52
  }, {
    source: 42,
    target: 8,
    value: 2
  }, {
    source: 10,
    target: 9,
    value: 73
  }, {
    source: 11,
    target: 9,
    value: 442
  }, {
    source: 12,
    target: 9,
    value: 75
  }, {
    source: 13,
    target: 9,
    value: 4
  }, {
    source: 14,
    target: 9,
    value: 61
  }, {
    source: 15,
    target: 9,
    value: 26
  }, {
    source: 16,
    target: 9,
    value: 152
  }, {
    source: 17,
    target: 9,
    value: 2
  }, {
    source: 18,
    target: 9,
    value: 69
  }, {
    source: 19,
    target: 9,
    value: 86
  }, {
    source: 20,
    target: 9,
    value: 3
  }, {
    source: 21,
    target: 9,
    value: 3
  }, {
    source: 22,
    target: 9,
    value: 1
  }, {
    source: 23,
    target: 9,
    value: 18
  }, {
    source: 24,
    target: 9,
    value: 136
  }, {
    source: 25,
    target: 9,
    value: 145
  }, {
    source: 26,
    target: 9,
    value: 0
  }, {
    source: 27,
    target: 9,
    value: 7
  }, {
    source: 28,
    target: 9,
    value: 169
  }, {
    source: 29,
    target: 9,
    value: 33
  }, {
    source: 30,
    target: 9,
    value: 0
  }, {
    source: 31,
    target: 9,
    value: 1
  }, {
    source: 32,
    target: 9,
    value: 18
  }, {
    source: 33,
    target: 9,
    value: 0
  }, {
    source: 34,
    target: 9,
    value: 12
  }, {
    source: 35,
    target: 9,
    value: 13
  }, {
    source: 36,
    target: 9,
    value: 0
  }, {
    source: 37,
    target: 9,
    value: 10
  }, {
    source: 38,
    target: 9,
    value: 0
  }, {
    source: 39,
    target: 9,
    value: 0
  }, {
    source: 40,
    target: 9,
    value: 7
  }, {
    source: 41,
    target: 9,
    value: 13
  }, {
    source: 42,
    target: 9,
    value: 112
  }, {
    source: 11,
    target: 10,
    value: 73
  }, {
    source: 12,
    target: 10,
    value: 210
  }, {
    source: 13,
    target: 10,
    value: 78
  }, {
    source: 14,
    target: 10,
    value: 41
  }, {
    source: 15,
    target: 10,
    value: 139
  }, {
    source: 16,
    target: 10,
    value: 21
  }, {
    source: 17,
    target: 10,
    value: 282
  }, {
    source: 18,
    target: 10,
    value: 120
  }, {
    source: 19,
    target: 10,
    value: 42
  }, {
    source: 20,
    target: 10,
    value: 5
  }, {
    source: 21,
    target: 10,
    value: 2
  }, {
    source: 22,
    target: 10,
    value: 9
  }, {
    source: 23,
    target: 10,
    value: 46
  }, {
    source: 24,
    target: 10,
    value: 18
  }, {
    source: 25,
    target: 10,
    value: 311
  }, {
    source: 26,
    target: 10,
    value: 34
  }, {
    source: 27,
    target: 10,
    value: 42
  }, {
    source: 28,
    target: 10,
    value: 26
  }, {
    source: 29,
    target: 10,
    value: 15
  }, {
    source: 30,
    target: 10,
    value: 60
  }, {
    source: 31,
    target: 10,
    value: 58
  }, {
    source: 32,
    target: 10,
    value: 31
  }, {
    source: 33,
    target: 10,
    value: 1
  }, {
    source: 34,
    target: 10,
    value: 16
  }, {
    source: 35,
    target: 10,
    value: 38
  }, {
    source: 36,
    target: 10,
    value: 0
  }, {
    source: 37,
    target: 10,
    value: 40
  }, {
    source: 38,
    target: 10,
    value: 156
  }, {
    source: 39,
    target: 10,
    value: 0
  }, {
    source: 40,
    target: 10,
    value: 32
  }, {
    source: 41,
    target: 10,
    value: 7
  }, {
    source: 42,
    target: 10,
    value: 1
  }, {
    source: 12,
    target: 11,
    value: 29
  }, {
    source: 13,
    target: 11,
    value: 23
  }, {
    source: 14,
    target: 11,
    value: 210
  }, {
    source: 15,
    target: 11,
    value: 109
  }, {
    source: 16,
    target: 11,
    value: 37
  }, {
    source: 17,
    target: 11,
    value: 5
  }, {
    source: 18,
    target: 11,
    value: 94
  }, {
    source: 19,
    target: 11,
    value: 20
  }, {
    source: 20,
    target: 11,
    value: 12
  }, {
    source: 21,
    target: 11,
    value: 1
  }, {
    source: 22,
    target: 11,
    value: 8
  }, {
    source: 23,
    target: 11,
    value: 5
  }, {
    source: 24,
    target: 11,
    value: 156
  }, {
    source: 25,
    target: 11,
    value: 74
  }, {
    source: 26,
    target: 11,
    value: 15
  }, {
    source: 27,
    target: 11,
    value: 1
  }, {
    source: 28,
    target: 11,
    value: 19
  }, {
    source: 29,
    target: 11,
    value: 1
  }, {
    source: 30,
    target: 11,
    value: 15
  }, {
    source: 31,
    target: 11,
    value: 14
  }, {
    source: 32,
    target: 11,
    value: 7
  }, {
    source: 33,
    target: 11,
    value: 0
  }, {
    source: 34,
    target: 11,
    value: 4
  }, {
    source: 35,
    target: 11,
    value: 36
  }, {
    source: 36,
    target: 11,
    value: 1
  }, {
    source: 37,
    target: 11,
    value: 5
  }, {
    source: 38,
    target: 11,
    value: 1
  }, {
    source: 39,
    target: 11,
    value: 0
  }, {
    source: 40,
    target: 11,
    value: 11
  }, {
    source: 41,
    target: 11,
    value: 9
  }, {
    source: 42,
    target: 11,
    value: 88
  }, {
    source: 13,
    target: 12,
    value: 2
  }, {
    source: 14,
    target: 12,
    value: 24
  }, {
    source: 15,
    target: 12,
    value: 133
  }, {
    source: 16,
    target: 12,
    value: 16
  }, {
    source: 17,
    target: 12,
    value: 26
  }, {
    source: 18,
    target: 12,
    value: 88
  }, {
    source: 19,
    target: 12,
    value: 162
  }, {
    source: 20,
    target: 12,
    value: 29
  }, {
    source: 21,
    target: 12,
    value: 18
  }, {
    source: 22,
    target: 12,
    value: 69
  }, {
    source: 23,
    target: 12,
    value: 75
  }, {
    source: 24,
    target: 12,
    value: 0
  }, {
    source: 25,
    target: 12,
    value: 195
  }, {
    source: 26,
    target: 12,
    value: 13
  }, {
    source: 27,
    target: 12,
    value: 15
  }, {
    source: 28,
    target: 12,
    value: 90
  }, {
    source: 29,
    target: 12,
    value: 2
  }, {
    source: 30,
    target: 12,
    value: 53
  }, {
    source: 31,
    target: 12,
    value: 4
  }, {
    source: 32,
    target: 12,
    value: 21
  }, {
    source: 33,
    target: 12,
    value: 11
  }, {
    source: 34,
    target: 12,
    value: 25
  }, {
    source: 35,
    target: 12,
    value: 40
  }, {
    source: 36,
    target: 12,
    value: 7
  }, {
    source: 37,
    target: 12,
    value: 73
  }, {
    source: 38,
    target: 12,
    value: 8
  }, {
    source: 39,
    target: 12,
    value: 3
  }, {
    source: 40,
    target: 12,
    value: 2
  }, {
    source: 41,
    target: 12,
    value: 16
  }, {
    source: 42,
    target: 12,
    value: 8
  }, {
    source: 14,
    target: 13,
    value: 2
  }, {
    source: 15,
    target: 13,
    value: 3
  }, {
    source: 16,
    target: 13,
    value: 0
  }, {
    source: 17,
    target: 13,
    value: 0
  }, {
    source: 18,
    target: 13,
    value: 7
  }, {
    source: 19,
    target: 13,
    value: 0
  }, {
    source: 20,
    target: 13,
    value: 0
  }, {
    source: 21,
    target: 13,
    value: 0
  }, {
    source: 22,
    target: 13,
    value: 0
  }, {
    source: 23,
    target: 13,
    value: 2
  }, {
    source: 24,
    target: 13,
    value: 0
  }, {
    source: 25,
    target: 13,
    value: 3
  }, {
    source: 26,
    target: 13,
    value: 286
  }, {
    source: 27,
    target: 13,
    value: 0
  }, {
    source: 28,
    target: 13,
    value: 1
  }, {
    source: 29,
    target: 13,
    value: 0
  }, {
    source: 30,
    target: 13,
    value: 17
  }, {
    source: 31,
    target: 13,
    value: 36
  }, {
    source: 32,
    target: 13,
    value: 0
  }, {
    source: 33,
    target: 13,
    value: 1
  }, {
    source: 34,
    target: 13,
    value: 0
  }, {
    source: 35,
    target: 13,
    value: 0
  }, {
    source: 36,
    target: 13,
    value: 0
  }, {
    source: 37,
    target: 13,
    value: 0
  }, {
    source: 38,
    target: 13,
    value: 15
  }, {
    source: 39,
    target: 13,
    value: 0
  }, {
    source: 40,
    target: 13,
    value: 0
  }, {
    source: 41,
    target: 13,
    value: 3
  }, {
    source: 42,
    target: 13,
    value: 0
  }, {
    source: 15,
    target: 14,
    value: 5
  }, {
    source: 16,
    target: 14,
    value: 4
  }, {
    source: 17,
    target: 14,
    value: 5
  }, {
    source: 18,
    target: 14,
    value: 19
  }, {
    source: 19,
    target: 14,
    value: 0
  }, {
    source: 20,
    target: 14,
    value: 0
  }, {
    source: 21,
    target: 14,
    value: 1
  }, {
    source: 22,
    target: 14,
    value: 1
  }, {
    source: 23,
    target: 14,
    value: 2
  }, {
    source: 24,
    target: 14,
    value: 57
  }, {
    source: 25,
    target: 14,
    value: 0
  }, {
    source: 26,
    target: 14,
    value: 0
  }, {
    source: 27,
    target: 14,
    value: 99
  }, {
    source: 28,
    target: 14,
    value: 0
  }, {
    source: 29,
    target: 14,
    value: 5
  }, {
    source: 30,
    target: 14,
    value: 2
  }, {
    source: 31,
    target: 14,
    value: 0
  }, {
    source: 32,
    target: 14,
    value: 0
  }, {
    source: 33,
    target: 14,
    value: 5
  }, {
    source: 34,
    target: 14,
    value: 0
  }, {
    source: 35,
    target: 14,
    value: 92
  }, {
    source: 36,
    target: 14,
    value: 1
  }, {
    source: 37,
    target: 14,
    value: 3
  }, {
    source: 38,
    target: 14,
    value: 0
  }, {
    source: 39,
    target: 14,
    value: 0
  }, {
    source: 40,
    target: 14,
    value: 255
  }, {
    source: 41,
    target: 14,
    value: 0
  }, {
    source: 42,
    target: 14,
    value: 21
  }, {
    source: 16,
    target: 15,
    value: 15
  }, {
    source: 17,
    target: 15,
    value: 24
  }, {
    source: 18,
    target: 15,
    value: 84
  }, {
    source: 19,
    target: 15,
    value: 80
  }, {
    source: 20,
    target: 15,
    value: 151
  }, {
    source: 21,
    target: 15,
    value: 8
  }, {
    source: 22,
    target: 15,
    value: 46
  }, {
    source: 23,
    target: 15,
    value: 75
  }, {
    source: 24,
    target: 15,
    value: 3
  }, {
    source: 25,
    target: 15,
    value: 88
  }, {
    source: 26,
    target: 15,
    value: 15
  }, {
    source: 27,
    target: 15,
    value: 0
  }, {
    source: 28,
    target: 15,
    value: 11
  }, {
    source: 29,
    target: 15,
    value: 43
  }, {
    source: 30,
    target: 15,
    value: 169
  }, {
    source: 31,
    target: 15,
    value: 2
  }, {
    source: 32,
    target: 15,
    value: 35
  }, {
    source: 33,
    target: 15,
    value: 0
  }, {
    source: 34,
    target: 15,
    value: 113
  }, {
    source: 35,
    target: 15,
    value: 29
  }, {
    source: 36,
    target: 15,
    value: 0
  }, {
    source: 37,
    target: 15,
    value: 37
  }, {
    source: 38,
    target: 15,
    value: 8
  }, {
    source: 39,
    target: 15,
    value: 2
  }, {
    source: 40,
    target: 15,
    value: 0
  }, {
    source: 41,
    target: 15,
    value: 33
  }, {
    source: 42,
    target: 15,
    value: 5
  }, {
    source: 17,
    target: 16,
    value: 2
  }, {
    source: 18,
    target: 16,
    value: 24
  }, {
    source: 19,
    target: 16,
    value: 0
  }, {
    source: 20,
    target: 16,
    value: 40
  }, {
    source: 21,
    target: 16,
    value: 0
  }, {
    source: 22,
    target: 16,
    value: 2
  }, {
    source: 23,
    target: 16,
    value: 3
  }, {
    source: 24,
    target: 16,
    value: 1
  }, {
    source: 25,
    target: 16,
    value: 109
  }, {
    source: 26,
    target: 16,
    value: 0
  }, {
    source: 27,
    target: 16,
    value: 0
  }, {
    source: 28,
    target: 16,
    value: 5
  }, {
    source: 29,
    target: 16,
    value: 0
  }, {
    source: 30,
    target: 16,
    value: 8
  }, {
    source: 31,
    target: 16,
    value: 0
  }, {
    source: 32,
    target: 16,
    value: 17
  }, {
    source: 33,
    target: 16,
    value: 0
  }, {
    source: 34,
    target: 16,
    value: 3
  }, {
    source: 35,
    target: 16,
    value: 6
  }, {
    source: 36,
    target: 16,
    value: 0
  }, {
    source: 37,
    target: 16,
    value: 0
  }, {
    source: 38,
    target: 16,
    value: 0
  }, {
    source: 39,
    target: 16,
    value: 0
  }, {
    source: 40,
    target: 16,
    value: 0
  }, {
    source: 41,
    target: 16,
    value: 7
  }, {
    source: 42,
    target: 16,
    value: 6
  }, {
    source: 18,
    target: 17,
    value: 11
  }, {
    source: 19,
    target: 17,
    value: 2
  }, {
    source: 20,
    target: 17,
    value: 3
  }, {
    source: 21,
    target: 17,
    value: 0
  }, {
    source: 22,
    target: 17,
    value: 0
  }, {
    source: 23,
    target: 17,
    value: 0
  }, {
    source: 24,
    target: 17,
    value: 4
  }, {
    source: 25,
    target: 17,
    value: 32
  }, {
    source: 26,
    target: 17,
    value: 0
  }, {
    source: 27,
    target: 17,
    value: 0
  }, {
    source: 28,
    target: 17,
    value: 2
  }, {
    source: 29,
    target: 17,
    value: 0
  }, {
    source: 30,
    target: 17,
    value: 8
  }, {
    source: 31,
    target: 17,
    value: 4
  }, {
    source: 32,
    target: 17,
    value: 0
  }, {
    source: 33,
    target: 17,
    value: 0
  }, {
    source: 34,
    target: 17,
    value: 0
  }, {
    source: 35,
    target: 17,
    value: 1
  }, {
    source: 36,
    target: 17,
    value: 0
  }, {
    source: 37,
    target: 17,
    value: 0
  }, {
    source: 38,
    target: 17,
    value: 136
  }, {
    source: 39,
    target: 17,
    value: 0
  }, {
    source: 40,
    target: 17,
    value: 1
  }, {
    source: 41,
    target: 17,
    value: 0
  }, {
    source: 42,
    target: 17,
    value: 0
  }, {
    source: 19,
    target: 18,
    value: 33
  }, {
    source: 20,
    target: 18,
    value: 6
  }, {
    source: 21,
    target: 18,
    value: 1
  }, {
    source: 22,
    target: 18,
    value: 11
  }, {
    source: 23,
    target: 18,
    value: 36
  }, {
    source: 24,
    target: 18,
    value: 38
  }, {
    source: 25,
    target: 18,
    value: 44
  }, {
    source: 26,
    target: 18,
    value: 0
  }, {
    source: 27,
    target: 18,
    value: 2
  }, {
    source: 28,
    target: 18,
    value: 20
  }, {
    source: 29,
    target: 18,
    value: 22
  }, {
    source: 30,
    target: 18,
    value: 37
  }, {
    source: 31,
    target: 18,
    value: 3
  }, {
    source: 32,
    target: 18,
    value: 8
  }, {
    source: 33,
    target: 18,
    value: 6
  }, {
    source: 34,
    target: 18,
    value: 18
  }, {
    source: 35,
    target: 18,
    value: 22
  }, {
    source: 36,
    target: 18,
    value: 2
  }, {
    source: 37,
    target: 18,
    value: 38
  }, {
    source: 38,
    target: 18,
    value: 1
  }, {
    source: 39,
    target: 18,
    value: 1
  }, {
    source: 40,
    target: 18,
    value: 0
  }, {
    source: 41,
    target: 18,
    value: 58
  }, {
    source: 42,
    target: 18,
    value: 27
  }, {
    source: 20,
    target: 19,
    value: 30
  }, {
    source: 21,
    target: 19,
    value: 0
  }, {
    source: 22,
    target: 19,
    value: 22
  }, {
    source: 23,
    target: 19,
    value: 145
  }, {
    source: 24,
    target: 19,
    value: 30
  }, {
    source: 25,
    target: 19,
    value: 62
  }, {
    source: 26,
    target: 19,
    value: 3
  }, {
    source: 27,
    target: 19,
    value: 0
  }, {
    source: 28,
    target: 19,
    value: 161
  }, {
    source: 29,
    target: 19,
    value: 5
  }, {
    source: 30,
    target: 19,
    value: 5
  }, {
    source: 31,
    target: 19,
    value: 0
  }, {
    source: 32,
    target: 19,
    value: 16
  }, {
    source: 33,
    target: 19,
    value: 0
  }, {
    source: 34,
    target: 19,
    value: 6
  }, {
    source: 35,
    target: 19,
    value: 5
  }, {
    source: 36,
    target: 19,
    value: 0
  }, {
    source: 37,
    target: 19,
    value: 70
  }, {
    source: 38,
    target: 19,
    value: 0
  }, {
    source: 39,
    target: 19,
    value: 0
  }, {
    source: 40,
    target: 19,
    value: 3
  }, {
    source: 41,
    target: 19,
    value: 9
  }, {
    source: 42,
    target: 19,
    value: 9
  }, {
    source: 21,
    target: 20,
    value: 0
  }, {
    source: 22,
    target: 20,
    value: 16
  }, {
    source: 23,
    target: 20,
    value: 14
  }, {
    source: 24,
    target: 20,
    value: 2
  }, {
    source: 25,
    target: 20,
    value: 25
  }, {
    source: 26,
    target: 20,
    value: 3
  }, {
    source: 27,
    target: 20,
    value: 0
  }, {
    source: 28,
    target: 20,
    value: 0
  }, {
    source: 29,
    target: 20,
    value: 8
  }, {
    source: 30,
    target: 20,
    value: 23
  }, {
    source: 31,
    target: 20,
    value: 0
  }, {
    source: 32,
    target: 20,
    value: 21
  }, {
    source: 33,
    target: 20,
    value: 0
  }, {
    source: 34,
    target: 20,
    value: 7
  }, {
    source: 35,
    target: 20,
    value: 23
  }, {
    source: 36,
    target: 20,
    value: 0
  }, {
    source: 37,
    target: 20,
    value: 1
  }, {
    source: 38,
    target: 20,
    value: 3
  }, {
    source: 39,
    target: 20,
    value: 0
  }, {
    source: 40,
    target: 20,
    value: 0
  }, {
    source: 41,
    target: 20,
    value: 61
  }, {
    source: 42,
    target: 20,
    value: 7
  }, {
    source: 22,
    target: 21,
    value: 48
  }, {
    source: 23,
    target: 21,
    value: 7
  }, {
    source: 24,
    target: 21,
    value: 0
  }, {
    source: 25,
    target: 21,
    value: 0
  }, {
    source: 26,
    target: 21,
    value: 0
  }, {
    source: 27,
    target: 21,
    value: 0
  }, {
    source: 28,
    target: 21,
    value: 2
  }, {
    source: 29,
    target: 21,
    value: 0
  }, {
    source: 30,
    target: 21,
    value: 0
  }, {
    source: 31,
    target: 21,
    value: 0
  }, {
    source: 32,
    target: 21,
    value: 0
  }, {
    source: 33,
    target: 21,
    value: 112
  }, {
    source: 34,
    target: 21,
    value: 0
  }, {
    source: 35,
    target: 21,
    value: 1
  }, {
    source: 36,
    target: 21,
    value: 98
  }, {
    source: 37,
    target: 21,
    value: 0
  }, {
    source: 38,
    target: 21,
    value: 0
  }, {
    source: 39,
    target: 21,
    value: 1
  }, {
    source: 40,
    target: 21,
    value: 0
  }, {
    source: 41,
    target: 21,
    value: 0
  }, {
    source: 42,
    target: 21,
    value: 0
  }, {
    source: 23,
    target: 22,
    value: 37
  }, {
    source: 24,
    target: 22,
    value: 0
  }, {
    source: 25,
    target: 22,
    value: 31
  }, {
    source: 26,
    target: 22,
    value: 11
  }, {
    source: 27,
    target: 22,
    value: 6
  }, {
    source: 28,
    target: 22,
    value: 0
  }, {
    source: 29,
    target: 22,
    value: 0
  }, {
    source: 30,
    target: 22,
    value: 5
  }, {
    source: 31,
    target: 22,
    value: 0
  }, {
    source: 32,
    target: 22,
    value: 4
  }, {
    source: 33,
    target: 22,
    value: 16
  }, {
    source: 34,
    target: 22,
    value: 0
  }, {
    source: 35,
    target: 22,
    value: 6
  }, {
    source: 36,
    target: 22,
    value: 28
  }, {
    source: 37,
    target: 22,
    value: 29
  }, {
    source: 38,
    target: 22,
    value: 1
  }, {
    source: 39,
    target: 22,
    value: 102
  }, {
    source: 40,
    target: 22,
    value: 0
  }, {
    source: 41,
    target: 22,
    value: 5
  }, {
    source: 42,
    target: 22,
    value: 0
  }, {
    source: 24,
    target: 23,
    value: 0
  }, {
    source: 25,
    target: 23,
    value: 56
  }, {
    source: 26,
    target: 23,
    value: 1
  }, {
    source: 27,
    target: 23,
    value: 0
  }, {
    source: 28,
    target: 23,
    value: 5
  }, {
    source: 29,
    target: 23,
    value: 33
  }, {
    source: 30,
    target: 23,
    value: 9
  }, {
    source: 31,
    target: 23,
    value: 0
  }, {
    source: 32,
    target: 23,
    value: 12
  }, {
    source: 33,
    target: 23,
    value: 3
  }, {
    source: 34,
    target: 23,
    value: 6
  }, {
    source: 35,
    target: 23,
    value: 7
  }, {
    source: 36,
    target: 23,
    value: 1
  }, {
    source: 37,
    target: 23,
    value: 83
  }, {
    source: 38,
    target: 23,
    value: 0
  }, {
    source: 39,
    target: 23,
    value: 0
  }, {
    source: 40,
    target: 23,
    value: 0
  }, {
    source: 41,
    target: 23,
    value: 4
  }, {
    source: 42,
    target: 23,
    value: 0
  }, {
    source: 25,
    target: 24,
    value: 6
  }, {
    source: 26,
    target: 24,
    value: 0
  }, {
    source: 27,
    target: 24,
    value: 0
  }, {
    source: 28,
    target: 24,
    value: 3
  }, {
    source: 29,
    target: 24,
    value: 0
  }, {
    source: 30,
    target: 24,
    value: 3
  }, {
    source: 31,
    target: 24,
    value: 0
  }, {
    source: 32,
    target: 24,
    value: 0
  }, {
    source: 33,
    target: 24,
    value: 0
  }, {
    source: 34,
    target: 24,
    value: 0
  }, {
    source: 35,
    target: 24,
    value: 3
  }, {
    source: 36,
    target: 24,
    value: 0
  }, {
    source: 37,
    target: 24,
    value: 4
  }, {
    source: 38,
    target: 24,
    value: 3
  }, {
    source: 39,
    target: 24,
    value: 0
  }, {
    source: 40,
    target: 24,
    value: 20
  }, {
    source: 41,
    target: 24,
    value: 3
  }, {
    source: 42,
    target: 24,
    value: 24
  }, {
    source: 26,
    target: 25,
    value: 0
  }, {
    source: 27,
    target: 25,
    value: 3
  }, {
    source: 28,
    target: 25,
    value: 8
  }, {
    source: 29,
    target: 25,
    value: 5
  }, {
    source: 30,
    target: 25,
    value: 15
  }, {
    source: 31,
    target: 25,
    value: 0
  }, {
    source: 32,
    target: 25,
    value: 89
  }, {
    source: 33,
    target: 25,
    value: 0
  }, {
    source: 34,
    target: 25,
    value: 52
  }, {
    source: 35,
    target: 25,
    value: 21
  }, {
    source: 36,
    target: 25,
    value: 0
  }, {
    source: 37,
    target: 25,
    value: 29
  }, {
    source: 38,
    target: 25,
    value: 18
  }, {
    source: 39,
    target: 25,
    value: 0
  }, {
    source: 40,
    target: 25,
    value: 0
  }, {
    source: 41,
    target: 25,
    value: 3
  }, {
    source: 42,
    target: 25,
    value: 9
  }, {
    source: 27,
    target: 26,
    value: 0
  }, {
    source: 28,
    target: 26,
    value: 0
  }, {
    source: 29,
    target: 26,
    value: 0
  }, {
    source: 30,
    target: 26,
    value: 2
  }, {
    source: 31,
    target: 26,
    value: 24
  }, {
    source: 32,
    target: 26,
    value: 12
  }, {
    source: 33,
    target: 26,
    value: 0
  }, {
    source: 34,
    target: 26,
    value: 1
  }, {
    source: 35,
    target: 26,
    value: 5
  }, {
    source: 36,
    target: 26,
    value: 0
  }, {
    source: 37,
    target: 26,
    value: 2
  }, {
    source: 38,
    target: 26,
    value: 12
  }, {
    source: 39,
    target: 26,
    value: 0
  }, {
    source: 40,
    target: 26,
    value: 0
  }, {
    source: 41,
    target: 26,
    value: 0
  }, {
    source: 42,
    target: 26,
    value: 0
  }, {
    source: 28,
    target: 27,
    value: 0
  }, {
    source: 29,
    target: 27,
    value: 0
  }, {
    source: 30,
    target: 27,
    value: 0
  }, {
    source: 31,
    target: 27,
    value: 3
  }, {
    source: 32,
    target: 27,
    value: 0
  }, {
    source: 33,
    target: 27,
    value: 0
  }, {
    source: 34,
    target: 27,
    value: 0
  }, {
    source: 35,
    target: 27,
    value: 58
  }, {
    source: 36,
    target: 27,
    value: 0
  }, {
    source: 37,
    target: 27,
    value: 0
  }, {
    source: 38,
    target: 27,
    value: 5
  }, {
    source: 39,
    target: 27,
    value: 0
  }, {
    source: 40,
    target: 27,
    value: 1
  }, {
    source: 41,
    target: 27,
    value: 0
  }, {
    source: 42,
    target: 27,
    value: 0
  }, {
    source: 29,
    target: 28,
    value: 12
  }, {
    source: 30,
    target: 28,
    value: 3
  }, {
    source: 31,
    target: 28,
    value: 0
  }, {
    source: 32,
    target: 28,
    value: 2
  }, {
    source: 33,
    target: 28,
    value: 0
  }, {
    source: 34,
    target: 28,
    value: 0
  }, {
    source: 35,
    target: 28,
    value: 2
  }, {
    source: 36,
    target: 28,
    value: 0
  }, {
    source: 37,
    target: 28,
    value: 6
  }, {
    source: 38,
    target: 28,
    value: 0
  }, {
    source: 39,
    target: 28,
    value: 0
  }, {
    source: 40,
    target: 28,
    value: 0
  }, {
    source: 41,
    target: 28,
    value: 2
  }, {
    source: 42,
    target: 28,
    value: 36
  }, {
    source: 30,
    target: 29,
    value: 19
  }, {
    source: 31,
    target: 29,
    value: 0
  }, {
    source: 32,
    target: 29,
    value: 4
  }, {
    source: 33,
    target: 29,
    value: 2
  }, {
    source: 34,
    target: 29,
    value: 1
  }, {
    source: 35,
    target: 29,
    value: 4
  }, {
    source: 36,
    target: 29,
    value: 0
  }, {
    source: 37,
    target: 29,
    value: 4
  }, {
    source: 38,
    target: 29,
    value: 0
  }, {
    source: 39,
    target: 29,
    value: 0
  }, {
    source: 40,
    target: 29,
    value: 0
  }, {
    source: 41,
    target: 29,
    value: 17
  }, {
    source: 42,
    target: 29,
    value: 3
  }, {
    source: 31,
    target: 30,
    value: 2
  }, {
    source: 32,
    target: 30,
    value: 47
  }, {
    source: 33,
    target: 30,
    value: 0
  }, {
    source: 34,
    target: 30,
    value: 116
  }, {
    source: 35,
    target: 30,
    value: 8
  }, {
    source: 36,
    target: 30,
    value: 0
  }, {
    source: 37,
    target: 30,
    value: 6
  }, {
    source: 38,
    target: 30,
    value: 4
  }, {
    source: 39,
    target: 30,
    value: 0
  }, {
    source: 40,
    target: 30,
    value: 0
  }, {
    source: 41,
    target: 30,
    value: 2
  }, {
    source: 42,
    target: 30,
    value: 8
  }, {
    source: 32,
    target: 31,
    value: 0
  }, {
    source: 33,
    target: 31,
    value: 0
  }, {
    source: 34,
    target: 31,
    value: 0
  }, {
    source: 35,
    target: 31,
    value: 2
  }, {
    source: 36,
    target: 31,
    value: 0
  }, {
    source: 37,
    target: 31,
    value: 0
  }, {
    source: 38,
    target: 31,
    value: 26
  }, {
    source: 39,
    target: 31,
    value: 0
  }, {
    source: 40,
    target: 31,
    value: 2
  }, {
    source: 41,
    target: 31,
    value: 0
  }, {
    source: 42,
    target: 31,
    value: 0
  }, {
    source: 33,
    target: 32,
    value: 0
  }, {
    source: 34,
    target: 32,
    value: 92
  }, {
    source: 35,
    target: 32,
    value: 43
  }, {
    source: 36,
    target: 32,
    value: 0
  }, {
    source: 37,
    target: 32,
    value: 6
  }, {
    source: 38,
    target: 32,
    value: 0
  }, {
    source: 39,
    target: 32,
    value: 0
  }, {
    source: 40,
    target: 32,
    value: 0
  }, {
    source: 41,
    target: 32,
    value: 34
  }, {
    source: 42,
    target: 32,
    value: 0
  }, {
    source: 34,
    target: 33,
    value: 0
  }, {
    source: 35,
    target: 33,
    value: 0
  }, {
    source: 36,
    target: 33,
    value: 139
  }, {
    source: 37,
    target: 33,
    value: 1
  }, {
    source: 38,
    target: 33,
    value: 0
  }, {
    source: 39,
    target: 33,
    value: 10
  }, {
    source: 40,
    target: 33,
    value: 0
  }, {
    source: 41,
    target: 33,
    value: 0
  }, {
    source: 42,
    target: 33,
    value: 0
  }, {
    source: 35,
    target: 34,
    value: 0
  }, {
    source: 36,
    target: 34,
    value: 0
  }, {
    source: 37,
    target: 34,
    value: 11
  }, {
    source: 38,
    target: 34,
    value: 0
  }, {
    source: 39,
    target: 34,
    value: 0
  }, {
    source: 40,
    target: 34,
    value: 0
  }, {
    source: 41,
    target: 34,
    value: 0
  }, {
    source: 42,
    target: 34,
    value: 0
  }, {
    source: 36,
    target: 35,
    value: 0
  }, {
    source: 37,
    target: 35,
    value: 8
  }, {
    source: 38,
    target: 35,
    value: 0
  }, {
    source: 39,
    target: 35,
    value: 0
  }, {
    source: 40,
    target: 35,
    value: 4
  }, {
    source: 41,
    target: 35,
    value: 14
  }, {
    source: 42,
    target: 35,
    value: 0
  }, {
    source: 37,
    target: 36,
    value: 3
  }, {
    source: 38,
    target: 36,
    value: 0
  }, {
    source: 39,
    target: 36,
    value: 13
  }, {
    source: 40,
    target: 36,
    value: 0
  }, {
    source: 41,
    target: 36,
    value: 0
  }, {
    source: 42,
    target: 36,
    value: 0
  }, {
    source: 38,
    target: 37,
    value: 0
  }, {
    source: 39,
    target: 37,
    value: 0
  }, {
    source: 40,
    target: 37,
    value: 0
  }, {
    source: 41,
    target: 37,
    value: 18
  }, {
    source: 42,
    target: 37,
    value: 0
  }, {
    source: 39,
    target: 38,
    value: 3
  }, {
    source: 40,
    target: 38,
    value: 4
  }, {
    source: 41,
    target: 38,
    value: 0
  }, {
    source: 42,
    target: 38,
    value: 0
  }, {
    source: 40,
    target: 39,
    value: 0
  }, {
    source: 41,
    target: 39,
    value: 0
  }, {
    source: 42,
    target: 39,
    value: 0
  }, {
    source: 41,
    target: 40,
    value: 0
  }, {
    source: 42,
    target: 40,
    value: 0
  }, {
    source: 42,
    target: 41,
    value: 1
  }]
};
const DATA_KF = {
  nodes: [{
    id: 0,
    family: 'AE',
    name: 'Portfolio Manager Investment',
    group: 1
  }, {
    id: 1,
    family: 'AE',
    name: 'Product Specialist Commercial Property',
    group: 1
  }, {
    id: 2,
    family: 'AE',
    name: 'Assistant Economic Research',
    group: 1
  }, {
    id: 3,
    family: 'AE',
    name: 'Economic Researcher',
    group: 1
  }, {
    id: 4,
    family: 'AE',
    name: 'Manager of Economic Research',
    group: 1
  }, {
    id: 5,
    family: 'AS',
    name: 'Administrative Assistant',
    group: 2
  }, {
    id: 6,
    family: 'AS',
    name: 'General Clerk',
    group: 2
  }, {
    id: 7,
    family: 'AS',
    name: 'Office Manager',
    group: 2
  }, {
    id: 8,
    family: 'AS',
    name: 'Personal Assistant Under Supervision',
    group: 2
  }, {
    id: 9,
    family: 'AS',
    name: 'Autonomous Personal Assistant',
    group: 2
  }, {
    id: 10,
    family: 'AS',
    name: 'Personal Assistant to Top Level Managers',
    group: 2
  }, {
    id: 11,
    family: 'AS',
    name: 'Manager of Personal Assistants',
    group: 2
  }, {
    id: 12,
    family: 'AS',
    name: 'Housekeeper / Groundskeeper',
    group: 2
  }, {
    id: 13,
    family: 'AS',
    name: 'Receptionist / Switchboard Operator',
    group: 2
  }, {
    id: 14,
    family: 'AS',
    name: 'Guard',
    group: 2
  }, {
    id: 15,
    family: 'AS',
    name: 'Chauffeur',
    group: 2
  }, {
    id: 16,
    family: 'AS',
    name: 'Supervisor',
    group: 2
  }, {
    id: 17,
    family: 'AS',
    name: 'Translator',
    group: 2
  }, {
    id: 18,
    family: 'AS',
    name: 'Word Processing Operator',
    group: 2
  }, {
    id: 19,
    family: 'AS',
    name: 'Desktop Publisher',
    group: 2
  }, {
    id: 20,
    family: 'AS',
    name: 'Graphics Artist',
    group: 2
  }, {
    id: 21,
    family: 'AS',
    name: 'Desktop Publishing Supervisor',
    group: 2
  }, {
    id: 22,
    family: 'BB',
    name: 'Area Manager',
    group: 3
  }, {
    id: 23,
    family: 'BB',
    name: 'Branch Manager',
    group: 3
  }, {
    id: 24,
    family: 'BB',
    name: 'Branch Supervisor',
    group: 3
  }, {
    id: 25,
    family: 'BB',
    name: 'Account Manager Retail',
    group: 3
  }, {
    id: 26,
    family: 'BB',
    name: 'Assistant Product Specialist',
    group: 3
  }, {
    id: 27,
    family: 'BB',
    name: 'Customer Advisor',
    group: 3
  }, {
    id: 28,
    family: 'BB',
    name: 'People Manager Sales',
    group: 3
  }, {
    id: 29,
    family: 'BB',
    name: 'Product Specialist Lease',
    group: 3
  }, {
    id: 30,
    family: 'BB',
    name: 'Product Specialist Mortagages',
    group: 3
  }, {
    id: 31,
    family: 'BB',
    name: 'Account Manager SME',
    group: 3
  }, {
    id: 32,
    family: 'BB',
    name: 'People Manager Product Specialists',
    group: 3
  }, {
    id: 33,
    family: 'BB',
    name: 'Client Support Officer',
    group: 3
  }, {
    id: 34,
    family: 'BP',
    name: 'Artificialntelligence Architect',
    group: 4
  }, {
    id: 35,
    family: 'BP',
    name: 'DevOps Engineer',
    group: 4
  }, {
    id: 36,
    family: 'BP',
    name: 'FabLab Manager',
    group: 4
  }, {
    id: 37,
    family: 'BP',
    name: 'Machine Learning Engineer',
    group: 4
  }, {
    id: 38,
    family: 'BP',
    name: 'Machine Learning Researcher',
    group: 4
  }, {
    id: 39,
    family: 'BP',
    name: 'Prototypist',
    group: 4
  }, {
    id: 40,
    family: 'BP',
    name: 'Robot Process Automation Analyst',
    group: 4
  }, {
    id: 41,
    family: 'BP',
    name: 'Robot Process Automation Engineer',
    group: 4
  }, {
    id: 42,
    family: 'CA',
    name: 'Communication Officer / Advisor',
    group: 5
  }, {
    id: 43,
    family: 'CA',
    name: 'Strategic Communication Advisor',
    group: 5
  }, {
    id: 44,
    family: 'CA',
    name: 'Regulatory and Registration Officer / Advisor',
    group: 5
  }, {
    id: 45,
    family: 'CA',
    name: 'Strategic Regulatory and Registration Advisor',
    group: 5
  }, {
    id: 46,
    family: 'CA',
    name: 'Advisor Public Relations and Communications',
    group: 5
  }, {
    id: 47,
    family: 'CA',
    name: 'Manager Public Relations and Communications',
    group: 5
  }, {
    id: 48,
    family: 'CB',
    name: 'Account Manager Corporate Banking',
    group: 6
  }, {
    id: 49,
    family: 'CB',
    name: 'People Manager Product SpecialistsI',
    group: 6
  }],
  links: [{
    value: 2,
    source: 0,
    target: 1
  }, {
    value: 1,
    source: 0,
    target: 2
  }, {
    value: 4,
    source: 0,
    target: 3
  }, {
    value: 2,
    source: 0,
    target: 4
  }, {
    value: 5,
    source: 0,
    target: 5
  }, {
    value: 4,
    source: 0,
    target: 6
  }, {
    value: 5,
    source: 0,
    target: 7
  }, {
    value: 4,
    source: 0,
    target: 8
  }, {
    value: 2,
    source: 0,
    target: 9
  }, {
    value: 3,
    source: 0,
    target: 10
  }, {
    value: 3,
    source: 0,
    target: 11
  }, {
    value: 5,
    source: 0,
    target: 12
  }, {
    value: 2,
    source: 0,
    target: 13
  }, {
    value: 4,
    source: 0,
    target: 14
  }, {
    value: 1,
    source: 0,
    target: 15
  }, {
    value: 4,
    source: 0,
    target: 16
  }, {
    value: 4,
    source: 0,
    target: 17
  }, {
    value: 1,
    source: 0,
    target: 18
  }, {
    value: 4,
    source: 0,
    target: 19
  }, {
    value: 4,
    source: 0,
    target: 20
  }, {
    value: 3,
    source: 0,
    target: 21
  }, {
    value: 3,
    source: 0,
    target: 22
  }, {
    value: 4,
    source: 0,
    target: 23
  }, {
    value: 5,
    source: 0,
    target: 24
  }, {
    value: 1,
    source: 0,
    target: 25
  }, {
    value: 5,
    source: 0,
    target: 26
  }, {
    value: 2,
    source: 0,
    target: 27
  }, {
    value: 3,
    source: 0,
    target: 28
  }, {
    value: 4,
    source: 0,
    target: 29
  }, {
    value: 3,
    source: 0,
    target: 30
  }, {
    value: 1,
    source: 0,
    target: 31
  }, {
    value: 2,
    source: 0,
    target: 32
  }, {
    value: 1,
    source: 0,
    target: 33
  }, {
    value: 5,
    source: 0,
    target: 34
  }, {
    value: 2,
    source: 0,
    target: 35
  }, {
    value: 5,
    source: 0,
    target: 36
  }, {
    value: 2,
    source: 0,
    target: 37
  }, {
    value: 4,
    source: 0,
    target: 38
  }, {
    value: 5,
    source: 0,
    target: 39
  }, {
    value: 1,
    source: 0,
    target: 40
  }, {
    value: 3,
    source: 0,
    target: 41
  }, {
    value: 1,
    source: 0,
    target: 42
  }, {
    value: 1,
    source: 0,
    target: 43
  }, {
    value: 2,
    source: 0,
    target: 44
  }, {
    value: 2,
    source: 0,
    target: 45
  }, {
    value: 3,
    source: 0,
    target: 46
  }, {
    value: 1,
    source: 0,
    target: 47
  }, {
    value: 3,
    source: 0,
    target: 48
  }, {
    value: 3,
    source: 0,
    target: 49
  }, {
    value: 1,
    source: 1,
    target: 2
  }, {
    value: 1,
    source: 1,
    target: 3
  }, {
    value: 4,
    source: 1,
    target: 4
  }, {
    value: 4,
    source: 1,
    target: 5
  }, {
    value: 2,
    source: 1,
    target: 6
  }, {
    value: 4,
    source: 1,
    target: 7
  }, {
    value: 3,
    source: 1,
    target: 8
  }, {
    value: 5,
    source: 1,
    target: 9
  }, {
    value: 1,
    source: 1,
    target: 10
  }, {
    value: 4,
    source: 1,
    target: 11
  }, {
    value: 5,
    source: 1,
    target: 12
  }, {
    value: 4,
    source: 1,
    target: 13
  }, {
    value: 3,
    source: 1,
    target: 14
  }, {
    value: 5,
    source: 1,
    target: 15
  }, {
    value: 3,
    source: 1,
    target: 16
  }, {
    value: 3,
    source: 1,
    target: 17
  }, {
    value: 4,
    source: 1,
    target: 18
  }, {
    value: 1,
    source: 1,
    target: 19
  }, {
    value: 5,
    source: 1,
    target: 20
  }, {
    value: 1,
    source: 1,
    target: 21
  }, {
    value: 1,
    source: 1,
    target: 22
  }, {
    value: 1,
    source: 1,
    target: 23
  }, {
    value: 2,
    source: 1,
    target: 24
  }, {
    value: 1,
    source: 1,
    target: 25
  }, {
    value: 4,
    source: 1,
    target: 26
  }, {
    value: 5,
    source: 1,
    target: 27
  }, {
    value: 5,
    source: 1,
    target: 28
  }, {
    value: 1,
    source: 1,
    target: 29
  }, {
    value: 3,
    source: 1,
    target: 30
  }, {
    value: 1,
    source: 1,
    target: 31
  }, {
    value: 1,
    source: 1,
    target: 32
  }, {
    value: 5,
    source: 1,
    target: 33
  }, {
    value: 2,
    source: 1,
    target: 34
  }, {
    value: 2,
    source: 1,
    target: 35
  }, {
    value: 5,
    source: 1,
    target: 36
  }, {
    value: 1,
    source: 1,
    target: 37
  }, {
    value: 3,
    source: 1,
    target: 38
  }, {
    value: 1,
    source: 1,
    target: 39
  }, {
    value: 4,
    source: 1,
    target: 40
  }, {
    value: 4,
    source: 1,
    target: 41
  }, {
    value: 2,
    source: 1,
    target: 42
  }, {
    value: 5,
    source: 1,
    target: 43
  }, {
    value: 3,
    source: 1,
    target: 44
  }, {
    value: 3,
    source: 1,
    target: 45
  }, {
    value: 4,
    source: 1,
    target: 46
  }, {
    value: 5,
    source: 1,
    target: 47
  }, {
    value: 3,
    source: 1,
    target: 48
  }, {
    value: 3,
    source: 1,
    target: 49
  }, {
    value: 3,
    source: 2,
    target: 3
  }, {
    value: 2,
    source: 2,
    target: 4
  }, {
    value: 4,
    source: 2,
    target: 5
  }, {
    value: 2,
    source: 2,
    target: 6
  }, {
    value: 4,
    source: 2,
    target: 7
  }, {
    value: 5,
    source: 2,
    target: 8
  }, {
    value: 3,
    source: 2,
    target: 9
  }, {
    value: 2,
    source: 2,
    target: 10
  }, {
    value: 4,
    source: 2,
    target: 11
  }, {
    value: 4,
    source: 2,
    target: 12
  }, {
    value: 1,
    source: 2,
    target: 13
  }, {
    value: 3,
    source: 2,
    target: 14
  }, {
    value: 5,
    source: 2,
    target: 15
  }, {
    value: 4,
    source: 2,
    target: 16
  }, {
    value: 4,
    source: 2,
    target: 17
  }, {
    value: 4,
    source: 2,
    target: 18
  }, {
    value: 4,
    source: 2,
    target: 19
  }, {
    value: 5,
    source: 2,
    target: 20
  }, {
    value: 5,
    source: 2,
    target: 21
  }, {
    value: 1,
    source: 2,
    target: 22
  }, {
    value: 5,
    source: 2,
    target: 23
  }, {
    value: 1,
    source: 2,
    target: 24
  }, {
    value: 3,
    source: 2,
    target: 25
  }, {
    value: 4,
    source: 2,
    target: 26
  }, {
    value: 3,
    source: 2,
    target: 27
  }, {
    value: 5,
    source: 2,
    target: 28
  }, {
    value: 2,
    source: 2,
    target: 29
  }, {
    value: 2,
    source: 2,
    target: 30
  }, {
    value: 3,
    source: 2,
    target: 31
  }, {
    value: 5,
    source: 2,
    target: 32
  }, {
    value: 5,
    source: 2,
    target: 33
  }, {
    value: 5,
    source: 2,
    target: 34
  }, {
    value: 2,
    source: 2,
    target: 35
  }, {
    value: 2,
    source: 2,
    target: 36
  }, {
    value: 1,
    source: 2,
    target: 37
  }, {
    value: 1,
    source: 2,
    target: 38
  }, {
    value: 5,
    source: 2,
    target: 39
  }, {
    value: 3,
    source: 2,
    target: 40
  }, {
    value: 2,
    source: 2,
    target: 41
  }, {
    value: 1,
    source: 2,
    target: 42
  }, {
    value: 4,
    source: 2,
    target: 43
  }, {
    value: 3,
    source: 2,
    target: 44
  }, {
    value: 3,
    source: 2,
    target: 45
  }, {
    value: 5,
    source: 2,
    target: 46
  }, {
    value: 5,
    source: 2,
    target: 47
  }, {
    value: 5,
    source: 2,
    target: 48
  }, {
    value: 1,
    source: 2,
    target: 49
  }, {
    value: 2,
    source: 3,
    target: 4
  }, {
    value: 2,
    source: 3,
    target: 5
  }, {
    value: 4,
    source: 3,
    target: 6
  }, {
    value: 3,
    source: 3,
    target: 7
  }, {
    value: 2,
    source: 3,
    target: 8
  }, {
    value: 1,
    source: 3,
    target: 9
  }, {
    value: 5,
    source: 3,
    target: 10
  }, {
    value: 4,
    source: 3,
    target: 11
  }, {
    value: 2,
    source: 3,
    target: 12
  }, {
    value: 5,
    source: 3,
    target: 13
  }, {
    value: 2,
    source: 3,
    target: 14
  }, {
    value: 2,
    source: 3,
    target: 15
  }, {
    value: 2,
    source: 3,
    target: 16
  }, {
    value: 2,
    source: 3,
    target: 17
  }, {
    value: 1,
    source: 3,
    target: 18
  }, {
    value: 1,
    source: 3,
    target: 19
  }, {
    value: 3,
    source: 3,
    target: 20
  }, {
    value: 3,
    source: 3,
    target: 21
  }, {
    value: 3,
    source: 3,
    target: 22
  }, {
    value: 1,
    source: 3,
    target: 23
  }, {
    value: 2,
    source: 3,
    target: 24
  }, {
    value: 4,
    source: 3,
    target: 25
  }, {
    value: 5,
    source: 3,
    target: 26
  }, {
    value: 1,
    source: 3,
    target: 27
  }, {
    value: 2,
    source: 3,
    target: 28
  }, {
    value: 3,
    source: 3,
    target: 29
  }, {
    value: 2,
    source: 3,
    target: 30
  }, {
    value: 3,
    source: 3,
    target: 31
  }, {
    value: 3,
    source: 3,
    target: 32
  }, {
    value: 4,
    source: 3,
    target: 33
  }, {
    value: 3,
    source: 3,
    target: 34
  }, {
    value: 3,
    source: 3,
    target: 35
  }, {
    value: 4,
    source: 3,
    target: 36
  }, {
    value: 3,
    source: 3,
    target: 37
  }, {
    value: 2,
    source: 3,
    target: 38
  }, {
    value: 2,
    source: 3,
    target: 39
  }, {
    value: 5,
    source: 3,
    target: 40
  }, {
    value: 4,
    source: 3,
    target: 41
  }, {
    value: 3,
    source: 3,
    target: 42
  }, {
    value: 4,
    source: 3,
    target: 43
  }, {
    value: 2,
    source: 3,
    target: 44
  }, {
    value: 2,
    source: 3,
    target: 45
  }, {
    value: 1,
    source: 3,
    target: 46
  }, {
    value: 2,
    source: 3,
    target: 47
  }, {
    value: 5,
    source: 3,
    target: 48
  }, {
    value: 3,
    source: 3,
    target: 49
  }, {
    value: 4,
    source: 4,
    target: 5
  }, {
    value: 4,
    source: 4,
    target: 6
  }, {
    value: 4,
    source: 4,
    target: 7
  }, {
    value: 3,
    source: 4,
    target: 8
  }, {
    value: 3,
    source: 4,
    target: 9
  }, {
    value: 2,
    source: 4,
    target: 10
  }, {
    value: 4,
    source: 4,
    target: 11
  }, {
    value: 3,
    source: 4,
    target: 12
  }, {
    value: 3,
    source: 4,
    target: 13
  }, {
    value: 1,
    source: 4,
    target: 14
  }, {
    value: 5,
    source: 4,
    target: 15
  }, {
    value: 1,
    source: 4,
    target: 16
  }, {
    value: 2,
    source: 4,
    target: 17
  }, {
    value: 3,
    source: 4,
    target: 18
  }, {
    value: 2,
    source: 4,
    target: 19
  }, {
    value: 4,
    source: 4,
    target: 20
  }, {
    value: 2,
    source: 4,
    target: 21
  }, {
    value: 4,
    source: 4,
    target: 22
  }, {
    value: 5,
    source: 4,
    target: 23
  }, {
    value: 1,
    source: 4,
    target: 24
  }, {
    value: 1,
    source: 4,
    target: 25
  }, {
    value: 3,
    source: 4,
    target: 26
  }, {
    value: 2,
    source: 4,
    target: 27
  }, {
    value: 3,
    source: 4,
    target: 28
  }, {
    value: 3,
    source: 4,
    target: 29
  }, {
    value: 2,
    source: 4,
    target: 30
  }, {
    value: 2,
    source: 4,
    target: 31
  }, {
    value: 1,
    source: 4,
    target: 32
  }, {
    value: 2,
    source: 4,
    target: 33
  }, {
    value: 1,
    source: 4,
    target: 34
  }, {
    value: 1,
    source: 4,
    target: 35
  }, {
    value: 1,
    source: 4,
    target: 36
  }, {
    value: 5,
    source: 4,
    target: 37
  }, {
    value: 4,
    source: 4,
    target: 38
  }, {
    value: 3,
    source: 4,
    target: 39
  }, {
    value: 3,
    source: 4,
    target: 40
  }, {
    value: 5,
    source: 4,
    target: 41
  }, {
    value: 5,
    source: 4,
    target: 42
  }, {
    value: 4,
    source: 4,
    target: 43
  }, {
    value: 4,
    source: 4,
    target: 44
  }, {
    value: 5,
    source: 4,
    target: 45
  }, {
    value: 4,
    source: 4,
    target: 46
  }, {
    value: 3,
    source: 4,
    target: 47
  }, {
    value: 4,
    source: 4,
    target: 48
  }, {
    value: 1,
    source: 4,
    target: 49
  }, {
    value: 2,
    source: 5,
    target: 6
  }, {
    value: 2,
    source: 5,
    target: 7
  }, {
    value: 3,
    source: 5,
    target: 8
  }, {
    value: 2,
    source: 5,
    target: 9
  }, {
    value: 2,
    source: 5,
    target: 10
  }, {
    value: 1,
    source: 5,
    target: 11
  }, {
    value: 5,
    source: 5,
    target: 12
  }, {
    value: 2,
    source: 5,
    target: 13
  }, {
    value: 4,
    source: 5,
    target: 14
  }, {
    value: 4,
    source: 5,
    target: 15
  }, {
    value: 4,
    source: 5,
    target: 16
  }, {
    value: 2,
    source: 5,
    target: 17
  }, {
    value: 4,
    source: 5,
    target: 18
  }, {
    value: 2,
    source: 5,
    target: 19
  }, {
    value: 4,
    source: 5,
    target: 20
  }, {
    value: 3,
    source: 5,
    target: 21
  }, {
    value: 5,
    source: 5,
    target: 22
  }, {
    value: 3,
    source: 5,
    target: 23
  }, {
    value: 1,
    source: 5,
    target: 24
  }, {
    value: 3,
    source: 5,
    target: 25
  }, {
    value: 3,
    source: 5,
    target: 26
  }, {
    value: 1,
    source: 5,
    target: 27
  }, {
    value: 5,
    source: 5,
    target: 28
  }, {
    value: 4,
    source: 5,
    target: 29
  }, {
    value: 3,
    source: 5,
    target: 30
  }, {
    value: 4,
    source: 5,
    target: 31
  }, {
    value: 4,
    source: 5,
    target: 32
  }, {
    value: 4,
    source: 5,
    target: 33
  }, {
    value: 2,
    source: 5,
    target: 34
  }, {
    value: 2,
    source: 5,
    target: 35
  }, {
    value: 4,
    source: 5,
    target: 36
  }, {
    value: 4,
    source: 5,
    target: 37
  }, {
    value: 1,
    source: 5,
    target: 38
  }, {
    value: 3,
    source: 5,
    target: 39
  }, {
    value: 4,
    source: 5,
    target: 40
  }, {
    value: 4,
    source: 5,
    target: 41
  }, {
    value: 5,
    source: 5,
    target: 42
  }, {
    value: 4,
    source: 5,
    target: 43
  }, {
    value: 1,
    source: 5,
    target: 44
  }, {
    value: 4,
    source: 5,
    target: 45
  }, {
    value: 1,
    source: 5,
    target: 46
  }, {
    value: 5,
    source: 5,
    target: 47
  }, {
    value: 5,
    source: 5,
    target: 48
  }, {
    value: 4,
    source: 5,
    target: 49
  }, {
    value: 5,
    source: 6,
    target: 7
  }, {
    value: 2,
    source: 6,
    target: 8
  }, {
    value: 1,
    source: 6,
    target: 9
  }, {
    value: 4,
    source: 6,
    target: 10
  }, {
    value: 4,
    source: 6,
    target: 11
  }, {
    value: 3,
    source: 6,
    target: 12
  }, {
    value: 5,
    source: 6,
    target: 13
  }, {
    value: 4,
    source: 6,
    target: 14
  }, {
    value: 5,
    source: 6,
    target: 15
  }, {
    value: 2,
    source: 6,
    target: 16
  }, {
    value: 2,
    source: 6,
    target: 17
  }, {
    value: 2,
    source: 6,
    target: 18
  }, {
    value: 1,
    source: 6,
    target: 19
  }, {
    value: 5,
    source: 6,
    target: 20
  }, {
    value: 2,
    source: 6,
    target: 21
  }, {
    value: 4,
    source: 6,
    target: 22
  }, {
    value: 5,
    source: 6,
    target: 23
  }, {
    value: 1,
    source: 6,
    target: 24
  }, {
    value: 2,
    source: 6,
    target: 25
  }, {
    value: 3,
    source: 6,
    target: 26
  }, {
    value: 5,
    source: 6,
    target: 27
  }, {
    value: 4,
    source: 6,
    target: 28
  }, {
    value: 3,
    source: 6,
    target: 29
  }, {
    value: 3,
    source: 6,
    target: 30
  }, {
    value: 5,
    source: 6,
    target: 31
  }, {
    value: 2,
    source: 6,
    target: 32
  }, {
    value: 5,
    source: 6,
    target: 33
  }, {
    value: 1,
    source: 6,
    target: 34
  }, {
    value: 1,
    source: 6,
    target: 35
  }, {
    value: 5,
    source: 6,
    target: 36
  }, {
    value: 5,
    source: 6,
    target: 37
  }, {
    value: 4,
    source: 6,
    target: 38
  }, {
    value: 5,
    source: 6,
    target: 39
  }, {
    value: 5,
    source: 6,
    target: 40
  }, {
    value: 4,
    source: 6,
    target: 41
  }, {
    value: 4,
    source: 6,
    target: 42
  }, {
    value: 1,
    source: 6,
    target: 43
  }, {
    value: 4,
    source: 6,
    target: 44
  }, {
    value: 4,
    source: 6,
    target: 45
  }, {
    value: 5,
    source: 6,
    target: 46
  }, {
    value: 3,
    source: 6,
    target: 47
  }, {
    value: 5,
    source: 6,
    target: 48
  }, {
    value: 4,
    source: 6,
    target: 49
  }, {
    value: 2,
    source: 7,
    target: 8
  }, {
    value: 2,
    source: 7,
    target: 9
  }, {
    value: 3,
    source: 7,
    target: 10
  }, {
    value: 5,
    source: 7,
    target: 11
  }, {
    value: 2,
    source: 7,
    target: 12
  }, {
    value: 2,
    source: 7,
    target: 13
  }, {
    value: 3,
    source: 7,
    target: 14
  }, {
    value: 3,
    source: 7,
    target: 15
  }, {
    value: 1,
    source: 7,
    target: 16
  }, {
    value: 4,
    source: 7,
    target: 17
  }, {
    value: 2,
    source: 7,
    target: 18
  }, {
    value: 1,
    source: 7,
    target: 19
  }, {
    value: 3,
    source: 7,
    target: 20
  }, {
    value: 4,
    source: 7,
    target: 21
  }, {
    value: 4,
    source: 7,
    target: 22
  }, {
    value: 5,
    source: 7,
    target: 23
  }, {
    value: 4,
    source: 7,
    target: 24
  }, {
    value: 4,
    source: 7,
    target: 25
  }, {
    value: 4,
    source: 7,
    target: 26
  }, {
    value: 3,
    source: 7,
    target: 27
  }, {
    value: 4,
    source: 7,
    target: 28
  }, {
    value: 5,
    source: 7,
    target: 29
  }, {
    value: 4,
    source: 7,
    target: 30
  }, {
    value: 1,
    source: 7,
    target: 31
  }, {
    value: 4,
    source: 7,
    target: 32
  }, {
    value: 1,
    source: 7,
    target: 33
  }, {
    value: 2,
    source: 7,
    target: 34
  }, {
    value: 1,
    source: 7,
    target: 35
  }, {
    value: 2,
    source: 7,
    target: 36
  }, {
    value: 1,
    source: 7,
    target: 37
  }, {
    value: 5,
    source: 7,
    target: 38
  }, {
    value: 3,
    source: 7,
    target: 39
  }, {
    value: 5,
    source: 7,
    target: 40
  }, {
    value: 3,
    source: 7,
    target: 41
  }, {
    value: 2,
    source: 7,
    target: 42
  }, {
    value: 1,
    source: 7,
    target: 43
  }, {
    value: 3,
    source: 7,
    target: 44
  }, {
    value: 2,
    source: 7,
    target: 45
  }, {
    value: 1,
    source: 7,
    target: 46
  }, {
    value: 4,
    source: 7,
    target: 47
  }, {
    value: 4,
    source: 7,
    target: 48
  }, {
    value: 2,
    source: 7,
    target: 49
  }, {
    value: 5,
    source: 8,
    target: 9
  }, {
    value: 4,
    source: 8,
    target: 10
  }, {
    value: 5,
    source: 8,
    target: 11
  }, {
    value: 3,
    source: 8,
    target: 12
  }, {
    value: 4,
    source: 8,
    target: 13
  }, {
    value: 4,
    source: 8,
    target: 14
  }, {
    value: 3,
    source: 8,
    target: 15
  }, {
    value: 5,
    source: 8,
    target: 16
  }, {
    value: 3,
    source: 8,
    target: 17
  }, {
    value: 1,
    source: 8,
    target: 18
  }, {
    value: 5,
    source: 8,
    target: 19
  }, {
    value: 1,
    source: 8,
    target: 20
  }, {
    value: 1,
    source: 8,
    target: 21
  }, {
    value: 5,
    source: 8,
    target: 22
  }, {
    value: 4,
    source: 8,
    target: 23
  }, {
    value: 1,
    source: 8,
    target: 24
  }, {
    value: 1,
    source: 8,
    target: 25
  }, {
    value: 5,
    source: 8,
    target: 26
  }, {
    value: 2,
    source: 8,
    target: 27
  }, {
    value: 5,
    source: 8,
    target: 28
  }, {
    value: 5,
    source: 8,
    target: 29
  }, {
    value: 3,
    source: 8,
    target: 30
  }, {
    value: 2,
    source: 8,
    target: 31
  }, {
    value: 4,
    source: 8,
    target: 32
  }, {
    value: 4,
    source: 8,
    target: 33
  }, {
    value: 2,
    source: 8,
    target: 34
  }, {
    value: 2,
    source: 8,
    target: 35
  }, {
    value: 2,
    source: 8,
    target: 36
  }, {
    value: 1,
    source: 8,
    target: 37
  }, {
    value: 3,
    source: 8,
    target: 38
  }, {
    value: 5,
    source: 8,
    target: 39
  }, {
    value: 4,
    source: 8,
    target: 40
  }, {
    value: 5,
    source: 8,
    target: 41
  }, {
    value: 2,
    source: 8,
    target: 42
  }, {
    value: 3,
    source: 8,
    target: 43
  }, {
    value: 5,
    source: 8,
    target: 44
  }, {
    value: 3,
    source: 8,
    target: 45
  }, {
    value: 1,
    source: 8,
    target: 46
  }, {
    value: 1,
    source: 8,
    target: 47
  }, {
    value: 5,
    source: 8,
    target: 48
  }, {
    value: 3,
    source: 8,
    target: 49
  }, {
    value: 2,
    source: 9,
    target: 10
  }, {
    value: 3,
    source: 9,
    target: 11
  }, {
    value: 1,
    source: 9,
    target: 12
  }, {
    value: 3,
    source: 9,
    target: 13
  }, {
    value: 3,
    source: 9,
    target: 14
  }, {
    value: 4,
    source: 9,
    target: 15
  }, {
    value: 3,
    source: 9,
    target: 16
  }, {
    value: 5,
    source: 9,
    target: 17
  }, {
    value: 1,
    source: 9,
    target: 18
  }, {
    value: 1,
    source: 9,
    target: 19
  }, {
    value: 5,
    source: 9,
    target: 20
  }, {
    value: 1,
    source: 9,
    target: 21
  }, {
    value: 2,
    source: 9,
    target: 22
  }, {
    value: 5,
    source: 9,
    target: 23
  }, {
    value: 5,
    source: 9,
    target: 24
  }, {
    value: 1,
    source: 9,
    target: 25
  }, {
    value: 3,
    source: 9,
    target: 26
  }, {
    value: 5,
    source: 9,
    target: 27
  }, {
    value: 1,
    source: 9,
    target: 28
  }, {
    value: 4,
    source: 9,
    target: 29
  }, {
    value: 3,
    source: 9,
    target: 30
  }, {
    value: 1,
    source: 9,
    target: 31
  }, {
    value: 2,
    source: 9,
    target: 32
  }, {
    value: 5,
    source: 9,
    target: 33
  }, {
    value: 1,
    source: 9,
    target: 34
  }, {
    value: 3,
    source: 9,
    target: 35
  }, {
    value: 4,
    source: 9,
    target: 36
  }, {
    value: 1,
    source: 9,
    target: 37
  }, {
    value: 5,
    source: 9,
    target: 38
  }, {
    value: 4,
    source: 9,
    target: 39
  }, {
    value: 5,
    source: 9,
    target: 40
  }, {
    value: 3,
    source: 9,
    target: 41
  }, {
    value: 2,
    source: 9,
    target: 42
  }, {
    value: 2,
    source: 9,
    target: 43
  }, {
    value: 3,
    source: 9,
    target: 44
  }, {
    value: 5,
    source: 9,
    target: 45
  }, {
    value: 3,
    source: 9,
    target: 46
  }, {
    value: 5,
    source: 9,
    target: 47
  }, {
    value: 1,
    source: 9,
    target: 48
  }, {
    value: 5,
    source: 9,
    target: 49
  }, {
    value: 2,
    source: 10,
    target: 11
  }, {
    value: 4,
    source: 10,
    target: 12
  }, {
    value: 4,
    source: 10,
    target: 13
  }, {
    value: 4,
    source: 10,
    target: 14
  }, {
    value: 2,
    source: 10,
    target: 15
  }, {
    value: 5,
    source: 10,
    target: 16
  }, {
    value: 1,
    source: 10,
    target: 17
  }, {
    value: 3,
    source: 10,
    target: 18
  }, {
    value: 3,
    source: 10,
    target: 19
  }, {
    value: 4,
    source: 10,
    target: 20
  }, {
    value: 4,
    source: 10,
    target: 21
  }, {
    value: 1,
    source: 10,
    target: 22
  }, {
    value: 3,
    source: 10,
    target: 23
  }, {
    value: 1,
    source: 10,
    target: 24
  }, {
    value: 5,
    source: 10,
    target: 25
  }, {
    value: 1,
    source: 10,
    target: 26
  }, {
    value: 2,
    source: 10,
    target: 27
  }, {
    value: 2,
    source: 10,
    target: 28
  }, {
    value: 4,
    source: 10,
    target: 29
  }, {
    value: 3,
    source: 10,
    target: 30
  }, {
    value: 4,
    source: 10,
    target: 31
  }, {
    value: 4,
    source: 10,
    target: 32
  }, {
    value: 3,
    source: 10,
    target: 33
  }, {
    value: 1,
    source: 10,
    target: 34
  }, {
    value: 3,
    source: 10,
    target: 35
  }, {
    value: 2,
    source: 10,
    target: 36
  }, {
    value: 4,
    source: 10,
    target: 37
  }, {
    value: 2,
    source: 10,
    target: 38
  }, {
    value: 4,
    source: 10,
    target: 39
  }, {
    value: 1,
    source: 10,
    target: 40
  }, {
    value: 1,
    source: 10,
    target: 41
  }, {
    value: 4,
    source: 10,
    target: 42
  }, {
    value: 3,
    source: 10,
    target: 43
  }, {
    value: 2,
    source: 10,
    target: 44
  }, {
    value: 4,
    source: 10,
    target: 45
  }, {
    value: 1,
    source: 10,
    target: 46
  }, {
    value: 1,
    source: 10,
    target: 47
  }, {
    value: 5,
    source: 10,
    target: 48
  }, {
    value: 1,
    source: 10,
    target: 49
  }, {
    value: 5,
    source: 11,
    target: 12
  }, {
    value: 3,
    source: 11,
    target: 13
  }, {
    value: 3,
    source: 11,
    target: 14
  }, {
    value: 5,
    source: 11,
    target: 15
  }, {
    value: 2,
    source: 11,
    target: 16
  }, {
    value: 2,
    source: 11,
    target: 17
  }, {
    value: 1,
    source: 11,
    target: 18
  }, {
    value: 2,
    source: 11,
    target: 19
  }, {
    value: 3,
    source: 11,
    target: 20
  }, {
    value: 4,
    source: 11,
    target: 21
  }, {
    value: 1,
    source: 11,
    target: 22
  }, {
    value: 2,
    source: 11,
    target: 23
  }, {
    value: 3,
    source: 11,
    target: 24
  }, {
    value: 3,
    source: 11,
    target: 25
  }, {
    value: 1,
    source: 11,
    target: 26
  }, {
    value: 1,
    source: 11,
    target: 27
  }, {
    value: 5,
    source: 11,
    target: 28
  }, {
    value: 5,
    source: 11,
    target: 29
  }, {
    value: 1,
    source: 11,
    target: 30
  }, {
    value: 4,
    source: 11,
    target: 31
  }, {
    value: 3,
    source: 11,
    target: 32
  }, {
    value: 1,
    source: 11,
    target: 33
  }, {
    value: 4,
    source: 11,
    target: 34
  }, {
    value: 1,
    source: 11,
    target: 35
  }, {
    value: 2,
    source: 11,
    target: 36
  }, {
    value: 3,
    source: 11,
    target: 37
  }, {
    value: 5,
    source: 11,
    target: 38
  }, {
    value: 3,
    source: 11,
    target: 39
  }, {
    value: 1,
    source: 11,
    target: 40
  }, {
    value: 4,
    source: 11,
    target: 41
  }, {
    value: 2,
    source: 11,
    target: 42
  }, {
    value: 5,
    source: 11,
    target: 43
  }, {
    value: 3,
    source: 11,
    target: 44
  }, {
    value: 2,
    source: 11,
    target: 45
  }, {
    value: 2,
    source: 11,
    target: 46
  }, {
    value: 4,
    source: 11,
    target: 47
  }, {
    value: 5,
    source: 11,
    target: 48
  }, {
    value: 4,
    source: 11,
    target: 49
  }, {
    value: 1,
    source: 12,
    target: 13
  }, {
    value: 4,
    source: 12,
    target: 14
  }, {
    value: 5,
    source: 12,
    target: 15
  }, {
    value: 3,
    source: 12,
    target: 16
  }, {
    value: 4,
    source: 12,
    target: 17
  }, {
    value: 5,
    source: 12,
    target: 18
  }, {
    value: 1,
    source: 12,
    target: 19
  }, {
    value: 3,
    source: 12,
    target: 20
  }, {
    value: 3,
    source: 12,
    target: 21
  }, {
    value: 4,
    source: 12,
    target: 22
  }, {
    value: 1,
    source: 12,
    target: 23
  }, {
    value: 4,
    source: 12,
    target: 24
  }, {
    value: 5,
    source: 12,
    target: 25
  }, {
    value: 5,
    source: 12,
    target: 26
  }, {
    value: 3,
    source: 12,
    target: 27
  }, {
    value: 5,
    source: 12,
    target: 28
  }, {
    value: 4,
    source: 12,
    target: 29
  }, {
    value: 3,
    source: 12,
    target: 30
  }, {
    value: 5,
    source: 12,
    target: 31
  }, {
    value: 2,
    source: 12,
    target: 32
  }, {
    value: 5,
    source: 12,
    target: 33
  }, {
    value: 5,
    source: 12,
    target: 34
  }, {
    value: 2,
    source: 12,
    target: 35
  }, {
    value: 1,
    source: 12,
    target: 36
  }, {
    value: 4,
    source: 12,
    target: 37
  }, {
    value: 4,
    source: 12,
    target: 38
  }, {
    value: 3,
    source: 12,
    target: 39
  }, {
    value: 1,
    source: 12,
    target: 40
  }, {
    value: 3,
    source: 12,
    target: 41
  }, {
    value: 5,
    source: 12,
    target: 42
  }, {
    value: 3,
    source: 12,
    target: 43
  }, {
    value: 5,
    source: 12,
    target: 44
  }, {
    value: 5,
    source: 12,
    target: 45
  }, {
    value: 2,
    source: 12,
    target: 46
  }, {
    value: 2,
    source: 12,
    target: 47
  }, {
    value: 5,
    source: 12,
    target: 48
  }, {
    value: 4,
    source: 12,
    target: 49
  }, {
    value: 1,
    source: 13,
    target: 14
  }, {
    value: 2,
    source: 13,
    target: 15
  }, {
    value: 1,
    source: 13,
    target: 16
  }, {
    value: 5,
    source: 13,
    target: 17
  }, {
    value: 5,
    source: 13,
    target: 18
  }, {
    value: 4,
    source: 13,
    target: 19
  }, {
    value: 3,
    source: 13,
    target: 20
  }, {
    value: 1,
    source: 13,
    target: 21
  }, {
    value: 5,
    source: 13,
    target: 22
  }, {
    value: 1,
    source: 13,
    target: 23
  }, {
    value: 4,
    source: 13,
    target: 24
  }, {
    value: 2,
    source: 13,
    target: 25
  }, {
    value: 3,
    source: 13,
    target: 26
  }, {
    value: 2,
    source: 13,
    target: 27
  }, {
    value: 5,
    source: 13,
    target: 28
  }, {
    value: 3,
    source: 13,
    target: 29
  }, {
    value: 2,
    source: 13,
    target: 30
  }, {
    value: 1,
    source: 13,
    target: 31
  }, {
    value: 1,
    source: 13,
    target: 32
  }, {
    value: 5,
    source: 13,
    target: 33
  }, {
    value: 5,
    source: 13,
    target: 34
  }, {
    value: 4,
    source: 13,
    target: 35
  }, {
    value: 3,
    source: 13,
    target: 36
  }, {
    value: 2,
    source: 13,
    target: 37
  }, {
    value: 1,
    source: 13,
    target: 38
  }, {
    value: 2,
    source: 13,
    target: 39
  }, {
    value: 1,
    source: 13,
    target: 40
  }, {
    value: 4,
    source: 13,
    target: 41
  }, {
    value: 4,
    source: 13,
    target: 42
  }, {
    value: 3,
    source: 13,
    target: 43
  }, {
    value: 2,
    source: 13,
    target: 44
  }, {
    value: 3,
    source: 13,
    target: 45
  }, {
    value: 5,
    source: 13,
    target: 46
  }, {
    value: 5,
    source: 13,
    target: 47
  }, {
    value: 3,
    source: 13,
    target: 48
  }, {
    value: 3,
    source: 13,
    target: 49
  }, {
    value: 2,
    source: 14,
    target: 15
  }, {
    value: 3,
    source: 14,
    target: 16
  }, {
    value: 2,
    source: 14,
    target: 17
  }, {
    value: 3,
    source: 14,
    target: 18
  }, {
    value: 1,
    source: 14,
    target: 19
  }, {
    value: 3,
    source: 14,
    target: 20
  }, {
    value: 5,
    source: 14,
    target: 21
  }, {
    value: 2,
    source: 14,
    target: 22
  }, {
    value: 5,
    source: 14,
    target: 23
  }, {
    value: 5,
    source: 14,
    target: 24
  }, {
    value: 4,
    source: 14,
    target: 25
  }, {
    value: 5,
    source: 14,
    target: 26
  }, {
    value: 2,
    source: 14,
    target: 27
  }, {
    value: 3,
    source: 14,
    target: 28
  }, {
    value: 2,
    source: 14,
    target: 29
  }, {
    value: 4,
    source: 14,
    target: 30
  }, {
    value: 1,
    source: 14,
    target: 31
  }, {
    value: 4,
    source: 14,
    target: 32
  }, {
    value: 1,
    source: 14,
    target: 33
  }, {
    value: 4,
    source: 14,
    target: 34
  }, {
    value: 5,
    source: 14,
    target: 35
  }, {
    value: 5,
    source: 14,
    target: 36
  }, {
    value: 1,
    source: 14,
    target: 37
  }, {
    value: 1,
    source: 14,
    target: 38
  }, {
    value: 5,
    source: 14,
    target: 39
  }, {
    value: 5,
    source: 14,
    target: 40
  }, {
    value: 5,
    source: 14,
    target: 41
  }, {
    value: 2,
    source: 14,
    target: 42
  }, {
    value: 1,
    source: 14,
    target: 43
  }, {
    value: 4,
    source: 14,
    target: 44
  }, {
    value: 2,
    source: 14,
    target: 45
  }, {
    value: 4,
    source: 14,
    target: 46
  }, {
    value: 1,
    source: 14,
    target: 47
  }, {
    value: 5,
    source: 14,
    target: 48
  }, {
    value: 1,
    source: 14,
    target: 49
  }, {
    value: 5,
    source: 15,
    target: 16
  }, {
    value: 5,
    source: 15,
    target: 17
  }, {
    value: 2,
    source: 15,
    target: 18
  }, {
    value: 3,
    source: 15,
    target: 19
  }, {
    value: 5,
    source: 15,
    target: 20
  }, {
    value: 2,
    source: 15,
    target: 21
  }, {
    value: 4,
    source: 15,
    target: 22
  }, {
    value: 1,
    source: 15,
    target: 23
  }, {
    value: 1,
    source: 15,
    target: 24
  }, {
    value: 4,
    source: 15,
    target: 25
  }, {
    value: 3,
    source: 15,
    target: 26
  }, {
    value: 4,
    source: 15,
    target: 27
  }, {
    value: 5,
    source: 15,
    target: 28
  }, {
    value: 4,
    source: 15,
    target: 29
  }, {
    value: 1,
    source: 15,
    target: 30
  }, {
    value: 5,
    source: 15,
    target: 31
  }, {
    value: 3,
    source: 15,
    target: 32
  }, {
    value: 1,
    source: 15,
    target: 33
  }, {
    value: 3,
    source: 15,
    target: 34
  }, {
    value: 4,
    source: 15,
    target: 35
  }, {
    value: 2,
    source: 15,
    target: 36
  }, {
    value: 4,
    source: 15,
    target: 37
  }, {
    value: 1,
    source: 15,
    target: 38
  }, {
    value: 5,
    source: 15,
    target: 39
  }, {
    value: 2,
    source: 15,
    target: 40
  }, {
    value: 4,
    source: 15,
    target: 41
  }, {
    value: 1,
    source: 15,
    target: 42
  }, {
    value: 1,
    source: 15,
    target: 43
  }, {
    value: 1,
    source: 15,
    target: 44
  }, {
    value: 3,
    source: 15,
    target: 45
  }, {
    value: 3,
    source: 15,
    target: 46
  }, {
    value: 5,
    source: 15,
    target: 47
  }, {
    value: 4,
    source: 15,
    target: 48
  }, {
    value: 4,
    source: 15,
    target: 49
  }, {
    value: 4,
    source: 16,
    target: 17
  }, {
    value: 1,
    source: 16,
    target: 18
  }, {
    value: 4,
    source: 16,
    target: 19
  }, {
    value: 2,
    source: 16,
    target: 20
  }, {
    value: 4,
    source: 16,
    target: 21
  }, {
    value: 3,
    source: 16,
    target: 22
  }, {
    value: 1,
    source: 16,
    target: 23
  }, {
    value: 3,
    source: 16,
    target: 24
  }, {
    value: 2,
    source: 16,
    target: 25
  }, {
    value: 5,
    source: 16,
    target: 26
  }, {
    value: 3,
    source: 16,
    target: 27
  }, {
    value: 1,
    source: 16,
    target: 28
  }, {
    value: 1,
    source: 16,
    target: 29
  }, {
    value: 1,
    source: 16,
    target: 30
  }, {
    value: 2,
    source: 16,
    target: 31
  }, {
    value: 2,
    source: 16,
    target: 32
  }, {
    value: 2,
    source: 16,
    target: 33
  }, {
    value: 4,
    source: 16,
    target: 34
  }, {
    value: 3,
    source: 16,
    target: 35
  }, {
    value: 5,
    source: 16,
    target: 36
  }, {
    value: 1,
    source: 16,
    target: 37
  }, {
    value: 4,
    source: 16,
    target: 38
  }, {
    value: 4,
    source: 16,
    target: 39
  }, {
    value: 1,
    source: 16,
    target: 40
  }, {
    value: 4,
    source: 16,
    target: 41
  }, {
    value: 5,
    source: 16,
    target: 42
  }, {
    value: 1,
    source: 16,
    target: 43
  }, {
    value: 5,
    source: 16,
    target: 44
  }, {
    value: 4,
    source: 16,
    target: 45
  }, {
    value: 5,
    source: 16,
    target: 46
  }, {
    value: 4,
    source: 16,
    target: 47
  }, {
    value: 5,
    source: 16,
    target: 48
  }, {
    value: 2,
    source: 16,
    target: 49
  }, {
    value: 3,
    source: 17,
    target: 18
  }, {
    value: 5,
    source: 17,
    target: 19
  }, {
    value: 3,
    source: 17,
    target: 20
  }, {
    value: 4,
    source: 17,
    target: 21
  }, {
    value: 4,
    source: 17,
    target: 22
  }, {
    value: 4,
    source: 17,
    target: 23
  }, {
    value: 4,
    source: 17,
    target: 24
  }, {
    value: 1,
    source: 17,
    target: 25
  }, {
    value: 2,
    source: 17,
    target: 26
  }, {
    value: 2,
    source: 17,
    target: 27
  }, {
    value: 5,
    source: 17,
    target: 28
  }, {
    value: 5,
    source: 17,
    target: 29
  }, {
    value: 2,
    source: 17,
    target: 30
  }, {
    value: 5,
    source: 17,
    target: 31
  }, {
    value: 2,
    source: 17,
    target: 32
  }, {
    value: 4,
    source: 17,
    target: 33
  }, {
    value: 4,
    source: 17,
    target: 34
  }, {
    value: 4,
    source: 17,
    target: 35
  }, {
    value: 4,
    source: 17,
    target: 36
  }, {
    value: 1,
    source: 17,
    target: 37
  }, {
    value: 4,
    source: 17,
    target: 38
  }, {
    value: 5,
    source: 17,
    target: 39
  }, {
    value: 1,
    source: 17,
    target: 40
  }, {
    value: 5,
    source: 17,
    target: 41
  }, {
    value: 2,
    source: 17,
    target: 42
  }, {
    value: 2,
    source: 17,
    target: 43
  }, {
    value: 3,
    source: 17,
    target: 44
  }, {
    value: 3,
    source: 17,
    target: 45
  }, {
    value: 2,
    source: 17,
    target: 46
  }, {
    value: 2,
    source: 17,
    target: 47
  }, {
    value: 2,
    source: 17,
    target: 48
  }, {
    value: 4,
    source: 17,
    target: 49
  }, {
    value: 1,
    source: 18,
    target: 19
  }, {
    value: 4,
    source: 18,
    target: 20
  }, {
    value: 2,
    source: 18,
    target: 21
  }, {
    value: 3,
    source: 18,
    target: 22
  }, {
    value: 1,
    source: 18,
    target: 23
  }, {
    value: 1,
    source: 18,
    target: 24
  }, {
    value: 5,
    source: 18,
    target: 25
  }, {
    value: 2,
    source: 18,
    target: 26
  }, {
    value: 1,
    source: 18,
    target: 27
  }, {
    value: 3,
    source: 18,
    target: 28
  }, {
    value: 5,
    source: 18,
    target: 29
  }, {
    value: 1,
    source: 18,
    target: 30
  }, {
    value: 3,
    source: 18,
    target: 31
  }, {
    value: 3,
    source: 18,
    target: 32
  }, {
    value: 5,
    source: 18,
    target: 33
  }, {
    value: 5,
    source: 18,
    target: 34
  }, {
    value: 1,
    source: 18,
    target: 35
  }, {
    value: 1,
    source: 18,
    target: 36
  }, {
    value: 4,
    source: 18,
    target: 37
  }, {
    value: 5,
    source: 18,
    target: 38
  }, {
    value: 4,
    source: 18,
    target: 39
  }, {
    value: 2,
    source: 18,
    target: 40
  }, {
    value: 2,
    source: 18,
    target: 41
  }, {
    value: 2,
    source: 18,
    target: 42
  }, {
    value: 1,
    source: 18,
    target: 43
  }, {
    value: 1,
    source: 18,
    target: 44
  }, {
    value: 5,
    source: 18,
    target: 45
  }, {
    value: 3,
    source: 18,
    target: 46
  }, {
    value: 3,
    source: 18,
    target: 47
  }, {
    value: 5,
    source: 18,
    target: 48
  }, {
    value: 2,
    source: 18,
    target: 49
  }, {
    value: 5,
    source: 19,
    target: 20
  }, {
    value: 5,
    source: 19,
    target: 21
  }, {
    value: 2,
    source: 19,
    target: 22
  }, {
    value: 5,
    source: 19,
    target: 23
  }, {
    value: 2,
    source: 19,
    target: 24
  }, {
    value: 5,
    source: 19,
    target: 25
  }, {
    value: 2,
    source: 19,
    target: 26
  }, {
    value: 5,
    source: 19,
    target: 27
  }, {
    value: 5,
    source: 19,
    target: 28
  }, {
    value: 3,
    source: 19,
    target: 29
  }, {
    value: 3,
    source: 19,
    target: 30
  }, {
    value: 5,
    source: 19,
    target: 31
  }, {
    value: 4,
    source: 19,
    target: 32
  }, {
    value: 3,
    source: 19,
    target: 33
  }, {
    value: 3,
    source: 19,
    target: 34
  }, {
    value: 4,
    source: 19,
    target: 35
  }, {
    value: 4,
    source: 19,
    target: 36
  }, {
    value: 2,
    source: 19,
    target: 37
  }, {
    value: 1,
    source: 19,
    target: 38
  }, {
    value: 2,
    source: 19,
    target: 39
  }, {
    value: 1,
    source: 19,
    target: 40
  }, {
    value: 5,
    source: 19,
    target: 41
  }, {
    value: 1,
    source: 19,
    target: 42
  }, {
    value: 5,
    source: 19,
    target: 43
  }, {
    value: 4,
    source: 19,
    target: 44
  }, {
    value: 1,
    source: 19,
    target: 45
  }, {
    value: 1,
    source: 19,
    target: 46
  }, {
    value: 4,
    source: 19,
    target: 47
  }, {
    value: 5,
    source: 19,
    target: 48
  }, {
    value: 4,
    source: 19,
    target: 49
  }, {
    value: 4,
    source: 20,
    target: 21
  }, {
    value: 3,
    source: 20,
    target: 22
  }, {
    value: 1,
    source: 20,
    target: 23
  }, {
    value: 1,
    source: 20,
    target: 24
  }, {
    value: 5,
    source: 20,
    target: 25
  }, {
    value: 5,
    source: 20,
    target: 26
  }, {
    value: 4,
    source: 20,
    target: 27
  }, {
    value: 5,
    source: 20,
    target: 28
  }, {
    value: 1,
    source: 20,
    target: 29
  }, {
    value: 5,
    source: 20,
    target: 30
  }, {
    value: 3,
    source: 20,
    target: 31
  }, {
    value: 2,
    source: 20,
    target: 32
  }, {
    value: 3,
    source: 20,
    target: 33
  }, {
    value: 1,
    source: 20,
    target: 34
  }, {
    value: 4,
    source: 20,
    target: 35
  }, {
    value: 1,
    source: 20,
    target: 36
  }, {
    value: 2,
    source: 20,
    target: 37
  }, {
    value: 2,
    source: 20,
    target: 38
  }, {
    value: 5,
    source: 20,
    target: 39
  }, {
    value: 5,
    source: 20,
    target: 40
  }, {
    value: 2,
    source: 20,
    target: 41
  }, {
    value: 5,
    source: 20,
    target: 42
  }, {
    value: 3,
    source: 20,
    target: 43
  }, {
    value: 4,
    source: 20,
    target: 44
  }, {
    value: 4,
    source: 20,
    target: 45
  }, {
    value: 4,
    source: 20,
    target: 46
  }, {
    value: 4,
    source: 20,
    target: 47
  }, {
    value: 3,
    source: 20,
    target: 48
  }, {
    value: 4,
    source: 20,
    target: 49
  }, {
    value: 1,
    source: 21,
    target: 22
  }, {
    value: 5,
    source: 21,
    target: 23
  }, {
    value: 3,
    source: 21,
    target: 24
  }, {
    value: 3,
    source: 21,
    target: 25
  }, {
    value: 4,
    source: 21,
    target: 26
  }, {
    value: 2,
    source: 21,
    target: 27
  }, {
    value: 1,
    source: 21,
    target: 28
  }, {
    value: 5,
    source: 21,
    target: 29
  }, {
    value: 4,
    source: 21,
    target: 30
  }, {
    value: 5,
    source: 21,
    target: 31
  }, {
    value: 5,
    source: 21,
    target: 32
  }, {
    value: 5,
    source: 21,
    target: 33
  }, {
    value: 4,
    source: 21,
    target: 34
  }, {
    value: 4,
    source: 21,
    target: 35
  }, {
    value: 5,
    source: 21,
    target: 36
  }, {
    value: 5,
    source: 21,
    target: 37
  }, {
    value: 3,
    source: 21,
    target: 38
  }, {
    value: 4,
    source: 21,
    target: 39
  }, {
    value: 2,
    source: 21,
    target: 40
  }, {
    value: 4,
    source: 21,
    target: 41
  }, {
    value: 5,
    source: 21,
    target: 42
  }, {
    value: 5,
    source: 21,
    target: 43
  }, {
    value: 4,
    source: 21,
    target: 44
  }, {
    value: 2,
    source: 21,
    target: 45
  }, {
    value: 3,
    source: 21,
    target: 46
  }, {
    value: 5,
    source: 21,
    target: 47
  }, {
    value: 1,
    source: 21,
    target: 48
  }, {
    value: 1,
    source: 21,
    target: 49
  }, {
    value: 2,
    source: 22,
    target: 23
  }, {
    value: 5,
    source: 22,
    target: 24
  }, {
    value: 1,
    source: 22,
    target: 25
  }, {
    value: 5,
    source: 22,
    target: 26
  }, {
    value: 5,
    source: 22,
    target: 27
  }, {
    value: 1,
    source: 22,
    target: 28
  }, {
    value: 2,
    source: 22,
    target: 29
  }, {
    value: 5,
    source: 22,
    target: 30
  }, {
    value: 4,
    source: 22,
    target: 31
  }, {
    value: 4,
    source: 22,
    target: 32
  }, {
    value: 5,
    source: 22,
    target: 33
  }, {
    value: 3,
    source: 22,
    target: 34
  }, {
    value: 4,
    source: 22,
    target: 35
  }, {
    value: 3,
    source: 22,
    target: 36
  }, {
    value: 2,
    source: 22,
    target: 37
  }, {
    value: 1,
    source: 22,
    target: 38
  }, {
    value: 1,
    source: 22,
    target: 39
  }, {
    value: 5,
    source: 22,
    target: 40
  }, {
    value: 5,
    source: 22,
    target: 41
  }, {
    value: 2,
    source: 22,
    target: 42
  }, {
    value: 2,
    source: 22,
    target: 43
  }, {
    value: 3,
    source: 22,
    target: 44
  }, {
    value: 4,
    source: 22,
    target: 45
  }, {
    value: 1,
    source: 22,
    target: 46
  }, {
    value: 4,
    source: 22,
    target: 47
  }, {
    value: 2,
    source: 22,
    target: 48
  }, {
    value: 1,
    source: 22,
    target: 49
  }, {
    value: 2,
    source: 23,
    target: 24
  }, {
    value: 4,
    source: 23,
    target: 25
  }, {
    value: 4,
    source: 23,
    target: 26
  }, {
    value: 1,
    source: 23,
    target: 27
  }, {
    value: 4,
    source: 23,
    target: 28
  }, {
    value: 2,
    source: 23,
    target: 29
  }, {
    value: 5,
    source: 23,
    target: 30
  }, {
    value: 1,
    source: 23,
    target: 31
  }, {
    value: 3,
    source: 23,
    target: 32
  }, {
    value: 3,
    source: 23,
    target: 33
  }, {
    value: 5,
    source: 23,
    target: 34
  }, {
    value: 4,
    source: 23,
    target: 35
  }, {
    value: 1,
    source: 23,
    target: 36
  }, {
    value: 1,
    source: 23,
    target: 37
  }, {
    value: 5,
    source: 23,
    target: 38
  }, {
    value: 3,
    source: 23,
    target: 39
  }, {
    value: 1,
    source: 23,
    target: 40
  }, {
    value: 5,
    source: 23,
    target: 41
  }, {
    value: 4,
    source: 23,
    target: 42
  }, {
    value: 4,
    source: 23,
    target: 43
  }, {
    value: 3,
    source: 23,
    target: 44
  }, {
    value: 1,
    source: 23,
    target: 45
  }, {
    value: 4,
    source: 23,
    target: 46
  }, {
    value: 3,
    source: 23,
    target: 47
  }, {
    value: 5,
    source: 23,
    target: 48
  }, {
    value: 1,
    source: 23,
    target: 49
  }, {
    value: 1,
    source: 24,
    target: 25
  }, {
    value: 5,
    source: 24,
    target: 26
  }, {
    value: 2,
    source: 24,
    target: 27
  }, {
    value: 3,
    source: 24,
    target: 28
  }, {
    value: 3,
    source: 24,
    target: 29
  }, {
    value: 1,
    source: 24,
    target: 30
  }, {
    value: 2,
    source: 24,
    target: 31
  }, {
    value: 3,
    source: 24,
    target: 32
  }, {
    value: 4,
    source: 24,
    target: 33
  }, {
    value: 3,
    source: 24,
    target: 34
  }, {
    value: 1,
    source: 24,
    target: 35
  }, {
    value: 4,
    source: 24,
    target: 36
  }, {
    value: 2,
    source: 24,
    target: 37
  }, {
    value: 2,
    source: 24,
    target: 38
  }, {
    value: 3,
    source: 24,
    target: 39
  }, {
    value: 2,
    source: 24,
    target: 40
  }, {
    value: 2,
    source: 24,
    target: 41
  }, {
    value: 1,
    source: 24,
    target: 42
  }, {
    value: 3,
    source: 24,
    target: 43
  }, {
    value: 2,
    source: 24,
    target: 44
  }, {
    value: 1,
    source: 24,
    target: 45
  }, {
    value: 1,
    source: 24,
    target: 46
  }, {
    value: 1,
    source: 24,
    target: 47
  }, {
    value: 5,
    source: 24,
    target: 48
  }, {
    value: 5,
    source: 24,
    target: 49
  }, {
    value: 2,
    source: 25,
    target: 26
  }, {
    value: 4,
    source: 25,
    target: 27
  }, {
    value: 2,
    source: 25,
    target: 28
  }, {
    value: 4,
    source: 25,
    target: 29
  }, {
    value: 5,
    source: 25,
    target: 30
  }, {
    value: 5,
    source: 25,
    target: 31
  }, {
    value: 3,
    source: 25,
    target: 32
  }, {
    value: 5,
    source: 25,
    target: 33
  }, {
    value: 4,
    source: 25,
    target: 34
  }, {
    value: 2,
    source: 25,
    target: 35
  }, {
    value: 1,
    source: 25,
    target: 36
  }, {
    value: 5,
    source: 25,
    target: 37
  }, {
    value: 3,
    source: 25,
    target: 38
  }, {
    value: 1,
    source: 25,
    target: 39
  }, {
    value: 4,
    source: 25,
    target: 40
  }, {
    value: 4,
    source: 25,
    target: 41
  }, {
    value: 4,
    source: 25,
    target: 42
  }, {
    value: 2,
    source: 25,
    target: 43
  }, {
    value: 2,
    source: 25,
    target: 44
  }, {
    value: 1,
    source: 25,
    target: 45
  }, {
    value: 1,
    source: 25,
    target: 46
  }, {
    value: 5,
    source: 25,
    target: 47
  }, {
    value: 5,
    source: 25,
    target: 48
  }, {
    value: 1,
    source: 25,
    target: 49
  }, {
    value: 1,
    source: 26,
    target: 27
  }, {
    value: 5,
    source: 26,
    target: 28
  }, {
    value: 2,
    source: 26,
    target: 29
  }, {
    value: 5,
    source: 26,
    target: 30
  }, {
    value: 2,
    source: 26,
    target: 31
  }, {
    value: 3,
    source: 26,
    target: 32
  }, {
    value: 2,
    source: 26,
    target: 33
  }, {
    value: 2,
    source: 26,
    target: 34
  }, {
    value: 4,
    source: 26,
    target: 35
  }, {
    value: 1,
    source: 26,
    target: 36
  }, {
    value: 4,
    source: 26,
    target: 37
  }, {
    value: 3,
    source: 26,
    target: 38
  }, {
    value: 4,
    source: 26,
    target: 39
  }, {
    value: 1,
    source: 26,
    target: 40
  }, {
    value: 4,
    source: 26,
    target: 41
  }, {
    value: 4,
    source: 26,
    target: 42
  }, {
    value: 3,
    source: 26,
    target: 43
  }, {
    value: 5,
    source: 26,
    target: 44
  }, {
    value: 1,
    source: 26,
    target: 45
  }, {
    value: 3,
    source: 26,
    target: 46
  }, {
    value: 3,
    source: 26,
    target: 47
  }, {
    value: 2,
    source: 26,
    target: 48
  }, {
    value: 1,
    source: 26,
    target: 49
  }, {
    value: 2,
    source: 27,
    target: 28
  }, {
    value: 5,
    source: 27,
    target: 29
  }, {
    value: 2,
    source: 27,
    target: 30
  }, {
    value: 3,
    source: 27,
    target: 31
  }, {
    value: 5,
    source: 27,
    target: 32
  }, {
    value: 3,
    source: 27,
    target: 33
  }, {
    value: 2,
    source: 27,
    target: 34
  }, {
    value: 1,
    source: 27,
    target: 35
  }, {
    value: 3,
    source: 27,
    target: 36
  }, {
    value: 1,
    source: 27,
    target: 37
  }, {
    value: 2,
    source: 27,
    target: 38
  }, {
    value: 2,
    source: 27,
    target: 39
  }, {
    value: 3,
    source: 27,
    target: 40
  }, {
    value: 4,
    source: 27,
    target: 41
  }, {
    value: 5,
    source: 27,
    target: 42
  }, {
    value: 3,
    source: 27,
    target: 43
  }, {
    value: 2,
    source: 27,
    target: 44
  }, {
    value: 1,
    source: 27,
    target: 45
  }, {
    value: 1,
    source: 27,
    target: 46
  }, {
    value: 3,
    source: 27,
    target: 47
  }, {
    value: 4,
    source: 27,
    target: 48
  }, {
    value: 5,
    source: 27,
    target: 49
  }, {
    value: 2,
    source: 28,
    target: 29
  }, {
    value: 5,
    source: 28,
    target: 30
  }, {
    value: 3,
    source: 28,
    target: 31
  }, {
    value: 3,
    source: 28,
    target: 32
  }, {
    value: 1,
    source: 28,
    target: 33
  }, {
    value: 4,
    source: 28,
    target: 34
  }, {
    value: 1,
    source: 28,
    target: 35
  }, {
    value: 5,
    source: 28,
    target: 36
  }, {
    value: 3,
    source: 28,
    target: 37
  }, {
    value: 1,
    source: 28,
    target: 38
  }, {
    value: 3,
    source: 28,
    target: 39
  }, {
    value: 1,
    source: 28,
    target: 40
  }, {
    value: 3,
    source: 28,
    target: 41
  }, {
    value: 2,
    source: 28,
    target: 42
  }, {
    value: 2,
    source: 28,
    target: 43
  }, {
    value: 5,
    source: 28,
    target: 44
  }, {
    value: 4,
    source: 28,
    target: 45
  }, {
    value: 4,
    source: 28,
    target: 46
  }, {
    value: 5,
    source: 28,
    target: 47
  }, {
    value: 4,
    source: 28,
    target: 48
  }, {
    value: 1,
    source: 28,
    target: 49
  }, {
    value: 3,
    source: 29,
    target: 30
  }, {
    value: 3,
    source: 29,
    target: 31
  }, {
    value: 3,
    source: 29,
    target: 32
  }, {
    value: 2,
    source: 29,
    target: 33
  }, {
    value: 5,
    source: 29,
    target: 34
  }, {
    value: 2,
    source: 29,
    target: 35
  }, {
    value: 1,
    source: 29,
    target: 36
  }, {
    value: 4,
    source: 29,
    target: 37
  }, {
    value: 4,
    source: 29,
    target: 38
  }, {
    value: 2,
    source: 29,
    target: 39
  }, {
    value: 5,
    source: 29,
    target: 40
  }, {
    value: 2,
    source: 29,
    target: 41
  }, {
    value: 4,
    source: 29,
    target: 42
  }, {
    value: 3,
    source: 29,
    target: 43
  }, {
    value: 5,
    source: 29,
    target: 44
  }, {
    value: 2,
    source: 29,
    target: 45
  }, {
    value: 5,
    source: 29,
    target: 46
  }, {
    value: 3,
    source: 29,
    target: 47
  }, {
    value: 3,
    source: 29,
    target: 48
  }, {
    value: 4,
    source: 29,
    target: 49
  }, {
    value: 4,
    source: 30,
    target: 31
  }, {
    value: 1,
    source: 30,
    target: 32
  }, {
    value: 3,
    source: 30,
    target: 33
  }, {
    value: 2,
    source: 30,
    target: 34
  }, {
    value: 3,
    source: 30,
    target: 35
  }, {
    value: 4,
    source: 30,
    target: 36
  }, {
    value: 4,
    source: 30,
    target: 37
  }, {
    value: 2,
    source: 30,
    target: 38
  }, {
    value: 4,
    source: 30,
    target: 39
  }, {
    value: 5,
    source: 30,
    target: 40
  }, {
    value: 5,
    source: 30,
    target: 41
  }, {
    value: 2,
    source: 30,
    target: 42
  }, {
    value: 2,
    source: 30,
    target: 43
  }, {
    value: 3,
    source: 30,
    target: 44
  }, {
    value: 1,
    source: 30,
    target: 45
  }, {
    value: 5,
    source: 30,
    target: 46
  }, {
    value: 5,
    source: 30,
    target: 47
  }, {
    value: 2,
    source: 30,
    target: 48
  }, {
    value: 5,
    source: 30,
    target: 49
  }, {
    value: 4,
    source: 31,
    target: 32
  }, {
    value: 1,
    source: 31,
    target: 33
  }, {
    value: 3,
    source: 31,
    target: 34
  }, {
    value: 4,
    source: 31,
    target: 35
  }, {
    value: 1,
    source: 31,
    target: 36
  }, {
    value: 4,
    source: 31,
    target: 37
  }, {
    value: 4,
    source: 31,
    target: 38
  }, {
    value: 2,
    source: 31,
    target: 39
  }, {
    value: 4,
    source: 31,
    target: 40
  }, {
    value: 5,
    source: 31,
    target: 41
  }, {
    value: 5,
    source: 31,
    target: 42
  }, {
    value: 2,
    source: 31,
    target: 43
  }, {
    value: 3,
    source: 31,
    target: 44
  }, {
    value: 5,
    source: 31,
    target: 45
  }, {
    value: 2,
    source: 31,
    target: 46
  }, {
    value: 4,
    source: 31,
    target: 47
  }, {
    value: 3,
    source: 31,
    target: 48
  }, {
    value: 5,
    source: 31,
    target: 49
  }, {
    value: 1,
    source: 32,
    target: 33
  }, {
    value: 5,
    source: 32,
    target: 34
  }, {
    value: 1,
    source: 32,
    target: 35
  }, {
    value: 3,
    source: 32,
    target: 36
  }, {
    value: 1,
    source: 32,
    target: 37
  }, {
    value: 4,
    source: 32,
    target: 38
  }, {
    value: 1,
    source: 32,
    target: 39
  }, {
    value: 4,
    source: 32,
    target: 40
  }, {
    value: 1,
    source: 32,
    target: 41
  }, {
    value: 4,
    source: 32,
    target: 42
  }, {
    value: 1,
    source: 32,
    target: 43
  }, {
    value: 2,
    source: 32,
    target: 44
  }, {
    value: 4,
    source: 32,
    target: 45
  }, {
    value: 3,
    source: 32,
    target: 46
  }, {
    value: 4,
    source: 32,
    target: 47
  }, {
    value: 4,
    source: 32,
    target: 48
  }, {
    value: 4,
    source: 32,
    target: 49
  }, {
    value: 1,
    source: 33,
    target: 34
  }, {
    value: 2,
    source: 33,
    target: 35
  }, {
    value: 1,
    source: 33,
    target: 36
  }, {
    value: 3,
    source: 33,
    target: 37
  }, {
    value: 1,
    source: 33,
    target: 38
  }, {
    value: 2,
    source: 33,
    target: 39
  }, {
    value: 4,
    source: 33,
    target: 40
  }, {
    value: 3,
    source: 33,
    target: 41
  }, {
    value: 3,
    source: 33,
    target: 42
  }, {
    value: 1,
    source: 33,
    target: 43
  }, {
    value: 5,
    source: 33,
    target: 44
  }, {
    value: 2,
    source: 33,
    target: 45
  }, {
    value: 4,
    source: 33,
    target: 46
  }, {
    value: 4,
    source: 33,
    target: 47
  }, {
    value: 1,
    source: 33,
    target: 48
  }, {
    value: 3,
    source: 33,
    target: 49
  }, {
    value: 4,
    source: 34,
    target: 35
  }, {
    value: 5,
    source: 34,
    target: 36
  }, {
    value: 4,
    source: 34,
    target: 37
  }, {
    value: 3,
    source: 34,
    target: 38
  }, {
    value: 1,
    source: 34,
    target: 39
  }, {
    value: 4,
    source: 34,
    target: 40
  }, {
    value: 2,
    source: 34,
    target: 41
  }, {
    value: 3,
    source: 34,
    target: 42
  }, {
    value: 2,
    source: 34,
    target: 43
  }, {
    value: 2,
    source: 34,
    target: 44
  }, {
    value: 5,
    source: 34,
    target: 45
  }, {
    value: 5,
    source: 34,
    target: 46
  }, {
    value: 4,
    source: 34,
    target: 47
  }, {
    value: 2,
    source: 34,
    target: 48
  }, {
    value: 2,
    source: 34,
    target: 49
  }, {
    value: 3,
    source: 35,
    target: 36
  }, {
    value: 4,
    source: 35,
    target: 37
  }, {
    value: 2,
    source: 35,
    target: 38
  }, {
    value: 2,
    source: 35,
    target: 39
  }, {
    value: 5,
    source: 35,
    target: 40
  }, {
    value: 3,
    source: 35,
    target: 41
  }, {
    value: 4,
    source: 35,
    target: 42
  }, {
    value: 5,
    source: 35,
    target: 43
  }, {
    value: 2,
    source: 35,
    target: 44
  }, {
    value: 2,
    source: 35,
    target: 45
  }, {
    value: 2,
    source: 35,
    target: 46
  }, {
    value: 2,
    source: 35,
    target: 47
  }, {
    value: 3,
    source: 35,
    target: 48
  }, {
    value: 2,
    source: 35,
    target: 49
  }, {
    value: 5,
    source: 36,
    target: 37
  }, {
    value: 3,
    source: 36,
    target: 38
  }, {
    value: 3,
    source: 36,
    target: 39
  }, {
    value: 1,
    source: 36,
    target: 40
  }, {
    value: 2,
    source: 36,
    target: 41
  }, {
    value: 3,
    source: 36,
    target: 42
  }, {
    value: 4,
    source: 36,
    target: 43
  }, {
    value: 2,
    source: 36,
    target: 44
  }, {
    value: 4,
    source: 36,
    target: 45
  }, {
    value: 1,
    source: 36,
    target: 46
  }, {
    value: 2,
    source: 36,
    target: 47
  }, {
    value: 1,
    source: 36,
    target: 48
  }, {
    value: 4,
    source: 36,
    target: 49
  }, {
    value: 3,
    source: 37,
    target: 38
  }, {
    value: 3,
    source: 37,
    target: 39
  }, {
    value: 2,
    source: 37,
    target: 40
  }, {
    value: 5,
    source: 37,
    target: 41
  }, {
    value: 2,
    source: 37,
    target: 42
  }, {
    value: 4,
    source: 37,
    target: 43
  }, {
    value: 1,
    source: 37,
    target: 44
  }, {
    value: 2,
    source: 37,
    target: 45
  }, {
    value: 1,
    source: 37,
    target: 46
  }, {
    value: 1,
    source: 37,
    target: 47
  }, {
    value: 4,
    source: 37,
    target: 48
  }, {
    value: 5,
    source: 37,
    target: 49
  }, {
    value: 3,
    source: 38,
    target: 39
  }, {
    value: 1,
    source: 38,
    target: 40
  }, {
    value: 1,
    source: 38,
    target: 41
  }, {
    value: 4,
    source: 38,
    target: 42
  }, {
    value: 3,
    source: 38,
    target: 43
  }, {
    value: 5,
    source: 38,
    target: 44
  }, {
    value: 2,
    source: 38,
    target: 45
  }, {
    value: 1,
    source: 38,
    target: 46
  }, {
    value: 5,
    source: 38,
    target: 47
  }, {
    value: 1,
    source: 38,
    target: 48
  }, {
    value: 2,
    source: 38,
    target: 49
  }, {
    value: 2,
    source: 39,
    target: 40
  }, {
    value: 4,
    source: 39,
    target: 41
  }, {
    value: 2,
    source: 39,
    target: 42
  }, {
    value: 4,
    source: 39,
    target: 43
  }, {
    value: 4,
    source: 39,
    target: 44
  }, {
    value: 2,
    source: 39,
    target: 45
  }, {
    value: 3,
    source: 39,
    target: 46
  }, {
    value: 2,
    source: 39,
    target: 47
  }, {
    value: 1,
    source: 39,
    target: 48
  }, {
    value: 2,
    source: 39,
    target: 49
  }, {
    value: 4,
    source: 40,
    target: 41
  }, {
    value: 1,
    source: 40,
    target: 42
  }, {
    value: 4,
    source: 40,
    target: 43
  }, {
    value: 3,
    source: 40,
    target: 44
  }, {
    value: 5,
    source: 40,
    target: 45
  }, {
    value: 4,
    source: 40,
    target: 46
  }, {
    value: 1,
    source: 40,
    target: 47
  }, {
    value: 5,
    source: 40,
    target: 48
  }, {
    value: 1,
    source: 40,
    target: 49
  }, {
    value: 5,
    source: 41,
    target: 42
  }, {
    value: 5,
    source: 41,
    target: 43
  }, {
    value: 1,
    source: 41,
    target: 44
  }, {
    value: 1,
    source: 41,
    target: 45
  }, {
    value: 2,
    source: 41,
    target: 46
  }, {
    value: 3,
    source: 41,
    target: 47
  }, {
    value: 1,
    source: 41,
    target: 48
  }, {
    value: 2,
    source: 41,
    target: 49
  }, {
    value: 3,
    source: 42,
    target: 43
  }, {
    value: 4,
    source: 42,
    target: 44
  }, {
    value: 1,
    source: 42,
    target: 45
  }, {
    value: 4,
    source: 42,
    target: 46
  }, {
    value: 1,
    source: 42,
    target: 47
  }, {
    value: 5,
    source: 42,
    target: 48
  }, {
    value: 5,
    source: 42,
    target: 49
  }, {
    value: 4,
    source: 43,
    target: 44
  }, {
    value: 4,
    source: 43,
    target: 45
  }, {
    value: 4,
    source: 43,
    target: 46
  }, {
    value: 4,
    source: 43,
    target: 47
  }, {
    value: 2,
    source: 43,
    target: 48
  }, {
    value: 5,
    source: 43,
    target: 49
  }, {
    value: 2,
    source: 44,
    target: 45
  }, {
    value: 3,
    source: 44,
    target: 46
  }, {
    value: 3,
    source: 44,
    target: 47
  }, {
    value: 3,
    source: 44,
    target: 48
  }, {
    value: 5,
    source: 44,
    target: 49
  }, {
    value: 1,
    source: 45,
    target: 46
  }, {
    value: 5,
    source: 45,
    target: 47
  }, {
    value: 1,
    source: 45,
    target: 48
  }, {
    value: 3,
    source: 45,
    target: 49
  }, {
    value: 1,
    source: 46,
    target: 47
  }, {
    value: 5,
    source: 46,
    target: 48
  }, {
    value: 2,
    source: 46,
    target: 49
  }, {
    value: 1,
    source: 47,
    target: 48
  }, {
    value: 1,
    source: 47,
    target: 49
  }, {
    value: 4,
    source: 48,
    target: 49
  }]
};

/***/ }),

/***/ 33522:
/*!*******************************************************************************************!*\
  !*** ./src/examples/example-chart-matrix-series/example-chart-matrix-series.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartMatrixSeriesComponent: () => (/* binding */ ExampleChartMatrixSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_matrix_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-matrix-series.component.html?ngResource */ 63098);
/* harmony import */ var _example_chart_matrix_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-matrix-series.component.scss?ngResource */ 50810);
/* harmony import */ var _example_chart_matrix_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_matrix_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ 4678);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);







let ExampleChartMatrixSeriesComponent = class ExampleChartMatrixSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_2__.DATA_GT;
    this.order = 'name';
    this.chart = 1;
    this.options = [{
      name: 'Action'
    }, {
      name: 'Another action'
    }, {
      name: 'Something else here'
    }, {
      isDivider: true
    }, {
      name: 'Separated link'
    }];
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.label, () => {
      return {
        fontSize: 15,
        color: '#000',
        colorHover: '#ff0000'
      };
    });
  }
  onOrderDropdownClick(order) {
    this.order = order;
  }
  onChange(event) {
    this.order = event.target.value;
  }
};
ExampleChartMatrixSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-matrix',
  template: _example_chart_matrix_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_matrix_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartMatrixSeriesComponent);


/***/ }),

/***/ 79967:
/*!*******************************************************!*\
  !*** ./src/examples/example-chart-pie-series/data.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  club: 'Manchester City',
  won: 32,
  drawn: 2,
  lost: 4
}, {
  club: 'Liverpool',
  won: 30,
  drawn: 7,
  lost: 1
}, {
  club: 'Chelsea',
  won: 21,
  drawn: 9,
  lost: 8
}, {
  club: 'Tottenham Hotspur',
  won: 23,
  drawn: 2,
  lost: 13
}, {
  club: 'Arsenal',
  won: 21,
  drawn: 7,
  lost: 10
}, {
  club: 'Manchester United',
  won: 19,
  drawn: 9,
  lost: 10
}, {
  club: 'Wolverhampton',
  won: 16,
  drawn: 9,
  lost: 13
}, {
  club: 'Everton',
  won: 15,
  drawn: 9,
  lost: 14
}, {
  club: 'Leicester City',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'West Ham United',
  won: 15,
  drawn: 7,
  lost: 16
}, {
  club: 'Watford',
  won: 14,
  drawn: 8,
  lost: 16
}, {
  club: 'Crystal Palace',
  won: 14,
  drawn: 7,
  lost: 16
}, {
  club: 'Newcastle United',
  won: 12,
  drawn: 9,
  lost: 17
}, {
  club: 'Bournemouth',
  won: 13,
  drawn: 6,
  lost: 19
}, {
  club: 'Burnley',
  won: 11,
  drawn: 7,
  lost: 20
}, {
  club: 'Southampton',
  won: 9,
  drawn: 12,
  lost: 17
}, {
  club: 'Brighton',
  won: 9,
  drawn: 9,
  lost: 20
}, {
  club: 'Cardiff City',
  won: 10,
  drawn: 4,
  lost: 24
}, {
  club: 'Fulham',
  won: 7,
  drawn: 5,
  lost: 26
}, {
  club: 'Huddersfield Town',
  won: 3,
  drawn: 7,
  lost: 28
}];

/***/ }),

/***/ 31276:
/*!*************************************************************************************!*\
  !*** ./src/examples/example-chart-pie-series/example-chart-pie-series.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartPieSeriesComponent: () => (/* binding */ ExampleChartPieSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_pie_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-pie-series.component.html?ngResource */ 87332);
/* harmony import */ var _example_chart_pie_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-pie-series.component.scss?ngResource */ 52912);
/* harmony import */ var _example_chart_pie_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_pie_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ 79967);







let ExampleChartPieSeriesComponent = class ExampleChartPieSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_4__.DATA;
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_3__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_2__.ChartStyle.arc, (d, i) => {
      const colors = ['#709a28', '#f7a704', '#c23612'];
      return {
        fill: colors[i],
        strokeWidth: 2
      };
    });
  }
};
ExampleChartPieSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-chart-pie',
  template: _example_chart_pie_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_pie_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartPieSeriesComponent);


/***/ }),

/***/ 53784:
/*!*********************************************************************!*\
  !*** ./src/examples/example-chart-radial-tree-series/chart-data.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = {
  value: 843,
  headCount: 835,
  medianPay: 412758.98,
  compRatioPercent: 61,
  payrollCost: 86784308.04,
  compRange: 'high',
  children: [{
    name: 'analytics',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 54,
    payrollCost: 86784308,
    compRange: 'medium',
    children: [{
      name: 'cluster',
      value: 4138,
      headCount: 235,
      medianPay: 41275.98,
      compRatioPercent: 53,
      payrollCost: 8678430.01,
      compRange: 'medium',
      children: [{
        name: 'AgglomerativeCluster',
        value: 3938,
        headCount: 835,
        medianPay: 41275.98,
        compRatioPercent: 53,
        payrollCost: 8678430.01,
        compRange: 'medium'
      }, {
        name: 'CommunityStructure',
        value: 3812,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 55,
        payrollCost: 86784308.02,
        compRange: 'medium'
      }, {
        name: 'HierarchicalCluster',
        value: 6714,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 56,
        payrollCost: 86784308.03,
        compRange: 'low'
      }, {
        name: 'MergeEdge',
        value: 743,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }]
    }, {
      name: 'graph',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 58,
      payrollCost: 86784308.04,
      compRange: 'high',
      children: [{
        name: 'BetweennessCentrality',
        value: 3534,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'LinkDistance',
        value: 5731,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'MaxFlowMinCut',
        value: 7840,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'ShortestPaths',
        value: 5914,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'SpanningTree',
        value: 3416,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 57,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'optimization',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium',
      children: [{
        name: 'AspectRatioBanker',
        value: 7074,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }]
  }, {
    name: 'animate',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'high',
    children: [{
      name: 'Easing',
      value: 17010,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'FunctionSequence',
      value: 5842,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'interpolate',
      value: 1983,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high',
      children: [{
        name: 'ArrayInterpolator',
        value: 1983,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'ColorInterpolator',
        value: 2047,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'DateInterpolator',
        value: 1375,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'Interpolator',
        value: 8746,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'MatrixInterpolator',
        value: 2202,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'NumberInterpolator',
        value: 1382,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'ObjectInterpolator',
        value: 1629,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'PointInterpolator',
        value: 1675,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'RectangleInterpolator',
        value: 2042,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'ISchedulable',
      value: 1041,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Parallel',
      value: 5176,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Pause',
      value: 449,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Scheduler',
      value: 5593,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Sequence',
      value: 5534,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Transition',
      value: 9201,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Transitioner',
      value: 19975,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'TransitionEvent',
      value: 1116,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Tween',
      value: 6006,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }]
  }, {
    name: 'data',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'medium',
    children: [{
      name: 'converters',
      value: 4294,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'Converters',
        value: 721,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'DelimitedTextConverter',
        value: 4294,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'GraphMLConverter',
        value: 9800,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'IDataConverter',
        value: 1314,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'JSONConverter',
        value: 2220,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'DataField',
      value: 1759,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'DataSchema',
      value: 2165,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'DataSet',
      value: 586,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'DataSource',
      value: 3331,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'DataTable',
      value: 772,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'DataUtil',
      value: 3322,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }]
  }, {
    name: 'display',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'medium',
    children: [{
      name: 'DirtySprite',
      value: 8833,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'LineSprite',
      value: 1732,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'RectSprite',
      value: 3623,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'TextSprite',
      value: 10066,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }]
  }, {
    name: 'flex',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'low',
    children: [{
      name: 'FlareVis',
      value: 4116,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }]
  }, {
    name: 'physics',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'medium',
    children: [{
      name: 'DragForce',
      value: 1082,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'GravityForce',
      value: 1336,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'IForce',
      value: 319,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'NBodyForce',
      value: 10498,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Particle',
      value: 2822,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Simulation',
      value: 9983,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Spring',
      value: 2213,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'SpringForce',
      value: 1681,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }]
  }, {
    name: 'query',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'low',
    children: [{
      name: 'AggregateExpression',
      value: 1616,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'And',
      value: 1027,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Arithmetic',
      value: 3891,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Average',
      value: 891,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'BinaryExpression',
      value: 2893,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Comparison',
      value: 5103,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'CompositeExpression',
      value: 3677,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Count',
      value: 781,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'DateUtil',
      value: 4141,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Distinct',
      value: 933,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Expression',
      value: 5130,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'ExpressionIterator',
      value: 3617,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Fn',
      value: 3240,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'If',
      value: 2732,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'IsA',
      value: 2039,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Literal',
      value: 1214,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Match',
      value: 3748,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Maximum',
      value: 843,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'methods',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'add',
        value: 593,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'and',
        value: 330,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'average',
        value: 287,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'count',
        value: 277,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'distinct',
        value: 292,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'div',
        value: 595,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'eq',
        value: 594,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'fn',
        value: 460,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'gt',
        value: 603,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'gte',
        value: 625,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'iff',
        value: 748,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'isa',
        value: 461,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'lt',
        value: 597,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'lte',
        value: 619,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'max',
        value: 283,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'min',
        value: 283,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'mod',
        value: 591,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'mul',
        value: 603,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'neq',
        value: 599,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'not',
        value: 386,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'or',
        value: 323,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'orderby',
        value: 307,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'range',
        value: 772,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'select',
        value: 296,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'stddev',
        value: 363,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'sub',
        value: 600,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'sum',
        value: 280,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'update',
        value: 307,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'variance',
        value: 335,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'where',
        value: 299,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'xor',
        value: 354,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: '_',
        value: 264,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'Minimum',
      value: 843,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Not',
      value: 1554,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Or',
      value: 970,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Query',
      value: 13896,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Range',
      value: 1594,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'StringUtil',
      value: 4130,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Sum',
      value: 791,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Variable',
      value: 1124,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Variance',
      value: 1876,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Xor',
      value: 1101,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }]
  }, {
    name: 'scale',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'high',
    children: [{
      name: 'IScaleMap',
      value: 2105,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'LinearScale',
      value: 1316,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'LogScale',
      value: 3151,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'OrdinalScale',
      value: 3770,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'QuantileScale',
      value: 2435,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'QuantitativeScale',
      value: 4839,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'RootScale',
      value: 1756,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Scale',
      value: 4268,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'ScaleType',
      value: 1821,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'TimeScale',
      value: 5833,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }]
  }, {
    name: 'util',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'high',
    children: [{
      name: 'Arrays',
      value: 8258,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Colors',
      value: 10001,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }, {
      name: 'Dates',
      value: 8217,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Displays',
      value: 12555,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Filter',
      value: 2324,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Geometry',
      value: 10993,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'heap',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'FibonacciHeap',
        value: 9354,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'HeapNode',
        value: 1233,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }]
    }, {
      name: 'IEvaluable',
      value: 335,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'IPredicate',
      value: 383,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'IValueProxy',
      value: 874,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'math',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'DenseMatrix',
        value: 3165,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'IMatrix',
        value: 2815,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'SparseMatrix',
        value: 3366,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }]
    }, {
      name: 'Maths',
      value: 17705,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Orientation',
      value: 1486,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'palette',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium',
      children: [{
        name: 'ColorPalette',
        value: 6367,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'Palette',
        value: 1229,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'ShapePalette',
        value: 2059,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'valuePalette',
        value: 2291,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'Property',
      value: 5559,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Shapes',
      value: 19118,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Sort',
      value: 6887,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }, {
      name: 'Stats',
      value: 6557,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high'
    }, {
      name: 'Strings',
      value: 22026,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low'
    }]
  }, {
    name: 'vis',
    headCount: 835,
    medianPay: 412758.98,
    compRatioPercent: 61,
    payrollCost: 86784308.04,
    compRange: 'medium',
    children: [{
      name: 'axis',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'Axes',
        value: 1302,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'Axis',
        value: 24593,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'AxisGridLine',
        value: 652,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'AxisLabel',
        value: 636,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'CartesianAxes',
        value: 6703,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'controls',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'AnchorControl',
        value: 2138,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'ClickControl',
        value: 3824,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'Control',
        value: 1353,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'ControlList',
        value: 4665,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'DragControl',
        value: 2649,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'ExpandControl',
        value: 2832,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'HoverControl',
        value: 4896,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'IControl',
        value: 763,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'PanZoomControl',
        value: 5222,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'SelectionControl',
        value: 7862,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'TooltipControl',
        value: 8435,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'data',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'high',
      children: [{
        name: 'Data',
        value: 20544,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'DataList',
        value: 19788,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'DataSprite',
        value: 10349,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'EdgeSprite',
        value: 3301,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'NodeSprite',
        value: 19382,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'render',
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium',
        children: [{
          name: 'ArrowType',
          value: 698,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'EdgeRenderer',
          value: 5569,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'low'
        }, {
          name: 'IRenderer',
          value: 353,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'ShapeRenderer',
          value: 2247,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }]
      }, {
        name: 'ScaleBinding',
        value: 11275,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'Tree',
        value: 7147,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'TreeBuilder',
        value: 9930,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }]
    }, {
      name: 'events',
      value: 4294,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'low',
      children: [{
        name: 'DataEvent',
        value: 2313,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'SelectionEvent',
        value: 1880,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'TooltipEvent',
        value: 1701,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'VisualizationEvent',
        value: 1117,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }]
    }, {
      name: 'legend',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      children: [{
        name: 'Legend',
        value: 20859,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04
      }, {
        name: 'LegendItem',
        value: 4614,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04
      }, {
        name: 'LegendRange',
        value: 10530,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04
      }]
    }, {
      name: 'operator',
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      children: [{
        name: 'distortion',
        children: [{
          name: 'BifocalDistortion',
          value: 4461,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'Distortion',
          value: 6314,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'low'
        }, {
          name: 'FisheyeDistortion',
          value: 3444,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }]
      }, {
        name: 'encoder',
        value: 4294,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low',
        children: [{
          name: 'ColorEncoder',
          value: 3179,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'Encoder',
          value: 4060,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'low'
        }, {
          name: 'PropertyEncoder',
          value: 4138,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'ShapeEncoder',
          value: 1690,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'valueEncoder',
          value: 1830,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }]
      }, {
        name: 'filter',
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        children: [{
          name: 'FisheyeTreeFilter',
          value: 5219,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }, {
          name: 'GraphDistanceFilter',
          value: 3165,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }, {
          name: 'VisibilityFilter',
          value: 3509,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }]
      }, {
        name: 'IOperator',
        value: 1286,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04
      }, {
        name: 'label',
        value: 4294,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low',
        children: [{
          name: 'Labeler',
          value: 9956,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }, {
          name: 'RadialLabeler',
          value: 3899,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }, {
          name: 'StackedAreaLabeler',
          value: 3202,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04
        }]
      }, {
        name: 'layout',
        value: 4294,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low',
        children: [{
          name: 'AxisLayout',
          value: 6725,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'BundledEdgeRouter',
          value: 3727,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'CircleLayout',
          value: 9317,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'CirclePackingLayout',
          value: 12003,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'DendrogramLayout',
          value: 4853,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'ForceDirectedLayout',
          value: 8411,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'low'
        }, {
          name: 'IcicleTreeLayout',
          value: 4864,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'IndentedTreeLayout',
          value: 3174,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'Layout',
          value: 7881,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'NodeLinkTreeLayout',
          value: 12870,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'PieLayout',
          value: 2728,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'RadialTreeLayout',
          value: 12348,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'low'
        }, {
          name: 'RandomLayout',
          value: 870,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'medium'
        }, {
          name: 'StackedAreaLayout',
          value: 9121,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }, {
          name: 'TreeMapLayout',
          value: 9191,
          headCount: 835,
          medianPay: 412758.98,
          compRatioPercent: 61,
          payrollCost: 86784308.04,
          compRange: 'high'
        }]
      }, {
        name: 'Operator',
        value: 2490,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'OperatorList',
        value: 5248,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'low'
      }, {
        name: 'OperatorSequence',
        value: 4190,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }, {
        name: 'OperatorSwitch',
        value: 2581,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'medium'
      }, {
        name: 'SortOperator',
        value: 2023,
        headCount: 835,
        medianPay: 412758.98,
        compRatioPercent: 61,
        payrollCost: 86784308.04,
        compRange: 'high'
      }]
    }, {
      name: 'Visualization',
      value: 16540,
      headCount: 835,
      medianPay: 412758.98,
      compRatioPercent: 61,
      payrollCost: 86784308.04,
      compRange: 'medium'
    }]
  }]
};

/***/ }),

/***/ 33630:
/*!******************************************************************************************************!*\
  !*** ./src/examples/example-chart-radial-tree-series/example-chart-radial-tree-series..component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartRadialTreeComponent: () => (/* binding */ ExampleChartRadialTreeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_radial_tree_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-radial-tree-series.component.html?ngResource */ 79540);
/* harmony import */ var _example_chart_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-radial-tree-series.component.scss?ngResource */ 88200);
/* harmony import */ var _example_chart_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _chart_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chart-data */ 53784);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/kit */ 67371);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);








let ExampleChartRadialTreeComponent = class ExampleChartRadialTreeComponent {
  constructor() {
    this.data = _chart_data__WEBPACK_IMPORTED_MODULE_2__.DATA;
    this.initialData = _chart_data__WEBPACK_IMPORTED_MODULE_2__.DATA;
    this.layoutType = 'tree';
    this.linkStyle = 'curved';
    this.selection = this.data;
    this.breadcrumb = [this.data];
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_5__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.node, d => {
      const fill = d.children ? 'lightsteelblue' : '#ff7f0e';
      return {
        fill,
        radius: 4,
        stroke: '#000'
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_4__.ChartStyle.label, () => {
      return {
        fontSize: 12
      };
    });
  }
  onSelectionChange(value) {
    switch (value.length) {
      case 0:
        this.breadcrumb = [];
        return;
      case 1:
        if (this.data !== value[0]) {
          this.data = value[0];
          this.breadcrumb = this.findPath(value[0], this.initialData);
          this.selection = this.data;
        }
        break;
    }
  }
  onBreadcrumbSelectionChange(value) {
    if (value !== this.selection[0]) {
      this.selection = value;
      this.data = this.selection;
      this.breadcrumb = this.findPath(value, this.initialData);
    }
  }
  formatBreadcrumb(value) {
    return value && value.name || '';
  }
  findPath(node, root) {
    if (node === root) {
      return [root];
    }
    const path = [root];
    if (root.children) {
      root.children.forEach(n => {
        const nodes = (0,src_components_kit__WEBPACK_IMPORTED_MODULE_3__.findDescendants)(n).concat(n);
        if (nodes.indexOf(node) >= 0) {
          path.push(...this.findPath(node, n));
        }
      });
    }
    return path;
  }
};
ExampleChartRadialTreeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-example-chart-radial-tree-series',
  template: _example_chart_radial_tree_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectionStrategy.OnPush,
  styles: [(_example_chart_radial_tree_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartRadialTreeComponent);


/***/ }),

/***/ 48911:
/*!************************************************************!*\
  !*** ./src/examples/example-chart-sunburst-series/data.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = {
  country: 'Deutschland',
  children: [{
    name: 'Land',
    level: 1,
    group: true,
    children: [{
      name: 'Baden-Württemberg',
      logo: true,
      land: true,
      level: 1,
      area: '35,751.46 km²',
      bundesratVotes: '6 (out of 69)',
      density: '310/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 10879618
      }]
    }, {
      name: 'Berlin',
      logo: true,
      land: true,
      level: 1,
      total: 3520031,
      area: '891.1 km²',
      bundesratVotes: '4 (out of 69)',
      density: '4088/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: 'Mitte',
        logo: true,
        level: 1,
        value: 377965
      }, {
        name: 'Friedrichshain-Kreuzberg',
        level: 1,
        value: 283974
      }, {
        name: 'Pankow',
        level: 1,
        value: 402289
      }, {
        name: 'Charlottenburg-Wilmersdorf',
        level: 1,
        value: 338831
      }, {
        name: 'Spandau',
        level: 1,
        value: 242143
      }, {
        name: 'Steglitz-Zehlendorf',
        level: 1,
        value: 307076
      }, {
        name: 'Tempelhof-Schöneberg',
        level: 1,
        value: 348739
      }, {
        name: 'Neukölln',
        level: 1,
        value: 329387
      }, {
        name: 'Treptow-Köpenick',
        level: 1,
        value: 264999
      }, {
        name: 'Marzahn-Hellersdorf',
        level: 1,
        value: 266684
      }, {
        name: 'Lichtenberg',
        level: 1,
        value: 286246
      }, {
        name: 'Reinickendorf',
        level: 1,
        value: 263597
      }]
    }, {
      name: 'Brandenburg',
      logo: true,
      land: true,
      level: 1,
      area: '29,478.63 km²',
      bundesratVotes: '4 (out of 69)',
      density: '83/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 2484826
      }]
    }, {
      name: 'Hessen',
      logo: true,
      land: true,
      level: 1,
      area: '21,100 km²',
      bundesratVotes: '5 (out of 69)',
      density: '300/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 6176172
      }]
    }, {
      name: 'Mecklenburg-Vorpommern',
      logo: true,
      land: true,
      level: 1,
      area: '23,174 km²',
      bundesratVotes: '3 (out of 69)',
      density: '69/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 1612362
      }]
    }, {
      name: 'Niedersachsen',
      logo: true,
      land: true,
      level: 1,
      area: '47,614.07 km²',
      bundesratVotes: '6 (out of 69)',
      density: '170/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 7926599
      }]
    }, {
      name: 'Nordrhein-Westfalen',
      logo: true,
      land: true,
      level: 1,
      area: '34,084.13 km²',
      bundesratVotes: '6 (out of 69)',
      density: '530/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 17865516
      }]
    }, {
      name: 'Rheinland-Pfalz',
      logo: true,
      land: true,
      level: 1,
      area: '19,854.21 km²',
      bundesratVotes: '4 (out of 69)',
      density: '202/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 4052803
      }]
    }, {
      name: 'Saarland',
      logo: true,
      land: true,
      level: 1,
      area: '2,570 km²',
      bundesratVotes: '3 (out of 69)',
      density: '390/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 995597
      }]
    }, {
      name: 'Sachsen-Anhalt',
      logo: true,
      land: true,
      level: 1,
      area: '20,451.58 km²',
      bundesratVotes: '4 (out of 69)',
      density: '110/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 2245470
      }]
    }, {
      name: 'Schleswig-Holstein',
      logo: true,
      land: true,
      level: 1,
      area: '15,763.18 km²',
      bundesratVotes: '4 (out of 69)',
      density: '180/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 1,
        value: 2858714
      }]
    }]
  }, {
    name: 'Freistaat',
    level: 3,
    group: true,
    children: [{
      name: 'Bayern',
      logo: true,
      land: true,
      level: 3,
      area: '70,550.19 km²',
      bundesratVotes: '9 (out of 69)',
      density: '185/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: 'Niederbayern',
        logo: true,
        level: 3,
        value: 1212119
      }, {
        name: 'Oberbayern',
        logo: true,
        level: 3,
        value: 4588944
      }, {
        name: 'Oberpfalz',
        logo: true,
        level: 3,
        value: 1092339
      }, {
        name: 'Oberfranken',
        logo: true,
        level: 3,
        value: 1059358
      }, {
        name: 'Mittelfranken',
        logo: true,
        level: 3,
        value: 1738686
      }, {
        name: 'Unterfranken',
        logo: true,
        level: 3,
        value: 1306048
      }, {
        name: 'Schwaben',
        logo: true,
        level: 3,
        value: 1846020
      }]
    }, {
      name: 'Sachsen',
      logo: true,
      land: true,
      level: 3,
      total: 7926599,
      area: '18,449.99 km²',
      bundesratVotes: '4 (out of 69)',
      density: '221/km2',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: 'Bautzen (Budyšin)',
        level: 3,
        value: 308350
      }, {
        name: 'Erzgebirgskreis',
        level: 3,
        value: 1
      }, {
        name: 'Görlitz (Zhorjelc)',
        level: 3,
        value: 262168
      }, {
        name: 'Landkreis Leipzig',
        level: 3,
        value: 257596
      }, {
        name: 'Meißen',
        level: 3,
        value: 243716
      }, {
        name: 'Mittelsachsen',
        level: 3,
        value: 314591
      }, {
        name: 'Nordsachsen',
        value: 1,
        level: 3
      }, {
        name: 'Sächsische Schweiz-Osterzgebirge',
        level: 3,
        value: 245939
      }, {
        name: 'Vogtlandkreis',
        level: 3,
        value: 233970
      }, {
        name: 'Zwickau',
        level: 3,
        value: 327062
      }, {
        name: 'Chemnitz',
        level: 3,
        value: 248645
      }, {
        name: 'Dresden',
        level: 3,
        value: 547172
      }, {
        name: 'Leipzig',
        level: 3,
        value: 587857
      }]
    }, {
      name: 'Thüringen',
      logo: true,
      land: true,
      level: 3,
      total: 2170714,
      area: '16,171 km²',
      bundesratVotes: '4 (out of 69)',
      density: '130/km2',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: 'Altenburger Land',
        level: 3,
        value: 105557
      }, {
        name: 'Eichsfeld',
        level: 3,
        value: 109576
      }, {
        name: 'Gotha',
        level: 3,
        value: 138857
      }, {
        name: 'Greiz',
        level: 3,
        value: 115419
      }, {
        name: 'Hildburghausen',
        level: 3,
        value: 70612
      }, {
        name: 'Ilm',
        level: 3,
        value: 116382
      }, {
        name: 'Kyffhäuserkreis',
        level: 3,
        value: 87775
      }, {
        name: 'Nordhausen',
        level: 3,
        value: 93084
      }, {
        name: 'Saale-Holzland',
        level: 3,
        value: 90313
      }, {
        name: 'Saale-Orla',
        level: 3,
        value: 92739
      }, {
        name: 'Saalfeld-Rudolstadt',
        level: 3,
        value: 123891
      }, {
        name: 'Schmalkalden-Meiningen',
        level: 3,
        value: 137973
      }, {
        name: 'Sömmerda',
        level: 3,
        value: 77351
      }, {
        name: 'Sonneberg',
        level: 3,
        value: 60300
      }, {
        name: 'Unstrut-Hainich',
        level: 3,
        value: 113962
      }, {
        name: 'Wartburgkreis',
        level: 3,
        value: 139003
      }, {
        name: 'Weimarer Land',
        level: 3,
        value: 88507
      }, {
        name: 'Eisenach',
        level: 3,
        value: 42800
      }, {
        name: 'Weimar',
        level: 3,
        value: 65200
      }, {
        name: 'Gera',
        level: 3,
        value: 94852
      }, {
        name: 'Suhl',
        level: 3,
        value: 39200
      }, {
        name: 'Jena',
        level: 3,
        value: 110321
      }, {
        name: 'Erfurt',
        level: 3,
        value: 213699
      }]
    }]
  }, {
    name: 'Freie Hansestadt',
    level: 2,
    group: true,
    children: [{
      name: 'Bremen',
      logo: true,
      land: true,
      level: 2,
      area: '326.73 km²',
      bundesratVotes: '3 (out of 69)',
      density: '1700/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 2,
        value: 671489
      }]
    }, {
      name: 'Hamburg',
      logo: true,
      land: true,
      level: 2,
      area: '755.22 km²',
      bundesratVotes: '3 (out of 69)',
      density: '2500/km²',
      timeZone: 'UTC+1 (CET)',
      children: [{
        name: '',
        level: 2,
        value: 1787408
      }]
    }]
  }]
};

/***/ }),

/***/ 76718:
/*!***********************************************************************************************!*\
  !*** ./src/examples/example-chart-sunburst-series/example-chart-sunburst-series.component.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartSunburstSeriesComponent: () => (/* binding */ ExampleChartSunburstSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_chart_sunburst_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-chart-sunburst-series.component.html?ngResource */ 99894);
/* harmony import */ var _example_chart_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-chart-sunburst-series.component.scss?ngResource */ 9654);
/* harmony import */ var _example_chart_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_chart_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/germany-lands-logos.scss?ngResource */ 62814);
/* harmony import */ var _styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ 48911);
/* harmony import */ var src_components_kit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/kit */ 67371);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);










let ExampleChartSunburstSeriesComponent = class ExampleChartSunburstSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_4__.DATA;
    this.chart = 1;
    this.selection = [];
    this.matches = [];
    this.selectionSource = 'default';
    this.breadcrumb = [];
    this.breadcrumbSelection = this.data;
    this.color = d3__WEBPACK_IMPORTED_MODULE_3__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_3__.schemeCategory10);
    this.colorHover = d3__WEBPACK_IMPORTED_MODULE_3__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_3__.schemeTableau10);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_7__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.arc, node => {
      const level = node.parent ? node.data.level : '';
      let fill = level === 1 ? this.color(1) : level === 2 ? this.color(2) : level === 3 ? this.color(3) : 'transparent';
      const fillHover = level === 1 ? '#1a6497' : level === 2 ? '#258525' : level === 3 ? '#eb6e00' : 'transparent';
      if (node.data === this.selection[0]) {
        fill = fillHover;
      }
      return {
        fill,
        fillHover
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.label, () => {
      return {
        color: '#ffffff',
        fontSize: 13,
        fontWeight: 600
      };
    }).for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.zoom, () => {
      return {
        duration: 800
      };
    });
    this.breadcrumbStyle = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_7__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_6__.ChartStyle.label, (d, i) => {
      let labelColor;
      const level = this.selection[0].level;
      if (i === this.breadcrumb.length - 1) {
        labelColor = '#000';
      } else {
        labelColor = this.color(this.selection[0].level);
      }
      return {
        color: labelColor
      };
    });
  }
  onSelectionChange(value) {
    if (this.selectionSource !== 'default') {
      this.selectionSource = 'default';
      return;
    }
    switch (value.length) {
      case 0:
        this.breadcrumb = [];
        return;
      case 1:
        const node = value[0];
        this.breadcrumb = this.findPath(node, this.data);
        this.selection = value;
        break;
    }
  }
  onControlChange(value) {
    if (JSON.stringify(value) !== JSON.stringify(this.selection)) {
      this.selection = [value];
      this.breadcrumb = value;
    }
  }
  onBreadcrumbChange(value) {
    if (value !== this.selection[0]) {
      this.selection = [value];
      this.breadcrumb = this.findPath(value, this.data);
    }
  }
  formatBreadcrumb(value) {
    return value.name;
  }
  findPath(node, root) {
    if (node === root) {
      return [root];
    }
    const path = [root];
    if (root.children) {
      root.children.forEach(n => {
        const nodes = (0,src_components_kit__WEBPACK_IMPORTED_MODULE_5__.findDescendants)(n).concat(n);
        if (nodes.indexOf(node) >= 0) {
          path.push(...this.findPath(node, n));
        }
      });
    }
    return path;
  }
  getLogo(name) {
    return `logo logo-${(0,src_components_kit__WEBPACK_IMPORTED_MODULE_5__.convertUmlauts)(name.toLowerCase().replace(/\s+/g, '-'))}`;
  }
  static #_ = this.ctorParameters = () => [];
};
ExampleChartSunburstSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
  selector: 'app-example-chart-sunburst',
  template: _example_chart_sunburst_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_example_chart_sunburst_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_germany_lands_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default())]
})], ExampleChartSunburstSeriesComponent);


/***/ }),

/***/ 9211:
/*!**************************************************************!*\
  !*** ./src/examples/example-chart-word-cloud-series/data.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  country: 'Aruba',
  area: 193.00
}, {
  country: 'Afghanistan',
  area: 652090.00
}, {
  country: 'Angola',
  area: 1246700.00
}, {
  country: 'Anguilla',
  area: 96.00
}, {
  country: 'Albania',
  area: 28748.00
}, {
  country: 'Andorra',
  area: 468.00
}, {
  country: 'Netherlands Antilles',
  area: 800.00
}, {
  country: 'United Arab Emirates',
  area: 83600.00
}, {
  country: 'Argentina',
  area: 2780400.00
}, {
  country: 'Armenia',
  area: 29800.00
}, {
  country: 'American Samoa',
  area: 199.00
}, {
  country: 'Antarctica',
  area: 13120000.00
}, {
  country: 'French Southern territories',
  area: 7780.00
}, {
  country: 'Antigua and Barbuda',
  area: 442.00
}, {
  country: 'Australia',
  area: 7741220.00
}, {
  country: 'Austria',
  area: 83859.00
}, {
  country: 'Azerbaijan',
  area: 86600.00
}, {
  country: 'Burundi',
  area: 27834.00
}, {
  country: 'Belgium',
  area: 30518.00
}, {
  country: 'Benin',
  area: 112622.00
}, {
  country: 'Burkina Faso',
  area: 274000.00
}, {
  country: 'Bangladesh',
  area: 143998.00
}, {
  country: 'Bulgaria',
  area: 110994.00
}, {
  country: 'Bahrain',
  area: 694.00
}, {
  country: 'Bahamas',
  area: 13878.00
}, {
  country: 'Bosnia and Herzegovina',
  area: 51197.00
}, {
  country: 'Belarus',
  area: 207600.00
}, {
  country: 'Belize',
  area: 22696.00
}, {
  country: 'Bermuda',
  area: 53.00
}, {
  country: 'Bolivia',
  area: 1098581.00
}, {
  country: 'Brazil',
  area: 8547403.00
}, {
  country: 'Barbados',
  area: 430.00
}, {
  country: 'Brunei',
  area: 5765.00
}, {
  country: 'Bhutan',
  area: 47000.00
}, {
  country: 'Bouvet Island',
  area: 59.00
}, {
  country: 'Botswana',
  area: 581730.00
}, {
  country: 'Central African Republic',
  area: 622984.00
}, {
  country: 'Canada',
  area: 9970610.00
}, {
  country: 'Cocos (Keeling) Islands',
  area: 14.00
}, {
  country: 'Switzerland',
  area: 41284.00
}, {
  country: 'Chile',
  area: 756626.00
}, {
  country: 'China',
  area: 9572900.00
}, {
  country: 'Ivory Coast',
  area: 322463.00
}, {
  country: 'Cameroon',
  area: 475442.00
}, {
  country: 'The Democratic Republic of the Congo',
  area: 2344858.00
}, {
  country: 'Congo',
  area: 342000.00
}, {
  country: 'Cook Islands',
  area: 236.00
}, {
  country: 'Colombia',
  area: 1138914.00
}, {
  country: 'Comoros',
  area: 1862.00
}, {
  country: 'Cape Verde',
  area: 4033.00
}, {
  country: 'Costa Rica',
  area: 51100.00
}, {
  country: 'Cuba',
  area: 110861.00
}, {
  country: 'Christmas Island',
  area: 135.00
}, {
  country: 'Cayman Islands',
  area: 264.00
}, {
  country: 'Cyprus',
  area: 9251.00
}, {
  country: 'Czech Republic',
  area: 78866.00
}, {
  country: 'Germany',
  area: 357022.00
}, {
  country: 'Djibouti',
  area: 23200.00
}, {
  country: 'Dominica',
  area: 751.00
}, {
  country: 'Denmark',
  area: 43094.00
}, {
  country: 'Dominican Republic',
  area: 48511.00
}, {
  country: 'Algeria',
  area: 2381741.00
}, {
  country: 'Ecuador',
  area: 283561.00
}, {
  country: 'Egypt',
  area: 1001449.00
}, {
  country: 'Eritrea',
  area: 117600.00
}, {
  country: 'Western Sahara',
  area: 266000.00
}, {
  country: 'Spain',
  area: 505992.00
}, {
  country: 'Estonia',
  area: 45227.00
}, {
  country: 'Ethiopia',
  area: 1104300.00
}, {
  country: 'Finland',
  area: 338145.00
}, {
  country: 'Fiji Islands',
  area: 18274.00
}, {
  country: 'Falkland Islands',
  area: 12173.00
}, {
  country: 'France',
  area: 551500.00
}, {
  country: 'Faroe Islands',
  area: 1399.00
}, {
  country: 'Federated States of Micronesia',
  area: 702.00
}, {
  country: 'Gabon',
  area: 267668.00
}, {
  country: 'United Kingdom',
  area: 242900.00
}, {
  country: 'Georgia',
  area: 69700.00
}, {
  country: 'Ghana',
  area: 238533.00
}, {
  country: 'Gibraltar',
  area: 6.00
}, {
  country: 'Guinea',
  area: 245857.00
}, {
  country: 'Guadeloupe',
  area: 1705.00
}, {
  country: 'Gambia',
  area: 11295.00
}, {
  country: 'Guinea-Bissau',
  area: 36125.00
}, {
  country: 'Equatorial Guinea',
  area: 28051.00
}, {
  country: 'Greece',
  area: 131626.00
}, {
  country: 'Grenada',
  area: 344.00
}, {
  country: 'Greenland',
  area: 2166090.00
}, {
  country: 'Guatemala',
  area: 108889.00
}, {
  country: 'French Guiana',
  area: 90000.00
}, {
  country: 'Guam',
  area: 549.00
}, {
  country: 'Guyana',
  area: 214969.00
}, {
  country: 'Hong Kong',
  area: 1075.00
}, {
  country: 'Heard Island and McDonald Islands',
  area: 359.00
}, {
  country: 'Honduras',
  area: 112088.00
}, {
  country: 'Croatia',
  area: 56538.00
}, {
  country: 'Haiti',
  area: 27750.00
}, {
  country: 'Hungary',
  area: 93030.00
}, {
  country: 'Indonesia',
  area: 1904569.00
}, {
  country: 'India',
  area: 3287263.00
}, {
  country: 'British Indian Ocean Territory',
  area: 78.00
}, {
  country: 'Ireland',
  area: 70273.00
}, {
  country: 'Iran',
  area: 1648195.00
}, {
  country: 'Iraq',
  area: 438317.00
}, {
  country: 'Iceland',
  area: 103000.00
}, {
  country: 'Israel',
  area: 21056.00
}, {
  country: 'Italy',
  area: 301316.00
}, {
  country: 'Jamaica',
  area: 10990.00
}, {
  country: 'Jordan',
  area: 88946.00
}, {
  country: 'Japan',
  area: 377829.00
}, {
  country: 'Kazakhstan',
  area: 2724900.00
}, {
  country: 'Kenya',
  area: 580367.00
}, {
  country: 'Kyrgyzstan',
  area: 199900.00
}, {
  country: 'Cambodia',
  area: 181035.00
}, {
  country: 'Kiribati',
  area: 726.00
}, {
  country: 'Saint Kitts and Nevis',
  area: 261.00
}, {
  country: 'South Korea',
  area: 99434.00
}, {
  country: 'Kuwait',
  area: 17818.00
}, {
  country: 'Laos',
  area: 236800.00
}, {
  country: 'Lebanon',
  area: 10400.00
}, {
  country: 'Liberia',
  area: 111369.00
}, {
  country: 'Libyan Arab Jamahiriya',
  area: 1759540.00
}, {
  country: 'Saint Lucia',
  area: 622.00
}, {
  country: 'Liechtenstein',
  area: 160.00
}, {
  country: 'Sri Lanka',
  area: 65610.00
}, {
  country: 'Lesotho',
  area: 30355.00
}, {
  country: 'Lithuania',
  area: 65301.00
}, {
  country: 'Luxembourg',
  area: 2586.00
}, {
  country: 'Latvia',
  area: 64589.00
}, {
  country: 'Macao',
  area: 18.00
}, {
  country: 'Morocco',
  area: 446550.00
}, {
  country: 'Monaco',
  area: 1.50
}, {
  country: 'Moldova',
  area: 33851.00
}, {
  country: 'Madagascar',
  area: 587041.00
}, {
  country: 'Maldives',
  area: 298.00
}, {
  country: 'Mexico',
  area: 1958201.00
}, {
  country: 'Marshall Islands',
  area: 181.00
}, {
  country: 'North Macedonia',
  area: 25713.00
}, {
  country: 'Mali',
  area: 1240192.00
}, {
  country: 'Malta',
  area: 316.00
}, {
  country: 'Myanmar',
  area: 676578.00
}, {
  country: 'Mongolia',
  area: 1566500.00
}, {
  country: 'Northern Mariana Islands',
  area: 464.00
}, {
  country: 'Mozambique',
  area: 801590.00
}, {
  country: 'Mauritania',
  area: 1025520.00
}, {
  country: 'Montserrat',
  area: 102.00
}, {
  country: 'Martinique',
  area: 1102.00
}, {
  country: 'Mauritius',
  area: 2040.00
}, {
  country: 'Malawi',
  area: 118484.00
}, {
  country: 'Malaysia',
  area: 329758.00
}, {
  country: 'Mayotte',
  area: 373.00
}, {
  country: 'Namibia',
  area: 824292.00
}, {
  country: 'New Caledonia',
  area: 18575.00
}, {
  country: 'Niger',
  area: 1267000.00
}, {
  country: 'Norfolk Island',
  area: 36.00
}, {
  country: 'Nigeria',
  area: 923768.00
}, {
  country: 'Nicaragua',
  area: 130000.00
}, {
  country: 'Niue',
  area: 260.00
}, {
  country: 'Netherlands',
  area: 41526.00
}, {
  country: 'Norway',
  area: 323877.00
}, {
  country: 'Nepal',
  area: 147181.00
}, {
  country: 'Nauru',
  area: 21.00
}, {
  country: 'New Zealand',
  area: 270534.00
}, {
  country: 'Oman',
  area: 309500.00
}, {
  country: 'Pakistan',
  area: 796095.00
}, {
  country: 'Panama',
  area: 75517.00
}, {
  country: 'Pitcairn',
  area: 49.00
}, {
  country: 'Peru',
  area: 1285216.00
}, {
  country: 'Philippines',
  area: 300000.00
}, {
  country: 'Palau',
  area: 459.00
}, {
  country: 'Papua New Guinea',
  area: 462840.00
}, {
  country: 'Poland',
  area: 323250.00
}, {
  country: 'Puerto Rico',
  area: 8875.00
}, {
  country: 'North Korea',
  area: 120538.00
}, {
  country: 'Portugal',
  area: 91982.00
}, {
  country: 'Paraguay',
  area: 406752.00
}, {
  country: 'Palestine',
  area: 6257.00
}, {
  country: 'French Polynesia',
  area: 4000.00
}, {
  country: 'Qatar',
  area: 11000.00
}, {
  country: 'Reunion',
  area: 2510.00
}, {
  country: 'Romania',
  area: 238391.00
}, {
  country: 'Russian Federation',
  area: 17075400.00
}, {
  country: 'Rwanda',
  area: 26338.00
}, {
  country: 'Saudi Arabia',
  area: 2149690.00
}, {
  country: 'Sudan',
  area: 1886068.00
}, {
  country: 'South Sudan',
  area: 619745.00
}, {
  country: 'Senegal',
  area: 196722.00
}, {
  country: 'Singapore',
  area: 618.00
}, {
  country: 'South Georgia and the South Sandwich Islands',
  area: 3903.00
}, {
  country: 'Saint Helena',
  area: 314.00
}, {
  country: 'Svalbard and Jan Mayen',
  area: 62422.00
}, {
  country: 'Solomon Islands',
  area: 28896.00
}, {
  country: 'Sierra Leone',
  area: 71740.00
}, {
  country: 'El Salvador',
  area: 21041.00
}, {
  country: 'San Marino',
  area: 61.00
}, {
  country: 'Somalia',
  area: 637657.00
}, {
  country: 'Saint Pierre and Miquelon',
  area: 242.00
}, {
  country: 'Sao Tome and Principe',
  area: 964.00
}, {
  country: 'Suriname',
  area: 163265.00
}, {
  country: 'Slovakia',
  area: 49012.00
}, {
  country: 'Slovenia',
  area: 20256.00
}, {
  country: 'Sweden',
  area: 449964.00
}, {
  country: 'Swaziland',
  area: 17364.00
}, {
  country: 'Seychelles',
  area: 455.00
}, {
  country: 'Syria',
  area: 185180.00
}, {
  country: 'Turks and Caicos Islands',
  area: 430.00
}, {
  country: 'Chad',
  area: 1284000.00
}, {
  country: 'Togo',
  area: 56785.00
}, {
  country: 'Thailand',
  area: 513115.00
}, {
  country: 'Tajikistan',
  area: 143100.00
}, {
  country: 'Tokelau',
  area: 12.00
}, {
  country: 'Turkmenistan',
  area: 488100.00
}, {
  country: 'East Timor',
  area: 14874.00
}, {
  country: 'Tonga',
  area: 650.00
}, {
  country: 'Trinidad and Tobago',
  area: 5130.00
}, {
  country: 'Tunisia',
  area: 163610.00
}, {
  country: 'Turkey',
  area: 774815.00
}, {
  country: 'Tuvalu',
  area: 26.00
}, {
  country: 'Taiwan',
  area: 36188.00
}, {
  country: 'Tanzania',
  area: 883749.00
}, {
  country: 'Uganda',
  area: 241038.00
}, {
  country: 'Ukraine',
  area: 603700.00
}, {
  country: 'United States Minor Outlying Islands',
  area: 16.00
}, {
  country: 'Uruguay',
  area: 175016.00
}, {
  country: 'United States',
  area: 9363520.00
}, {
  country: 'Uzbekistan',
  area: 447400.00
}, {
  country: 'Holy See (Vatican City State)',
  area: 0.40
}, {
  country: 'Saint Vincent and the Grenadines',
  area: 388.00
}, {
  country: 'Venezuela',
  area: 912050.00
}, {
  country: 'British Virgin Islands',
  area: 151.00
}, {
  country: 'U.S. Virgin Islands',
  area: 347.00
}, {
  country: 'Vietnam',
  area: 331689.00
}, {
  country: 'Vanuatu',
  area: 12189.00
}, {
  country: 'Wallis and Futuna',
  area: 200.00
}, {
  country: 'Samoa',
  area: 2831.00
}, {
  country: 'Yemen',
  area: 527968.00
}, {
  country: 'Yugoslavia',
  area: 102173.00
}, {
  country: 'South Africa',
  area: 1221037.00
}, {
  country: 'Zambia',
  area: 752618.00
}, {
  country: 'Zimbabwe',
  area: 390757.00
}];

/***/ }),

/***/ 12439:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-word-cloud-series/examples-chart-word-cloud-series.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartWordCloudSeriesComponent: () => (/* binding */ ExampleChartWordCloudSeriesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _examples_chart_word_cloud_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./examples-chart-word-cloud-series.component.html?ngResource */ 43081);
/* harmony import */ var _examples_chart_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./examples-chart-word-cloud-series.component.scss?ngResource */ 50803);
/* harmony import */ var _examples_chart_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_examples_chart_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ 86164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/chart-style/chart-style */ 95580);
/* harmony import */ var src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/chart-style/chart-style.builder */ 49861);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data */ 9211);








let ExampleChartWordCloudSeriesComponent = class ExampleChartWordCloudSeriesComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_5__.DATA;
    this.color = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10);
    this.style = new src_components_chart_style_chart_style_builder__WEBPACK_IMPORTED_MODULE_4__.ChartStyleBuilder().for(src_components_chart_style_chart_style__WEBPACK_IMPORTED_MODULE_3__.ChartStyle.label, (d, i) => {
      return {
        color: this.color(i),
        fontWeight: 600
      };
    });
  }
};
ExampleChartWordCloudSeriesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-examples-chart-word-cloud',
  template: _examples_chart_word_cloud_series_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_examples_chart_word_cloud_series_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ExampleChartWordCloudSeriesComponent);


/***/ }),

/***/ 93738:
/*!***********************************************!*\
  !*** ./src/examples/example-charts.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleChartsModule: () => (/* binding */ ExampleChartsModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/forms */ 34456);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/common */ 60316);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common/http */ 46443);
/* harmony import */ var src_components_components_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/components/components.module */ 83813);
/* harmony import */ var _example_data_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-data-service */ 56425);
/* harmony import */ var _example_chart_area_series_example_chart_area_series_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./example-chart-area-series/example-chart-area-series.component */ 19810);
/* harmony import */ var _example_chart_bar_horizontal_series_example_chart_bar_horizontal_series_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component */ 46966);
/* harmony import */ var _example_chart_bar_vertical_series_example_chart_bar_vertical_series_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./example-chart-bar-vertical-series/example-chart-bar-vertical-series.component */ 79430);
/* harmony import */ var _example_chart_bar_simple_series_examples_chart_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./example-chart-bar-simple-series/examples-chart-bar-simple-series.component */ 13015);
/* harmony import */ var _example_chart_bar_progress_series_examples_chart_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./example-chart-bar-progress-series/examples-chart-bar-progress-series.component */ 36309);
/* harmony import */ var _example_chart_chord_series_examples_chart_chord_series_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./example-chart-chord-series/examples-chart-chord-series.component */ 75419);
/* harmony import */ var _example_chart_circular_package_series_examples_chart_circular_package_series_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./example-chart-circular-package-series/examples-chart-circular-package-series.component */ 44879);
/* harmony import */ var _example_chart_donut_series_example_chart_donut_series_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./example-chart-donut-series/example-chart-donut-series.component */ 34972);
/* harmony import */ var _example_chart_double_donut_series_example_chart_double_donut_series_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./example-chart-double-donut-series/example-chart-double-donut-series.component */ 69358);
/* harmony import */ var _example_chart_half_donut_series_example_chart_half_donut_series_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./example-chart-half-donut-series/example-chart-half-donut-series.component */ 5478);
/* harmony import */ var _example_chart_icicle_series_example_chart_icicle_series_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./example-chart-icicle-series/example-chart-icicle-series.component */ 47414);
/* harmony import */ var _example_chart_line_series_example_chart_line_series_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./example-chart-line-series/example-chart-line-series.component */ 98754);
/* harmony import */ var _example_chart_line_series_types_example_chart_line_series_types_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./example-chart-line-series-types/example-chart-line-series-types.component */ 27682);
/* harmony import */ var _example_chart_matrix_series_example_chart_matrix_series_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./example-chart-matrix-series/example-chart-matrix-series.component */ 33522);
/* harmony import */ var _example_chart_pie_series_example_chart_pie_series_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./example-chart-pie-series/example-chart-pie-series.component */ 31276);
/* harmony import */ var _example_chart_radial_tree_series_example_chart_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./example-chart-radial-tree-series/example-chart-radial-tree-series..component */ 33630);
/* harmony import */ var _example_chart_sunburst_series_example_chart_sunburst_series_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./example-chart-sunburst-series/example-chart-sunburst-series.component */ 76718);
/* harmony import */ var _example_chart_word_cloud_series_examples_chart_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./example-chart-word-cloud-series/examples-chart-word-cloud-series.component */ 12439);
/* harmony import */ var _example_chart_map_series_example_chart_map_series_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./example-chart-map-series/example-chart-map-series.component */ 10668);
/* harmony import */ var _example_league_simulation_example_league_simulation_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./example-league-simulation/example-league-simulation.component */ 54126);



























let ExampleChartsModule = class ExampleChartsModule {};
ExampleChartsModule = (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_23__.NgModule)({
  declarations: [_example_chart_area_series_example_chart_area_series_component__WEBPACK_IMPORTED_MODULE_2__.ExampleChartAreaSeriesComponent, _example_chart_bar_horizontal_series_example_chart_bar_horizontal_series_component__WEBPACK_IMPORTED_MODULE_3__.ExampleChartBarHorizontalSeriesComponent, _example_chart_bar_vertical_series_example_chart_bar_vertical_series_component__WEBPACK_IMPORTED_MODULE_4__.ExampleChartBarVerticalSeriesComponent, _example_chart_bar_simple_series_examples_chart_bar_simple_series_component__WEBPACK_IMPORTED_MODULE_5__.ExampleChartBarSimpleSeriesComponent, _example_chart_bar_progress_series_examples_chart_bar_progress_series_component__WEBPACK_IMPORTED_MODULE_6__.ExampleChartBarProgressSeriesComponent, _example_chart_chord_series_examples_chart_chord_series_component__WEBPACK_IMPORTED_MODULE_7__.ExampleChartChordSeriesComponent, _example_chart_circular_package_series_examples_chart_circular_package_series_component__WEBPACK_IMPORTED_MODULE_8__.ExampleChartCircularPackageSeriesComponent, _example_chart_donut_series_example_chart_donut_series_component__WEBPACK_IMPORTED_MODULE_9__.ExampleChartDonutSeriesComponent, _example_chart_double_donut_series_example_chart_double_donut_series_component__WEBPACK_IMPORTED_MODULE_10__.ExampleChartDoubleDonutSeriesComponent, _example_chart_half_donut_series_example_chart_half_donut_series_component__WEBPACK_IMPORTED_MODULE_11__.ExampleChartHalfDonutSeriesComponent, _example_chart_icicle_series_example_chart_icicle_series_component__WEBPACK_IMPORTED_MODULE_12__.ExampleChartIcicleSeriesComponent, _example_chart_line_series_example_chart_line_series_component__WEBPACK_IMPORTED_MODULE_13__.ExampleChartLineSeriesComponent, _example_chart_line_series_types_example_chart_line_series_types_component__WEBPACK_IMPORTED_MODULE_14__.ExampleChartLineSeriesTypesComponent, _example_chart_map_series_example_chart_map_series_component__WEBPACK_IMPORTED_MODULE_20__.ExampleChartMapSeriesComponent, _example_chart_matrix_series_example_chart_matrix_series_component__WEBPACK_IMPORTED_MODULE_15__.ExampleChartMatrixSeriesComponent, _example_chart_pie_series_example_chart_pie_series_component__WEBPACK_IMPORTED_MODULE_16__.ExampleChartPieSeriesComponent, _example_chart_radial_tree_series_example_chart_radial_tree_series_component__WEBPACK_IMPORTED_MODULE_17__.ExampleChartRadialTreeComponent, _example_chart_sunburst_series_example_chart_sunburst_series_component__WEBPACK_IMPORTED_MODULE_18__.ExampleChartSunburstSeriesComponent, _example_chart_word_cloud_series_examples_chart_word_cloud_series_component__WEBPACK_IMPORTED_MODULE_19__.ExampleChartWordCloudSeriesComponent, _example_league_simulation_example_league_simulation_component__WEBPACK_IMPORTED_MODULE_21__.ExampleLeagueSimulationComponent],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_24__.CommonModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_25__.HttpClientModule, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormsModule, src_components_components_module__WEBPACK_IMPORTED_MODULE_0__.ChartModule],
  providers: [_example_data_service__WEBPACK_IMPORTED_MODULE_1__.ExampleDataService]
})], ExampleChartsModule);


/***/ }),

/***/ 56425:
/*!**********************************************!*\
  !*** ./src/examples/example-data-service.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleDataService: () => (/* binding */ ExampleDataService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ 35443);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 46443);




let ExampleDataService = class ExampleDataService {
  constructor(http) {
    this.http = http;
  }
  getData(season) {
    return this.http.get(`assets/epl${season}.json`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.map)(data => data.data));
  }
  getHistoryData() {
    return this.http.get(`assets/epl-clubs-position.json`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.map)(data => data.data));
  }
  static #_ = this.ctorParameters = () => [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient
  }];
};
ExampleDataService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)()], ExampleDataService);


/***/ }),

/***/ 10771:
/*!********************************************************!*\
  !*** ./src/examples/example-league-simulation/data.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DATA: () => (/* binding */ DATA)
/* harmony export */ });
const DATA = [{
  name: 'Liverpool',
  shortName: 'LIV',
  country: 'England',
  shortCountryName: 'ENG',
  pot: 1
}, {
  name: 'Chelsea',
  shortName: 'CHE',
  country: 'England',
  shortCountryName: 'ENG',
  pot: 1
}, {
  name: 'Barcelona',
  shortName: 'BAR',
  country: 'Spain',
  shortCountryName: 'ESP',
  pot: 1
}, {
  name: 'Manchester City',
  shortName: 'MCI',
  country: 'England',
  shortCountryName: 'ENG',
  pot: 1
}, {
  name: 'Juventus',
  shortName: 'JUV',
  country: 'Italy',
  shortCountryName: 'ITA',
  pot: 1
}, {
  name: 'Bayern Munich',
  shortName: 'BAY',
  country: 'Germany',
  shortCountryName: 'GER',
  pot: 1
}, {
  name: 'Paris Saint-Germain',
  shortName: 'PSG',
  country: 'France',
  shortCountryName: 'FRA',
  pot: 1
}, {
  name: 'Zenit Saint Petersburg',
  shortName: 'ZSP',
  country: 'Russia',
  shortCountryName: 'RUS',
  pot: 1
}, {
  name: 'Real Madrid',
  shortName: 'MAD',
  country: 'Spain',
  shortCountryName: 'ESP',
  pot: 2
}, {
  name: 'Atlético Madrid',
  shortName: 'ATM',
  country: 'Spain',
  shortCountryName: 'ESP',
  pot: 2
}, {
  name: 'Borussia Dortmund',
  shortName: 'DOR',
  country: 'Germany',
  shortCountryName: 'GER',
  pot: 2
}, {
  name: 'Napoli',
  shortName: 'NAP',
  country: 'Italy',
  shortCountryName: 'ITA',
  pot: 2
}, {
  name: 'Shakhtar Donetsk',
  shortName: 'SHK',
  country: 'Ukraine',
  shortCountryName: 'UKR',
  pot: 2
}, {
  name: 'Tottenham Hotspurs',
  shortName: 'TOT',
  country: 'England',
  shortCountryName: 'ENG',
  pot: 2
}, {
  name: 'Ajax',
  shortName: 'AJA',
  country: 'Netherlands',
  shortCountryName: 'NED',
  pot: 2
}, {
  name: 'Benfica',
  shortName: 'BEN',
  country: 'Portugal',
  shortCountryName: 'POR',
  pot: 2
}, {
  name: 'Lyon',
  shortName: 'LYO',
  country: 'France',
  shortCountryName: 'FRA',
  pot: 3
}, {
  name: 'Bayer Leverkusen',
  shortName: 'B04',
  country: 'Germany',
  shortCountryName: 'GER',
  pot: 3
}, {
  name: 'Red Bull Salzburg',
  shortName: 'RBS',
  country: 'Austria',
  shortCountryName: 'AUT',
  pot: 3
}, {
  name: 'Olympiacos',
  shortName: 'OLY',
  country: 'Greece',
  shortCountryName: 'GRC',
  pot: 3
}, {
  name: 'Club Brugge',
  shortName: 'BRU',
  country: 'Belgium',
  shortCountryName: 'BEL',
  pot: 3
}, {
  name: 'Valencia',
  shortName: 'VAL',
  country: 'Spain',
  shortCountryName: 'ESP',
  pot: 3
}, {
  name: 'Inter Milan',
  shortName: 'INT',
  country: 'Italy',
  shortCountryName: 'ITA',
  pot: 3
}, {
  name: 'Dinamo Zagreb',
  shortName: 'DZA',
  country: 'Croatia',
  shortCountryName: 'CRO',
  pot: 3
}, {
  name: 'Lokomotiv Moscow',
  shortName: 'LMO',
  country: 'Russia',
  shortCountryName: 'RUS',
  pot: 4
}, {
  name: 'Genk',
  shortName: 'GNK',
  country: 'Belgium',
  shortCountryName: 'BEL',
  pot: 4
}, {
  name: 'Galatasaray',
  shortName: 'GAL',
  country: 'Turkey',
  shortCountryName: 'TUR',
  pot: 4
}, {
  name: 'RB Leipzig',
  shortName: 'RBL',
  country: 'Austria',
  shortCountryName: 'AUT',
  pot: 4
}, {
  name: 'Slavia Prague',
  shortName: 'SLP',
  country: 'Czechia',
  shortCountryName: 'CZE',
  pot: 4
}, {
  name: 'Crvena Zvezda Belgrad',
  shortName: 'CSB',
  country: 'Serbia',
  shortCountryName: 'SRB',
  pot: 4
}, {
  name: 'Atalanta',
  shortName: 'ATT',
  country: 'Italy',
  shortCountryName: 'ITA',
  pot: 4
}, {
  name: 'Lille',
  shortName: 'LIL',
  country: 'France',
  shortCountryName: 'FRA',
  pot: 4
}];

/***/ }),

/***/ 54126:
/*!***************************************************************************************!*\
  !*** ./src/examples/example-league-simulation/example-league-simulation.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleLeagueSimulationComponent: () => (/* binding */ ExampleLeagueSimulationComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _example_league_simulation_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example-league-simulation.component.html?ngResource */ 34038);
/* harmony import */ var _example_league_simulation_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./example-league-simulation.component.scss?ngResource */ 47726);
/* harmony import */ var _example_league_simulation_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_example_league_simulation_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/epl-emblems.scss?ngResource */ 59012);
/* harmony import */ var _styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _styles_champions_league_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../styles/champions-league-logos.scss?ngResource */ 29792);
/* harmony import */ var _styles_champions_league_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_champions_league_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ 10771);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37580);







let ExampleLeagueSimulationComponent = class ExampleLeagueSimulationComponent {
  constructor() {
    this.data = _data__WEBPACK_IMPORTED_MODULE_4__.DATA;
    this.day = 1;
    this.letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];
    this.groups = [];
    this.next = [];
    this.roundOf16 = [];
    this.roundOf8 = [];
    this.roundOf4 = [];
    this.roundOf2 = {};
    this.roundOf16Teams = [[], []];
    this.roundOf8Teams = [];
    this.roundOf4Teams = [];
    this.roundOf2Teams = [];
    this.winner = {};
    this.results = [];
    this.teamsLeft = [];
  }
  ngOnInit() {
    let pot1 = this.data.filter(a => a.pot === 1);
    const pot2 = this.data.filter(a => a.pot === 2);
    const pot3 = this.data.filter(a => a.pot === 3);
    const pot4 = this.data.filter(a => a.pot === 4);
    const group1 = [];
    let group2 = [];
    let group3 = [];
    let group4 = [];
    for (let i = 0; i < 8; i++) {
      this.groups.push([]);
    }
    this.data.forEach(team => team = Object.assign(team, {
      points: 0,
      goals: [0, 0],
      pointsPerTeam: [0, 0, 0, 0],
      goalsDifferencePerTeam: [0, 0, 0, 0],
      awayGoalsPerTeam: [0, 0, 0, 0]
    }));
    for (const [i, group] of this.groups.entries()) {
      const team1 = pot1[Math.floor(Math.random() * pot1.length)];
      group1.push(team1);
      pot1 = pot1.filter(a => a.name !== team1.name);
    }
    const full = (pot, index) => {
      let potCopy = [...pot];
      for (let i = 0; i < 8; i++) {
        const countriesLeftForPot = index === 1 ? [...potCopy].filter(a => a.shortCountryName !== group1[i].shortCountryName) : index === 2 ? [...potCopy].filter(a => a.shortCountryName !== group1[i].shortCountryName && a.shortCountryName !== group2[i].shortCountryName) : [...potCopy].filter(a => a.shortCountryName !== group1[i].shortCountryName && a.shortCountryName !== group2[i].shortCountryName && a.shortCountryName !== group3[i].shortCountryName);
        if (countriesLeftForPot.length === 0) {
          for (let j = 0; j < 8; j++) {
            if (index === 1) {
              group2 = [];
            } else {
              if (index === 2) {
                group3 = [];
              } else {
                group4 = [];
              }
            }
          }
          full(pot, index);
          break;
        }
        const team = countriesLeftForPot[Math.floor(Math.random() * countriesLeftForPot.length)];
        potCopy = potCopy.filter(a => a.name !== team.name);
        if (index === 1) {
          group2.push(team);
        } else {
          if (index === 2) {
            group3.push(team);
          } else {
            group4.push(team);
          }
        }
      }
    };
    full(pot2, 1);
    full(pot3, 2);
    full(pot4, 3);
    let t1 = [];
    let t2 = [];
    let t3 = [];
    let t4 = [];
    this.startDraw = index => {
      for (let i = 0; i < 8; i++) {
        t1.push(setTimeout(() => this.groups[i].push(group1[i]), i * 1000 * index));
        t2.push(setTimeout(() => this.groups[i].push(group2[i]), (i + 8) * 1000 * index));
        t3.push(setTimeout(() => this.groups[i].push(group3[i]), (i + 16) * 1000 * index));
        t4.push(setTimeout(() => this.groups[i].push(group4[i]), (i + 24) * 1000 * index));
      }
    };
    this.drawFast = () => {
      t2 = t2.map(a => clearTimeout(a));
      t1 = t1.map(a => clearTimeout(a));
      t3 = t3.map(a => clearTimeout(a));
      t4 = t4.map(a => clearTimeout(a));
      for (let i = 0; i < 8; i++) {
        this.groups[i] = [];
      }
      this.startDraw(0);
    };
  }
  sortData(index) {
    return this.data.filter(a => a.pot === index);
  }
  sort(data) {
    if (this.day === 1) {
      return [...data].sort((a, b) => a.name.localeCompare(b.name));
    } else {
      return [...data].sort((a, b) => {
        if (a.points > b.points) {
          return -1;
        } else {
          if (a.points < b.points) {
            return 1;
          } else {
            if (a.pointsPerTeam[b.pot - 1] > b.pointsPerTeam[a.pot - 1]) {
              return -1;
            } else {
              if (a.pointsPerTeam[b.pot - 1] < b.pointsPerTeam[a.pot - 1]) {
                return 1;
              } else {
                if (a.goalsDifferencePerTeam[b.pot - 1] > b.goalsDifferencePerTeam[a.pot - 1]) {
                  return -1;
                } else {
                  if (a.goalsDifferencePerTeam[b.pot - 1] < b.goalsDifferencePerTeam[a.pot - 1]) {
                    return 1;
                  } else {
                    if (a.awayGoalsPerTeam[b.pot - 1] > b.awayGoalsPerTeam[a.pot - 1]) {
                      return -1;
                    } else {
                      if (a.awayGoalsPerTeam[b.pot - 1] < b.awayGoalsPerTeam[a.pot - 1]) {
                        return 1;
                      } else {
                        if (a.goals[0] - a.goals[1] > b.goals[0] - b.goals[1]) {
                          return -1;
                        } else {
                          if (a.goals[0] - a.goals[1] < b.goals[0] - b.goals[1]) {
                            return 1;
                          } else {
                            if (a.goals[0] > b.goals[0]) {
                              return -1;
                            } else {
                              if (a.goals[0] < b.goals[0]) {
                                return 1;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      });
    }
  }
  simulate(day) {
    switch (day) {
      case 1:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][0].points = this.groups[i][0].points + 3;
              this.groups[i][0].pointsPerTeam[1] = this.groups[i][0].pointsPerTeam[1] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][1].points = this.groups[i][1].points + 3;
                this.groups[i][1].pointsPerTeam[0] = this.groups[i][1].pointsPerTeam[0] + 3;
              } else {
                this.groups[i][0].points = this.groups[i][0].points + 1;
                this.groups[i][1].points = this.groups[i][1].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][2].points = this.groups[i][2].points + 3;
              this.groups[i][2].pointsPerTeam[3] = this.groups[i][2].pointsPerTeam[3] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][3].points = this.groups[i][3].points + 3;
                this.groups[i][3].pointsPerTeam[2] = this.groups[i][3].pointsPerTeam[2] + 3;
              } else {
                this.groups[i][2].points = this.groups[i][2].points + 1;
                this.groups[i][3].points = this.groups[i][3].points + 1;
              }
            }
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult1HomeTeam;
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult1AwayTeam;
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult2HomeTeam;
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult2AwayTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult1HomeTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult1AwayTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult2HomeTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult2AwayTeam;
            this.groups[i][0].goalsDifferencePerTeam[1] = this.groups[i][0].goalsDifferencePerTeam[1] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][1].goalsDifferencePerTeam[0] = this.groups[i][1].goalsDifferencePerTeam[0] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][2].goalsDifferencePerTeam[3] = this.groups[i][2].goalsDifferencePerTeam[3] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][3].goalsDifferencePerTeam[2] = this.groups[i][3].goalsDifferencePerTeam[2] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][1].awayGoalsPerTeam[0] = this.groups[i][1].awayGoalsPerTeam[0] + matchResult1AwayTeam;
            this.groups[i][3].awayGoalsPerTeam[2] = this.groups[i][3].awayGoalsPerTeam[2] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][0].name}`,
              team2: `${this.groups[i][1].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][2].name}`,
              team2: `${this.groups[i][3].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          break;
        }
      case 2:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][1].points = this.groups[i][1].points + 3;
              this.groups[i][1].pointsPerTeam[2] = this.groups[i][1].pointsPerTeam[2] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][2].points = this.groups[i][2].points + 3;
                this.groups[i][2].pointsPerTeam[1] = this.groups[i][2].pointsPerTeam[1] + 3;
              } else {
                this.groups[i][1].points = this.groups[i][1].points + 1;
                this.groups[i][2].points = this.groups[i][2].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][3].points = this.groups[i][3].points + 3;
              this.groups[i][3].pointsPerTeam[0] = this.groups[i][3].pointsPerTeam[0] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][0].points = this.groups[i][0].points + 3;
                this.groups[i][0].pointsPerTeam[3] = this.groups[i][0].pointsPerTeam[3] + 3;
              } else {
                this.groups[i][3].points = this.groups[i][3].points + 1;
                this.groups[i][0].points = this.groups[i][0].points + 1;
              }
            }
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult1HomeTeam;
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult1AwayTeam;
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult2HomeTeam;
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult2AwayTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult1AwayTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult1HomeTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult2AwayTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult2HomeTeam;
            this.groups[i][1].goalsDifferencePerTeam[2] = this.groups[i][1].goalsDifferencePerTeam[2] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][2].goalsDifferencePerTeam[1] = this.groups[i][2].goalsDifferencePerTeam[1] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][3].goalsDifferencePerTeam[0] = this.groups[i][3].goalsDifferencePerTeam[0] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][0].goalsDifferencePerTeam[3] = this.groups[i][0].goalsDifferencePerTeam[3] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][2].awayGoalsPerTeam[1] = this.groups[i][2].awayGoalsPerTeam[1] + matchResult1AwayTeam;
            this.groups[i][0].awayGoalsPerTeam[3] = this.groups[i][0].awayGoalsPerTeam[3] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][1].name}`,
              team2: `${this.groups[i][2].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][3].name}`,
              team2: `${this.groups[i][0].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          break;
        }
      case 3:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][3].points = this.groups[i][3].points + 3;
              this.groups[i][3].pointsPerTeam[1] = this.groups[i][3].pointsPerTeam[1] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][1].points = this.groups[i][1].points + 3;
                this.groups[i][1].pointsPerTeam[3] = this.groups[i][1].pointsPerTeam[3] + 3;
              } else {
                this.groups[i][3].points = this.groups[i][3].points + 1;
                this.groups[i][1].points = this.groups[i][1].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][2].points = this.groups[i][2].points + 3;
              this.groups[i][2].pointsPerTeam[0] = this.groups[i][2].pointsPerTeam[0] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][0].points = this.groups[i][0].points + 3;
                this.groups[i][0].pointsPerTeam[2] = this.groups[i][0].pointsPerTeam[2] + 3;
              } else {
                this.groups[i][2].points = this.groups[i][2].points + 1;
                this.groups[i][0].points = this.groups[i][0].points + 1;
              }
            }
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult1HomeTeam;
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult1AwayTeam;
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult2HomeTeam;
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult2AwayTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult1AwayTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult1HomeTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult2AwayTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult2HomeTeam;
            this.groups[i][3].goalsDifferencePerTeam[1] = this.groups[i][3].goalsDifferencePerTeam[1] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][1].goalsDifferencePerTeam[3] = this.groups[i][1].goalsDifferencePerTeam[3] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][2].goalsDifferencePerTeam[0] = this.groups[i][2].goalsDifferencePerTeam[0] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][0].goalsDifferencePerTeam[2] = this.groups[i][0].goalsDifferencePerTeam[2] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][3].awayGoalsPerTeam[1] = this.groups[i][3].awayGoalsPerTeam[1] + matchResult1AwayTeam;
            this.groups[i][2].awayGoalsPerTeam[0] = this.groups[i][2].awayGoalsPerTeam[0] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][3].name}`,
              team2: `${this.groups[i][1].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][2].name}`,
              team2: `${this.groups[i][0].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          break;
        }
      case 4:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][1].points = this.groups[i][1].points + 3;
              this.groups[i][1].pointsPerTeam[3] = this.groups[i][1].pointsPerTeam[3] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][3].points = this.groups[i][3].points + 3;
                this.groups[i][3].pointsPerTeam[1] = this.groups[i][3].pointsPerTeam[1] + 3;
              } else {
                this.groups[i][1].points = this.groups[i][1].points + 1;
                this.groups[i][3].points = this.groups[i][3].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][0].points = this.groups[i][0].points + 3;
              this.groups[i][0].pointsPerTeam[2] = this.groups[i][0].pointsPerTeam[2] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][2].points = this.groups[i][2].points + 3;
                this.groups[i][2].pointsPerTeam[0] = this.groups[i][2].pointsPerTeam[0] + 3;
              } else {
                this.groups[i][0].points = this.groups[i][0].points + 1;
                this.groups[i][2].points = this.groups[i][2].points + 1;
              }
            }
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult1HomeTeam;
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult1AwayTeam;
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult2HomeTeam;
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult2AwayTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult1AwayTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult1HomeTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult2AwayTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult2HomeTeam;
            this.groups[i][1].goalsDifferencePerTeam[3] = this.groups[i][1].goalsDifferencePerTeam[3] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][3].goalsDifferencePerTeam[1] = this.groups[i][3].goalsDifferencePerTeam[1] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][0].goalsDifferencePerTeam[2] = this.groups[i][0].goalsDifferencePerTeam[2] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][2].goalsDifferencePerTeam[0] = this.groups[i][2].goalsDifferencePerTeam[0] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][1].awayGoalsPerTeam[3] = this.groups[i][1].awayGoalsPerTeam[3] + matchResult1AwayTeam;
            this.groups[i][2].awayGoalsPerTeam[0] = this.groups[i][2].awayGoalsPerTeam[0] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][1].name}`,
              team2: `${this.groups[i][3].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][0].name}`,
              team2: `${this.groups[i][2].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          break;
        }
      case 5:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][3].points = this.groups[i][3].points + 3;
              this.groups[i][3].pointsPerTeam[2] = this.groups[i][3].pointsPerTeam[2] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][2].points = this.groups[i][2].points + 3;
                this.groups[i][2].pointsPerTeam[3] = this.groups[i][2].pointsPerTeam[3] + 3;
              } else {
                this.groups[i][3].points = this.groups[i][3].points + 1;
                this.groups[i][2].points = this.groups[i][2].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][1].points = this.groups[i][1].points + 3;
              this.groups[i][1].pointsPerTeam[0] = this.groups[i][1].pointsPerTeam[0] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][0].points = this.groups[i][0].points + 3;
                this.groups[i][0].pointsPerTeam[1] = this.groups[i][0].pointsPerTeam[1] + 3;
              } else {
                this.groups[i][1].points = this.groups[i][1].points + 1;
                this.groups[i][0].points = this.groups[i][0].points + 1;
              }
            }
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult1HomeTeam;
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult1AwayTeam;
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult2HomeTeam;
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult2AwayTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult1AwayTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult1HomeTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult2AwayTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult2HomeTeam;
            this.groups[i][3].goalsDifferencePerTeam[2] = this.groups[i][3].goalsDifferencePerTeam[2] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][2].goalsDifferencePerTeam[3] = this.groups[i][2].goalsDifferencePerTeam[3] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][1].goalsDifferencePerTeam[0] = this.groups[i][1].goalsDifferencePerTeam[0] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][0].goalsDifferencePerTeam[1] = this.groups[i][0].goalsDifferencePerTeam[1] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][3].awayGoalsPerTeam[2] = this.groups[i][3].awayGoalsPerTeam[2] + matchResult1AwayTeam;
            this.groups[i][0].awayGoalsPerTeam[1] = this.groups[i][0].awayGoalsPerTeam[1] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][3].name}`,
              team2: `${this.groups[i][2].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][1].name}`,
              team2: `${this.groups[i][0].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          break;
        }
      case 6:
        {
          for (let i = 0; i < 8; i++) {
            const matchResult1HomeTeam = this.getRandomNumber(4);
            const matchResult1AwayTeam = this.getRandomNumber(4);
            const matchResult2HomeTeam = this.getRandomNumber(4);
            const matchResult2AwayTeam = this.getRandomNumber(4);
            if (matchResult1HomeTeam > matchResult1AwayTeam) {
              this.groups[i][2].points = this.groups[i][2].points + 3;
              this.groups[i][2].pointsPerTeam[1] = this.groups[i][2].pointsPerTeam[1] + 3;
            } else {
              if (matchResult1HomeTeam < matchResult1AwayTeam) {
                this.groups[i][1].points = this.groups[i][1].points + 3;
                this.groups[i][1].pointsPerTeam[2] = this.groups[i][1].pointsPerTeam[2] + 3;
              } else {
                this.groups[i][2].points = this.groups[i][2].points + 1;
                this.groups[i][1].points = this.groups[i][1].points + 1;
              }
            }
            if (matchResult2HomeTeam > matchResult2AwayTeam) {
              this.groups[i][0].points = this.groups[i][0].points + 3;
              this.groups[i][0].pointsPerTeam[3] = this.groups[i][0].pointsPerTeam[3] + 3;
            } else {
              if (matchResult2HomeTeam < matchResult2AwayTeam) {
                this.groups[i][3].points = this.groups[i][3].points + 3;
                this.groups[i][3].pointsPerTeam[0] = this.groups[i][3].pointsPerTeam[0] + 3;
              } else {
                this.groups[i][0].points = this.groups[i][0].points + 1;
                this.groups[i][3].points = this.groups[i][3].points + 1;
              }
            }
            this.groups[i][2].goals[0] = this.groups[i][2].goals[0] + matchResult1HomeTeam;
            this.groups[i][1].goals[0] = this.groups[i][1].goals[0] + matchResult1AwayTeam;
            this.groups[i][0].goals[0] = this.groups[i][0].goals[0] + matchResult2HomeTeam;
            this.groups[i][3].goals[0] = this.groups[i][3].goals[0] + matchResult2AwayTeam;
            this.groups[i][2].goals[1] = this.groups[i][2].goals[1] + matchResult1AwayTeam;
            this.groups[i][1].goals[1] = this.groups[i][1].goals[1] + matchResult1HomeTeam;
            this.groups[i][0].goals[1] = this.groups[i][0].goals[1] + matchResult2AwayTeam;
            this.groups[i][3].goals[1] = this.groups[i][3].goals[1] + matchResult2HomeTeam;
            this.groups[i][2].goalsDifferencePerTeam[1] = this.groups[i][2].goalsDifferencePerTeam[1] + matchResult1HomeTeam - matchResult1AwayTeam;
            this.groups[i][1].goalsDifferencePerTeam[2] = this.groups[i][1].goalsDifferencePerTeam[2] + matchResult1AwayTeam - matchResult1HomeTeam;
            this.groups[i][0].goalsDifferencePerTeam[3] = this.groups[i][0].goalsDifferencePerTeam[3] + matchResult2HomeTeam - matchResult2AwayTeam;
            this.groups[i][3].goalsDifferencePerTeam[0] = this.groups[i][3].goalsDifferencePerTeam[0] + matchResult2AwayTeam - matchResult2HomeTeam;
            this.groups[i][1].awayGoalsPerTeam[2] = this.groups[i][1].awayGoalsPerTeam[2] + matchResult1AwayTeam;
            this.groups[i][3].awayGoalsPerTeam[0] = this.groups[i][3].awayGoalsPerTeam[0] + matchResult2AwayTeam;
            this.results.push({
              team1: `${this.groups[i][2].name}`,
              team2: `${this.groups[i][0].name}`,
              score: [matchResult1HomeTeam, matchResult1AwayTeam]
            }, {
              team1: `${this.groups[i][1].name}`,
              team2: `${this.groups[i][3].name}`,
              score: [matchResult2HomeTeam, matchResult2AwayTeam]
            });
          }
          this.sortDataPlayoff = [this.groups.map(g => this.sort(g)[0]), this.groups.map(g => this.sort(g)[1])];
          let pot1 = this.groups.map(g => this.sort(g)[0]);
          let pot2 = this.groups.map(g => this.sort(g)[1]);
          for (let j = 0; j < 8; j++) {
            const team1 = pot1[Math.floor(Math.random() * pot1.length)];
            pot1 = pot1.filter(a => a.name !== team1.name);
            const team2 = pot2.filter(a => a.shortCountryName !== team1.shortCountryName)[Math.floor(Math.random() * pot2.filter(a => a.shortCountryName !== team1.shortCountryName).length)];
            pot2 = pot2.filter(a => a.name !== team2.name);
            this.roundOf16Teams[0].push(team1);
            this.roundOf16Teams[1].push(team2);
          }
          break;
        }
      case 7:
        {
          const a = this.simulatePlayoff(8);
          this.roundOf16 = a.result;
          this.roundOf8Teams = a.teams;
          this.teamsLeft = [...this.roundOf8Teams].sort((x, y) => 0.5 - Math.random());
          this.roundOf8Teams = [...this.teamsLeft];
          break;
        }
      case 8:
        {
          const a = this.simulatePlayoff(4);
          this.roundOf8 = a.result;
          this.roundOf4Teams = a.teams;
          this.teamsLeft = [...this.roundOf4Teams].sort((x, y) => 0.5 - Math.random());
          this.roundOf4Teams = [...this.teamsLeft];
          break;
        }
      case 9:
        {
          const a = this.simulatePlayoff(2);
          this.roundOf4 = a.result;
          this.roundOf2Teams = a.teams;
          break;
        }
      case 10:
        {
          this.roundOf2 = this.simulateFinal();
          break;
        }
    }
    this.day = this.day + 1;
  }
  getRandomNumber(max) {
    return Math.floor(Math.random() * max);
  }
  getLogo(club) {
    return `logo logo-${club.replace(/\s+/g, '-').toLowerCase()}`;
  }
  simulatePlayoff(stage) {
    const result = [];
    this.next = [];
    let teamsLeft = [...this.teamsLeft];
    for (let i = 0; i < stage; i++) {
      let team1;
      let team2;
      if (stage === 8) {
        team1 = this.roundOf16Teams[0][i];
        team2 = this.roundOf16Teams[1][i];
      } else {
        team1 = teamsLeft[1];
        team2 = teamsLeft[0];
        teamsLeft = teamsLeft.filter(a => a.name !== team1.name && a.name !== team2.name);
      }
      const matchResult1HomeTeam = this.getRandomNumber(4);
      const matchResult1AwayTeam = this.getRandomNumber(4);
      const matchResult2HomeTeam = this.getRandomNumber(4);
      const matchResult2AwayTeam = this.getRandomNumber(4);
      result.push({
        team1: team2,
        team2: team1,
        score: [matchResult1HomeTeam, matchResult1AwayTeam]
      }, {
        team1,
        team2,
        score: [matchResult2HomeTeam, matchResult2AwayTeam]
      });
      if (matchResult2HomeTeam + matchResult1AwayTeam > matchResult1HomeTeam + matchResult2AwayTeam) {
        this.next.push(team1);
        result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
          comment: `${team1.name} won
                        ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam} on aggregate`
        });
      } else {
        if (matchResult2HomeTeam + matchResult1AwayTeam < matchResult1HomeTeam + matchResult2AwayTeam) {
          this.next.push(team2);
          result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
            comment: `${team2.name} won
                            ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam} on aggregate`
          });
        } else {
          if (matchResult1AwayTeam > matchResult2AwayTeam) {
            this.next.push(team1);
            result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
              comment: `${team1.name} won
                                ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam} on away goals`
            });
          } else {
            if (matchResult1AwayTeam < matchResult2AwayTeam) {
              this.next.push(team2);
              result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                comment: `${team2.name} won
                                    ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam} on away goals`
              });
            } else {
              const extraGoals1 = Math.floor(Math.random() * 2);
              const extraGoals2 = Math.floor(Math.random() * 2);
              let penatlyGoals1 = Math.floor(Math.random() * 3 + 2);
              let penatlyGoals2 = Math.floor(Math.random() * 3 + 2);
              if (extraGoals1 > extraGoals2) {
                this.next.push(team1);
                result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                  comment: `${team1.name} won
                                            ${matchResult2HomeTeam + matchResult1AwayTeam + extraGoals1}:${matchResult1HomeTeam + matchResult2AwayTeam + extraGoals2}
                                            on aggregate in extra time
                                            ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                            (${extraGoals1}:${extraGoals2})`
                });
              } else {
                if (extraGoals1 < extraGoals2) {
                  this.next.push(team2);
                  result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                    comment: `${team2.name} won
                                                ${matchResult2HomeTeam + matchResult1AwayTeam + extraGoals1}:${matchResult1HomeTeam + matchResult2AwayTeam + extraGoals2}
                                                on aggregate in extra time
                                                ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                (${extraGoals1}:${extraGoals2})`
                  });
                } else {
                  if (matchResult1AwayTeam + extraGoals1 > matchResult2AwayTeam) {
                    this.next.push(team1);
                    result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                      comment: `${team1.name} won on away goals in extra time
                                                ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                (${extraGoals1}:${extraGoals2})`
                    });
                  } else {
                    if (matchResult1AwayTeam + extraGoals1 < matchResult2AwayTeam) {
                      this.next.push(team2);
                      result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                        comment: `${team2.name} won on away goals in extra time
                                                        ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                        (${extraGoals1}:${extraGoals2})`
                      });
                    } else {
                      if (penatlyGoals1 > penatlyGoals2) {
                        this.next.push(team1);
                        result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                          comment: `${team1.name} won on penalties
                                                            ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                            (${extraGoals1}:${extraGoals2})
                                                            Pen. (${penatlyGoals1}:${penatlyGoals2})`
                        });
                      } else {
                        if (penatlyGoals1 < penatlyGoals2) {
                          this.next.push(team2);
                          result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                            comment: `${team2.name} won on penalties
                                                                ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                                (${extraGoals1}:${extraGoals2}) Pen. (${penatlyGoals1}:${penatlyGoals2})`
                          });
                        } else {
                          do {
                            penatlyGoals1 = penatlyGoals1 + Math.floor(Math.random() * 1);
                            penatlyGoals2 = penatlyGoals2 + Math.floor(Math.random() * 1);
                          } while (penatlyGoals1 === penatlyGoals2);
                          if (penatlyGoals1 > penatlyGoals2) {
                            this.next.push(team1);
                            result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                              comment: `${team1.name} won on penalties
                                                                    ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                                    (${extraGoals1}:${extraGoals2}) Pen. (${penatlyGoals1}:${penatlyGoals2})`
                            });
                          } else {
                            this.next.push(team2);
                            result[i * 2 + 1] = Object.assign(result[i * 2 + 1], {
                              comment: `${team2.name} won on penalties
                                                                    ${matchResult2HomeTeam + matchResult1AwayTeam}:${matchResult1HomeTeam + matchResult2AwayTeam}
                                                                    (${extraGoals1}:${extraGoals2}) Pen. (${penatlyGoals1}:${penatlyGoals2})`
                            });
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    this.teamsLeft = this.next;
    return {
      result,
      teams: this.next
    };
  }
  simulateFinal() {
    let result = {};
    const team1 = this.teamsLeft[0];
    const team2 = this.teamsLeft[1];
    const matchResult1HomeTeam = this.getRandomNumber(4);
    const matchResult1AwayTeam = this.getRandomNumber(4);
    result = {
      team1,
      team2,
      score: [matchResult1HomeTeam, matchResult1AwayTeam]
    };
    if (matchResult1HomeTeam > matchResult1AwayTeam) {
      this.winner = team1;
    } else {
      this.winner = team2;
    }
    if (matchResult1HomeTeam === matchResult1AwayTeam) {
      const extraGoals1 = Math.floor(Math.random() * 2);
      const extraGoals2 = Math.floor(Math.random() * 2);
      let penatlyGoals1 = Math.floor(Math.random() * 3 + 2);
      let penatlyGoals2 = Math.floor(Math.random() * 3 + 2);
      if (extraGoals1 > extraGoals2) {
        this.winner = team1;
        result = Object.assign(result, {
          comment: `${team1.name} won ${matchResult1HomeTeam + extraGoals1}:${matchResult1AwayTeam + extraGoals2}
                                  in extra time (${extraGoals1}:${extraGoals2})`
        });
      } else {
        if (extraGoals1 < extraGoals2) {
          this.winner = team2;
          result = Object.assign(result, {
            comment: `${team2.name} won ${matchResult1HomeTeam + extraGoals1}:${matchResult1AwayTeam + extraGoals2}
                            in extra time (${extraGoals1}:${extraGoals2})`
          });
        } else {
          if (penatlyGoals1 > penatlyGoals2) {
            this.winner = team1;
            result = Object.assign(result, {
              comment: `${team1.name} won ${matchResult1HomeTeam + extraGoals1}:${matchResult1AwayTeam + extraGoals2}
                                          on penalties (${extraGoals1}:${extraGoals2}) Pen. ${penatlyGoals1}: ${penatlyGoals2}`
            });
          } else {
            if (penatlyGoals1 < penatlyGoals2) {
              this.winner = team2;
              result = Object.assign(result, {
                comment: `${team2.name} won ${matchResult1HomeTeam + extraGoals1}:${matchResult1AwayTeam + extraGoals2}
                                          on penalties (${extraGoals1}:${extraGoals2}) Pen. ${penatlyGoals1}: ${penatlyGoals2}`
              });
            } else {
              do {
                penatlyGoals1 = penatlyGoals1 + Math.floor(Math.random() * 1);
                penatlyGoals2 = penatlyGoals2 + Math.floor(Math.random() * 1);
              } while (penatlyGoals1 === penatlyGoals2);
              if (penatlyGoals1 > penatlyGoals2) {
                this.winner = team1;
                result = Object.assign(result, {
                  comment: `${team1.name} won on penalties
                                            ${matchResult1HomeTeam}:${matchResult1AwayTeam}
                                            (${extraGoals1}:${extraGoals2}) Pen. (${penatlyGoals1}:${penatlyGoals2})`
                });
              } else {
                this.winner = team2;
                result = Object.assign(result, {
                  comment: `${team2.name} won on penalties
                                            ${matchResult1HomeTeam}:${matchResult1AwayTeam}
                                            (${extraGoals1}:${extraGoals2}) Pen. (${penatlyGoals1}:${penatlyGoals2})`
                });
              }
            }
          }
        }
      }
    }
    return result;
  }
};
ExampleLeagueSimulationComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
  selector: 'app-example-league-simulation',
  template: _example_league_simulation_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_example_league_simulation_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default()), (_styles_epl_emblems_scss_ngResource__WEBPACK_IMPORTED_MODULE_2___default()), (_styles_champions_league_logos_scss_ngResource__WEBPACK_IMPORTED_MODULE_3___default())]
})], ExampleLeagueSimulationComponent);


/***/ }),

/***/ 84429:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ 52476);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 50635);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 45312);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
  (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();
}
(0,_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__.platformBrowserDynamic)().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule).catch(err => console.error(err));

/***/ }),

/***/ 99435:
/*!********************************************!*\
  !*** ./src/pages/about/about.component.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AboutComponent: () => (/* binding */ AboutComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _about_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./about.component.html?ngResource */ 51341);
/* harmony import */ var _about_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./about.component.scss?ngResource */ 48435);
/* harmony import */ var _about_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_about_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);




let AboutComponent = class AboutComponent {
  constructor() {}
  ngOnInit() {}
  static #_ = this.ctorParameters = () => [];
};
AboutComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-about',
  template: _about_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_about_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], AboutComponent);


/***/ }),

/***/ 96979:
/*!**************************************************!*\
  !*** ./src/pages/contacts/contacts.component.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactsComponent: () => (/* binding */ ContactsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _contacts_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contacts.component.html?ngResource */ 44101);
/* harmony import */ var _contacts_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contacts.component.scss?ngResource */ 17963);
/* harmony import */ var _contacts_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_contacts_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);




let ContactsComponent = class ContactsComponent {
  constructor() {}
  ngOnInit() {}
  static #_ = this.ctorParameters = () => [];
};
ContactsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-contacts',
  template: _contacts_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_contacts_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ContactsComponent);


/***/ }),

/***/ 33699:
/*!******************************************!*\
  !*** ./src/pages/home/home.component.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HomeComponent: () => (/* binding */ HomeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _home_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./home.component.html?ngResource */ 52789);
/* harmony import */ var _home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./home.component.scss?ngResource */ 62179);
/* harmony import */ var _home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37580);




let HomeComponent = class HomeComponent {
  constructor() {}
  ngOnInit() {}
  static #_ = this.ctorParameters = () => [];
};
HomeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-home',
  template: _home_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], HomeComponent);


/***/ }),

/***/ 78770:
/*!*******************************************!*\
  !*** ./src/pages/pages-routing.module.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PagesRoutingModule: () => (/* binding */ PagesRoutingModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 95072);
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./home/home.component */ 33699);
/* harmony import */ var _contacts_contacts_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contacts/contacts.component */ 96979);
/* harmony import */ var _about_about_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./about/about.component */ 99435);






const routes = [{
  path: 'Home',
  component: _home_home_component__WEBPACK_IMPORTED_MODULE_0__.HomeComponent
}, {
  path: 'Contacts',
  component: _contacts_contacts_component__WEBPACK_IMPORTED_MODULE_1__.ContactsComponent
}, {
  path: 'About',
  component: _about_about_component__WEBPACK_IMPORTED_MODULE_2__.AboutComponent
}];
let PagesRoutingModule = class PagesRoutingModule {};
PagesRoutingModule = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule)({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule.forChild(routes)],
  exports: [_angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule]
})], PagesRoutingModule);


/***/ }),

/***/ 47291:
/*!***********************************!*\
  !*** ./src/pages/pages.module.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PagesModule: () => (/* binding */ PagesModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 24398);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 60316);
/* harmony import */ var _pages_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pages-routing.module */ 78770);
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./home/home.component */ 33699);
/* harmony import */ var _contacts_contacts_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contacts/contacts.component */ 96979);
/* harmony import */ var _about_about_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./about/about.component */ 99435);







let PagesModule = class PagesModule {};
PagesModule = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule)({
  declarations: [_home_home_component__WEBPACK_IMPORTED_MODULE_1__.HomeComponent, _contacts_contacts_component__WEBPACK_IMPORTED_MODULE_2__.ContactsComponent, _about_about_component__WEBPACK_IMPORTED_MODULE_3__.AboutComponent],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _pages_routing_module__WEBPACK_IMPORTED_MODULE_0__.PagesRoutingModule]
})], PagesModule);


/***/ }),

/***/ 50017:
/*!******************************!*\
  !*** ./src/styles/colors.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   COLORS_EPL: () => (/* binding */ COLORS_EPL)
/* harmony export */ });
const COLORS_EPL = [{
  club: 'Arsenal',
  color: '#dd0000'
}, {
  club: 'Aston Villa',
  color: '#670E36'
}, {
  club: 'Bournemouth',
  color: '#ed1c24'
}, {
  club: 'Brighton & Hove Albion',
  color: '#005daa'
}, {
  club: 'Burnley',
  color: '#80bfff'
}, {
  club: 'Cardiff City',
  color: '#0000ff'
}, {
  club: 'Chelsea',
  color: '#034694'
}, {
  club: 'Crystal Palace',
  color: '#bbbdbf'
}, {
  club: 'Everton',
  color: '#274488'
}, {
  club: 'Fulham',
  color: '#000000'
}, {
  club: 'Huddersfield Town',
  color: '#192552'
}, {
  club: 'Leicester City',
  color: '#0053a0'
}, {
  club: 'Liverpool',
  color: '#dc3912'
}, {
  club: 'Manchester City',
  color: '#6caddf'
}, {
  club: 'Manchester United',
  color: '#e80909'
}, {
  club: 'Newcastle United',
  color: '#a8996e'
}, {
  club: 'Norwich City',
  color: '#00a650'
}, {
  club: 'Sheffield United',
  color: '#EE2737'
}, {
  club: 'Southampton',
  color: '#ed1a3b'
}, {
  club: 'Tottenham Hotspur',
  color: '#182433'
}, {
  club: 'Watford',
  color: '#fbee23'
}, {
  club: 'West Ham United',
  color: '#7f0000'
}, {
  club: 'Wolverhampton Wanderers',
  color: '#fdb913'
}];

/***/ }),

/***/ 37282:
/*!***********************************************!*\
  !*** ./src/app/app.component.scss?ngResource ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 18px;
}

.main {
  display: flex;
  width: 100%;
}

.navigation ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  width: 200px;
  background-color: #f1f1f1;
  min-height: 90vh;
  height: 100%;
}
.navigation li a {
  display: block;
  color: #000;
  padding: 8px 16px;
  text-decoration: none;
}
.navigation li a:hover {
  background-color: #555;
  color: white;
}

.view {
  padding: 15px;
  flex: auto;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

.header {
  overflow: hidden;
  background-color: #4ccfaf;
  padding: 10px 10px;
  border-radius: 7px;
}

.header a {
  float: left;
  color: black;
  text-align: center;
  padding: 16px;
  text-decoration: none;
  font-size: 18px;
  line-height: 25px;
  border-radius: 4px;
  background: #4ccfaf;
  padding: 5px;
  margin: 2px;
  border-radius: 3px;
}

.header a.logo {
  font-size: 25px;
  font-weight: bold;
}

.header a:hover {
  background-color: #ddd;
  color: black;
}

.header a.active {
  background-color: dodgerblue;
  color: white;
}

.header-right {
  float: right;
}

@media screen and (max-width: 500px) {
  .header a {
    float: none;
    display: block;
    text-align: left;
  }
  .header-right {
    float: none;
  }
}
.active {
  background-color: rgb(253, 227, 139);
}`, "",{"version":3,"sources":["webpack://./src/app/app.component.scss"],"names":[],"mappings":"AAAA;EACI,eAAA;AACJ;;AAEA;EACI,aAAA;EACA,WAAA;AACJ;;AAGI;EACI,qBAAA;EACA,SAAA;EACA,UAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;EACA,YAAA;AAAR;AAGI;EACI,cAAA;EACA,WAAA;EACA,iBAAA;EACA,qBAAA;AADR;AAII;EACI,sBAAA;EACA,YAAA;AAFR;;AAMA;EACI,aAAA;EACA,UAAA;AAHJ;;AAMA;EACI,sBAAA;AAHJ;;AAMA;EACI,SAAA;EACA,yCAAA;AAHJ;;AAMA;EACI,gBAAA;EACA,yBAAA;EACA,kBAAA;EACA,kBAAA;AAHJ;;AAMA;EACI,WAAA;EACA,YAAA;EACA,kBAAA;EACA,aAAA;EACA,qBAAA;EACA,eAAA;EACA,iBAAA;EACA,kBAAA;EACA,mBAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;AAHJ;;AAMA;EACI,eAAA;EACA,iBAAA;AAHJ;;AAMA;EACI,sBAAA;EACA,YAAA;AAHJ;;AAMA;EACI,4BAAA;EACA,YAAA;AAHJ;;AAMA;EACI,YAAA;AAHJ;;AAMA;EACI;IACI,WAAA;IACA,cAAA;IACA,gBAAA;EAHN;EAME;IACI,WAAA;EAJN;AACF;AAOA;EACI,oCAAA;AALJ","sourcesContent":[":host {\r\n    font-size: 18px;\r\n}\r\n\r\n.main {\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n.navigation {\r\n    ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 200px;\r\n        background-color: #f1f1f1;\r\n        min-height: 90vh;\r\n        height: 100%;\r\n    }\r\n\r\n    li a {\r\n        display: block;\r\n        color: #000;\r\n        padding: 8px 16px;\r\n        text-decoration: none;\r\n    }\r\n\r\n    li a:hover {\r\n        background-color: #555;\r\n        color: white;\r\n    }\r\n}\r\n\r\n.view {\r\n    padding: 15px;\r\n    flex: auto;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.header {\r\n    overflow: hidden;\r\n    background-color: #4ccfaf;\r\n    padding: 10px 10px;\r\n    border-radius: 7px;\r\n}\r\n\r\n.header a {\r\n    float: left;\r\n    color: black;\r\n    text-align: center;\r\n    padding: 16px;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    border-radius: 4px;\r\n    background: #4ccfaf;\r\n    padding: 5px;\r\n    margin: 2px;\r\n    border-radius: 3px;\r\n}\r\n\r\n.header a.logo {\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n}\r\n\r\n.header a:hover {\r\n    background-color: #ddd;\r\n    color: black;\r\n}\r\n\r\n.header a.active {\r\n    background-color: dodgerblue;\r\n    color: white;\r\n}\r\n\r\n.header-right {\r\n    float: right;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n    .header a {\r\n        float: none;\r\n        display: block;\r\n        text-align: left;\r\n    }\r\n\r\n    .header-right {\r\n        float: none;\r\n    }\r\n}\r\n\r\n.active{\r\n    background-color:rgb(253, 227, 139);\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 94159:
/*!**************************************************************************!*\
  !*** ./src/components/chart-popup/chart-popup.component.scss?ngResource ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-popup {
  position: absolute;
  overflow: visible;
  margin-left: 0;
  margin-right: 0;
  left: 0;
  top: 0;
  pointer-events: none;
  display: block;
  border-bottom: 5px solid white;
  background-color: white;
  font-size: 12px;
  font-family: "Proxima Nova";
  text-align: left;
  min-width: 250px;
  min-height: 40px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  transform: translate(-50%, -105%);
}
.chart-popup:after {
  content: "";
  pointer-events: none;
  position: absolute;
  display: block;
  text-align: center;
  width: 0px;
  margin-left: 0px;
  top: 50%;
  left: 50%;
  bottom: 0;
  border: 10px solid transparent;
  border-bottom: 0;
  border-top: 15px solid white;
  transform: translate(-50%, 100%);
}`, "",{"version":3,"sources":["webpack://./src/components/chart-popup/chart-popup.component.scss"],"names":[],"mappings":"AAAA;EACI,kBAAA;EACA,iBAAA;EACA,cAAA;EACA,eAAA;EACA,OAAA;EACA,MAAA;EACA,oBAAA;EACA,cAAA;EACA,8BAAA;EACA,uBAAA;EACA,eAAA;EACA,2BAAA;EACA,gBAAA;EACA,gBAAA;EACA,gBAAA;EACA,wCAAA;EACA,iCAAA;AACJ;AAEI;EACI,WAAA;EACA,oBAAA;EACA,kBAAA;EACA,cAAA;EACA,kBAAA;EACA,UAAA;EACA,gBAAA;EACA,QAAA;EACA,SAAA;EACA,SAAA;EACA,8BAAA;EACA,gBAAA;EACA,4BAAA;EACA,gCAAA;AAAR","sourcesContent":[".chart-popup {\r\n    position: absolute;\r\n    overflow: visible;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    left: 0;\r\n    top: 0;\r\n    pointer-events: none;\r\n    display: block;\r\n    border-bottom: 5px solid white;\r\n    background-color: white;\r\n    font-size: 12px;\r\n    font-family: \"Proxima Nova\";\r\n    text-align: left;\r\n    min-width: 250px;\r\n    min-height: 40px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    transform: translate(-50%, -105%); // IE\r\n    // transform: translate(-50%, calc(-100% - 5px)); // Chrome\r\n\r\n    &:after {\r\n        content: \"\";\r\n        pointer-events: none;\r\n        position: absolute;\r\n        display: block;\r\n        text-align: center;\r\n        width: 0px;\r\n        margin-left: 0px;\r\n        top: 50%;\r\n        left: 50%;\r\n        bottom: 0;\r\n        border: 10px solid transparent;\r\n        border-bottom: 0;\r\n        border-top: 15px solid white;\r\n        transform: translate(-50%, 100%);\r\n    }\r\n\r\n    // dl {\r\n    //   width: 100%;\r\n    //   padding: 16px;\r\n    // }\r\n\r\n    // dt {\r\n    //   float: left;\r\n    //   width: 112px;\r\n    //   padding-bottom: 8px;\r\n    //   margin-left: 16px;\r\n    //   font-family: \"Proxima Nova\";\r\n    //   font-size: 12px;\r\n    //   font-weight: 600;\r\n    //   line-height: 1.5;\r\n    //   letter-spacing: 0.2px;\r\n    //   color: #000;\r\n    //   position: relative;\r\n    // }\r\n\r\n    // dd {\r\n    //   float: left;\r\n    //   padding-bottom: 8px;\r\n    //   font-family: \"Proxima Nova\";\r\n    //   font-size: 12px;\r\n    //   width: 80px;\r\n    //   line-height: 1.5;\r\n    //   letter-spacing: 0.2px;\r\n    //   font-weight: normal;\r\n    //   color: #000;\r\n    // }\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 76143:
/*!****************************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal.component.scss?ngResource ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  position: fixed;
  z-index: 10;
}
:host > div {
  overflow: auto;
  width: 100%;
  height: 100%;
}`, "",{"version":3,"sources":["webpack://./src/components/chart-portal/chart-portal.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,WAAA;AACF;AACE;EACE,cAAA;EACA,WAAA;EACA,YAAA;AACJ","sourcesContent":[":host {\r\n  position: fixed;\r\n  z-index: 10;\r\n\r\n  > div {\r\n    overflow: auto;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 30327:
/*!**************************************************************************!*\
  !*** ./src/components/chart-ticks/chart-ticks.component.scss?ngResource ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: 0;
  line-height: 1.4;
  font-size: 14px;
  letter-spacing: 0.8px;
  font-weight: 700;
  text-transform: uppercase;
}
:host ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
:host li {
  position: absolute;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  transform: translateY(-50%);
}`, "",{"version":3,"sources":["webpack://./src/components/chart-ticks/chart-ticks.component.scss"],"names":[],"mappings":"AAAA;EACE,cAAA;EACA,kBAAA;EACA,MAAA;EACA,SAAA;EACA,SAAA;EACA,gBAAA;EACA,eAAA;EACA,qBAAA;EACA,gBAAA;EACA,yBAAA;AACF;AACE;EACE,gBAAA;EACA,SAAA;EACA,UAAA;AACJ;AAEE;EACE,kBAAA;EACA,SAAA;EACA,UAAA;EACA,mBAAA;EACA,2BAAA;AAAJ","sourcesContent":[":host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: 0;\r\n  line-height: 1.4;\r\n  font-size: 14px;\r\n  letter-spacing: 0.8px;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n\r\n  ul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  li {\r\n    position: absolute;\r\n    margin: 0;\r\n    padding: 0;\r\n    white-space: nowrap;\r\n    transform: translateY(-50%);\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 10307:
/*!**************************************************************!*\
  !*** ./src/components/chart/chart.component.scss?ngResource ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  height: 100%;
  width: 100%;
  display: block;
  position: relative;
  align-content: center;
}
:host > svg {
  height: 100%;
  width: 100%;
}`, "",{"version":3,"sources":["webpack://./src/components/chart/chart.component.scss"],"names":[],"mappings":"AAAA;EACI,YAAA;EACA,WAAA;EACA,cAAA;EACA,kBAAA;EACA,qBAAA;AACJ;AACI;EACI,YAAA;EACA,WAAA;AACR","sourcesContent":[":host {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: block;\r\n    position: relative;\r\n    align-content: center;\r\n\r\n    >svg {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 99615:
/*!*************************************************************************************************!*\
  !*** ./src/components/series/bar-progress-series/bar-progress-series.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 55111:
/*!*******************************************************************************!*\
  !*** ./src/components/series/bar-series/bar-series.component.scss?ngResource ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 67415:
/*!*********************************************************************************************!*\
  !*** ./src/components/series/bar-simple-series/bar-simple-series.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 43143:
/*!*********************************************************************************!*\
  !*** ./src/components/series/grid-series/grid-series.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 2491:
/*!*********************************************************************************************!*\
  !*** ./src/components/series/half-donut-series/half-donut-series.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 68055:
/*!*************************************************************************************!*\
  !*** ./src/components/series/icicle-series/icicle-series.component.scss?ngResource ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 27047:
/*!*********************************************************************************!*\
  !*** ./src/components/series/line-series/line-series.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 46417:
/*!***********************************************************************************************!*\
  !*** ./src/components/series/radial-tree-series/radial-tree-series.component.scss?ngResource ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 48107:
/*!*****************************************************************************************!*\
  !*** ./src/components/series/sunburst-series/sunburst-series.component.scss?ngResource ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.should-hide {
  opacity: 0;
}

.chart-sunburst-label {
  pointer-events: none;
}
.chart-sunburst-text {
  position: absolute;
  top: 50%;
  left: 50%;
  text-align: center;
}`, "",{"version":3,"sources":["webpack://./src/components/series/sunburst-series/sunburst-series.component.scss"],"names":[],"mappings":"AAAA;EACE,UAAA;AACF;;AAGE;EACE,oBAAA;AAAJ;AAGE;EACE,kBAAA;EACA,QAAA;EACA,SAAA;EACA,kBAAA;AADJ","sourcesContent":[".should-hide {\r\n  opacity: 0;\r\n}\r\n\r\n.chart-sunburst {\r\n  &-label {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &-text {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    text-align: center;\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 62095:
/*!*********************************************************************************************!*\
  !*** ./src/components/series/word-cloud-series/word-cloud-series.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 65138:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-area-series/example-chart-area-series.component.scss?ngResource ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.chart-container {
  max-width: 1500px;
  height: 700px;
}

.logo {
  width: 50px;
  height: 50px;
  margin-bottom: 5.5px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-area-series/example-chart-area-series.component.scss"],"names":[],"mappings":"AAAA;EACI,eAAA;EACA,mCAAA;EACA,mBAAA;AACJ;;AAGI;EACI,iBAAA;EACA,aAAA;AAAR;;AAIA;EACI,WAAA;EACA,YAAA;EACA,oBAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;AADJ","sourcesContent":[":host {\r\n    font-size: 20px;\r\n    font-family: \"Proxima Nova Regular\";\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.chart {\r\n    &-container {\r\n        max-width: 1500px;\r\n        height: 700px;\r\n    }\r\n}\r\n\r\n.logo {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-bottom: 5.5px;\r\n    display: inline-flex;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 42710:
/*!************************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component.scss?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `app-chart {
  height: 700px;
  width: 1000px;
}

select {
  width: 100px;
  padding: 5px;
  margin: 0 10px;
}
select option {
  font-size: 14px;
}

.radio-buttons {
  display: flex;
  align-items: center;
  margin-left: 10px;
}
.radio-buttons > div {
  margin-right: 10px;
}

.logo {
  width: 25px;
  height: 25px;
  margin-bottom: 7.4px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}

.dropdowns {
  display: flex;
  margin-bottom: 7.5px;
}

h5 {
  margin: 0;
}

.container {
  display: inline-flex;
}

.logos {
  width: 20px;
  padding-top: 22px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component.scss"],"names":[],"mappings":"AAAA;EACI,aAAA;EACA,aAAA;AACJ;;AAEA;EACI,YAAA;EACA,YAAA;EACA,cAAA;AACJ;AACI;EACI,eAAA;AACR;;AAGA;EACI,aAAA;EACA,mBAAA;EACA,iBAAA;AAAJ;AAEI;EACI,kBAAA;AAAR;;AAIA;EACI,WAAA;EACA,YAAA;EACA,oBAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;AADJ;;AAIA;EACI,aAAA;EACA,oBAAA;AADJ;;AAIA;EACI,SAAA;AADJ;;AAIA;EACI,oBAAA;AADJ;;AAIA;EACI,WAAA;EACA,iBAAA;AADJ","sourcesContent":["app-chart {\r\n    height: 700px;\r\n    width: 1000px;\r\n}\r\n\r\nselect {\r\n    width: 100px;\r\n    padding: 5px;\r\n    margin: 0 10px;\r\n\r\n    option {\r\n        font-size: 14px;\r\n    }\r\n}\r\n\r\n.radio-buttons {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n\r\n    >div {\r\n        margin-right: 10px;\r\n    }\r\n}\r\n\r\n.logo {\r\n    width: 25px;\r\n    height: 25px;\r\n    margin-bottom: 7.4px;\r\n    display: inline-flex;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n}\r\n\r\n.dropdowns {\r\n    display: flex;\r\n    margin-bottom: 7.5px;\r\n}\r\n\r\nh5 {\r\n    margin: 0;\r\n}\r\n\r\n.container {\r\n    display: inline-flex;\r\n}\r\n\r\n.logos {\r\n    width: 20px;\r\n    padding-top: 22px;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 5593:
/*!*********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-progress-series/examples-chart-bar-progress-series.component.scss?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.container {
  width: calc(100% - 5px);
  margin: 5px 20px;
}

.chart-container {
  width: 70%;
  height: 820px;
}
.chart-ticks {
  font-size: 18px;
  font-weight: normal;
  text-transform: lowercase;
  text-transform: capitalize;
}
.chart-title {
  font-weight: 600;
  padding-bottom: 25px;
  letter-spacing: 1px;
  display: flex;
}
.chart-title > div:first-child {
  padding-right: 50px;
}
.chart-title > div:nth-child(2) {
  width: 15px;
  height: 15px;
  background-color: #80b436;
  margin-right: 20px;
}
.chart-title > div:nth-child(3) {
  width: 15px;
  height: 15px;
  background-color: #feb74b;
  margin: 0px 20px;
}
.chart-title > div:nth-child(4) {
  width: 15px;
  height: 15px;
  background-color: #dd0d47;
  margin: 0px 20px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-bar-progress-series/examples-chart-bar-progress-series.component.scss"],"names":[],"mappings":"AAAA;EACI,uBAAA;EACA,gBAAA;AACJ;;AAGI;EACI,UAAA;EACA,aAAA;AAAR;AAGI;EACI,eAAA;EACA,mBAAA;EACA,yBAAA;EACA,0BAAA;AADR;AAII;EACI,gBAAA;EACA,oBAAA;EACA,mBAAA;EACA,aAAA;AAFR;AAIQ;EACI,mBAAA;AAFZ;AAKQ;EACI,WAAA;EACA,YAAA;EACA,yBAAA;EACA,kBAAA;AAHZ;AAMQ;EACI,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAJZ;AAOQ;EACI,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AALZ","sourcesContent":[".container {\r\n    width: calc(100% - 5px);\r\n    margin: 5px 20px;\r\n}\r\n\r\n.chart {\r\n    &-container {\r\n        width: 70%;\r\n        height: 820px;\r\n    }\r\n\r\n    &-ticks {\r\n        font-size: 18px;\r\n        font-weight: normal;\r\n        text-transform: lowercase;\r\n        text-transform: capitalize;\r\n    }\r\n\r\n    &-title {\r\n        font-weight: 600;\r\n        padding-bottom: 25px;\r\n        letter-spacing: 1px;\r\n        display: flex;\r\n\r\n        >div:first-child {\r\n            padding-right: 50px;\r\n        }\r\n\r\n        >div:nth-child(2) {\r\n            width: 15px;\r\n            height: 15px;\r\n            background-color: #80b436;\r\n            margin-right: 20px;\r\n        }\r\n\r\n        >div:nth-child(3) {\r\n            width: 15px;\r\n            height: 15px;\r\n            background-color: #feb74b;\r\n            margin: 0px 20px;\r\n        }\r\n\r\n        >div:nth-child(4) {\r\n            width: 15px;\r\n            height: 15px;\r\n            background-color: #dd0d47;\r\n            margin: 0px 20px;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 88643:
/*!*****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-simple-series/examples-chart-bar-simple-series.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.container {
  display: inline-flex;
  max-width: 1200px;
}

.chart-column {
  width: 50%;
}
.chart-container {
  display: flex;
  width: 600px;
  height: 20px;
  padding: 0px 0px 20px 0px;
  font-size: 18px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}
.chart-container .title {
  width: 180px;
  line-height: 16px;
}
.chart-container .chart {
  width: 350px;
}
.chart-container .total {
  width: 50px;
  text-align: center;
  font-weight: 600;
}
.chart-title {
  font-weight: 600;
  padding-bottom: 25px;
  letter-spacing: 1px;
  display: flex;
}
.chart-title > div:first-child {
  padding-right: 50px;
}

.for .home {
  width: 15px;
  height: 15px;
  background-color: #94c31a;
  margin: 0 10px;
}
.for .away {
  width: 15px;
  height: 15px;
  background-color: #bedb75;
  margin: 0px 10px;
}

.against .home {
  width: 15px;
  height: 15px;
  background-color: #f7a704;
  margin: 0 10px;
}
.against .away {
  width: 15px;
  height: 15px;
  background-color: #faca68;
  margin: 0px 10px;
}

h5 {
  margin: 0;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-bar-simple-series/examples-chart-bar-simple-series.component.scss"],"names":[],"mappings":"AAAA;EACE,oBAAA;EACA,iBAAA;AACF;;AAGE;EACE,UAAA;AAAJ;AAGE;EACE,aAAA;EACA,YAAA;EACA,YAAA;EACA,yBAAA;EACA,eAAA;EACA,mCAAA;EACA,mBAAA;AADJ;AAGI;EACE,YAAA;EACA,iBAAA;AADN;AAII;EACE,YAAA;AAFN;AAKI;EACE,WAAA;EACA,kBAAA;EACA,gBAAA;AAHN;AAOE;EACE,gBAAA;EACA,oBAAA;EACA,mBAAA;EACA,aAAA;AALJ;AAOI;EACE,mBAAA;AALN;;AAWE;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,cAAA;AARJ;AAWE;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AATJ;;AAcE;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,cAAA;AAXJ;AAcE;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAZJ;;AAgBA;EACE,SAAA;AAbF","sourcesContent":[".container {\r\n  display: inline-flex;\r\n  max-width: 1200px;\r\n}\r\n\r\n.chart {\r\n  &-column {\r\n    width: 50%;\r\n  }\r\n\r\n  &-container {\r\n    display: flex;\r\n    width: 600px;\r\n    height: 20px;\r\n    padding: 0px 0px 20px 0px;\r\n    font-size: 18px;\r\n    font-family: \"Proxima Nova Regular\";\r\n    letter-spacing: 1px;\r\n\r\n    .title {\r\n      width: 180px;\r\n      line-height: 16px;\r\n    }\r\n\r\n    .chart {\r\n      width: 350px;\r\n    }\r\n\r\n    .total {\r\n      width: 50px;\r\n      text-align: center;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  &-title {\r\n    font-weight: 600;\r\n    padding-bottom: 25px;\r\n    letter-spacing: 1px;\r\n    display: flex;\r\n\r\n    > div:first-child {\r\n      padding-right: 50px;\r\n    }\r\n  }\r\n}\r\n\r\n.for {\r\n  .home {\r\n    width: 15px;\r\n    height: 15px;\r\n    background-color: #94c31a;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  .away {\r\n    width: 15px;\r\n    height: 15px;\r\n    background-color: #bedb75;\r\n    margin: 0px 10px;\r\n  }\r\n}\r\n\r\n.against {\r\n  .home {\r\n    width: 15px;\r\n    height: 15px;\r\n    background-color: #f7a704;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  .away {\r\n    width: 15px;\r\n    height: 15px;\r\n    background-color: #faca68;\r\n    margin: 0px 10px;\r\n  }\r\n}\r\n\r\nh5 {\r\n  margin: 0;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 46918:
/*!********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-vertical-series/example-chart-bar-vertical-series.component.scss?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `app-chart {
  height: 700px;
  width: 1200px;
}

select {
  padding: 5px;
  margin: 0 10px;
}
select option {
  font-size: 14px;
}

.radio-buttons {
  display: flex;
  align-items: center;
  margin-left: 10px;
}
.radio-buttons > div {
  margin-right: 10px;
}

.dropdowns {
  display: flex;
  margin-bottom: 7.5px;
}

.x-axis {
  display: inline-block;
  text-align: center;
  width: 100%;
}

.y-axis {
  text-align: center;
  width: 100%;
  transform: rotate(-90deg) translateX(-50%);
}

.logo {
  width: 25px;
  height: 25px;
  display: inline-flex;
  padding-left: 14.9px;
  padding-right: 14.9px;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}

h5 {
  margin: 0;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-bar-vertical-series/example-chart-bar-vertical-series.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,aAAA;AACF;;AAEA;EACE,YAAA;EACA,cAAA;AACF;AACE;EACE,eAAA;AACJ;;AAGA;EACE,aAAA;EACA,mBAAA;EACA,iBAAA;AAAF;AAEE;EACE,kBAAA;AAAJ;;AAIA;EACE,aAAA;EACA,oBAAA;AADF;;AAIA;EACE,qBAAA;EACA,kBAAA;EACA,WAAA;AADF;;AAIA;EACE,kBAAA;EACA,WAAA;EACA,0CAAA;AADF;;AAIA;EACE,WAAA;EACA,YAAA;EACA,oBAAA;EACA,oBAAA;EACA,qBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;AADF;;AAIA;EACE,SAAA;AADF","sourcesContent":["app-chart {\r\n  height: 700px;\r\n  width: 1200px;\r\n}\r\n\r\nselect {\r\n  padding: 5px;\r\n  margin: 0 10px;\r\n\r\n  option {\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.radio-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  > div {\r\n    margin-right: 10px;\r\n  }\r\n}\r\n\r\n.dropdowns {\r\n  display: flex;\r\n  margin-bottom: 7.5px;\r\n}\r\n\r\n.x-axis {\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.y-axis {\r\n  text-align: center;\r\n  width: 100%;\r\n  transform: rotate(-90deg) translateX(-50%);\r\n}\r\n\r\n.logo {\r\n  width: 25px;\r\n  height: 25px;\r\n  display: inline-flex;\r\n  padding-left: 14.9px;\r\n  padding-right: 14.9px;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n}\r\n\r\nh5 {\r\n  margin: 0;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 63287:
/*!*******************************************************************************************************!*\
  !*** ./src/examples/example-chart-chord-series/examples-chart-chord-series.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-container {
  width: 1200px;
  height: 900px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-chord-series/examples-chart-chord-series.component.scss"],"names":[],"mappings":"AAAA;EACI,aAAA;EACA,aAAA;AACJ","sourcesContent":[".chart-container {\r\n    width: 1200px;\r\n    height: 900px;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 23675:
/*!*****************************************************************************************************************************!*\
  !*** ./src/examples/example-chart-circular-package-series/examples-chart-circular-package-series.component.scss?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-container {
  width: 700px;
  height: 700px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-circular-package-series/examples-chart-circular-package-series.component.scss"],"names":[],"mappings":"AAAA;EACI,YAAA;EACA,aAAA;AACJ","sourcesContent":[".chart-container {\r\n    width: 700px;\r\n    height: 700px;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 51640:
/*!******************************************************************************************************!*\
  !*** ./src/examples/example-chart-donut-series/example-chart-donut-series.component.scss?ngResource ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.item {
  display: inline-block;
  height: 280px;
  width: 200px;
  margin: 5px;
  padding: 10px;
  background-color: aliceblue;
}

.title {
  width: 200px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.stats {
  justify-content: space-between;
}

.app-chart {
  width: 200px;
  height: 200px;
}

.chart-container {
  width: 100%;
  height: auto;
}
.chart-title {
  font-weight: 600;
  padding-bottom: 15px;
  font-family: "Courier New", Courier, monospace;
  padding-right: 50px;
  display: flex;
}
.chart-title > div:first-child {
  padding-right: 50px;
}
.chart-title > div:nth-child(2) {
  width: 15px;
  height: 15px;
  background-color: #709a28;
  margin-right: 20px;
}
.chart-title > div:nth-child(3) {
  width: 15px;
  height: 15px;
  background-color: #f7a704;
  margin: 0px 20px;
}
.chart-title > div:nth-child(4) {
  width: 15px;
  height: 15px;
  background-color: #c23612;
  margin: 0px 20px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-donut-series/example-chart-donut-series.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACF;;AAEA;EACE,qBAAA;EACA,aAAA;EACA,YAAA;EACA,WAAA;EACA,aAAA;EACA,2BAAA;AACF;;AAEA;EACE,YAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;AACF;;AAEA;EACE,8BAAA;AACF;;AAEA;EACE,YAAA;EACA,aAAA;AACF;;AAGE;EACE,WAAA;EACA,YAAA;AAAJ;AAGE;EACE,gBAAA;EACA,oBAAA;EACA,8CAAA;EACA,mBAAA;EACA,aAAA;AADJ;AAGI;EACE,mBAAA;AADN;AAII;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,kBAAA;AAFN;AAKI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAHN;AAMI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAJN","sourcesContent":[":host {\r\n  font-size: 20px;\r\n  font-family: \"Proxima Nova Regular\";\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.item {\r\n  display: inline-block;\r\n  height: 280px;\r\n  width: 200px;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  background-color: aliceblue;\r\n}\r\n\r\n.title {\r\n  width: 200px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.stats {\r\n  justify-content: space-between;\r\n}\r\n\r\n.app-chart {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.chart {\r\n  &-container {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  &-title {\r\n    font-weight: 600;\r\n    padding-bottom: 15px;\r\n    font-family: \"Courier New\", Courier, monospace;\r\n    padding-right: 50px;\r\n    display: flex;\r\n\r\n    > div:first-child {\r\n      padding-right: 50px;\r\n    }\r\n\r\n    > div:nth-child(2) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #709a28;\r\n      margin-right: 20px;\r\n    }\r\n\r\n    > div:nth-child(3) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #f7a704;\r\n      margin: 0px 20px;\r\n    }\r\n\r\n    > div:nth-child(4) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #c23612;\r\n      margin: 0px 20px;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 15086:
/*!********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-double-donut-series/example-chart-double-donut-series.component.scss?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.item {
  display: inline-block;
  height: 280px;
  width: 200px;
  margin: 5px;
  padding: 10px;
  background-color: aliceblue;
}

.title {
  width: 200px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.app-chart {
  width: 200px;
  height: 200px;
}

.chart-container {
  width: 100%;
  height: auto;
}
.chart-title {
  font-weight: 600;
  padding-bottom: 15px;
  font-family: "Courier New", Courier, monospace;
  padding-right: 50px;
  display: flex;
}
.chart-title > div:first-child {
  padding-right: 50px;
}
.chart-title > div:nth-child(2) {
  width: 15px;
  height: 15px;
  background-color: #709a28;
  margin-right: 20px;
}
.chart-title > div:nth-child(3) {
  width: 15px;
  height: 15px;
  background-color: #bedb75;
  margin: 0px 20px;
}
.chart-title > div:nth-child(4) {
  width: 15px;
  height: 15px;
  background-color: #f7a704;
  margin: 0px 20px;
}
.chart-title > div:nth-child(5) {
  width: 15px;
  height: 15px;
  background-color: #faca68;
  margin: 0px 20px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-double-donut-series/example-chart-double-donut-series.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACF;;AAEA;EACE,qBAAA;EACA,aAAA;EACA,YAAA;EACA,WAAA;EACA,aAAA;EACA,2BAAA;AACF;;AAEA;EACE,YAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;AACF;;AAEA;EACE,YAAA;EACA,aAAA;AACF;;AAGE;EACE,WAAA;EACA,YAAA;AAAJ;AAGE;EACE,gBAAA;EACA,oBAAA;EACA,8CAAA;EACA,mBAAA;EACA,aAAA;AADJ;AAGI;EACE,mBAAA;AADN;AAII;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,kBAAA;AAFN;AAKI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAHN;AAMI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AAJN;AAOI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;AALN","sourcesContent":[":host {\r\n  font-size: 20px;\r\n  font-family: \"Proxima Nova Regular\";\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.item {\r\n  display: inline-block;\r\n  height: 280px;\r\n  width: 200px;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  background-color: aliceblue;\r\n}\r\n\r\n.title {\r\n  width: 200px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.app-chart {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.chart {\r\n  &-container {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  &-title {\r\n    font-weight: 600;\r\n    padding-bottom: 15px;\r\n    font-family: \"Courier New\", Courier, monospace;\r\n    padding-right: 50px;\r\n    display: flex;\r\n\r\n    > div:first-child {\r\n      padding-right: 50px;\r\n    }\r\n\r\n    > div:nth-child(2) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #709a28;\r\n      margin-right: 20px;\r\n    }\r\n\r\n    > div:nth-child(3) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #bedb75;\r\n      margin: 0px 20px;\r\n    }\r\n\r\n    > div:nth-child(4) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #f7a704;\r\n      margin: 0px 20px;\r\n    }\r\n\r\n    > div:nth-child(5) {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #faca68;\r\n      margin: 0px 20px;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 56286:
/*!****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-half-donut-series/example-chart-half-donut-series.component.scss?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.item {
  display: inline-block;
  height: 200px;
  width: 200px;
  margin: 5px;
  background-color: aliceblue;
}

.title {
  width: 200px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.stats {
  justify-content: space-between;
}

.app-chart {
  width: 200px;
  height: 100px;
}

.chart-container {
  width: 100%;
  height: auto;
}
.chart-title {
  font-weight: 600;
  padding-bottom: 15px;
  display: flex;
  align-items: center;
}
.chart-title .win {
  width: 15px;
  height: 15px;
  background-color: #709a28;
  margin: 0 10px;
}
.chart-title .draw {
  width: 15px;
  height: 15px;
  background-color: #f7a704;
  margin: 0 10px;
}
.chart-title .lost {
  width: 15px;
  height: 15px;
  background-color: #c23612;
  margin: 0 10px;
}

h5 {
  margin: 0;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-half-donut-series/example-chart-half-donut-series.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACF;;AAEA;EACE,qBAAA;EACA,aAAA;EACA,YAAA;EACA,WAAA;EACA,2BAAA;AACF;;AAEA;EACE,YAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;AACF;;AAEA;EACE,8BAAA;AACF;;AAEA;EACE,YAAA;EACA,aAAA;AACF;;AAGE;EACE,WAAA;EACA,YAAA;AAAJ;AAGE;EACE,gBAAA;EACA,oBAAA;EACA,aAAA;EACA,mBAAA;AADJ;AAGI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,cAAA;AADN;AAII;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,cAAA;AAFN;AAKI;EACE,WAAA;EACA,YAAA;EACA,yBAAA;EACA,cAAA;AAHN;;AAQA;EACE,SAAA;AALF","sourcesContent":[":host {\r\n  font-size: 20px;\r\n  font-family: \"Proxima Nova Regular\";\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.item {\r\n  display: inline-block;\r\n  height: 200px;\r\n  width: 200px;\r\n  margin: 5px;\r\n  background-color: aliceblue;\r\n}\r\n\r\n.title {\r\n  width: 200px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.stats {\r\n  justify-content: space-between;\r\n}\r\n\r\n.app-chart {\r\n  width: 200px;\r\n  height: 100px;\r\n}\r\n\r\n.chart {\r\n  &-container {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  &-title {\r\n    font-weight: 600;\r\n    padding-bottom: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .win {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #709a28;\r\n      margin: 0 10px;\r\n    }\r\n\r\n    .draw {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #f7a704;\r\n      margin: 0 10px;\r\n    }\r\n\r\n    .lost {\r\n      width: 15px;\r\n      height: 15px;\r\n      background-color: #c23612;\r\n      margin: 0 10px;\r\n    }\r\n  }\r\n}\r\n\r\nh5 {\r\n  margin: 0;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 93782:
/*!********************************************************************************************************!*\
  !*** ./src/examples/example-chart-icicle-series/example-chart-icicle-series.component.scss?ngResource ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.chart-container {
  width: 1000px;
  height: 750px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-icicle-series/example-chart-icicle-series.component.scss"],"names":[],"mappings":"AAAC;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACH;;AAGG;EACE,aAAA;EACA,aAAA;AAAL","sourcesContent":[" :host {\r\n   font-size: 20px;\r\n   font-family: 'Proxima Nova Regular';\r\n   letter-spacing: 1px;\r\n }\r\n\r\n .chart {\r\n   &-container {\r\n     width: 1000px;\r\n     height: 750px;\r\n   }\r\n }"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 98410:
/*!****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series-types/example-chart-line-series-types.component.scss?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.chart-container {
  max-width: 1500px;
  height: 700px;
}

.radio-btn-group,
.checkbox-btn-group {
  display: flex;
  max-width: 1500px;
  height: auto;
  align-content: space-between;
  flex-wrap: wrap;
}
.radio-btn-group .radio,
.radio-btn-group .form-check,
.checkbox-btn-group .radio,
.checkbox-btn-group .form-check {
  max-width: 300px;
  height: 50px;
  margin: 5px;
}
.radio-btn-group .radio label,
.radio-btn-group .form-check label,
.checkbox-btn-group .radio label,
.checkbox-btn-group .form-check label {
  background: #fff;
  border: 1px solid #ddd;
  padding: 0.5rem 1.25rem;
  border-radius: 5px;
  cursor: pointer;
  color: #444;
  transition: box-shadow 400ms ease;
  font-size: 12px;
}
.radio-btn-group .radio input[type=radio],
.radio-btn-group .radio input[type=checkbox],
.radio-btn-group .form-check input[type=radio],
.radio-btn-group .form-check input[type=checkbox],
.checkbox-btn-group .radio input[type=radio],
.checkbox-btn-group .radio input[type=checkbox],
.checkbox-btn-group .form-check input[type=radio],
.checkbox-btn-group .form-check input[type=checkbox] {
  display: none;
}

.form-check-1 input[type=radio]:checked + label,
.form-check-1 input[type=checkbox]:checked + label {
  background: #3366cc;
  color: #fff;
}

.form-check-2 input[type=radio]:checked + label,
.form-check-2 input[type=checkbox]:checked + label {
  background: #dc3912;
  color: #fff;
}

.form-check-3 input[type=radio]:checked + label,
.form-check-3 input[type=checkbox]:checked + label {
  background: #ff9900;
  color: #fff;
}

.form-check-4 input[type=radio]:checked + label,
.form-check-4 input[type=checkbox]:checked + label {
  background: #109618;
  color: #fff;
}

.form-check-5 input[type=radio]:checked + label,
.form-check-5 input[type=checkbox]:checked + label {
  background: #990099;
  color: #fff;
}

.form-check-6 input[type=radio]:checked + label,
.form-check-6 input[type=checkbox]:checked + label {
  background: #0099c6;
  color: #fff;
}

.form-check-6 input[type=radio]:checked + label,
.form-check-6 input[type=checkbox]:checked + label {
  background: #dd4477;
  color: #fff;
}

.form-check-7 input[type=radio]:checked + label,
.form-check-7 input[type=checkbox]:checked + label {
  background: #66aa00;
  color: #fff;
}

.form-check-8 input[type=radio]:checked + label,
.form-check-8 input[type=checkbox]:checked + label {
  background: #b82e2e;
  color: #fff;
}

.form-check-9 input[type=radio]:checked + label,
.form-check-9 input[type=checkbox]:checked + label {
  background: #316395;
  color: #fff;
}

.form-check-10 input[type=radio]:checked + label,
.form-check-10 input[type=checkbox]:checked + label {
  background: #994499;
  color: #fff;
}

.form-check-11 input[type=radio]:checked + label,
.form-check-11 input[type=checkbox]:checked + label {
  background: #22aa99;
  color: #fff;
}

.form-check-12 input[type=radio]:checked + label,
.form-check-12 input[type=checkbox]:checked + label {
  background: #aaaa11;
  color: #fff;
}

.form-check-13 input[type=radio]:checked + label,
.form-check-13 input[type=checkbox]:checked + label {
  background: #6633cc;
  color: #fff;
}

.form-check-14 input[type=radio]:checked + label,
.form-check-14 input[type=checkbox]:checked + label {
  background: #e67300;
  color: #fff;
}

.form-check-15 input[type=radio]:checked + label,
.form-check-15 input[type=checkbox]:checked + label {
  background: #8b0707;
  color: #fff;
}

.form-check-16 input[type=radio]:checked + label,
.form-check-16 input[type=checkbox]:checked + label {
  background: #5574a6;
  color: #fff;
}

.form-check-17 input[type=radio]:checked + label,
.form-check-17 input[type=checkbox]:checked + label {
  background: #3b3eac;
  color: #fff;
}

.displayNone {
  display: none;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-line-series-types/example-chart-line-series-types.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACF;;AAGE;EACE,iBAAA;EACA,aAAA;AAAJ;;AAIA;;EAEE,aAAA;EACA,iBAAA;EACA,YAAA;EACA,4BAAA;EACA,eAAA;AADF;AAGE;;;;EAEE,gBAAA;EACA,YAAA;EACA,WAAA;AACJ;AACI;;;;EACE,gBAAA;EACA,sBAAA;EACA,uBAAA;EACA,kBAAA;EACA,eAAA;EACA,WAAA;EACA,iCAAA;EACA,eAAA;AAIN;AADI;;;;;;;;EAEE,aAAA;AASN;;AAHE;;EAEE,mBAAA;EACA,WAAA;AAMJ;;AADE;;EAEE,mBAAA;EACA,WAAA;AAIJ;;AACE;;EAEE,mBAAA;EACA,WAAA;AAEJ;;AAGE;;EAEE,mBAAA;EACA,WAAA;AAAJ;;AAKE;;EAEE,mBAAA;EACA,WAAA;AAFJ;;AAOE;;EAEE,mBAAA;EACA,WAAA;AAJJ;;AASE;;EAEE,mBAAA;EACA,WAAA;AANJ;;AAWE;;EAEE,mBAAA;EACA,WAAA;AARJ;;AAaE;;EAEE,mBAAA;EACA,WAAA;AAVJ;;AAeE;;EAEE,mBAAA;EACA,WAAA;AAZJ;;AAiBE;;EAEE,mBAAA;EACA,WAAA;AAdJ;;AAmBE;;EAEE,mBAAA;EACA,WAAA;AAhBJ;;AAqBE;;EAEE,mBAAA;EACA,WAAA;AAlBJ;;AAuBE;;EAEE,mBAAA;EACA,WAAA;AApBJ;;AAyBE;;EAEE,mBAAA;EACA,WAAA;AAtBJ;;AA0BE;;EAEE,mBAAA;EACA,WAAA;AAvBJ;;AA2BE;;EAEE,mBAAA;EACA,WAAA;AAxBJ;;AA4BE;;EAEE,mBAAA;EACA,WAAA;AAzBJ;;AA6BA;EACE,aAAA;AA1BF","sourcesContent":[":host {\r\n  font-size: 20px;\r\n  font-family: \"Proxima Nova Regular\";\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.chart {\r\n  &-container {\r\n    max-width: 1500px;\r\n    height: 700px;\r\n  }\r\n}\r\n\r\n.radio-btn-group,\r\n.checkbox-btn-group {\r\n  display: flex;\r\n  max-width: 1500px;\r\n  height: auto;\r\n  align-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  .radio,\r\n  .form-check {\r\n    max-width: 300px;\r\n    height: 50px;\r\n    margin: 5px;\r\n\r\n    label {\r\n      background: #fff;\r\n      border: 1px solid #ddd;\r\n      padding: 0.5rem 1.25rem;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      color: #444;\r\n      transition: box-shadow 400ms ease;\r\n      font-size: 12px;\r\n    }\r\n\r\n    input[type=\"radio\"],\r\n    input[type=\"checkbox\"] {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.form-check-1 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #3366cc;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-2 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #dc3912;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-3 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #ff9900;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-4 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #109618;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-5 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #990099;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-6 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #0099c6;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-6 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #dd4477;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-7 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #66aa00;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-8 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #b82e2e;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-9 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #316395;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-10 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #994499;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-11 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #22aa99;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-12 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #aaaa11;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-13 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #6633cc;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.form-check-14 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #e67300;\r\n    color: #fff;\r\n  }\r\n}\r\n.form-check-15 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #8b0707;\r\n    color: #fff;\r\n  }\r\n}\r\n.form-check-16 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #5574a6;\r\n    color: #fff;\r\n  }\r\n}\r\n.form-check-17 {\r\n  input[type=\"radio\"]:checked + label,\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background: #3b3eac;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.displayNone {\r\n  display: none;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 41386:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series/example-chart-line-series.component.scss?ngResource ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Proxima Nova Regular";
  letter-spacing: 1px;
}

.chart-container {
  max-width: 1400px;
  height: 750px;
}

select {
  width: 100px;
  padding: 5px;
  margin: 0 10px;
}
select option {
  font-size: 14px;
}

.dropdowns {
  display: flex;
  margin-bottom: 7.5px;
}

h5 {
  margin: 0;
}

.radio-btn-group,
.checkbox-btn-group {
  display: flex;
  max-width: 1500px;
  height: auto;
  align-content: space-between;
  flex-wrap: wrap;
}
.radio-btn-group .radio,
.radio-btn-group .form-check,
.checkbox-btn-group .radio,
.checkbox-btn-group .form-check {
  max-width: 300px;
  height: 50px;
  margin: 5px;
}
.radio-btn-group .radio label,
.radio-btn-group .form-check label,
.checkbox-btn-group .radio label,
.checkbox-btn-group .form-check label {
  background: #fff;
  border: 1px solid #ddd;
  padding: 0.5rem 1.25rem;
  border-radius: 5px;
  cursor: pointer;
  color: #444;
  transition: box-shadow 400ms ease;
  font-size: 12px;
}
.radio-btn-group .radio input[type=radio],
.radio-btn-group .radio input[type=checkbox],
.radio-btn-group .form-check input[type=radio],
.radio-btn-group .form-check input[type=checkbox],
.checkbox-btn-group .radio input[type=radio],
.checkbox-btn-group .radio input[type=checkbox],
.checkbox-btn-group .form-check input[type=radio],
.checkbox-btn-group .form-check input[type=checkbox] {
  display: none;
}

.form-check-arsenal input[type=radio]:checked + label,
.form-check-arsenal input[type=checkbox]:checked + label {
  background: #dd0000;
  color: #fff;
}
.form-check-bournemouth input[type=radio]:checked + label,
.form-check-bournemouth input[type=checkbox]:checked + label {
  background: #ed1c24;
  color: #fff;
}
.form-check-brightonhovealbion input[type=radio]:checked + label,
.form-check-brightonhovealbion input[type=checkbox]:checked + label {
  background: #005daa;
  color: #fff;
}
.form-check-burnley input[type=radio]:checked + label,
.form-check-burnley input[type=checkbox]:checked + label {
  background: #80bfff;
  color: #fff;
}
.form-check-cardiffcity input[type=radio]:checked + label,
.form-check-cardiffcity input[type=checkbox]:checked + label {
  background: #0000ff;
  color: #fff;
}
.form-check-chelsea input[type=radio]:checked + label,
.form-check-chelsea input[type=checkbox]:checked + label {
  background: #034694;
  color: #fff;
}
.form-check-crystalpalace input[type=radio]:checked + label,
.form-check-crystalpalace input[type=checkbox]:checked + label {
  background: #bbbdbf;
  color: #fff;
}
.form-check-everton input[type=radio]:checked + label,
.form-check-everton input[type=checkbox]:checked + label {
  background: #274488;
  color: #fff;
}
.form-check-fulham input[type=radio]:checked + label,
.form-check-fulham input[type=checkbox]:checked + label {
  background: #000000;
  color: #fff;
}
.form-check-huddersfieldtown input[type=radio]:checked + label,
.form-check-huddersfieldtown input[type=checkbox]:checked + label {
  background: #192552;
  color: #fff;
}
.form-check-leicestercity input[type=radio]:checked + label,
.form-check-leicestercity input[type=checkbox]:checked + label {
  background: #0053a0;
  color: #fff;
}
.form-check-liverpool input[type=radio]:checked + label,
.form-check-liverpool input[type=checkbox]:checked + label {
  background: #dc3912;
  color: #fff;
}
.form-check-manchestercity input[type=radio]:checked + label,
.form-check-manchestercity input[type=checkbox]:checked + label {
  background: #6caddf;
  color: #fff;
}
.form-check-manchesterunited input[type=radio]:checked + label,
.form-check-manchesterunited input[type=checkbox]:checked + label {
  background: #e80909;
  color: #fff;
}
.form-check-newcastleunited input[type=radio]:checked + label,
.form-check-newcastleunited input[type=checkbox]:checked + label {
  background: #a8996e;
  color: #fff;
}
.form-check-southampton input[type=radio]:checked + label,
.form-check-southampton input[type=checkbox]:checked + label {
  background: #ed1a3b;
  color: #fff;
}
.form-check-tottenhamhotspur input[type=radio]:checked + label,
.form-check-tottenhamhotspur input[type=checkbox]:checked + label {
  background: #182433;
  color: #fff;
}
.form-check-watford input[type=radio]:checked + label,
.form-check-watford input[type=checkbox]:checked + label {
  background: #fbee23;
  color: #fff;
}
.form-check-westhamunited input[type=radio]:checked + label,
.form-check-westhamunited input[type=checkbox]:checked + label {
  background: #7f0000;
  color: #fff;
}
.form-check-wolverhamptonwanderers input[type=radio]:checked + label,
.form-check-wolverhamptonwanderers input[type=checkbox]:checked + label {
  background: #fdb913;
  color: #fff;
}
.form-check-astonvilla input[type=radio]:checked + label,
.form-check-astonvilla input[type=checkbox]:checked + label {
  background: #670e36;
  color: #fff;
}
.form-check-norwichcity input[type=radio]:checked + label,
.form-check-norwichcity input[type=checkbox]:checked + label {
  background: #00a650;
  color: #fff;
}
.form-check-sheffieldunited input[type=radio]:checked + label,
.form-check-sheffieldunited input[type=checkbox]:checked + label {
  background: #ee2737;
  color: #fff;
}

.buttons {
  padding-top: 10px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-line-series/example-chart-line-series.component.scss"],"names":[],"mappings":"AAAA;EACE,eAAA;EACA,mCAAA;EACA,mBAAA;AACF;;AAGE;EACE,iBAAA;EACA,aAAA;AAAJ;;AAIA;EACE,YAAA;EACA,YAAA;EACA,cAAA;AADF;AAGE;EACE,eAAA;AADJ;;AAKA;EACE,aAAA;EACA,oBAAA;AAFF;;AAKA;EACE,SAAA;AAFF;;AAKA;;EAEE,aAAA;EACA,iBAAA;EACA,YAAA;EACA,4BAAA;EACA,eAAA;AAFF;AAIE;;;;EAEE,gBAAA;EACA,YAAA;EACA,WAAA;AAAJ;AAEI;;;;EACE,gBAAA;EACA,sBAAA;EACA,uBAAA;EACA,kBAAA;EACA,eAAA;EACA,WAAA;EACA,iCAAA;EACA,eAAA;AAGN;AAAI;;;;;;;;EAEE,aAAA;AAQN;;AADI;;EAEE,mBAAA;EACA,WAAA;AAIN;AACI;;EAEE,mBAAA;EACA,WAAA;AACN;AAII;;EAEE,mBAAA;EACA,WAAA;AAFN;AAOI;;EAEE,mBAAA;EACA,WAAA;AALN;AAUI;;EAEE,mBAAA;EACA,WAAA;AARN;AAaI;;EAEE,mBAAA;EACA,WAAA;AAXN;AAgBI;;EAEE,mBAAA;EACA,WAAA;AAdN;AAmBI;;EAEE,mBAAA;EACA,WAAA;AAjBN;AAsBI;;EAEE,mBAAA;EACA,WAAA;AApBN;AAyBI;;EAEE,mBAAA;EACA,WAAA;AAvBN;AA4BI;;EAEE,mBAAA;EACA,WAAA;AA1BN;AA+BI;;EAEE,mBAAA;EACA,WAAA;AA7BN;AAkCI;;EAEE,mBAAA;EACA,WAAA;AAhCN;AAqCI;;EAEE,mBAAA;EACA,WAAA;AAnCN;AAwCI;;EAEE,mBAAA;EACA,WAAA;AAtCN;AA2CI;;EAEE,mBAAA;EACA,WAAA;AAzCN;AA8CI;;EAEE,mBAAA;EACA,WAAA;AA5CN;AAiDI;;EAEE,mBAAA;EACA,WAAA;AA/CN;AAoDI;;EAEE,mBAAA;EACA,WAAA;AAlDN;AAuDI;;EAEE,mBAAA;EACA,WAAA;AArDN;AA0DI;;EAEE,mBAAA;EACA,WAAA;AAxDN;AA6DI;;EAEE,mBAAA;EACA,WAAA;AA3DN;AAgEI;;EAEE,mBAAA;EACA,WAAA;AA9DN;;AAmEA;EACE,iBAAA;AAhEF","sourcesContent":[":host {\r\n  font-size: 20px;\r\n  font-family: \"Proxima Nova Regular\";\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.chart {\r\n  &-container {\r\n    max-width: 1400px;\r\n    height: 750px;\r\n  }\r\n}\r\n\r\nselect {\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 0 10px;\r\n\r\n  option {\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.dropdowns {\r\n  display: flex;\r\n  margin-bottom: 7.5px;\r\n}\r\n\r\nh5 {\r\n  margin: 0;\r\n}\r\n\r\n.radio-btn-group,\r\n.checkbox-btn-group {\r\n  display: flex;\r\n  max-width: 1500px;\r\n  height: auto;\r\n  align-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  .radio,\r\n  .form-check {\r\n    max-width: 300px;\r\n    height: 50px;\r\n    margin: 5px;\r\n\r\n    label {\r\n      background: #fff;\r\n      border: 1px solid #ddd;\r\n      padding: 0.5rem 1.25rem;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      color: #444;\r\n      transition: box-shadow 400ms ease;\r\n      font-size: 12px;\r\n    }\r\n\r\n    input[type=\"radio\"],\r\n    input[type=\"checkbox\"] {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.form-check {\r\n  &-arsenal {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #dd0000;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-bournemouth {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #ed1c24;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-brightonhovealbion {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #005daa;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-burnley {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #80bfff;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-cardiffcity {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #0000ff;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-chelsea {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #034694;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-crystalpalace {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #bbbdbf;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-everton {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #274488;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-fulham {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #000000;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-huddersfieldtown {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #192552;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-leicestercity {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #0053a0;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-liverpool {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #dc3912;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-manchestercity {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #6caddf;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-manchesterunited {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #e80909;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-newcastleunited {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #a8996e;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-southampton {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #ed1a3b;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-tottenhamhotspur {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #182433;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-watford {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #fbee23;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-westhamunited {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #7f0000;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-wolverhamptonwanderers {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #fdb913;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-astonvilla {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #670e36;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-norwichcity {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #00a650;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  &-sheffieldunited {\r\n    input[type=\"radio\"]:checked + label,\r\n    input[type=\"checkbox\"]:checked + label {\r\n      background: #ee2737;\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n\r\n.buttons {\r\n  padding-top: 10px;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 75736:
/*!**************************************************************************************************!*\
  !*** ./src/examples/example-chart-map-series/example-chart-map-series.component.scss?ngResource ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.title {
  display: flex;
}

.app-chart {
  width: 900px;
  height: 900px;
  margin-left: -200px;
}

.popup {
  width: 250px;
  min-height: 150px;
}
.popup-header {
  display: flex;
  align-items: center;
  border-bottom: 0.5px solid rgba(145, 145, 145, 0.3);
  margin: 0 10px;
  margin-bottom: 5px;
}
.popup dl {
  width: 100%;
  margin: 0 10px;
}
.popup dt {
  float: left;
  min-width: 100px;
  margin-left: 5px;
  font-size: 12px;
  font-weight: 600;
  line-height: 1.5;
  letter-spacing: 0.2px;
  color: #000;
  position: relative;
  margin-right: 0;
}
.popup dd {
  float: left;
  margin-left: 5px;
  font-size: 12px;
  width: 100px;
  line-height: 1.5;
  letter-spacing: 0.2px;
  font-weight: normal;
  color: #000;
}
.popup-title {
  font-family: "Proxima Nova";
  text-transform: uppercase;
  font-size: 12px;
  padding: 17px 16px 17px 5px;
  letter-spacing: 1.5px;
  font-weight: bold;
  width: 100%;
  margin: 0;
}
.popup .land dt,
.popup .land dd {
  padding-bottom: 4px;
}

.logo {
  width: 25px;
  height: 25px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  margin: 0 10px;
}
.logo-big {
  width: 80px;
  height: 80px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  margin: 10px 10px;
}

.info {
  width: 260px;
  height: 100%;
  border: 1px solid black;
}
.info dl {
  width: 100%;
  margin: 0 5px;
}
.info dt {
  float: left;
  width: 120px;
  margin: 0px 5px 5px 5px;
  font-size: 14px;
  font-weight: 600;
  letter-spacing: 0.2px;
  color: #000;
  position: relative;
  margin-right: 0;
}
.info dd {
  float: left;
  margin: 0px 5px 5px 5px;
  font-size: 14px;
  width: 120px;
  letter-spacing: 0.2px;
  font-weight: normal;
  color: #000;
}

h5 {
  margin: 0;
  width: 240px;
}

.legend .legend-scale ul {
  margin: 0;
  padding: 0;
  float: left;
  list-style: none;
}

.legend .legend-scale ul li {
  display: block;
  float: left;
  width: 50px;
  margin-bottom: 6px;
  text-align: center;
  font-size: 80%;
  list-style: none;
}

.legend ul.legend-labels li span {
  display: block;
  float: left;
  height: 15px;
  width: 50px;
}

.legend-labels li:first-child > span {
  background: rgb(180, 149, 91);
}
.legend-labels li:nth-child(2) > span {
  background: rgb(154, 124, 68);
}
.legend-labels li:nth-child(3) > span {
  background: rgb(128, 99, 45);
}
.legend-labels li:nth-child(4) > span {
  background: rgb(102, 74, 23);
}
.legend-labels li:nth-child(5) > span {
  background: rgb(76, 49, 0);
}

.legend {
  margin-left: 30px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-map-series/example-chart-map-series.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;AACF;;AAEA;EACE,YAAA;EACA,aAAA;EACA,mBAAA;AACF;;AAEA;EACE,YAAA;EACA,iBAAA;AACF;AACE;EACE,aAAA;EACA,mBAAA;EACA,mDAAA;EACA,cAAA;EACA,kBAAA;AACJ;AAEE;EACE,WAAA;EACA,cAAA;AAAJ;AAGE;EACE,WAAA;EACA,gBAAA;EACA,gBAAA;EACA,eAAA;EACA,gBAAA;EACA,gBAAA;EACA,qBAAA;EACA,WAAA;EACA,kBAAA;EACA,eAAA;AADJ;AAIE;EACE,WAAA;EACA,gBAAA;EACA,eAAA;EACA,YAAA;EACA,gBAAA;EACA,qBAAA;EACA,mBAAA;EACA,WAAA;AAFJ;AAKE;EACE,2BAAA;EACA,yBAAA;EACA,eAAA;EACA,2BAAA;EACA,qBAAA;EACA,iBAAA;EACA,WAAA;EACA,SAAA;AAHJ;AAOI;;EAEE,mBAAA;AALN;;AAUA;EACE,WAAA;EACA,YAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;EACA,cAAA;AAPF;AASE;EACE,WAAA;EACA,YAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;EACA,iBAAA;AAPJ;;AAWA;EACE,YAAA;EACA,YAAA;EACA,uBAAA;AARF;AAUE;EACE,WAAA;EACA,aAAA;AARJ;AAWE;EACE,WAAA;EACA,YAAA;EACA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,qBAAA;EACA,WAAA;EACA,kBAAA;EACA,eAAA;AATJ;AAYE;EACE,WAAA;EACA,uBAAA;EACA,eAAA;EACA,YAAA;EACA,qBAAA;EACA,mBAAA;EACA,WAAA;AAVJ;;AAcA;EACE,SAAA;EACA,YAAA;AAXF;;AAcA;EACE,SAAA;EACA,UAAA;EACA,WAAA;EACA,gBAAA;AAXF;;AAaA;EACE,cAAA;EACA,WAAA;EACA,WAAA;EACA,kBAAA;EACA,kBAAA;EACA,cAAA;EACA,gBAAA;AAVF;;AAYA;EACE,cAAA;EACA,WAAA;EACA,YAAA;EACA,WAAA;AATF;;AAeM;EACE,6BAAA;AAZR;AAkBM;EACE,6BAAA;AAhBR;AAsBM;EACE,4BAAA;AApBR;AA0BM;EACE,4BAAA;AAxBR;AA8BM;EACE,0BAAA;AA5BR;;AAkCA;EACE,iBAAA;AA/BF","sourcesContent":[".title {\r\n  display: flex;\r\n}\r\n\r\n.app-chart {\r\n  width: 900px;\r\n  height: 900px;\r\n  margin-left: -200px;\r\n}\r\n\r\n.popup {\r\n  width: 250px;\r\n  min-height: 150px;\r\n\r\n  &-header {\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 0.5px solid rgba(145, 145, 145, 0.3);\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  dl {\r\n    width: 100%;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  dt {\r\n    float: left;\r\n    min-width: 100px;\r\n    margin-left: 5px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.2px;\r\n    color: #000;\r\n    position: relative;\r\n    margin-right: 0;\r\n  }\r\n\r\n  dd {\r\n    float: left;\r\n    margin-left: 5px;\r\n    font-size: 12px;\r\n    width: 100px;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.2px;\r\n    font-weight: normal;\r\n    color: #000;\r\n  }\r\n\r\n  &-title {\r\n    font-family: \"Proxima Nova\";\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    padding: 17px 16px 17px 5px;\r\n    letter-spacing: 1.5px;\r\n    font-weight: bold;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  .land {\r\n    dt,\r\n    dd {\r\n      padding-bottom: 4px;\r\n    }\r\n  }\r\n}\r\n\r\n.logo {\r\n  width: 25px;\r\n  height: 25px;\r\n  display: inline-flex;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  margin: 0 10px;\r\n\r\n  &-big {\r\n    width: 80px;\r\n    height: 80px;\r\n    display: inline-flex;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n    margin: 10px 10px;\r\n  }\r\n}\r\n\r\n.info {\r\n  width: 260px;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n\r\n  dl {\r\n    width: 100%;\r\n    margin: 0 5px;\r\n  }\r\n\r\n  dt {\r\n    float: left;\r\n    width: 120px;\r\n    margin: 0px 5px 5px 5px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.2px;\r\n    color: #000;\r\n    position: relative;\r\n    margin-right: 0;\r\n  }\r\n\r\n  dd {\r\n    float: left;\r\n    margin: 0px 5px 5px 5px;\r\n    font-size: 14px;\r\n    width: 120px;\r\n    letter-spacing: 0.2px;\r\n    font-weight: normal;\r\n    color: #000;\r\n  }\r\n}\r\n\r\nh5 {\r\n  margin: 0;\r\n  width: 240px;\r\n}\r\n\r\n.legend .legend-scale ul {\r\n  margin: 0;\r\n  padding: 0;\r\n  float: left;\r\n  list-style: none;\r\n}\r\n.legend .legend-scale ul li {\r\n  display: block;\r\n  float: left;\r\n  width: 50px;\r\n  margin-bottom: 6px;\r\n  text-align: center;\r\n  font-size: 80%;\r\n  list-style: none;\r\n}\r\n.legend ul.legend-labels li span {\r\n  display: block;\r\n  float: left;\r\n  height: 15px;\r\n  width: 50px;\r\n}\r\n\r\n.legend-labels {\r\n  li {\r\n    &:first-child {\r\n      > span {\r\n        background: rgb(180, 149, 91);\r\n      }\r\n    }\r\n  }\r\n  li {\r\n    &:nth-child(2) {\r\n      > span {\r\n        background: rgb(154, 124, 68);\r\n      }\r\n    }\r\n  }\r\n  li {\r\n    &:nth-child(3) {\r\n      > span {\r\n        background: rgb(128, 99, 45);\r\n      }\r\n    }\r\n  }\r\n  li {\r\n    &:nth-child(4) {\r\n      > span {\r\n        background: rgb(102, 74, 23);\r\n      }\r\n    }\r\n  }\r\n  li {\r\n    &:nth-child(5) {\r\n      > span {\r\n        background: rgb(76, 49, 0);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.legend {\r\n  margin-left: 30px;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 50810:
/*!********************************************************************************************************!*\
  !*** ./src/examples/example-chart-matrix-series/example-chart-matrix-series.component.scss?ngResource ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-container {
  width: 780px;
  height: 780px;
}
.chart-container > div {
  display: flex;
  align-items: center;
  font-size: 18px;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

select {
  height: 30px;
  width: 120px;
  text-align-last: center;
  font-size: 18px;
  font-family: "Proxima Nova Regular";
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-matrix-series/example-chart-matrix-series.component.scss"],"names":[],"mappings":"AAAA;EACI,YAAA;EACA,aAAA;AACJ;AACI;EACI,aAAA;EACA,mBAAA;EACA,eAAA;EACA,6EAAA;AACR;;AAGA;EACI,YAAA;EACA,YAAA;EACA,uBAAA;EACA,eAAA;EACA,mCAAA;AAAJ","sourcesContent":[".chart-container {\r\n    width: 780px;\r\n    height: 780px;\r\n\r\n    >div {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 18px;\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    }\r\n}\r\n\r\nselect {\r\n    height: 30px;\r\n    width: 120px;\r\n    text-align-last: center;\r\n    font-size: 18px;\r\n    font-family: 'Proxima Nova Regular';\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 52912:
/*!**************************************************************************************************!*\
  !*** ./src/examples/example-chart-pie-series/example-chart-pie-series.component.scss?ngResource ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  font-size: 20px;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
  letter-spacing: 1px;
}

.header {
  width: 100%;
  padding-top: 5px;
  height: 50px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
}
.header h5 {
  margin-right: 20px;
}
.header > div {
  width: 15px;
  height: 15px;
  margin: 0 20px;
}
.header .win {
  background-color: #709a28;
}
.header .draw {
  background-color: #f7a704;
}
.header .lost {
  background-color: #c23612;
}

.container {
  width: 100%;
  height: auto;
}
.container .chart {
  display: inline-block;
  margin: 5px;
  padding: 10px;
  background-color: aliceblue;
}
.container .chart__title {
  display: flex;
  justify-content: center;
  padding-bottom: 10px;
}
.container .chart__stats {
  display: flex;
  justify-content: space-between;
}
.container .chart app-chart {
  width: 200px;
  height: 200px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-pie-series/example-chart-pie-series.component.scss"],"names":[],"mappings":"AAAA;EACI,eAAA;EACA,6EAAA;EACA,mBAAA;AACJ;;AAEA;EACI,WAAA;EACA,gBAAA;EACA,YAAA;EACA,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,kBAAA;AACJ;AACI;EACI,kBAAA;AACR;AAEI;EACI,WAAA;EACA,YAAA;EACA,cAAA;AAAR;AAGI;EACI,yBAAA;AADR;AAII;EACI,yBAAA;AAFR;AAKI;EACI,yBAAA;AAHR;;AAOA;EACI,WAAA;EACA,YAAA;AAJJ;AAMI;EACI,qBAAA;EACA,WAAA;EACA,aAAA;EACA,2BAAA;AAJR;AAMQ;EACI,aAAA;EACA,uBAAA;EACA,oBAAA;AAJZ;AAOQ;EACI,aAAA;EACA,8BAAA;AALZ;AAQQ;EACI,YAAA;EACA,aAAA;AANZ","sourcesContent":[":host {\r\n    font-size: 20px;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.header {\r\n    width: 100%;\r\n    padding-top: 5px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    h5 {\r\n        margin-right: 20px;\r\n    }\r\n\r\n    >div {\r\n        width: 15px;\r\n        height: 15px;\r\n        margin: 0 20px;\r\n    }\r\n\r\n    .win {\r\n        background-color: #709a28;\r\n    }\r\n\r\n    .draw {\r\n        background-color: #f7a704;\r\n    }\r\n\r\n    .lost {\r\n        background-color: #c23612;\r\n    }\r\n}\r\n\r\n.container {\r\n    width: 100%;\r\n    height: auto;\r\n\r\n    .chart {\r\n        display: inline-block;\r\n        margin: 5px;\r\n        padding: 10px;\r\n        background-color: aliceblue;\r\n\r\n        &__title {\r\n            display: flex;\r\n            justify-content: center;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        &__stats {\r\n            display: flex;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        app-chart {\r\n            width: 200px;\r\n            height: 200px;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 88200:
/*!******************************************************************************************************************!*\
  !*** ./src/examples/example-chart-radial-tree-series/example-chart-radial-tree-series.component.scss?ngResource ***!
  \******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:host {
  display: block;
  position: relative;
}

app-chart-breadcrumb {
  position: absolute;
  top: 10px;
  left: 10px;
}

.container {
  width: 1000px;
  height: 950px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-radial-tree-series/example-chart-radial-tree-series.component.scss"],"names":[],"mappings":"AAAA;EACE,cAAA;EACA,kBAAA;AACF;;AAEA;EACE,kBAAA;EACA,SAAA;EACA,UAAA;AACF;;AAEA;EACE,aAAA;EACA,aAAA;AACF","sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n}\r\n\r\napp-chart-breadcrumb {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n}\r\n\r\n.container {\r\n  width: 1000px;\r\n  height: 950px;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 9654:
/*!************************************************************************************************************!*\
  !*** ./src/examples/example-chart-sunburst-series/example-chart-sunburst-series.component.scss?ngResource ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-container {
  width: 800px;
  height: 800px;
}

app-chart-breadcrumb {
  position: absolute;
  top: 10px;
  left: 10px;
  pointer-events: all;
  margin-left: 10px;
}

.logo {
  width: 25px;
  height: 25px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  margin: 0 10px;
}

.popup {
  width: 250px;
  min-height: 150px;
}
.popup-header {
  display: flex;
  align-items: center;
  border-bottom: 0.5px solid rgba(145, 145, 145, 0.3);
  margin: 0 10px;
  margin-bottom: 5px;
}
.popup dl {
  width: 100%;
  margin: 0 10px;
}
.popup dt {
  float: left;
  min-width: 100px;
  margin-left: 5px;
  font-size: 12px;
  font-weight: 600;
  line-height: 1.5;
  letter-spacing: 0.2px;
  color: #000;
  position: relative;
  margin-right: 0;
}
.popup dd {
  float: left;
  margin-left: 5px;
  font-size: 12px;
  width: 100px;
  line-height: 1.5;
  letter-spacing: 0.2px;
  font-weight: normal;
  color: #000;
}
.popup-title {
  font-family: "Proxima Nova";
  text-transform: uppercase;
  font-size: 12px;
  padding: 17px 16px 17px 5px;
  letter-spacing: 1.5px;
  font-weight: bold;
  width: 100%;
  margin: 0;
}
.popup .land dt,
.popup .land dd {
  padding-bottom: 4px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-sunburst-series/example-chart-sunburst-series.component.scss"],"names":[],"mappings":"AAAA;EACE,YAAA;EACA,aAAA;AACF;;AAEA;EACE,kBAAA;EACA,SAAA;EACA,UAAA;EACA,mBAAA;EACA,iBAAA;AACF;;AAEA;EACE,WAAA;EACA,YAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;EACA,cAAA;AACF;;AAEA;EACE,YAAA;EACA,iBAAA;AACF;AACE;EACE,aAAA;EACA,mBAAA;EACA,mDAAA;EACA,cAAA;EACA,kBAAA;AACJ;AAEE;EACE,WAAA;EACA,cAAA;AAAJ;AAGE;EACE,WAAA;EACA,gBAAA;EACA,gBAAA;EACA,eAAA;EACA,gBAAA;EACA,gBAAA;EACA,qBAAA;EACA,WAAA;EACA,kBAAA;EACA,eAAA;AADJ;AAIE;EACE,WAAA;EACA,gBAAA;EACA,eAAA;EACA,YAAA;EACA,gBAAA;EACA,qBAAA;EACA,mBAAA;EACA,WAAA;AAFJ;AAKE;EACE,2BAAA;EACA,yBAAA;EACA,eAAA;EACA,2BAAA;EACA,qBAAA;EACA,iBAAA;EACA,WAAA;EACA,SAAA;AAHJ;AAOI;;EAEE,mBAAA;AALN","sourcesContent":[".chart-container {\r\n  width: 800px;\r\n  height: 800px;\r\n}\r\n\r\napp-chart-breadcrumb {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  pointer-events: all;\r\n  margin-left: 10px;\r\n}\r\n\r\n.logo {\r\n  width: 25px;\r\n  height: 25px;\r\n  display: inline-flex;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  margin: 0 10px;\r\n}\r\n\r\n.popup {\r\n  width: 250px;\r\n  min-height: 150px;\r\n\r\n  &-header {\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 0.5px solid rgba(145, 145, 145, 0.3);\r\n    margin: 0 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  dl {\r\n    width: 100%;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  dt {\r\n    float: left;\r\n    min-width: 100px;\r\n    margin-left: 5px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.2px;\r\n    color: #000;\r\n    position: relative;\r\n    margin-right: 0;\r\n  }\r\n\r\n  dd {\r\n    float: left;\r\n    margin-left: 5px;\r\n    font-size: 12px;\r\n    width: 100px;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.2px;\r\n    font-weight: normal;\r\n    color: #000;\r\n  }\r\n\r\n  &-title {\r\n    font-family: \"Proxima Nova\";\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    padding: 17px 16px 17px 5px;\r\n    letter-spacing: 1.5px;\r\n    font-weight: bold;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  .land {\r\n    dt,\r\n    dd {\r\n      padding-bottom: 4px;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 50803:
/*!*****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-word-cloud-series/examples-chart-word-cloud-series.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.chart-container {
  width: 100%;
  height: 100%;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-chart-word-cloud-series/examples-chart-word-cloud-series.component.scss"],"names":[],"mappings":"AAAA;EACI,WAAA;EACA,YAAA;AACJ","sourcesContent":[".chart-container {\r\n    width: 100%;\r\n    height: 100%;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 47726:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-league-simulation/example-league-simulation.component.scss?ngResource ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.pots {
  display: flex;
  padding-bottom: 10px;
}
.pots ul {
  margin: 0 0 0 20px;
  padding: 5px 5px 5px 0;
}
.pots .column {
  width: 300px;
  border: 1px solid black;
  padding: 5px;
  margin: 2.5px;
}
.pots .fixtures {
  width: 450px;
  border: 1px solid black;
  padding: 5px;
  margin: 2.5px;
}
.pots .fixtures ol {
  list-style: none;
  padding: 0;
}
.pots .fixtures ol li {
  margin: 2px 0;
}

h4 {
  margin: 0 0 5px 0;
}

.groups {
  display: flex;
  width: 1100px;
  flex-wrap: wrap;
  padding: 15px 0;
}
.groups > div {
  width: 250px;
  border: 1px solid black;
  padding: 5px;
  margin: 2.5px;
}
.groups ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.groups ul li {
  margin: 2px 0;
  align-items: center;
  display: flex;
}
.groups h5 {
  margin: 5px 0 5px 0;
}
.groups table tr td:nth-child(2),
.groups table tr td:nth-child(3) {
  text-align: center;
}
.groups table tr:first-child td {
  font-weight: 600;
  font-size: 12px;
}
.groups table tr:nth-child(2) td,
.groups table tr:nth-child(3) td {
  color: green;
}
.groups table tr td:first-child {
  width: 225px;
  padding-right: 10px;
}

button {
  font-size: 20px;
  margin: 10px 10px;
  padding: 10px 25px;
}

.comment {
  font-style: italic;
  color: green;
}

.playoff ul {
  width: 1000px;
  list-style: none;
  padding: 0;
}
.playoff ul li {
  padding: 2.5px 0;
}
.playoff ul li:nth-child(even) {
  border-bottom: 1px solid rgb(85, 73, 73);
}

h6 {
  font-style: italic;
  margin: 5px 0;
}

.logo {
  width: 25px;
  height: 25px;
  margin-right: 5px;
  display: inline-flex;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}

.score {
  padding: 0 5px;
}`, "",{"version":3,"sources":["webpack://./src/examples/example-league-simulation/example-league-simulation.component.scss"],"names":[],"mappings":"AAAA;EACI,aAAA;EACA,oBAAA;AACJ;AAAI;EACI,kBAAA;EACA,sBAAA;AAER;AAAI;EACI,YAAA;EACA,uBAAA;EACA,YAAA;EACA,aAAA;AAER;AAAI;EACI,YAAA;EACA,uBAAA;EACA,YAAA;EACA,aAAA;AAER;AADQ;EACI,gBAAA;EACA,UAAA;AAGZ;AAFY;EACI,aAAA;AAIhB;;AAEA;EACI,iBAAA;AACJ;;AAEA;EACI,aAAA;EACA,aAAA;EACA,eAAA;EACA,eAAA;AACJ;AAAI;EACI,YAAA;EACA,uBAAA;EACA,YAAA;EACA,aAAA;AAER;AAAI;EACI,gBAAA;EACA,UAAA;EACA,SAAA;AAER;AADQ;EACI,aAAA;EACA,mBAAA;EACA,aAAA;AAGZ;AAAI;EACI,mBAAA;AAER;AAEY;;EAEI,kBAAA;AAAhB;AAIY;EACI,gBAAA;EACA,eAAA;AAFhB;AAOY;;EACI,YAAA;AAJhB;AAQY;EACI,YAAA;EACA,mBAAA;AANhB;;AAYA;EACI,eAAA;EACA,iBAAA;EACA,kBAAA;AATJ;;AAYA;EACI,kBAAA;EACA,YAAA;AATJ;;AAaI;EACI,aAAA;EACA,gBAAA;EACA,UAAA;AAVR;AAWQ;EACI,gBAAA;AATZ;AAWQ;EACI,wCAAA;AATZ;;AAcA;EACI,kBAAA;EACA,aAAA;AAXJ;;AAcA;EACI,WAAA;EACA,YAAA;EACA,iBAAA;EACA,oBAAA;EACA,4BAAA;EACA,wBAAA;EACA,2BAAA;AAXJ;;AAcA;EACI,cAAA;AAXJ","sourcesContent":[".pots {\r\n    display: flex;\r\n    padding-bottom: 10px;\r\n    ul {\r\n        margin: 0 0 0 20px;\r\n        padding: 5px 5px 5px 0;\r\n    }\r\n    .column {\r\n        width: 300px;\r\n        border: 1px solid black;\r\n        padding: 5px;\r\n        margin: 2.5px;\r\n    }\r\n    .fixtures {\r\n        width: 450px;\r\n        border: 1px solid black;\r\n        padding: 5px;\r\n        margin: 2.5px;\r\n        ol {\r\n            list-style: none;\r\n            padding: 0;\r\n            li {\r\n                margin: 2px 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nh4 {\r\n    margin: 0 0 5px 0;\r\n}\r\n\r\n.groups {\r\n    display: flex;\r\n    width: 1100px;\r\n    flex-wrap: wrap;\r\n    padding: 15px 0;\r\n    >div {\r\n        width: 250px;\r\n        border: 1px solid black;\r\n        padding: 5px;\r\n        margin: 2.5px;\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n        li {\r\n            margin: 2px 0;\r\n            align-items: center;\r\n            display: flex;\r\n        }\r\n    }\r\n    h5 {\r\n        margin: 5px 0 5px 0;\r\n    }\r\n    table {\r\n        tr {\r\n            td:nth-child(2),\r\n            td:nth-child(3) {\r\n                text-align: center;\r\n            }\r\n        }\r\n        tr:first-child {\r\n            td {\r\n                font-weight: 600;\r\n                font-size: 12px;\r\n            }\r\n        }\r\n        tr:nth-child(2),\r\n        tr:nth-child(3) {\r\n            td {\r\n                color: green;\r\n            }\r\n        }\r\n        tr {\r\n            td:first-child {\r\n                width: 225px;\r\n                padding-right: 10px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nbutton {\r\n    font-size: 20px;\r\n    margin: 10px 10px;\r\n    padding: 10px 25px;\r\n}\r\n\r\n.comment {\r\n    font-style: italic;\r\n    color: green;\r\n}\r\n\r\n.playoff {\r\n    ul {\r\n        width: 1000px;\r\n        list-style: none;\r\n        padding: 0;\r\n        li {\r\n            padding: 2.5px 0;\r\n        }\r\n        li:nth-child(even) {\r\n            border-bottom: 1px solid rgb(85, 73, 73);\r\n        }\r\n    }\r\n}\r\n\r\nh6 {\r\n    font-style: italic;\r\n    margin: 5px 0;\r\n}\r\n\r\n.logo {\r\n    width: 25px;\r\n    height: 25px;\r\n    margin-right: 5px;\r\n    display: inline-flex;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n}\r\n\r\n.score {\r\n    padding: 0 5px;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 48435:
/*!*********************************************************!*\
  !*** ./src/pages/about/about.component.scss?ngResource ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 17963:
/*!***************************************************************!*\
  !*** ./src/pages/contacts/contacts.component.scss?ngResource ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 62179:
/*!*******************************************************!*\
  !*** ./src/pages/home/home.component.scss?ngResource ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 29792:
/*!***********************************************************!*\
  !*** ./src/styles/champions-league-logos.scss?ngResource ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `@charset "UTF-8";
.logo-atalanta {
  background-image: url("/assets/images/champions-league-logos/atalanta-logo.png");
}
.logo-atlético-madrid {
  background-image: url("/assets/images/champions-league-logos/atletico-madrid-logo.png");
}
.logo-ajax {
  background-image: url("/assets/images/champions-league-logos/ajax-logo.png");
}
.logo-barcelona {
  background-image: url("/assets/images/champions-league-logos/barcelona-logo.png");
}
.logo-bayer-leverkusen {
  background-image: url("/assets/images/champions-league-logos/bayer-leverkusen-logo.png");
}
.logo-bayern-munich {
  background-image: url("/assets/images/champions-league-logos/bayern-munich-logo.png");
}
.logo-benfica {
  background-image: url("/assets/images/champions-league-logos/benfica-logo.png");
}
.logo-borussia-dortmund {
  background-image: url("/assets/images/champions-league-logos/borussia-dortmund-logo.png");
}
.logo-club-brugge {
  background-image: url("/assets/images/champions-league-logos/club-brugge-logo.png");
}
.logo-crvena-zvezda-belgrad {
  background-image: url("/assets/images/champions-league-logos/crvena-zvezda-belgrad-logo.png");
}
.logo-dinamo-zagreb {
  background-image: url("/assets/images/champions-league-logos/dinamo-zagreb-logo.png");
}
.logo-galatasaray {
  background-image: url("/assets/images/champions-league-logos/galatasaray-logo.png");
}
.logo-genk {
  background-image: url("/assets/images/champions-league-logos/genk-logo.png");
}
.logo-inter-milan {
  background-image: url("/assets/images/champions-league-logos/inter-milan-logo.png");
}
.logo-juventus {
  background-image: url("/assets/images/champions-league-logos/juventus-logo.png");
}
.logo-lille {
  background-image: url("/assets/images/champions-league-logos/lille-logo.png");
}
.logo-lokomotiv-moscow {
  background-image: url("/assets/images/champions-league-logos/lokomotiv-moscow-logo.png");
}
.logo-lyon {
  background-image: url("/assets/images/champions-league-logos/lyon-logo.png");
}
.logo-napoli {
  background-image: url("/assets/images/champions-league-logos/napoli-logo.png");
}
.logo-olympiacos {
  background-image: url("/assets/images/champions-league-logos/olympiacos-logo.png");
}
.logo-paris-saint-germain {
  background-image: url("/assets/images/champions-league-logos/paris-saint-germain-logo.png");
}
.logo-rb-leipzig {
  background-image: url("/assets/images/champions-league-logos/rb-leipzig-logo.png");
}
.logo-real-madrid {
  background-image: url("/assets/images/champions-league-logos/real-madrid-logo.png");
}
.logo-red-bull-salzburg {
  background-image: url("/assets/images/champions-league-logos/red-bull-salzburg-logo.png");
}
.logo-shakhtar-donetsk {
  background-image: url("/assets/images/champions-league-logos/shakhtar-donetsk-logo.png");
}
.logo-slavia-prague {
  background-image: url("/assets/images/champions-league-logos/slavia-prague-logo.png");
}
.logo-valencia {
  background-image: url("/assets/images/champions-league-logos/valencia-logo.png");
}
.logo-zenit-saint-petersburg {
  background-image: url("/assets/images/champions-league-logos/zenit-saint-petersburg-logo.png");
}`, "",{"version":3,"sources":["webpack://./src/styles/champions-league-logos.scss","webpack://./src/styles/mixins.scss"],"names":[],"mappings":"AAAA,gBAAgB;AAGZ;ECEA,gFAAA;ADFJ;AAII;ECFA,uFAAA;ADCJ;AAKI;ECNA,4EAAA;ADIJ;AAMI;ECVA,iFAAA;ADOJ;AAOI;ECdA,wFAAA;ADUJ;AAQI;EClBA,qFAAA;ADaJ;AASI;ECtBA,+EAAA;ADgBJ;AAUI;EC1BA,yFAAA;ADmBJ;AAWI;EC9BA,mFAAA;ADsBJ;AAYI;EClCA,6FAAA;ADyBJ;AAaI;ECtCA,qFAAA;AD4BJ;AAcI;EC1CA,mFAAA;AD+BJ;AAeI;EC9CA,4EAAA;ADkCJ;AAgBI;EClDA,mFAAA;ADqCJ;AAiBI;ECtDA,gFAAA;ADwCJ;AAkBI;EC1DA,6EAAA;AD2CJ;AAmBI;EC9DA,wFAAA;AD8CJ;AAoBI;EClEA,4EAAA;ADiDJ;AAqBI;ECtEA,8EAAA;ADoDJ;AAsBI;EC1EA,kFAAA;ADuDJ;AAuBI;EC9EA,2FAAA;AD0DJ;AAwBI;EClFA,kFAAA;AD6DJ;AAyBI;ECtFA,mFAAA;ADgEJ;AA0BI;EC1FA,yFAAA;ADmEJ;AA2BI;EC9FA,wFAAA;ADsEJ;AA4BI;EClGA,qFAAA;ADyEJ;AA6BI;ECtGA,gFAAA;AD4EJ;AA8BI;EC1GA,8FAAA;AD+EJ","sourcesContent":["@import '../styles/mixins.scss';\r\n\r\n.logo {\r\n    &-atalanta {\r\n        @include club-logo-cl('atalanta');\r\n    }\r\n\r\n    &-atlético-madrid {\r\n        @include club-logo-cl('atletico-madrid');\r\n    }\r\n\r\n    &-ajax {\r\n        @include club-logo-cl('ajax');\r\n    }\r\n\r\n    &-barcelona {\r\n        @include club-logo-cl('barcelona');\r\n    }\r\n\r\n    &-bayer-leverkusen {\r\n        @include club-logo-cl('bayer-leverkusen');\r\n    }\r\n\r\n    &-bayern-munich {\r\n        @include club-logo-cl('bayern-munich');\r\n    }\r\n\r\n    &-benfica {\r\n        @include club-logo-cl('benfica');\r\n    }\r\n\r\n    &-borussia-dortmund {\r\n        @include club-logo-cl('borussia-dortmund');\r\n    }\r\n\r\n    &-club-brugge {\r\n        @include club-logo-cl('club-brugge');\r\n    }\r\n\r\n    &-crvena-zvezda-belgrad {\r\n        @include club-logo-cl('crvena-zvezda-belgrad');\r\n    }\r\n\r\n    &-dinamo-zagreb {\r\n        @include club-logo-cl('dinamo-zagreb');\r\n    }\r\n\r\n    &-galatasaray {\r\n        @include club-logo-cl('galatasaray');\r\n    }\r\n\r\n    &-genk {\r\n        @include club-logo-cl('genk');\r\n    }\r\n\r\n    &-inter-milan {\r\n        @include club-logo-cl('inter-milan');\r\n    }\r\n\r\n    &-juventus {\r\n        @include club-logo-cl('juventus');\r\n    }\r\n\r\n    &-lille {\r\n        @include club-logo-cl('lille');\r\n    }\r\n\r\n    &-lokomotiv-moscow {\r\n        @include club-logo-cl('lokomotiv-moscow');\r\n    }\r\n\r\n    &-lyon {\r\n        @include club-logo-cl('lyon');\r\n    }\r\n\r\n    &-napoli {\r\n        @include club-logo-cl('napoli');\r\n    }\r\n\r\n    &-olympiacos {\r\n        @include club-logo-cl('olympiacos');\r\n    }\r\n\r\n    &-paris-saint-germain {\r\n        @include club-logo-cl('paris-saint-germain');\r\n    }\r\n\r\n    &-rb-leipzig {\r\n        @include club-logo-cl('rb-leipzig');\r\n    }\r\n\r\n    &-real-madrid {\r\n        @include club-logo-cl('real-madrid');\r\n    }\r\n\r\n    &-red-bull-salzburg {\r\n        @include club-logo-cl('red-bull-salzburg');\r\n    }\r\n\r\n    &-shakhtar-donetsk {\r\n        @include club-logo-cl('shakhtar-donetsk');\r\n    }\r\n\r\n    &-slavia-prague {\r\n        @include club-logo-cl('slavia-prague');\r\n    }\r\n\r\n    &-valencia {\r\n        @include club-logo-cl('valencia');\r\n    }\r\n\r\n    &-zenit-saint-petersburg {\r\n        @include club-logo-cl('zenit-saint-petersburg');\r\n    }\r\n}","@mixin club-logo($name) {\r\n    background-image: url('/assets/images/epl-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin club-logo-cl($name) {\r\n    background-image: url('/assets/images/champions-league-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin land-logo($name) {\r\n    background-image: url('/assets/images/german-lands-logos/#{$name}-logo.png');\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 59012:
/*!************************************************!*\
  !*** ./src/styles/epl-emblems.scss?ngResource ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.logo-arsenal {
  background-image: url("/assets/images/epl-logos/arsenal-logo.png");
}
.logo-aston-villa {
  background-image: url("/assets/images/epl-logos/aston-villa-logo.png");
}
.logo-bournemouth {
  background-image: url("/assets/images/epl-logos/bournemouth-logo.png");
}
.logo-brighton {
  background-image: url("/assets/images/epl-logos/brighton-logo.png");
}
.logo-burnley {
  background-image: url("/assets/images/epl-logos/burnley-logo.png");
}
.logo-cardiff-city {
  background-image: url("/assets/images/epl-logos/cardiff-city-logo.png");
}
.logo-chelsea {
  background-image: url("/assets/images/epl-logos/chelsea-logo.png");
}
.logo-crystal-palace {
  background-image: url("/assets/images/epl-logos/crystal-palace-logo.png");
}
.logo-everton {
  background-image: url("/assets/images/epl-logos/everton-logo.png");
}
.logo-fulham {
  background-image: url("/assets/images/epl-logos/fulham-logo.png");
}
.logo-huddersfield-town {
  background-image: url("/assets/images/epl-logos/huddersfield-town-logo.png");
}
.logo-hull-city {
  background-image: url("/assets/images/epl-logos/hull-city-logo.png");
}
.logo-leicester-city {
  background-image: url("/assets/images/epl-logos/leicester-city-logo.png");
}
.logo-liverpool {
  background-image: url("/assets/images/epl-logos/liverpool-logo.png");
}
.logo-newcastle-united {
  background-image: url("/assets/images/epl-logos/newcastle-united-logo.png");
}
.logo-norwich-city {
  background-image: url("/assets/images/epl-logos/norwich-city-logo.png");
}
.logo-manchester-city {
  background-image: url("/assets/images/epl-logos/manchester-city-logo.png");
}
.logo-manchester-united {
  background-image: url("/assets/images/epl-logos/manchester-united-logo.png");
}
.logo-middlesbrough {
  background-image: url("/assets/images/epl-logos/middlesbrough-logo.png");
}
.logo-tottenham-hotspurs {
  background-image: url("/assets/images/epl-logos/tottenham-hotspurs-logo.png");
}
.logo-sheffield-united {
  background-image: url("/assets/images/epl-logos/sheffield-united-logo.png");
}
.logo-southampton {
  background-image: url("/assets/images/epl-logos/southampton-logo.png");
}
.logo-stoke-city {
  background-image: url("/assets/images/epl-logos/stoke-city-logo.png");
}
.logo-sunderland {
  background-image: url("/assets/images/epl-logos/sunderland-logo.png");
}
.logo-swansea-city {
  background-image: url("/assets/images/epl-logos/swansea-city-logo.png");
}
.logo-watford {
  background-image: url("/assets/images/epl-logos/watford-logo.png");
}
.logo-west-bromwich-albion {
  background-image: url("/assets/images/epl-logos/west-bromwich-albion-logo.png");
}
.logo-west-ham-united {
  background-image: url("/assets/images/epl-logos/west-ham-united-logo.png");
}
.logo-wolverhampton {
  background-image: url("/assets/images/epl-logos/wolverhampton-logo.png");
}`, "",{"version":3,"sources":["webpack://./src/styles/epl-emblems.scss","webpack://./src/styles/mixins.scss"],"names":[],"mappings":"AAGI;ECFA,kEAAA;ADCJ;AAKI;ECNA,sEAAA;ADIJ;AAMI;ECVA,sEAAA;ADOJ;AAOI;ECdA,mEAAA;ADUJ;AAQI;EClBA,kEAAA;ADaJ;AASI;ECtBA,uEAAA;ADgBJ;AAUI;EC1BA,kEAAA;ADmBJ;AAWI;EC9BA,yEAAA;ADsBJ;AAYI;EClCA,kEAAA;ADyBJ;AAaI;ECtCA,iEAAA;AD4BJ;AAcI;EC1CA,4EAAA;AD+BJ;AAeI;EC9CA,oEAAA;ADkCJ;AAgBI;EClDA,yEAAA;ADqCJ;AAiBI;ECtDA,oEAAA;ADwCJ;AAkBI;EC1DA,2EAAA;AD2CJ;AAmBI;EC9DA,uEAAA;AD8CJ;AAoBI;EClEA,0EAAA;ADiDJ;AAqBI;ECtEA,4EAAA;ADoDJ;AAsBI;EC1EA,wEAAA;ADuDJ;AAuBI;EC9EA,6EAAA;AD0DJ;AAwBI;EClFA,2EAAA;AD6DJ;AAyBI;ECtFA,sEAAA;ADgEJ;AA0BI;EC1FA,qEAAA;ADmEJ;AA2BI;EC9FA,qEAAA;ADsEJ;AA4BI;EClGA,uEAAA;ADyEJ;AA6BI;ECtGA,kEAAA;AD4EJ;AA8BI;EC1GA,+EAAA;AD+EJ;AA+BI;EC9GA,0EAAA;ADkFJ;AAgCI;EClHA,wEAAA;ADqFJ","sourcesContent":["@import '../styles/mixins.scss';\n\n.logo {\n    &-arsenal {\n        @include club-logo('arsenal');\n    }\n\n    &-aston-villa {\n        @include club-logo('aston-villa');\n    }\n\n    &-bournemouth {\n        @include club-logo('bournemouth');\n    }\n\n    &-brighton {\n        @include club-logo('brighton');\n    }\n\n    &-burnley {\n        @include club-logo('burnley');\n    }\n\n    &-cardiff-city {\n        @include club-logo('cardiff-city');\n    }\n\n    &-chelsea {\n        @include club-logo('chelsea');\n    }\n\n    &-crystal-palace {\n        @include club-logo('crystal-palace');\n    }\n\n    &-everton {\n        @include club-logo('everton');\n    }\n\n    &-fulham {\n        @include club-logo('fulham');\n    }\n\n    &-huddersfield-town {\n        @include club-logo('huddersfield-town');\n    }\n\n    &-hull-city {\n        @include club-logo('hull-city');\n    }\n\n    &-leicester-city {\n        @include club-logo('leicester-city');\n    }\n\n    &-liverpool {\n        @include club-logo('liverpool');\n    }\n\n    &-newcastle-united {\n        @include club-logo('newcastle-united');\n    }\n\n    &-norwich-city {\n        @include club-logo('norwich-city');\n    }\n\n    &-manchester-city {\n        @include club-logo('manchester-city');\n    }\n\n    &-manchester-united {\n        @include club-logo('manchester-united');\n    }\n\n    &-middlesbrough {\n        @include club-logo('middlesbrough');\n    }\n\n    &-tottenham-hotspurs {\n        @include club-logo('tottenham-hotspurs');\n    }\n\n    &-sheffield-united {\n        @include club-logo('sheffield-united');\n    }\n\n    &-southampton {\n        @include club-logo('southampton');\n    }\n\n    &-stoke-city {\n        @include club-logo('stoke-city');\n    }\n\n    &-sunderland {\n        @include club-logo('sunderland');\n    }\n\n    &-swansea-city {\n        @include club-logo('swansea-city');\n    }\n\n    &-watford {\n        @include club-logo('watford');\n    }\n\n    &-west-bromwich-albion {\n        @include club-logo('west-bromwich-albion');\n    }\n\n    &-west-ham-united {\n        @include club-logo('west-ham-united');\n    }\n\n    &-wolverhampton {\n        @include club-logo('wolverhampton');\n    }\n}","@mixin club-logo($name) {\r\n    background-image: url('/assets/images/epl-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin club-logo-cl($name) {\r\n    background-image: url('/assets/images/champions-league-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin land-logo($name) {\r\n    background-image: url('/assets/images/german-lands-logos/#{$name}-logo.png');\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 62814:
/*!********************************************************!*\
  !*** ./src/styles/germany-lands-logos.scss?ngResource ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 53142);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ 35950);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.logo-deutschland {
  background-image: url("/assets/images/german-lands-logos/deutschland-logo.png");
}
.logo-baden-wuerttemberg {
  background-image: url("/assets/images/german-lands-logos/baden-wuerttemberg-logo.png");
}
.logo-bayern {
  background-image: url("/assets/images/german-lands-logos/bayern-logo.png");
}
.logo-oberbayern {
  background-image: url("/assets/images/german-lands-logos/oberbayern-logo.png");
}
.logo-niederbayern {
  background-image: url("/assets/images/german-lands-logos/niederbayern-logo.png");
}
.logo-oberfranken {
  background-image: url("/assets/images/german-lands-logos/oberfranken-logo.png");
}
.logo-mittelfranken {
  background-image: url("/assets/images/german-lands-logos/mittelfranken-logo.png");
}
.logo-unterfranken {
  background-image: url("/assets/images/german-lands-logos/unterfranken-logo.png");
}
.logo-schwaben {
  background-image: url("/assets/images/german-lands-logos/schwaben-logo.png");
}
.logo-oberpfalz {
  background-image: url("/assets/images/german-lands-logos/oberpfalz-logo.png");
}
.logo-berlin {
  background-image: url("/assets/images/german-lands-logos/berlin-logo.png");
}
.logo-mitte {
  background-image: url("/assets/images/german-lands-logos/mitte-logo.png");
}
.logo-brandenburg {
  background-image: url("/assets/images/german-lands-logos/brandenburg-logo.png");
}
.logo-bremen {
  background-image: url("/assets/images/german-lands-logos/bremen-logo.png");
}
.logo-hamburg {
  background-image: url("/assets/images/german-lands-logos/hamburg-logo.png");
}
.logo-hessen {
  background-image: url("/assets/images/german-lands-logos/hessen-logo.png");
}
.logo-mecklenburg-vorpommern {
  background-image: url("/assets/images/german-lands-logos/mecklenburg-vorpommern-logo.png");
}
.logo-niedersachsen {
  background-image: url("/assets/images/german-lands-logos/niedersachsen-logo.png");
}
.logo-nordrhein-westfalen {
  background-image: url("/assets/images/german-lands-logos/nordrhein-westfalen-logo.png");
}
.logo-rheinland-pfalz {
  background-image: url("/assets/images/german-lands-logos/rheinland-pfalz-logo.png");
}
.logo-saarland {
  background-image: url("/assets/images/german-lands-logos/saarland-logo.png");
}
.logo-sachsen-anhalt {
  background-image: url("/assets/images/german-lands-logos/sachsen-anhalt-logo.png");
}
.logo-sachsen {
  background-image: url("/assets/images/german-lands-logos/sachsen-logo.png");
}
.logo-schleswig-holstein {
  background-image: url("/assets/images/german-lands-logos/schleswig-holstein-logo.png");
}
.logo-thueringen {
  background-image: url("/assets/images/german-lands-logos/thueringen-logo.png");
}`, "",{"version":3,"sources":["webpack://./src/styles/germany-lands-logos.scss","webpack://./src/styles/mixins.scss"],"names":[],"mappings":"AAGI;ECMA,+EAAA;ADPJ;AAKI;ECEA,sFAAA;ADJJ;AAMI;ECFA,0EAAA;ADDJ;AAOI;ECNA,8EAAA;ADEJ;AAQI;ECVA,gFAAA;ADKJ;AASI;ECdA,+EAAA;ADQJ;AAUI;EClBA,iFAAA;ADWJ;AAWI;ECtBA,gFAAA;ADcJ;AAYI;EC1BA,4EAAA;ADiBJ;AAaI;EC9BA,6EAAA;ADoBJ;AAcI;EClCA,0EAAA;ADuBJ;AAeI;ECtCA,yEAAA;AD0BJ;AAgBI;EC1CA,+EAAA;AD6BJ;AAiBI;EC9CA,0EAAA;ADgCJ;AAkBI;EClDA,2EAAA;ADmCJ;AAmBI;ECtDA,0EAAA;ADsCJ;AAoBI;EC1DA,0FAAA;ADyCJ;AAqBI;EC9DA,iFAAA;AD4CJ;AAsBI;EClEA,uFAAA;AD+CJ;AAuBI;ECtEA,mFAAA;ADkDJ;AAwBI;EC1EA,4EAAA;ADqDJ;AAyBI;EC9EA,kFAAA;ADwDJ;AA0BI;EClFA,2EAAA;AD2DJ;AA2BI;ECtFA,sFAAA;AD8DJ;AA4BI;EC1FA,8EAAA;ADiEJ","sourcesContent":["@import \"../styles/mixins.scss\";\r\n\r\n.logo {\r\n    &-deutschland {\r\n        @include land-logo(\"deutschland\");\r\n    }\r\n\r\n    &-baden-wuerttemberg {\r\n        @include land-logo(\"baden-wuerttemberg\");\r\n    }\r\n\r\n    &-bayern {\r\n        @include land-logo(\"bayern\");\r\n    }\r\n\r\n    &-oberbayern {\r\n        @include land-logo(\"oberbayern\");\r\n    }\r\n\r\n    &-niederbayern {\r\n        @include land-logo(\"niederbayern\");\r\n    }\r\n\r\n    &-oberfranken {\r\n        @include land-logo(\"oberfranken\");\r\n    }\r\n\r\n    &-mittelfranken {\r\n        @include land-logo(\"mittelfranken\");\r\n    }\r\n\r\n    &-unterfranken {\r\n        @include land-logo(\"unterfranken\");\r\n    }\r\n\r\n    &-schwaben {\r\n        @include land-logo(\"schwaben\");\r\n    }\r\n\r\n    &-oberpfalz {\r\n        @include land-logo(\"oberpfalz\");\r\n    }\r\n\r\n    &-berlin {\r\n        @include land-logo(\"berlin\");\r\n    }\r\n\r\n    &-mitte {\r\n        @include land-logo(\"mitte\");\r\n    }\r\n\r\n    &-brandenburg {\r\n        @include land-logo(\"brandenburg\");\r\n    }\r\n\r\n    &-bremen {\r\n        @include land-logo(\"bremen\");\r\n    }\r\n\r\n    &-hamburg {\r\n        @include land-logo(\"hamburg\");\r\n    }\r\n\r\n    &-hessen {\r\n        @include land-logo(\"hessen\");\r\n    }\r\n\r\n    &-mecklenburg-vorpommern {\r\n        @include land-logo(\"mecklenburg-vorpommern\");\r\n    }\r\n\r\n    &-niedersachsen {\r\n        @include land-logo(\"niedersachsen\");\r\n    }\r\n\r\n    &-nordrhein-westfalen {\r\n        @include land-logo(\"nordrhein-westfalen\");\r\n    }\r\n\r\n    &-rheinland-pfalz {\r\n        @include land-logo(\"rheinland-pfalz\");\r\n    }\r\n\r\n    &-saarland {\r\n        @include land-logo(\"saarland\");\r\n    }\r\n\r\n    &-sachsen-anhalt {\r\n        @include land-logo(\"sachsen-anhalt\");\r\n    }\r\n\r\n    &-sachsen {\r\n        @include land-logo(\"sachsen\");\r\n    }\r\n\r\n    &-schleswig-holstein {\r\n        @include land-logo(\"schleswig-holstein\");\r\n    }\r\n\r\n    &-thueringen {\r\n        @include land-logo(\"thueringen\");\r\n    }\r\n}","@mixin club-logo($name) {\r\n    background-image: url('/assets/images/epl-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin club-logo-cl($name) {\r\n    background-image: url('/assets/images/champions-league-logos/#{$name}-logo.png');\r\n}\r\n\r\n@mixin land-logo($name) {\r\n    background-image: url('/assets/images/german-lands-logos/#{$name}-logo.png');\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 61584:
/*!***********************************************!*\
  !*** ./src/app/app.component.html?ngResource ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"header\">\r\n    <a href=\"#default\" class=\"logo\">D3-Chart-Library</a>\r\n    <div class=\"header-right\">\r\n        <div>\r\n            @for(page of pages; track page) {\r\n                <a [routerLink]=\"page\">{{ page }}</a>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"main\">\r\n    <div class=\"navigation\">\r\n        <ul>\r\n            @for(type of types; track type) {\r\n                <li>\r\n                    <a [routerLink]=\"type.path\" (click)=\"onClick($index)\" [class.active]=\"$index === activeChart\">{{ type.path }}</a>\r\n                </li>\r\n            }\r\n        </ul>\r\n    </div>\r\n    <div class=\"view\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>";

/***/ }),

/***/ 9411:
/*!**************************************************************************!*\
  !*** ./src/components/chart-popup/chart-popup.component.html?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>";

/***/ }),

/***/ 44167:
/*!****************************************************************************!*\
  !*** ./src/components/chart-portal/chart-portal.component.html?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-container *ngTemplateOutlet=\"link.templateRef; context: link.context\"></ng-container>\r\n";

/***/ }),

/***/ 94291:
/*!**************************************************************************!*\
  !*** ./src/components/chart-ticks/chart-ticks.component.html?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ul>\r\n    @for(tick of data; track tick) {\r\n        <li [style.top.px]=\"scale($index)\">{{ tick }}</li>\r\n    }\r\n</ul>";

/***/ }),

/***/ 28271:
/*!**************************************************************!*\
  !*** ./src/components/chart/chart.component.html?ngResource ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>\r\n";

/***/ }),

/***/ 88433:
/*!*************************************************************************************************!*\
  !*** ./src/components/series/bar-progress-series/bar-progress-series.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 12769:
/*!*******************************************************************************!*\
  !*** ./src/components/series/bar-series/bar-series.component.html?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 39369:
/*!*********************************************************************************************!*\
  !*** ./src/components/series/bar-simple-series/bar-simple-series.component.html?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 34281:
/*!*********************************************************************************!*\
  !*** ./src/components/series/grid-series/grid-series.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 65317:
/*!*****************************************************************************************!*\
  !*** ./src/components/series/sunburst-series/sunburst-series.component.html?ngResource ***!
  \*****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\r\n";

/***/ }),

/***/ 89601:
/*!*********************************************************************************************!*\
  !*** ./src/components/series/word-cloud-series/word-cloud-series.component.html?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 83138:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-area-series/example-chart-area-series.component.html?ngResource ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div style=\"display: flex;align-items:center\">\r\n    <div class=\"logo logo-chelsea\"></div> Total points each season from 1996 to 2019\r\n</div>\r\n<div class=\"chart-container\">\r\n    <app-chart>\r\n        <app-chart-x-axis\r\n            [range]=\"range.x\"\r\n            [ticks]=\"ticksX\">\r\n        </app-chart-x-axis>\r\n        <app-chart-y-axis\r\n            [range]=\"range.y\"\r\n            [ticks]=\"ticksY\">\r\n        </app-chart-y-axis>\r\n        <app-chart-series\r\n            type=\"area\"\r\n            [data]=\"data$ | async\"\r\n            [style]=\"style\"\r\n            [range]=\"range\">\r\n        </app-chart-series>\r\n        <app-chart-plot\r\n            [margin]=\"margin\">\r\n        </app-chart-plot>\r\n    </app-chart>\r\n</div>";

/***/ }),

/***/ 55926:
/*!************************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-horizontal-series/example-chart-bar-horizontal-series.component.html?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dropdowns\">\r\n    <div style=\"display: flex;align-items: center;\">\r\n        <h5>ENGLISH PREMIER LEAGUE SEASON </h5>\r\n        <select [(ngModel)]=\"selectedSeason\"\r\n            (change)=\"onSeasonChange(); updateData(inputScored.checked, inputConceded.checked)\">\r\n            <option *ngFor=\"let season of seasons;\" [value]=\"season\" [selected]=\"season === 19\">\r\n                {{ getSeason(season) }}\r\n            </option>\r\n        </select>\r\n        <h5>GOALS STATISTICS: </h5>\r\n    </div>\r\n    <div class=\"radio-buttons\">\r\n        <div>\r\n            <input #inputScored type=\"checkbox\" checked=\"true\"\r\n                (change)=\"updateData($event.target.checked, inputConceded.checked);\">\r\n            Scored\r\n        </div>\r\n        <div>\r\n            <input #inputConceded type=\"checkbox\" (change)=\"updateData(inputScored.checked, $event.target.checked)\">\r\n            Conceded\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"dropdowns\">\r\n    <div style=\"display: flex;align-items: center;\">\r\n        <h5>SORT BY </h5>\r\n        <select #selectSortBy [(ngModel)]=\"selectedSortBy\"\r\n            (change)=\"onSortChange(); updateData(inputScored.checked, inputConceded.checked)\">\r\n            @for(sort of sorts; track sort) {\r\n                <option [value]=\"sort\" [selected]=\"sort === 'Position'\">\r\n                    {{ sort | uppercase }}\r\n                </option>\r\n            }\r\n        </select>\r\n    </div>\r\n</div>\r\n\r\n<ng-container>\r\n    <div class=\"container\">\r\n        <div class=\"logos\">\r\n            @for(club of clubs$ | async; track club) {\r\n                <div [ngClass]=\"getLogo(club.club)\"></div>\r\n            }\r\n        </div>\r\n\r\n        <app-chart>\r\n            <app-chart-series\r\n                type=\"bar\"\r\n                orientation=\"horizontal\"\r\n                [data]=\"data$ | async\"\r\n                [style]=\"style\"\r\n                [range]=\"range\"\r\n            ></app-chart-series>\r\n            <app-chart-series\r\n                type=\"grid\"\r\n                [step]=\"gridStep\"\r\n                [style]=\"gridStyle\"\r\n                [range]=\"range\"\r\n            ></app-chart-series>\r\n            <app-chart-x-axis\r\n                [range]=\"range.x\"\r\n                [ticks]=\"ticksX\"\r\n            ></app-chart-x-axis>\r\n            <app-chart-y-axis\r\n                [range]=\"range.y\"\r\n                [ticks]=\"ticksY\"\r\n                reverse=\"true\"\r\n            ></app-chart-y-axis>\r\n            <app-chart-plot [margin]=\"margin\"></app-chart-plot>\r\n        </app-chart>\r\n    </div>\r\n</ng-container>";

/***/ }),

/***/ 39999:
/*!*********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-progress-series/examples-chart-bar-progress-series.component.html?ngResource ***!
  \*********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\r\n  <div>\r\n    <div class=\"chart-title\">\r\n      <div>\r\n        ENGLISH PREMIER LEAGUE 2018/2019 BALL POSSESSION\r\n      </div>\r\n      <div></div>\r\n      ≥ 55%\r\n      <div></div>\r\n      ≥ 50%\r\n      <div></div>\r\n      < 50%\r\n    </div>\r\n    <div class=\"chart-container\">\r\n      <app-chart>\r\n        <app-chart-series\r\n          type=\"bar-progress\"\r\n          [data]=\"data\"\r\n          [animation]=\"true\"\r\n          [style]=\"style\"\r\n          label=\"start\">\r\n        </app-chart-series>\r\n        <app-chart-ticks [data]=\"clubs\"></app-chart-ticks>\r\n      </app-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 29633:
/*!*****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-simple-series/examples-chart-bar-simple-series.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\r\n  <div class=\"chart-column\">\r\n    <div class=\"chart-title for\">\r\n      <h5>\r\n        ENGLISH PREMIER LEAGUE 2018/2019 GOALS FOR\r\n      </h5>\r\n      <div class=\"home\"></div>\r\n      <h5>HOME</h5>\r\n      <div class=\"away\"></div>\r\n      <h5>AWAY</h5>\r\n    </div>\r\n    <div\r\n      class=\"chart-container\"\r\n      *ngFor=\"let club of (dataFor$ | async); let i = index\">\r\n      <div class=\"title\">{{clubs[i]}}</div>\r\n      <div class=\"chart\">\r\n        <app-chart>\r\n          <app-chart-series\r\n            type=\"bar-simple\"\r\n            [data]=\"club\"\r\n            [style]=\"styleFor\">\r\n          </app-chart-series>\r\n        </app-chart>\r\n      </div>\r\n      <div class=\"total\">{{club[0] + club[1]}}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"chart-column\">\r\n    <div class=\"chart-title against\">\r\n      <h5>ENGLISH PREMIER LEAGUE 2018/2019 GOALS AGAINST</h5>\r\n      <div class=\"home\"></div>\r\n      <h5>HOME</h5>\r\n      <div class=\"away\"></div>\r\n      <h5>AWAY</h5>\r\n    </div>\r\n    <div\r\n      class=\"chart-container\"\r\n      *ngFor=\"let club of (dataAgainst$ | async); let i = index\">\r\n      <div class=\"title\">{{clubs[i]}}</div>\r\n      <div class=\"chart\">\r\n        <app-chart>\r\n          <app-chart-series\r\n            type=\"bar-simple\"\r\n            [data]=\"club\"\r\n            [style]=\"styleAgainst\">\r\n          </app-chart-series>\r\n        </app-chart>\r\n      </div>\r\n      <div class=\"total\">{{club[0] + club[1]}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 8854:
/*!********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-bar-vertical-series/example-chart-bar-vertical-series.component.html?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dropdowns\">\r\n  <div style=\"display: flex;align-items: center;\">\r\n    <h5>ENGLISH PREMIER LEAGUE SEASON </h5>\r\n    <select\r\n      [(ngModel)]=\"selectedSeason\"\r\n      (change)=\"onSeasonChange(); updateData(inputScored.checked, inputConceded.checked)\">\r\n      <option\r\n        *ngFor=\"let season of seasons;\"\r\n        [value]=\"season\"\r\n        [selected]=\"season === 19\">\r\n        {{ getSeason(season) }}\r\n      </option>\r\n    </select>\r\n    <h5>GOALS STATISTICS: </h5>\r\n  </div>\r\n  <div class=\"radio-buttons\">\r\n    <div>\r\n      <input\r\n        #inputScored\r\n        type=\"checkbox\"\r\n        checked=\"true\"\r\n        (change)=\"updateData($event.target.checked, inputConceded.checked);\">\r\n      Scored\r\n    </div>\r\n    <div>\r\n      <input\r\n        #inputConceded\r\n        type=\"checkbox\"\r\n        (change)=\"updateData(inputScored.checked, $event.target.checked);\">\r\n      Conceded\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"dropdowns\">\r\n  <div style=\"display: flex;align-items: center;\">\r\n    <h5>SORT BY </h5>\r\n    <select\r\n      #selectSortBy\r\n      [(ngModel)]=\"selectedSortBy\"\r\n      (change)=\"onSortChange(); updateData(inputScored.checked, inputConceded.checked)\">\r\n      <option\r\n        *ngFor=\"let sort of sorts; let i = index\"\r\n        [value]=\"sort\"\r\n        [selected]=\"sort === 'Position'\">\r\n        {{ sort | uppercase }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"bar\"\r\n      orientation=\"vertical\"\r\n      [data]=\"data$ | async\"\r\n      [range]=\"range\"\r\n      [style]=\"style\">\r\n    </app-chart-series>\r\n    <app-chart-series\r\n      type=\"grid\"\r\n      [step]=\"gridStep\"\r\n      [style]=\"gridStyle\"\r\n      [range]=\"range\">\r\n    </app-chart-series>\r\n    <app-chart-x-axis\r\n      [range]=\"range.x\"\r\n      [ticks]=\"ticksX\">\r\n    </app-chart-x-axis>\r\n    <app-chart-y-axis\r\n      [range]=\"range.y\"\r\n      [ticks]=\"ticksY\">\r\n    </app-chart-y-axis>\r\n    <app-chart-plot [margin]=\"margin\"></app-chart-plot>\r\n  </app-chart>\r\n\r\n  <div style=\"padding-left: 58.5px;width: 1200px;display: inline-flex;\">\r\n    <ng-container *ngFor=\"let club of (clubs$ | async)\">\r\n      <div style=\"display:flex; flex-direction: column;font-size: 9px;text-align: center;\">\r\n        <div [ngClass]=\"getLogo(club.club)\"></div>\r\n        <div style=\"width: 53.8px\">{{club.twoLinesName}}</div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 20917:
/*!*******************************************************************************************************!*\
  !*** ./src/examples/example-chart-chord-series/examples-chart-chord-series.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"chord\"\r\n      [data]=\"data\"\r\n      [style]=\"style\">\r\n    </app-chart-series>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 65553:
/*!*****************************************************************************************************************************!*\
  !*** ./src/examples/example-chart-circular-package-series/examples-chart-circular-package-series.component.html?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"circular-package\"\r\n      [data]=\"data\">\r\n    </app-chart-series>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 92412:
/*!******************************************************************************************************!*\
  !*** ./src/examples/example-chart-donut-series/example-chart-donut-series.component.html?ngResource ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-title\">\r\n  <div>\r\n    ENGLISH PREMIER LEAGUE 2018/2019 GAMES STATISTICS\r\n  </div>\r\n  <div></div>\r\n  WON\r\n  <div></div>\r\n  DRAWN\r\n  <div></div>\r\n  LOST\r\n</div>\r\n\r\n<div class=\"chart-container\">\r\n  <div\r\n    class=\"item\"\r\n    *ngFor=\"let chart of data; let i=index\">\r\n    <div class=\"title\">{{chart.club}}</div>\r\n    <app-chart>\r\n      <app-chart-series\r\n        type=\"donut\"\r\n        [style]=\"style\"\r\n        [data]=\"[chart.won, chart.drawn, chart.lost]\">\r\n      </app-chart-series>\r\n    </app-chart>\r\n    <div class=\"title stats\">\r\n      <strong>W:</strong>\r\n      {{chart.won}}\r\n      <strong>D:  </strong>\r\n      {{chart.drawn}}\r\n      <strong>L: </strong>\r\n      {{chart.lost}}\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 24198:
/*!********************************************************************************************************************!*\
  !*** ./src/examples/example-chart-double-donut-series/example-chart-double-donut-series.component.html?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-title\">\r\n  <div>ENGLISH PREMIER LEAGUE 2018/2019</div>\r\n  <div></div>\r\n  GOALS FOR AT HOME\r\n  <div></div>\r\n  GOAL FOR AWAY\r\n  <div></div>\r\n  GOALS AGAINST AT HOME\r\n  <div></div>\r\n  GOALS AGAINST AWAY\r\n</div>\r\n\r\n<div class=\"chart-container\">\r\n  <div\r\n    class=\"item\"\r\n    *ngFor=\"let chart of data; let i=index\">\r\n    <div class=\"title\">{{chart.club}}</div>\r\n    <app-chart>\r\n      <app-chart-series\r\n        type=\"double-donut\"\r\n        [style]=\"style\"\r\n        [data]=\"[[chart.for.home, chart.for.away], [chart.against.home, chart.against.away]]\">\r\n      </app-chart-series>\r\n    </app-chart>\r\n    <div class=\"title\">\r\n      {{chart.for.home}} {{chart.for.away}} | {{chart.against.home}} {{chart.against.away}}\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 58686:
/*!****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-half-donut-series/example-chart-half-donut-series.component.html?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-title\">\r\n  <h5>ENGLISH PREMIER LEAGUE 2018/2019 GAMES STATISTICS</h5>\r\n  <div class=\"win\"></div>\r\n  <h5>WON</h5>\r\n  <div class=\"draw\"></div>\r\n  <h5>DRAWN</h5>\r\n  <div class=\"lost\"></div>\r\n  <h5>LOST</h5>\r\n</div>\r\n\r\n<div class=\"chart-container\">\r\n  <div\r\n    class=\"item\"\r\n    *ngFor=\"let chart of data; let i=index\">\r\n    <div class=\"title\">{{chart.club}}</div>\r\n    <app-chart>\r\n      <app-chart-series\r\n        type=\"half-donut\"\r\n        [style]=\"style\"\r\n        [data]=\"[chart.won, chart.drawn, chart.lost]\">\r\n      </app-chart-series>\r\n    </app-chart>\r\n    <div class=\"title stats\">\r\n      <strong>W:</strong>\r\n      {{chart.won}}\r\n      <strong>D:  </strong>\r\n      {{chart.drawn}}\r\n      <strong>L: </strong>\r\n      {{chart.lost}}\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 43398:
/*!********************************************************************************************************!*\
  !*** ./src/examples/example-chart-icicle-series/example-chart-icicle-series.component.html?ngResource ***!
  \********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"icicle\"\r\n      [style]=\"style\"\r\n      [data]=\"data\">\r\n    </app-chart-series>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 88618:
/*!****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series-types/example-chart-line-series-types.component.html?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"buttons checkbox-btn-group checkbox-selection-group\">\r\n  <div\r\n    *ngFor=\"let type of types; let i = index;\"\r\n    [ngClass]=\"'form-check '+'form-check-'+(i+1)\">\r\n    <input\r\n      type=\"checkbox\"\r\n      [checked]=\"i===0 ? true : false\"\r\n      name=\"radio\"\r\n      [value]=\"'button_'+(i+1)\"\r\n      [id]=\"'button_'+(i+1)\"\r\n      (click)=\"onClick(i)\">\r\n    <label [for]=\"'button_'+(i+1)\">{{type}}</label>\r\n  </div>\r\n</div>\r\n<div class=\"chart-container\">\r\n\r\n  <app-chart>\r\n    <ng-container *ngFor=\"let chart of datum; let i = index;\">\r\n      <app-chart-series\r\n        type=\"line\"\r\n        [style]=\"getStyle(i)\"\r\n        [data]=\"data[i]\"\r\n        [curveType]=\"getCurve(i)\"\r\n        [range]=\"range\">\r\n      </app-chart-series>\r\n    </ng-container>\r\n    <app-chart-x-axis\r\n      [range]=\"range.x\"\r\n      [ticks]=\"ticksX\"></app-chart-x-axis>\r\n    <app-chart-y-axis\r\n      [range]=\"range.y\"\r\n      [ticks]=\"ticksY\"></app-chart-y-axis>\r\n    <app-chart-plot [margin]=\"margin\"></app-chart-plot>\r\n  </app-chart>\r\n\r\n</div>\r\n";

/***/ }),

/***/ 50418:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-chart-line-series/example-chart-line-series.component.html?ngResource ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dropdowns\">\r\n  <div style=\"display: flex;align-items: center;\">\r\n    <h5>ENGLISH PREMIER LEAGUE SEASON </h5>\r\n    <select\r\n      [(ngModel)]=\"selectedSeason\"\r\n      (change)=\"onSeasonChange($event.target.value);\">\r\n      <option\r\n        *ngFor=\"let season of seasons;\"\r\n        [value]=\"season\"\r\n        [selected]=\"season === 19\">\r\n        {{ getSeason(season) }}\r\n      </option>\r\n    </select>\r\n    <h5>PROGRESS DAY BY DAY</h5>\r\n    <select (change)=\"onChartChange($event.target.value)\">\r\n      <option [value]=\"'position'\">Position</option>\r\n      <option [value]=\"'points'\">Points</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"buttons checkbox-btn-group checkbox-selection-group\">\r\n  <div\r\n    *ngFor=\"let team of DATA; let i = index;\"\r\n    [ngClass]=\"format(team.club)\">\r\n    <input\r\n      type=\"checkbox\"\r\n      [checked]=\"i === 0 ? true : false\"\r\n      name=\"radio\"\r\n      [value]=\"'button_'+(i+1)\"\r\n      [id]=\"'button_'+(i+1)\"\r\n      (click)=\"onClick(i)\">\r\n    <label [for]=\"'button_'+(i+1)\">{{team.club}}</label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      *ngFor=\"let zone of zones; let i = index;\"\r\n      type=\"rect\"\r\n      [range]=\"range\"\r\n      [data]=\"[[0,39], zones[i]]\"\r\n      [style]=\"rectStyle(i)\">\r\n    </app-chart-series>\r\n    <app-chart-series\r\n      *ngFor=\"let team of DATA; let i = index;\"\r\n      type=\"line\"\r\n      [style]=\"getStyle(i)\"\r\n      [data]=\"data[i]\"\r\n      [range]=\"range\">\r\n    </app-chart-series>\r\n    <app-chart-x-axis\r\n      [range]=\"range?.x\"\r\n      [ticks]=\"ticksX\">\r\n    </app-chart-x-axis>\r\n    <app-chart-y-axis\r\n      [range]=\"range?.y\"\r\n      [ticks]=\"ticksY\"\r\n      [reverse]=\"reverse\">\r\n    </app-chart-y-axis>\r\n    <app-chart-plot [margin]=\"margin\"></app-chart-plot>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 55524:
/*!**************************************************************************************************!*\
  !*** ./src/examples/example-chart-map-series/example-chart-map-series.component.html?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"title\">\r\n    <h5>GERMANY POPULATION 2018</h5>\r\n    <div class=\"legend\">\r\n        <div class=\"legend-scale\">\r\n            <ul class=\"legend-labels\">\r\n                @for(l of legend; track l) {\r\n                    <li>\r\n                        <span></span>{{l}}M\r\n                    </li>\r\n                }\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div style=\"display: flex;\">\r\n    <div class=\"info\">\r\n        @if(show) {\r\n            <div style=\"width: 100%; display: flex;justify-content: center;\">\r\n                <div [ngClass]=\"getLogoBig(turbo?.properties?.name)\"></div>\r\n            </div>\r\n            <dl>\r\n                <dt>Name:</dt>\r\n                <dd>{{ turbo?.properties?.name}}</dd>\r\n                <dt>Capital:</dt>\r\n                <dd>{{ turbo?.properties?.capital}}</dd>\r\n                <dt>Head:</dt>\r\n                <dd>{{ turbo?.properties?.head}}</dd>\r\n                <dt>Area:</dt>\r\n                <dd>{{ turbo?.properties?.area }}</dd>\r\n                <dt>Population:</dt>\r\n                <dd>{{ turbo?.properties?.population }}</dd>\r\n                <dt>Density:</dt>\r\n                <dd>{{ turbo?.properties?.density }}</dd>\r\n                <dt>Time Zone:</dt>\r\n                <dd>{{ turbo?.properties?.timeZone }}</dd>\r\n                <dt>Bundesrat Votes:</dt>\r\n                <dd>{{ turbo?.properties?.bundesratVotes }}</dd>\r\n            </dl>\r\n        }\r\n        @else {\r\n            <div style=\"width: 100%; display: flex;justify-content: center;\">\r\n                <div class=\"logo-big logo-deutschland\"></div>\r\n            </div>\r\n            <dl>\r\n                <dt>Country:</dt>\r\n                <dd>Germany</dd>\r\n                <dt>Government:</dt>\r\n                <dd>Federal Parliamentary Republic</dd>\r\n                <dt>President:</dt>\r\n                <dd>Frank-Walter Steinmeier</dd>\r\n                <dt>Chancellor:</dt>\r\n                <dd>Angela Merkel</dd>\r\n                <dt>Capital:</dt>\r\n                <dd>Berlin</dd>\r\n                <dt>Official language:</dt>\r\n                <dd>German</dd>\r\n                <dt>Currency:</dt>\r\n                <dd>Euro (€) (EUR)</dd>\r\n                <dt>Population Rank:</dt>\r\n                <dd>19</dd>\r\n                <dt>Density:</dt>\r\n                <dd>240/km² (57th)</dd>\r\n                <dt>Growth Rate:</dt>\r\n                <dd>0.32% (176th)</dd>\r\n                <dt>World Percentage:</dt>\r\n                <dd>1.07%</dd>\r\n                <dt>Land Area:</dt>\r\n                <dd>348,560 km²</dd>\r\n            </dl>\r\n        }\r\n    </div>\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"map\"\r\n      [style]=\"style\"\r\n      (onHover)=\"showData($event)\"\r\n      (onLeave)=\"show=false\"></app-chart-series>\r\n    <!-- <app-chart-popup for=\"map\">\r\n      <ng-template let-$context>\r\n        <div class=\"popup\">\r\n          <div class=\"popup-header\">\r\n            <ng-container>\r\n              <div [ngClass]=\"getLogo($context.properties?.name)\"></div>\r\n            </ng-container>\r\n            <h3 class=\"chart-popup-title\">{{ $context.properties?.name }}</h3>\r\n          </div>\r\n          <dl class=\"land\">\r\n            <dt>Area:</dt>\r\n            <dd>{{ $context.properties?.area }}</dd>\r\n            <dt>Density:</dt>\r\n            <dd>{{ $context.properties?.density }}</dd>\r\n            <dt>Time Zone:</dt>\r\n            <dd>{{ $context.properties?.timeZone }}</dd>\r\n            <dt>Bundesrat Votes:</dt>\r\n            <dd>\r\n              {{ $context.properties?.bundesratVotes }}\r\n            </dd>\r\n          </dl>\r\n        </div>\r\n      </ng-template>\r\n    </app-chart-popup> -->\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 63098:
/*!********************************************************************************************************!*\
  !*** ./src/examples/example-chart-matrix-series/example-chart-matrix-series.component.html?ngResource ***!
  \********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div style=\"display:flex;  justify-content: flex-start;\r\nalign-items: center;\">\r\n    <h5 style=\"padding-right: 15px; font-size: 18px;\">SORT BY:</h5>\r\n    <div>\r\n        <select (change)=\"onChange($event)\">\r\n            <option [value]=\"'name'\">Name</option>\r\n            <option [value]=\"'group'\">Group</option>\r\n            <option [value]=\"'count'\">Count</option>\r\n        </select>\r\n    </div>\r\n</div>\r\n<div class=\"chart-container\">\r\n    <app-chart>\r\n        <app-chart-series type=\"matrix\" [data]=\"data\" [style]=\"style\" [order]=\"order\">\r\n        </app-chart-series>\r\n    </app-chart>\r\n</div>";

/***/ }),

/***/ 87332:
/*!**************************************************************************************************!*\
  !*** ./src/examples/example-chart-pie-series/example-chart-pie-series.component.html?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"header\">\r\n    <h5>ENGLISH PREMIER LEAGUE 2018/2019 GAMES STATISTICS</h5>\r\n    <div class=\"win\"></div> WON\r\n    <div class=\"draw\"></div> DRAWN\r\n    <div class=\"lost\"></div> LOST\r\n</div>\r\n\r\n<div class=\"container\">\r\n    @for(chart of data; track chart) {\r\n        <div class=\"chart\">\r\n            <div class=\"chart__title\">{{chart.club}}</div>\r\n            <app-chart>\r\n                <app-chart-series\r\n                    type=\"pie\"\r\n                    [style]=\"style\"\r\n                    [data]=\"[chart.won, chart.drawn, chart.lost]\"\r\n                ></app-chart-series>\r\n            </app-chart>\r\n            <div class=\"chart__stats\">\r\n                <strong>W:</strong> {{chart.won}}\r\n                <strong>D: </strong> {{chart.drawn}}\r\n                <strong>L: </strong> {{chart.lost}}\r\n            </div>\r\n        </div>\r\n    }\r\n</div>";

/***/ }),

/***/ 79540:
/*!******************************************************************************************************************!*\
  !*** ./src/examples/example-chart-radial-tree-series/example-chart-radial-tree-series.component.html?ngResource ***!
  \******************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"radial-tree\"\r\n      [layout]=\"layoutType\"\r\n      [data]=\"data\"\r\n      [style]=\"style\"\r\n      [links]=\"linkStyle\"\r\n      [selection]=\"selection\"\r\n      (selectionChange)=\"onSelectionChange($event.currentValue)\">\r\n    </app-chart-series>\r\n    <app-chart-breadcrumb\r\n      [path]=\"breadcrumb\"\r\n      (selectionChange)=\"onBreadcrumbSelectionChange($event)\"\r\n      [selection]=\"selection\"\r\n      [format]=\"formatBreadcrumb\">\r\n    </app-chart-breadcrumb>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 99894:
/*!************************************************************************************************************!*\
  !*** ./src/examples/example-chart-sunburst-series/example-chart-sunburst-series.component.html?ngResource ***!
  \************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"sunburst\"\r\n      [data]=\"data\"\r\n      [style]=\"style\"\r\n      [selection]=\"selection\"\r\n      (selectionChange)=\"onSelectionChange($event.currentValue)\">\r\n    </app-chart-series>\r\n    <app-chart-popup for=\"sunburst\">\r\n      <ng-template let-$context>\r\n        <div class=\"popup\">\r\n          <div class=\"popup-header\">\r\n            @if($context.data.logo) {\r\n              <div [ngClass]=\"getLogo($context.data.name)\"></div>\r\n            }\r\n            <h3 class=\"chart-popup-title\"> {{ $context.data.name }}</h3>\r\n          </div>\r\n          @if($context.data.land) {\r\n            <dl class=\"land\">\r\n              <dt>Area:</dt>\r\n              <dd>{{ $context.data?.area }}</dd>\r\n              <dt>Density:</dt>\r\n              <dd>{{ $context.data?.density }}</dd>\r\n              <dt>Time Zone:</dt>\r\n              <dd>{{ $context.data?.timeZone }}</dd>\r\n              <dt>Bundesrat Votes:</dt>\r\n              <dd>{{ $context.data?.bundesratVotes }}</dd>\r\n            </dl>\r\n          }\r\n          @if($context.data.group) {\r\n            <dl>\r\n              <ng-container *ngFor=\"let land of $context.data.children; let i = index\">\r\n                <dt>\r\n                  @if(i===0) { Lands: }\r\n                </dt>\r\n                <dd>{{ land.name }}</dd>\r\n              </ng-container>\r\n            </dl>\r\n          }\r\n        </div>\r\n      </ng-template>\r\n    </app-chart-popup>\r\n    <app-chart-breadcrumb\r\n      appStopPropagation\r\n      events=\"click\"\r\n      [path]=\"breadcrumb\"\r\n      [style]=\"breadcrumbStyle\"\r\n      (selectionChange)=\"onBreadcrumbChange($event)\"\r\n      [selection]=\"selection[0]\"\r\n      [format]=\"formatBreadcrumb\">\r\n    </app-chart-breadcrumb>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 43081:
/*!*****************************************************************************************************************!*\
  !*** ./src/examples/example-chart-word-cloud-series/examples-chart-word-cloud-series.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"chart-container\">\r\n  <app-chart>\r\n    <app-chart-series\r\n      type=\"word-cloud\"\r\n      [data]=\"data\"\r\n      [style]=\"style\">\r\n    </app-chart-series>\r\n  </app-chart>\r\n</div>\r\n";

/***/ }),

/***/ 34038:
/*!****************************************************************************************************!*\
  !*** ./src/examples/example-league-simulation/example-league-simulation.component.html?ngResource ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h4>Champions League 2019/2020 Simulation</h4>\r\n\r\n<div class=\"pots\">\r\n    <div *ngFor=\"let pot of [1, 2, 3, 4]\">\r\n        Pot {{ pot }}\r\n        <ul>\r\n            <li *ngFor=\"let team of sortData(pot)\">\r\n                {{ team.name }} ({{ team.shortCountryName }})\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"groups\">\r\n    <div *ngFor=\"let group of groups; let i = index\">\r\n        <h5>Group {{ letters[i] }}</h5>\r\n        <ul>\r\n            <li *ngFor=\"let team of group\">\r\n                <div [ngClass]=\"getLogo(team.name)\"></div>\r\n                {{ team.name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<button (click)=\"startDraw(1)\" [disabled]=\"groups[0].length > 0\">DRAW</button>\r\n<button (click)=\"drawFast()\" [disabled]=\"groups[7].length === 4\">SKIP</button>\r\n<button *ngIf=\" day< 11\" (click)=\"simulate(day)\" [disabled]=\"groups[7].length !==4 \">\r\n  <ng-container *ngIf=\"day<7\">Simulate Day {{ day }}</ng-container>\r\n  <ng-container *ngIf=\"day===7\">Simulate 1/8</ng-container>\r\n  <ng-container *ngIf=\"day===8\">Simulate Quarterfinals</ng-container>\r\n  <ng-container *ngIf=\"day===9\">Simulate Semifinals</ng-container>\r\n  <ng-container *ngIf=\"day===10\">Simulate Final</ng-container>\r\n</button>\r\n\r\n<input type=\"checkbox\" checked=\"true\" (change)=\"checked=!checked\" #input>\r\n<ng-container *ngIf=\"input.checked\">HIDE</ng-container>\r\n<ng-container *ngIf=\"!input.checked\">SHOW</ng-container>\r\nRESULTS\r\n\r\n<div *ngIf=\"day> 1 && input.checked\">\r\n    <div *ngFor=\"let match of results; let i = index\">\r\n        <h5 *ngIf=\"i===0\">Day 1</h5>\r\n        <h5 *ngIf=\"i===16\">Day 2</h5>\r\n        <h5 *ngIf=\"i===32\">Day 3</h5>\r\n        <h5 *ngIf=\"i===48\">Day 4</h5>\r\n        <h5 *ngIf=\"i===64\">Day 5</h5>\r\n        <h5 *ngIf=\"i===80\">Day 6</h5>\r\n\r\n        <h6 *ngIf=\"i%16===0\">Group A</h6>\r\n        <h6 *ngIf=\"i%16===2\">Group B</h6>\r\n        <h6 *ngIf=\"i%16===4\">Group C</h6>\r\n        <h6 *ngIf=\"i%16===6\">Group D</h6>\r\n        <h6 *ngIf=\"i%16===8\">Group E</h6>\r\n        <h6 *ngIf=\"i%16===10\">Group F</h6>\r\n        <h6 *ngIf=\"i%16===12\">Group G</h6>\r\n        <h6 *ngIf=\"i%16===14\">Group H</h6>\r\n        <div style=\"display: flex; justify-items: center; padding-bottom: 5px;\">\r\n            <div [ngClass]=\"getLogo(match.team1)\"></div>\r\n            {{ match.team1 }}\r\n            <span class=\"score\" [ngStyle]=\"match.score[0] > match.score[1] && { 'font-weight': '600' }\">{{ match.score[0] }}</span> :\r\n            <span class=\"score\" [ngStyle]=\"match.score[0] < match.score[1] && { 'font-weight': '600' }\">{{ match.score[1] }}</span> {{ match.team2 }}\r\n            <div [ngClass]=\"getLogo(match.team2)\" style=\"margin-left: 5px;\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"groups\">\r\n    <div *ngFor=\"let group of groups; let i = index\">\r\n        <h5>Group {{ letters[i] }}</h5>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Team</td>\r\n                    <td>Points</td>\r\n                    <td>Goals</td>\r\n                </tr>\r\n                <tr *ngFor=\"let team of sort(group)\">\r\n                    <td>{{ team.name }}</td>\r\n                    <td>{{ team?.points }}</td>\r\n                    <td>{{ (team?.goals)[0] }}:{{ (team?.goals)[1] }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<h4 *ngIf=\"day > 6\">1/8 Draw</h4>\r\n<div *ngIf=\"day > 6\" style=\"display: flex;\">\r\n    <div class=\"pots\">\r\n        <div *ngFor=\"let pot of [1, 2]\" class=\"column\">\r\n            Pot {{ pot }}\r\n            <ul>\r\n                <li *ngFor=\"let team of sortDataPlayoff[pot - 1]\">\r\n                    {{ team.name }} ({{ team.shortCountryName }})\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"pots\">\r\n        <div class=\"fixtures\">\r\n            Fixtures\r\n            <ul>\r\n                <li *ngFor=\"let team of roundOf16Teams[0]; let i = index\">\r\n                    {{ roundOf16Teams[1][i].name }} - {{ team.name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"day > 7\" class=\"playoff\">\r\n    <h4>1/8 Matches</h4>\r\n    <ng-container *ngTemplateOutlet=\"playoff; context: { results: roundOf16, winners: roundOf8Teams }\"></ng-container>\r\n</div>\r\n\r\n<h4 *ngIf=\"day > 7\">1/4 Draw</h4>\r\n<div *ngIf=\"day > 7\" style=\"display: flex;\">\r\n    <div class=\"pots\">\r\n        <div class=\"column\">\r\n            Pot 1\r\n            <ul>\r\n                <li *ngFor=\"let team of roundOf8Teams\">\r\n                    {{ team.name }} ({{ team.shortCountryName }})\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"pots\">\r\n        <div class=\"fixtures\">\r\n            Fixtures\r\n            <ul>\r\n                <li *ngFor=\"let match of [0, 2, 4, 6]; let i = index\">\r\n                    {{ roundOf8Teams[match].name }} - {{ roundOf8Teams[match + 1].name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"day > 8\" class=\"playoff\">\r\n    <h4>1/4 Matches</h4>\r\n    <ng-container *ngTemplateOutlet=\"playoff; context: { results: roundOf8, winners: roundOf4Teams }\"></ng-container>\r\n</div>\r\n\r\n<h4 *ngIf=\"day > 8\">1/2 Draw</h4>\r\n<div *ngIf=\"day > 8\" style=\"display: flex;\">\r\n    <div class=\"pots\">\r\n        <div class=\"column\">\r\n            Pot 1\r\n            <ul>\r\n                <li *ngFor=\"let team of roundOf4Teams\">\r\n                    {{ team.name }} ({{ team.shortCountryName }})\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"pots\">\r\n        <div class=\"fixtures\">\r\n            Fixtures\r\n            <ul>\r\n                <li *ngFor=\"let match of [0, 2]; let i = index\">\r\n                    {{ roundOf4Teams[match].name }} - {{ roundOf4Teams[match + 1].name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"day > 9\" class=\"playoff\">\r\n    <h4>1/2 Matches</h4>\r\n    <ng-container *ngTemplateOutlet=\"playoff; context: { results: roundOf4, winners: roundOf2Teams }\"></ng-container>\r\n</div>\r\n\r\n<div *ngIf=\"day > 10\" class=\"playoff\">\r\n    <h4>FINAL</h4>\r\n    <ng-container *ngTemplateOutlet=\"playoff; context: { results: [roundOf2], winners: [winner] }\"></ng-container>\r\n</div>\r\n\r\n<ng-template #playoff let-results=\"results\" let-winners=\"winners\">\r\n    <ul>\r\n        <li *ngFor=\"let match of results; let i = index\" style=\"display: flex; align-items: center;\">\r\n            <div [ngClass]=\"getLogo(match.team1.name)\"></div>\r\n            <span [ngStyle]=\"(i%2===1 || day > 10) && winners.includes(match.team1) && { 'font-weight': '600' }\">{{ match.team1.name }}</span>\r\n            <span class=\"score\">{{ match.score[0] }}</span> : <span class=\"score\">{{ match.score[1] }}</span>\r\n            <span [ngStyle]=\"(i%2===1 || day > 10) && winners.includes(match.team2) && { 'font-weight': '600' }\">{{ match.team2.name }}</span>\r\n            <div [ngClass]=\"getLogo(match.team2.name)\" style=\"margin-left: 5px;\"></div>\r\n            <span class=\"comment\">{{ match?.comment }}</span>\r\n        </li>\r\n    </ul>\r\n</ng-template>";

/***/ }),

/***/ 51341:
/*!*********************************************************!*\
  !*** ./src/pages/about/about.component.html?ngResource ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<p>about</p>\r\n";

/***/ }),

/***/ 44101:
/*!***************************************************************!*\
  !*** ./src/pages/contacts/contacts.component.html?ngResource ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<p>contacts</p>\r\n";

/***/ }),

/***/ 52789:
/*!*******************************************************!*\
  !*** ./src/pages/home/home.component.html?ngResource ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<p>home</p>\r\n";

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(84429)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map